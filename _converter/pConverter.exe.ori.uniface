;----------------------------------------
entry getParam
;----------------------------------------
	params
		numeric piCdEmpresa:IN
	endparams
	
	variables
		string viParams, voParams, vTpQuebraCFOP, vInOptSimples
		numeric vTpDctoFiscal
	endvariables

	if (piCdEmpresa = 0)
		piCdEmpresa = $item("CD_EMPRESA", $xlpg$)
	endif

	clear/e "F_TMP_NR08SVC"

	viParams = ""
	putitem viParams, -1, "CD_EMPVALOR"
	putitem viParams, -1, "CD_MOTIVO_ALTVALOR_CMP"
	activate "ADMSVCO001".GetLstParametro(viParams, voParams, $xCdErro$, $xCtxerro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		return(-1)
	elseif ($xCdErro$)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%$item("DESCRICAO", $xCtxErro$)", "ADICIONAL=Operação->FISSVCO004")
		return(-1)
	elseif ($status < 0)
		return(-1)
	endif
	
	$cdEmpresaValorSis$ = $item("CD_EMPVALOR", voParams)
	$cdMotivoAltValor$ = $item("CD_MOTIVO_ALTVALOR_CMP", voParams)

	viParams = ""
	putitem viParams, -1, "CD_EMPRESA_VALOR"
	putitem viParams, -1, "CD_SALDOPADRAO"
	putitem viParams, -1, "CD_SALDO_CALC_VLR_MEDIO"
	putitem viParams, -1, "TP_QUEBRA_NF_CFOP"
	putitem viParams, -1, "CD_TIPOCLAS_ITEM_NF"
	putitem viParams, -1, "IN_OPT_SIMPLES"
	putitem viParams, -1, "IN_PDV_OTIMIZADO"
	putitem viParams, -1, "CD_CUSTO_S_IMPOSTO"
	putitem viParams, -1, "CD_CUSTO_MEDIO_S_IMPOSTO"
	putitem viParams, -1, "DT_ENCERRAMENTO_FIS" 
	putitem viParams, -1, "CD_CUSTO1VENDA_REL_CONFIG"
	putitem viParams, -1, "CD_CUSTO2VENDA_REL_CONFIG"
	putitem viParams, -1, "CD_CUSTO3VENDA_REL_CONFIG"
	putitem viParams, -1, "CD_OPER_ENT_EST_TRANS"
	putitem viParams, -1, "IN_SOMA_FRETE_TOTALNF"
	putitem viParams, -1, "TP_MOD_DCTO_FISCAL"
	putitem viParams, -1, "IN_EXIBE_RESUMO_CST_NF"
	putitem viParams, -1, "IN_BAIXA_PED_POOL_EMP"
	putitem viParams, -1, "DS_LST_NIVEL_GRUPO_NF"
	putitem viParams, -1, "DS_LST_NIVEL_DES_GRUPO_NF"
	putitem viParams, -1, "IN_EXIBE_RESUMO_CFOP_NF"
	putitem viParams, -1, "TP_CONTR_EST_EM_TERCEIRO"
	putitem viParams, -1, "IN_LOG_TEMPO_VENDA"
	putitem viParams, -1, "CD_OPER_ENT_INSPECAO" ;---Elia Proj. 066/105 07/12/07
	putitem viParams, -1, "DS_LST_OPER_EST_TERCEIRO" ;---Elia Proj. 130/026 25/07/08
	putitem viParams, -1, "DS_CUSTO_SUBST_TRIBUTARIA" ;---Elia Proj. 102/357 03/10/08 
	putitem viParams, -1, "DS_CUSTO_VALOR_RETIDO" ;---Elia Proj. 102/357 03/10/08
	putitem viParams, -1, "TP_AGRUPAMENTO_ITEM_NF" ;---Elia Proj. 102/357 03/10/08
	putitem viParams, -1, "CD_SALDO_EST_TERCEIRO" ;---Elia Proj. 130/155 10/11/08
	putitem viParams, -1, "CD_SALDO_EST_DE_TERC" 	 ;---Elia Proj. 130/155 10/11/08
	putitem viParams, -1, "DS_LST_OPER_EST_DE_TERC"	 ;---Elia Proj. 130/155 10/11/08
	putitem viParams, -1, "IN_GRAVA_DS_DECRETO_OBSNF" ;-- MAD [Proj/Tar.061/719] - 27/11/2009
	putitem viParams, -1, "UF_ORIGEM" ;-- MAD [Proj/Tar.170/035] - 17/08/2010
	putitem viParams, -1, "PR_APLIC_MVA_SUB_TRIB" ;-- MAD [Proj/Tar.061/862] - 31/08/2010
	putitem viParams, -1, "DS_EMB_LEGAL_SUB_TRIB" ;-- MAD [Proj/Tar.061/862] - 31/08/2010
	putitem viParams, -1, "IN_EXIBE_QTD_PROD_NF" ;-- MAD [Proj/Tar.149/098] - 26/11/2010
	putitem viParams, -1, "TP_IMPRESSAO_COD_PRD_ECF" ;-=CANONICO=- 06/12/2010 PRJ 22 TAR 1716
	putitem viParams, -1, "NR_ITEM_QUEBRA_NF" ; rodrigo - PRJ 130 TAR 1367 - 13/01/2011
	putitem viParams, -1, "TP_LANCAMENTO_FRETE_TRA" ; Marcio / Elia / Virginia Proj. 175/110
	putitem viParams, -1, "DS_LST_MODDCTOFISCAL_AT" ; Marcio / Elia / Virginia Proj. 175/110
	putitem viParams, -1, "IN_ARREDONDA_TRUNCA_ICMS" ; Marcio / Elia / Virginia Proj. 175/110
	putitem viParams, -1, "TP_IMP_OBS_REGRAFISCAL_NF" ;-- WMC - Proj 182 Tar 40 - 15/04/2011
	putitem viParams, -1, "IN_INCLUI_IPI_DEV_SIMP" ; Ranghetti - 170/355 - 16/09/2011 <-
	putitem viParams, -1, "DS_OBS_NF" 				 ;--> VSOUZA PRJ/TAR 170/383 26/10/2011 
	putitem viParams, -1, "IN_GRAVA_OBS_NF"				 ;--> VSOUZA PRJ/TAR 170/383 26/10/2011 
	putitem viParams, -1, "DS_LST_OPER_OBRIG_NF_REF" ; MRT | PRJ 66/519 | 22/11/2011

	activate "ADMSVCO001".GetParamEmpresa(piCdEmpresa, viParams, voParams, $xCdErro$, $xCtxerro$)

	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		return(-1)
	elseif ($xCdErro$)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%$item("DESCRICAO", $xCtxErro$)", "ADICIONAL=Operação->FISSVCO004")
		return(-1)
	elseif ($status < 0)
		return(-1)
	endif

	$nrItemQuebraNf$ = $item("NR_ITEM_QUEBRA_NF" , voParams); rodrigo - PRJ 130 TAR 1367 - 13/01/2011
	$cdEmpresaValorEmp$ = $item("CD_EMPRESA_VALOR" , voParams)
	$cdSaldoPadrao$ = $item("CD_SALDOPADRAO" , voParams)
	$cdSaldoCalcVlrMedio$ = $item("CD_SALDO_CALC_VLR_MEDIO", voParams)
	vTpQuebraCFOP = $item("TP_QUEBRA_NF_CFOP" , voParams)
	if (vTpQuebraCFOP = "S")
		$inQuebraCFOP$ = <TRUE>
	else
		$inQuebraCFOP$ = <FALSE>
	endif

	vInOptSimples = $item("IN_OPT_SIMPLES", voParams)
	if (vInOptSimples = "S")
		$inOptSimples$ = <TRUE>
	else
		$inOptSimples$ = <FALSE>
	endif

	$cdTipoClas$ = $item("CD_TIPOCLAS_ITEM_NF" , voParams)
	$inPDVOtimizado$ = $item("IN_PDV_OTIMIZADO" , voParams)
	$dtEncerramento$ = $item("DT_ENCERRAMENTO_FIS" , voParams)
	$cdCustoSemImp$ = $item("CD_CUSTO_S_IMPOSTO" , voParams)
	$cdCustoMedioSemImp$ = $item("CD_CUSTO_MEDIO_S_IMPOSTO" , voParams)
	$cdCusto1Venda$ = $item("CD_CUSTO1VENDA_REL_CONFIG", voParams)
	$cdCusto2Venda$ = $item("CD_CUSTO2VENDA_REL_CONFIG", voParams)
	$cdCusto3Venda$ = $item("CD_CUSTO3VENDA_REL_CONFIG", voParams)
	$cdOperEntEstTrans$ = $item("CD_OPER_ENT_EST_TRANS" , voParams)
	$inSomaFrete$ = $item("IN_SOMA_FRETE_TOTALNF" , voParams)
	$tpModDctoFiscal$ = $item("TP_MOD_DCTO_FISCAL" , voParams)
	$inExibeResumoCstNF$ = $item("IN_EXIBE_RESUMO_CST_NF" , voParams)
	$inBaixaPedPool$ = $item("IN_BAIXA_PED_POOL_EMP" , voParams)
	$dsLstNivelGrupo$ = $item("DS_LST_NIVEL_GRUPO_NF" , voParams)
	$dsLstNivelDescGrupo$ = $item("DS_LST_NIVEL_DES_GRUPO_NF", voParams)
	$inExibeResumoCfopNF$ = $item("IN_EXIBE_RESUMO_CFOP_NF" , voParams)
	$tpEstoqueTerceiro$ = $item("TP_CONTR_EST_EM_TERCEIRO" , voParams)
	$inLog$ = $item("IN_LOG_TEMPO_VENDA" , voParams)
	$cdOperEntInspecao$ = $item("CD_OPER_ENT_INSPECAO" , voParams) ;---Elia Proj. 066/105 07/12/07
	$tpAgrupamentoItemNF$ = $item("TP_AGRUPAMENTO_ITEM_NF" , voParams)
	$dsLstOperEstTerceiro$	 = $item("DS_LST_OPER_EST_TERCEIRO" , voParams) ;---Elia Proj. 130/026 25/07/08
	$dsLstOperEstTerceiro$ = $replace($dsLstOperEstTerceiro$, 1, ";", "·|", -1) ;---Elia Proj. 130/026 25/07/08
	$dsCustoSubstTributaria$ = $item("DS_CUSTO_SUBST_TRIBUTARIA", voParams) ;---Elia Proj. 102/357 03/10/08
	$dsCustoValorRetido$ = $item("DS_CUSTO_VALOR_RETIDO" , voParams) ;---Elia Proj. 102/357 03/10/08
	$cdSaldoEstTerceiro$ = $item("CD_SALDO_EST_TERCEIRO" , voParams) ;---Elia Proj. 130/155
	$cdSaldoEstDeTerc$ = $item("CD_SALDO_EST_DE_TERC" , voParams) ;---Elia Proj. 130/155
	$dsLstOperEstDeTerc$ = $item("DS_LST_OPER_EST_DE_TERC" , voParams) ;---Elia Proj. 130/155
	$dsLstOperEstDeTerc$ = $replace($dsLstOperEstDeTerc$, 1, ";", "·|", -1) ;---Elia Proj. 130/155
	$inGravaDsDecretoObsNf$ = $item("IN_GRAVA_DS_DECRETO_OBSNF", voParams) ;-- MAD [Proj/Tar.061/719] - 27/11/2009
	$ufOrigem$ = $item("UF_ORIGEM" , voParams) ;-- MAD [Proj/Tar.170/035] - 17/08/2010
	$prAplicMvaSubTrib$ = $item("PR_APLIC_MVA_SUB_TRIB" , voParams) ;-- MAD [Proj/Tar.061/862] - 31/08/2010
	$dsEmbLegalSubTrib$ = $item("DS_EMB_LEGAL_SUB_TRIB" , voParams) ;-- MAD [Proj/Tar.061/862] - 31/08/2010
	$inExibeQtdProdNF$ = $item("IN_EXIBE_QTD_PROD_NF" , voParams) ;-- MAD [Proj/Tar.149/098] - 26/11/2010
	$tpImpressaoCodPrdEcf$ = $item("TP_IMPRESSAO_COD_PRD_ECF" , voParams) ;-=CANONICO=- 06/12/2010 PRJ 22 TAR 1716
	$tpLancamentoFrete$ = $item("TP_LANCAMENTO_FRETE_TRA" , voParams) ; Marcio / Elia / Virginia Proj. 175/110
	$inArredondaTruncaICMS$ = $item("IN_ARREDONDA_TRUNCA_ICMS" , voParams) ; Marcio / Elia / Virginia Proj. 175/110
	$tpImpObsRegraFiscalNf$ = $item("TP_IMP_OBS_REGRAFISCAL_NF", voParams) ;-- WMC - Proj 182 Tar 40 - 15/04/2011
	$inIncluiIpiDevSimp$ = $item("IN_INCLUI_IPI_DEV_SIMP" , voParams) ; Ranghetti - 170/355 - 16/09/2011 <-
	$dsObsNf$ = $item("DS_OBS_NF" , voParams) ;--> VSOUZA PRJ/TAR 170/383 26/10/2011 
	$inGravaObsNf$ = $item("IN_GRAVA_OBS_NF" , voParams) ;--> VSOUZA PRJ/TAR 170/383 26/10/2011
	$dsLstOperObrigNfRef$ = $item("DS_LST_OPER_OBRIG_NF_REF" , voParams) ; MRT | PRJ 66/519 | 22/11/2011

	; Marcio / Elia / Virginia Proj. 175/110	
	$dsLstModDctoFiscal$ = $item("DS_LST_MODDCTOFISCAL_AT", voParams) 
	if ($dsLstModDctoFiscal$ != "")
		$dsLstModDctoFiscal$ = $replace($dsLstModDctoFiscal$, 1, ";", "·;", -1)
		repeat
			getitem vTpDctoFiscal, $dsLstModDctoFiscal$, 1
			if (vTpDctoFiscal > 0)
				creocc "F_TMP_NR08SVC", -1
				NR_08.F_TMP_NR08SVC/init = vTpDctoFiscal
				retrieve/o "F_TMP_NR08SVC"
			endif
			delitem $dsLstModDctoFiscal$, 1
		until ($dsLstModDctoFiscal$ = "")		
	endif
	; 

	return(0)
end

;-------------------------------
partner Operation calculaTotalNF
;-------------------------------
	variables
		numeric vNrOccAnt, vQtFaturado, vVlTotalProduto, vVlDesconto, vVlTotalBruto
		numeric vVlBaseICMS, vVlICMS, vVlBaseICMSSubst, vVlICMSSubst, vVlIPI, vVlCalc
	endvariables

	vQtFaturado = 0
	vVlTotalProduto = 0
	vVlTotalBruto = 0
	vVlDesconto = 0
	vVlBaseICMS = 0
	vVlICMS = 0
	vVlBaseICMSSubst = 0
	vVlICMSSubst = 0
	vVlIPI = 0

	clear/e "FIS_NFITEMSVC"
	retrieve/e "FIS_NFITEMSVC"
	if ($status >= 0)
		setocc "FIS_NFITEMSVC", 1
		while ($status >= 0)   
			vQtFaturado = vQtFaturado + QT_FATURADO.FIS_NFITEMSVC
			vVlTotalProduto = vVlTotalProduto + VL_TOTALLIQUIDO.FIS_NFITEMSVC
			vVlTotalBruto = vVlTotalBruto + VL_TOTALBRUTO.FIS_NFITEMSVC
			vVlDesconto = vVlDesconto + VL_TOTALDESC.FIS_NFITEMSVC
			if ($empty("FIS_NFITEMIMPSVC") = 0)
				setocc "FIS_NFITEMIMPSVC", 1
				while ($status >= 0)
					if (CD_IMPOSTO.FIS_NFITEMIMPSVC = 1) ;ICMS
						vVlBaseICMS = vVlBaseICMS + VL_BASECALC.FIS_NFITEMIMPSVC
						vVlICMS = vVlICMS + VL_IMPOSTO.FIS_NFITEMIMPSVC
					elseif (CD_IMPOSTO.FIS_NFITEMIMPSVC = 2) ;ICMSSubst
						vVlBaseICMSSubst = vVlBaseICMSSubst + VL_BASECALC.FIS_NFITEMIMPSVC
						vVlICMSSubst = vVlICMSSubst + VL_IMPOSTO.FIS_NFITEMIMPSVC
					elseif (CD_IMPOSTO.FIS_NFITEMIMPSVC = 3) ;IPI
						vVlIPI = vVlIPI + VL_IMPOSTO.FIS_NFITEMIMPSVC
					endif
					setocc "FIS_NFITEMIMPSVC", $curocc("FIS_NFITEMIMPSVC") + 1
				endwhile
			endif
			setocc "FIS_NFITEMSVC", $curocc("FIS_NFITEMSVC") + 1
		endwhile
	endif

	vVlCalc = (vVlTotalBruto - vVlTotalProduto) / vVlTotalBruto * 100
	PR_DESCONTO.FIS_NFSVC = vVlCalc[round, 6]
	QT_FATURADO.FIS_NFSVC = vQtFaturado
	VL_TOTALPRODUTO.FIS_NFSVC = vVlTotalProduto
	VL_DESCONTO.FIS_NFSVC = vVlDesconto
	VL_BASEICMS.FIS_NFSVC = vVlBaseICMS
	VL_ICMS.FIS_NFSVC = vVlICMS
	VL_BASEICMSSUBS.FIS_NFSVC = vVlBaseICMSSubst
	VL_ICMSSUBST.FIS_NFSVC = vVlICMSSubst
	VL_IPI.FIS_NFSVC = vVlIPI
;	if (TP_FRETE.FIS_NFTRANSPSVC = 2) ;Destinatário
;		vVlFrete = VL_FRETE.FIS_NFSVC
;	else
;		if ($inSomaFrete$ = <TRUE>)
;			vVlFrete = VL_FRETE.FIS_NFSVC
;		else
;			vVlFrete = 0
;		endif
;	endif
;	VL_TOTALNOTA.FIS_NFSVC = VL_TOTALPRODUTO.FIS_NFSVC + VL_DESPACESSOR.FIS_NFSVC + vVlFrete + VL_SEGURO.FIS_NFSVC + VL_IPI.FIS_NFSVC + VL_ICMSSUBST.FIS_NFSVC
	VL_TOTALNOTA.FIS_NFSVC = VL_TOTALPRODUTO.FIS_NFSVC + VL_DESPACESSOR.FIS_NFSVC + VL_FRETE.FIS_NFSVC + VL_SEGURO.FIS_NFSVC + VL_IPI.FIS_NFSVC + VL_ICMSSUBST.FIS_NFSVC


	return(0)
end ; operation calculaTotalNF

;----------------------------------------
entry geraCapaNF
;----------------------------------------
	variables
		numeric vNrNF
		string viParams, voParams, vDsRegistro
		date vDtSistema
	endvariables
	
	$nrFatura$ = 0

	if (TP_ORIGEMEMISSAO.TRA_TRANSACAOSVC = 2) ;Emissão terceiros
		viParams = ""
		putitem/id viParams, "CD_EMPRESA", CD_EMPRESA.TRA_TRANSACAOSVC
		putitem/id viParams, "NR_TRANSACAO", NR_TRANSACAO.TRA_TRANSACAOSVC
		putitem/id viParams, "DT_TRANSACAO", DT_TRANSACAO.TRA_TRANSACAOSVC
		activate "SICSVCO005".buscaSequencia($xlpg$, viParams, voParams, $xCdErro$, $xCtxerro$)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			return(-1)
		endif 
		$nrFatura$ = $item("NR_FATURA", voParams)
	else
		if (CD_EMPFAT.TRA_TRANSACAOSVC != $item("CD_EMPRESA", $xlpg$))
			if ($dsLstFatura$ != "")
				getitem $nrFatura$, $dsLstFatura$, 1
				delitem $dsLstFatura$, 1
			endif
		endif
	
		if ($nrFatura$ = 0)
			viParams = ""
			putitem/id viParams, "NM_ENTIDADE", "FIS_NF"	
			activate "GERSVCO031".getNumSeq($xlpg$, viParams, voParams, $xCdErro$, $xCtxerro$)
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				return(-1)
			endif 
			$nrFatura$ = $item("NR_SEQUENCIA", voParams)
		endif	

		if (CD_EMPFAT.TRA_TRANSACAOSVC = $item("CD_EMPRESA", $xlpg$))
			putitem $dsLstFatura$, -1, $nrFatura$
		endif
	endif

	if ($nrFatura$ = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Não foi possível obter nr. de fatura da NF", "ADICIONAL=Operação->FISSVCO004.geraNF")
		return (-1)
	endif

	;---Elia Proj. 102/393 12/09/08 
	if ($dtFatura$ != "")
		vDtSistema = $dtFatura$
	else
		vDtSistema = $item("DT_SISTEMA", $xlpg$) 
	endif
	;
	
	creocc "FIS_NFSVC", -1
	CD_EMPRESA.FIS_NFSVC = CD_EMPFAT.TRA_TRANSACAOSVC
	NR_FATURA.FIS_NFSVC = $nrFatura$
	DT_FATURA.FIS_NFSVC = vDtSistema
	CD_PESSOA.FIS_NFSVC = CD_PESSOA.TRA_TRANSACAOSVC

	if (TP_ORIGEMEMISSAO.TRA_TRANSACAOSVC = 2) ;Emissão terceiros
		NR_NF.FIS_NFSVC = $nrNf$
		CD_SERIE.FIS_NFSVC = $cdSerie$
		DT_EMISSAO.FIS_NFSVC = $dtEmissao$
		DT_SAIDAENTRADA.FIS_NFSVC = $dtSaidaEntrada$
		;---Elia Proj. 130/487 22/05/09
		if (TP_DOCTO.GER_S_OPERACASVC = 0) ; 0 - Não definido
			TP_SITUACAO.FIS_NFSVC = "N" ;Normal
		else
			TP_SITUACAO.FIS_NFSVC = "E" ;Emitida		
		endif
		;
	else			
		if ($inReemissao$ = <TRUE>)
			DT_FATURA.FIS_NFSVC = $dtEmissao$
			NR_NF.FIS_NFSVC = $nrNf$
			CD_SERIE.FIS_NFSVC = $cdSerie$
			DT_EMISSAO.FIS_NFSVC = $dtEmissao$
			TP_SITUACAO.FIS_NFSVC = "E"
			DT_SAIDAENTRADA.FIS_NFSVC = $dtEmissao$
		else
			TP_SITUACAO.FIS_NFSVC = "N" ;Normal
			;DT_SAIDAENTRADA.FIS_NFSVC = vDtSistema
			DT_SAIDAENTRADA.FIS_NFSVC = $dtSaidaEntrada$
		endif
	endif

	TP_ORIGEMEMISSAO.FIS_NFSVC = TP_ORIGEMEMISSAO.TRA_TRANSACAOSVC
	TP_OPERACAO.FIS_NFSVC = TP_OPERACAO.TRA_TRANSACAOSVC
	if ($tpModDctoFiscalLocal$ > 0)
		TP_MODDCTOFISCAL.FIS_NFSVC = $tpModDctoFiscalLocal$ ;Utilizado p/ emissão de terceiro
	else
		if ($tpModDctoFiscal$ = 0)
			TP_MODDCTOFISCAL.FIS_NFSVC = 02 ;Nota fiscal de venda ao consumidor
		else
			TP_MODDCTOFISCAL.FIS_NFSVC = $tpModDctoFiscal$
		endif
	endif
	if (TP_MODALIDADE.GER_S_OPERACASVC = "D");NOTA DE COMPLEMENTO DE ICMS / CIAP; oda
		;-- MAD [Proj/Tar.061/503] - 19/12/2008
		;TP_MODDCTOFISCAL.FIS_NFSVC = 27
		TP_MODDCTOFISCAL.FIS_NFSVC = 85
		;;
	;;ICJ [PROJ/TAR 175/28] (16/12/2010)
	elseif (TP_MODALIDADE.GER_S_OPERACASVC = "G"); CIAP
		TP_MODDCTOFISCAL.FIS_NFSVC = 87
	endif

	CD_EMPFAT.FIS_NFSVC = CD_EMPFAT.TRA_TRANSACAOSVC
	CD_GRUPOEMPRESA.FIS_NFSVC = CD_GRUPOEMPRESA.TRA_TRANSACAOSVC	
	CD_OPERADOR.FIS_NFSVC = $item("CD_USUARIO", $xlpg$)
	DT_CADASTRO.FIS_NFSVC = $datim
	NR_PRE.FIS_NFSVC = 0
	CD_CONDPGTO.FIS_NFSVC = CD_CONDPGTO.TRA_TRANSACAOSVC
	CD_OPERACAO.FIS_NFSVC = CD_OPERFAT.GER_OPERACAOSVC
	CD_MODELONF.FIS_NFSVC = $cdModeloNF$
	CD_EMPRESAORI.FIS_NFSVC = CD_EMPRESA.TRA_TRANSACAOSVC
	NR_TRANSACAOORI.FIS_NFSVC = NR_TRANSACAO.TRA_TRANSACAOSVC
	DT_TRANSACAOORI.FIS_NFSVC = DT_TRANSACAO.TRA_TRANSACAOSVC
	;---Elia Proj. 102/218 12/02/08
	if ($hrSaida$ = "")
		HR_SAIDA.FIS_NFSVC = $clock	
	else
		HR_SAIDA.FIS_NFSVC = $hrSaida$
	endif
	;
	CD_COMPVEND.FIS_NFSVC = CD_COMPVEND.TRA_TRANSACAOSVC	
	IN_FRETE.FIS_NFSVC = IN_FRETE.TRA_TRANSACAOSVC
	PR_DESCONTO.FIS_NFSVC = PR_DESCONTO.TRA_TRANSACAOSVC
	QT_FATURADO.FIS_NFSVC = 0
	VL_TOTALPRODUTO.FIS_NFSVC = 0
	VL_DESPACESSOR.FIS_NFSVC = 0
	VL_FRETE.FIS_NFSVC = 0
	VL_SEGURO.FIS_NFSVC = 0
	VL_IPI.FIS_NFSVC = 0
	VL_DESCONTO.FIS_NFSVC = 0
	VL_TOTALNOTA.FIS_NFSVC = 0
	VL_BASEICMSSUBS.FIS_NFSVC = 0
	VL_ICMSSUBST.FIS_NFSVC = 0
	VL_BASEICMS.FIS_NFSVC = 0
	VL_ICMS.FIS_NFSVC = 0

	clear/e "TMP_CSTALIQSVC" 
	
	return(0)
end

;----------------------------------------
entry geraItemNF
;----------------------------------------
	params
		string piDsLstProduto : IN
		numeric piNrItem : IN
	endparams
	
	variables
		numeric vVlValor, vCdProduto, vCdValor, vTpRegime, vCdRegraFiscal, vCdRegraFiscalProd
		string viParams, voParams, vCdItem, vTpValor, vDsItem, vDsRegistro, vDsLstValor
		string vDsLstItemUn, vCdTIPI, vDsTIPI, vDsLstSerial, vDsLstDespesa, vTpReducao, vTpAliqIcms
		string vLstLoteInfGeral, vLstLoteInf, vDsLstItemLote, vDsLstNf, vDsLstItemPrdFin
		boolean vInCopiaValor, vInObs
	endvariables

	vCdTIPI = ""
	vDsTIPI = ""

	if (CD_PRODUTO.TRA_TRANSITEMSVC > 0 & CD_ESPECIE.TRA_TRANSITEMSVC != $cdEspecieServico$)
		if (CD_TIPI.TRA_TRANSITEMSVC = "")
			viParams = ""
			putitem/id viParams, "CD_PRODUTO", CD_PRODUTO.TRA_TRANSITEMSVC
			activate "GERSVCO046".buscaDadosProduto($xlpg$, viParams, voParams,$xCdErro$, $xCtxerro$)
			if ($procerror) 
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				return(-1)
			endif
			vCdTIPI = $item("CD_TIPI", voParams)
			vDsTIPI = $item("DS_TIPI", voParams)
		else
			vCdTIPI = CD_TIPI.TRA_TRANSITEMSVC	
			viParams = ""
			putitem/id viParams, "CD_TIPI", vCdTIPI
			activate "GERSVCO046".buscaDadosFiscal($xlpg$, viParams, voParams,$xCdErro$, $xCtxerro$)
			if ($procerror) 
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				return(-1)
			endif
		
			vDsTIPI = $item("DS_TIPI", voParams)
		endif
	endif

	if (CD_BARRAPRD.TRA_TRANSITEMSVC != "" & CD_ESPECIE.TRA_TRANSITEMSVC != $cdEspecieServico$) ; MRT | PRJ 130/1494 | 22/11/2011 -->>
		vCdTIPI = CD_TIPI.TRA_TRANSITEMSVC
		if (vCdTIPI != "")
			viParams = ""
			putitem/id viParams, "CD_TIPI", vCdTIPI
			activate "GERSVCO046".buscaDadosFiscal($xlpg$, viParams, voParams,$xCdErro$, $xCtxerro$)
			if ($procerror) 
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				return(-1)
			endif

			vDsTIPI = $item("DS_TIPI", voParams)
		endif
	endif ; <<--

	;* Claudemir - Prj/Tarefa: 130/1020 - 09/04/2010
	; se o parametro estiver configurado para arredondar ou truncar, também será copiado os valores da transacao
	if (QT_FATURADO.FIS_NFITEMSVC = 0) | (QT_FATURADO.FIS_NFITEMSVC = 1) | %\
	 ($item("TP_ARREDOND_VL_UNIT_VD", $xlpg$) = 1) | ($item("TP_ARREDOND_VL_UNIT_VD", $xlpg$) = 2)
		vInCopiaValor = <TRUE>
	else
		vInCopiaValor = <FALSE>
	endif ;*
	
	creocc "FIS_NFITEMSVC", -1
	NR_ITEM.FIS_NFITEMSVC = piNrItem
	CD_EMPFAT.FIS_NFITEMSVC = CD_EMPFAT.TRA_TRANSACAOSVC
	CD_GRUPOEMPRESA.FIS_NFITEMSVC = CD_GRUPOEMPRESA.TRA_TRANSACAOSVC
	CD_OPERADOR.FIS_NFITEMSVC = $item("CD_USUARIO", $xlpg$)
	DT_CADASTRO.FIS_NFITEMSVC = $datim
	IN_DESCONTO.FIS_NFITEMSVC = IN_DESCONTO.TRA_TRANSITEMSVC 
	CD_ESPECIE.FIS_NFITEMSVC = CD_ESPECIE.TRA_TRANSITEMSVC
	CD_CST.FIS_NFITEMSVC = CD_CST.TRA_TRANSITEMSVC
	CD_CFOP.FIS_NFITEMSVC = CD_CFOP.TRA_TRANSITEMSVC
	CD_DECRETO.FIS_NFITEMSVC = CD_DECRETO.TRA_TRANSITEMSVC
	CD_TIPI.FIS_NFITEMSVC = vCdTIPI
	QT_FATURADO.FIS_NFITEMSVC = QT_SOLICITADA.TRA_TRANSITEMSVC
	VL_TOTALBRUTO.FIS_NFITEMSVC = VL_TOTALBRUTO.TRA_TRANSITEMSVC
	VL_TOTALLIQUIDO.FIS_NFITEMSVC = VL_TOTALLIQUIDO.TRA_TRANSITEMSVC
	VL_TOTALDESC.FIS_NFITEMSVC = VL_TOTALDESC.TRA_TRANSITEMSVC + VL_TOTALDESCCAB.TRA_TRANSITEMSVC

	;* Claudemir - Prj/Tarefa: 130/1020 - 09/04/2010
	; substituido o teste abaixo pelo teste "vInCopiaValor" (validado acima)
	;if (QT_FATURADO.FIS_NFITEMSVC = 0) | (QT_FATURADO.FIS_NFITEMSVC = 1)
	;---Elia/Oda 19/05/10
	;if (vInCopiaValor = <TRUE>) ;*
	if (vInCopiaValor = <TRUE>) & ($tpAgrupamentoItemNF$ != 1);*
	;
		VL_UNITBRUTO.FIS_NFITEMSVC = VL_UNITBRUTO.TRA_TRANSITEMSVC
		VL_UNITLIQUIDO.FIS_NFITEMSVC = VL_UNITLIQUIDO.TRA_TRANSITEMSVC
		VL_UNITDESC.FIS_NFITEMSVC = VL_UNITDESC.TRA_TRANSITEMSVC + VL_UNITDESCCAB.TRA_TRANSITEMSVC
	else
		vVlValor = VL_TOTALBRUTO.FIS_NFITEMSVC / QT_FATURADO.FIS_NFITEMSVC
		VL_UNITBRUTO.FIS_NFITEMSVC = vVlValor[round, 6]
		vVlValor = VL_TOTALLIQUIDO.FIS_NFITEMSVC / QT_FATURADO.FIS_NFITEMSVC
		VL_UNITLIQUIDO.FIS_NFITEMSVC = vVlValor[round, 6]
		vVlValor = VL_TOTALDESC.FIS_NFITEMSVC / QT_FATURADO.FIS_NFITEMSVC
		VL_UNITDESC.FIS_NFITEMSVC = vVlValor[round, 6]
	endif
	vVlValor = (VL_TOTALDESC.FIS_NFITEMSVC / VL_TOTALBRUTO.FIS_NFITEMSVC) * 100
	PR_DESCONTO.FIS_NFITEMSVC = vVlValor[round, 6]
	
	if ($inExibeResumoCfopNF$ = <TRUE>)
		creocc "F_TMP_NR09SVC", -1
		NR_GERAL.F_TMP_NR09SVC = CD_CFOP.FIS_NFITEMSVC
		retrieve/o "F_TMP_NR09SVC"
		if ($status = -7)
			retrieve/x "F_TMP_NR09SVC"
		endif
		;---Elia Proj. 61/457 30/10/08
		VL_TOTAL.F_TMP_NR09SVC = VL_TOTAL.F_TMP_NR09SVC + VL_TOTALLIQUIDO.FIS_NFITEMSVC
		QT_ITEM.F_TMP_NR09SVC = QT_ITEM.F_TMP_NR09SVC + QT_FATURADO.FIS_NFITEMSVC ;-- MAD [Proj/Tar.149/098] - 26/11/2010
	endif

	if (CD_ESPECIE.TRA_TRANSITEMSVC = $cdEspecieServico$)
		if (CD_PRODUTO.TRA_TRANSITEMSVC = 0)
			CD_PRODUTO.FIS_NFITEMSVC = CD_BARRAPRD.TRA_TRANSITEMSVC
		else
			CD_PRODUTO.FIS_NFITEMSVC = CD_PRODUTO.TRA_TRANSITEMSVC
		endif
		DS_PRODUTO.FIS_NFITEMSVC = DS_PRODUTO.TRA_TRANSITEMSVC
	else
		if (CD_PRODUTO.TRA_TRANSITEMSVC = 0) & (CD_BARRAPRD.TRA_TRANSITEMSVC = "")
			DS_PRODUTO.FIS_NFITEMSVC = DS_PRODUTO.TRA_TRANSITEMSVC
			IN_DESCONTO.FIS_NFITEMSVC = ""
			CD_ESPECIE.FIS_NFITEMSVC = ""
			CD_CST.FIS_NFITEMSVC = ""
			CD_CFOP.FIS_NFITEMSVC = ""
			CD_DECRETO.FIS_NFITEMSVC = ""
			CD_TIPI.FIS_NFITEMSVC = ""
			QT_FATURADO.FIS_NFITEMSVC = ""
			VL_TOTALBRUTO.FIS_NFITEMSVC = ""
			VL_TOTALLIQUIDO.FIS_NFITEMSVC = ""
			VL_TOTALDESC.FIS_NFITEMSVC = ""
			VL_UNITBRUTO.FIS_NFITEMSVC = ""
			VL_UNITLIQUIDO.FIS_NFITEMSVC = ""
			VL_UNITDESC.FIS_NFITEMSVC = ""
			PR_DESCONTO.FIS_NFITEMSVC = ""
		else
			;---Elia Proj. 102/261 19/03/08
			if ($tpCodigoItem$ = 1) ;Grupo
				CD_PRODUTO.FIS_NFITEMSVC = CD_NIVELGRUPO.TRA_TRANSITEMSVC[1 : 14]
				DS_PRODUTO.FIS_NFITEMSVC = DS_NIVELGRUPO.TRA_TRANSITEMSVC[1 : 60]
			elseif ($tpCodigoItem$ = 2) ;Classificacao
				vCdItem = ""
				vDsItem = ""
				setocc "PRD_TIPOCLASSVC", 1
				while ($status >= 0)
					clear/e "PRD_PRODUTOCLSVC"
					CD_PRODUTO.PRD_PRODUTOCLSVC = CD_PRODUTO.TRA_TRANSITEMSVC
					CD_TIPOCLAS.PRD_PRODUTOCLSVC = CD_TIPOCLAS.PRD_TIPOCLASSVC
					retrieve/e "PRD_PRODUTOCLSVC"
					if ($status >= 0)
						vCdItem = "%%vCdItem%%CD_CLASSIFICACAO.PRD_PRODUTOCLSVC"
						vDsItem = "%%vDsItem%%DS_CLASSIFICACAO.PRD_CLASSIFICSVC "
					endif
						setocc "PRD_TIPOCLASSVC", $curocc("PRD_TIPOCLASSVC") + 1
				endwhile
				CD_PRODUTO.FIS_NFITEMSVC = vCdItem[1 : 14]
				DS_PRODUTO.FIS_NFITEMSVC = vDsItem[1 : 60]
			elseif ($tpCodigoItem$ = 3) ;NCM
				CD_PRODUTO.FIS_NFITEMSVC = vCdTIPI
				DS_PRODUTO.FIS_NFITEMSVC = vDSTIPI
			elseif ($tpCodigoItem$ = 5) ;Original pessoa
				if ($tpAgrupamento$ = "F" | $tpAgrupamento$ = "") ;Item
					viParams = ""
					putitem/id viParams, "CD_PRODUTO", CD_PRODUTO.TRA_TRANSITEMSVC
					putitem/id viParams, "CD_PESSOA", CD_PESSOA.TRA_TRANSACAOSVC
					activate "PRDSVCO023".buscaDadosProduto($xlpg$, viParams, voParams,$xCdErro$, $xCtxerro$)
					if ($procerror) 
						$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						return(-1)
					elseif ($status < 0)
						$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
						return(-1)
					endif
					CD_PRODUTO.FIS_NFITEMSVC = $item("CD_ORIGEM", voParams)[1 : 14]
					DS_PRODUTO.FIS_NFITEMSVC = $item("DS_ORIGEM", voParams)[1 : 60]
				else
					viParams = ""
					putitem/id viParams, "CD_SEQGRUPO", CD_SEQGRUPO.TRA_TRANSITEMSVC
					putitem/id viParams, "CD_PESSOA", CD_PESSOA.TRA_TRANSACAOSVC
					activate "PRDSVCO023".buscaDadosGrupo($xlpg$, viParams, voParams,$xCdErro$, $xCtxerro$)
					if ($procerror) 
						$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						return(-1)
					elseif ($status < 0)
						$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
						return(-1)
					endif
					CD_PRODUTO.FIS_NFITEMSVC = $item("CD_ORIGEM", voParams)[1 : 14]
					DS_PRODUTO.FIS_NFITEMSVC = $item("DS_ORIGEM", voParams)[1 : 60]
				endif
			elseif ($tpCodigoItem$ = 6) ;Grupo sem espaço
				CD_NIVELGRUPO.TRA_TRANSITEMSVC = $replace(CD_NIVELGRUPO.TRA_TRANSITEMSVC, 1, " ", "", -1)
				CD_PRODUTO.FIS_NFITEMSVC = CD_NIVELGRUPO.TRA_TRANSITEMSVC[1 : 14]
				DS_PRODUTO.FIS_NFITEMSVC = DS_NIVELGRUPO.TRA_TRANSITEMSVC[1 : 60]
			elseif ($tpCodigoItem$ = 7) ;Código pedido
				viParams = ""
				putitem/id viParams, "CD_EMPRESA", CD_EMPRESA.TRA_TRANSACAOSVC
				putitem/id viParams, "NR_TRANSACAO", NR_TRANSACAO.TRA_TRANSACAOSVC
				putitem/id viParams, "DT_TRANSACAO", DT_TRANSACAO.TRA_TRANSACAOSVC
				if ($tpAgrupamento$ = "F" | $tpAgrupamento$ = "") ;Item
					putitem/id viParams, "CD_PRODUTO", CD_PRODUTO.TRA_TRANSITEMSVC
				else
					putitem/id viParams, "CD_SEQGRUPO", CD_SEQGRUPO.TRA_TRANSITEMSVC
				endif
				activate "PRDSVCO015".retornaDadosPedidoG($xlpg$, viParams, voParams,$xCdErro$, $xCtxerro$)
				if ($procerror) 
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					return(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					return(-1)
				endif
				CD_PRODUTO.FIS_NFITEMSVC = $item("CD_NIVELFAT", voParams)[1 : 14]
				DS_PRODUTO.FIS_NFITEMSVC = $item("DS_NIVELFAT", voParams)[1 : 60]
			else	
				if (CD_PRODUTO.TRA_TRANSITEMSVC = 0)
					CD_PRODUTO.FIS_NFITEMSVC = CD_BARRAPRD.TRA_TRANSITEMSVC
					CD_TIPI.FIS_NFITEMSVC = CD_TIPI.TRA_TRANSITEMSVC
				else
					CD_PRODUTO.FIS_NFITEMSVC = CD_PRODUTO.TRA_TRANSITEMSVC
				endif
				DS_PRODUTO.FIS_NFITEMSVC = DS_PRODUTO.TRA_TRANSITEMSVC
			endif

			if (CD_PRODUTO.FIS_NFITEMSVC = "" | DS_PRODUTO.FIS_NFITEMSVC = "")
				if ($tpAgrupamento$ = "F" | $tpAgrupamento$ = "") ;Item
					if (CD_PRODUTO.TRA_TRANSITEMSVC = 0)
						CD_PRODUTO.FIS_NFITEMSVC = CD_BARRAPRD.TRA_TRANSITEMSVC
					else
						CD_PRODUTO.FIS_NFITEMSVC = CD_PRODUTO.TRA_TRANSITEMSVC
					endif
					DS_PRODUTO.FIS_NFITEMSVC = DS_PRODUTO.TRA_TRANSITEMSVC
				else
					;---Elia Proj. 102/261 19/03/08
					CD_PRODUTO.FIS_NFITEMSVC = CD_NIVELGRUPO.TRA_TRANSITEMSVC[1 : 14]
					DS_PRODUTO.FIS_NFITEMSVC = DS_NIVELGRUPO.TRA_TRANSITEMSVC[1 : 60]
				endif
			endif
		endif
	endif
	
	;--->MNT - Prj 156/0345 - 07/06/2010	
	call limpaString(CD_PRODUTO.FIS_NFITEMSVC, CD_PRODUTO.FIS_NFITEMSVC)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
	endif 

	call limpaString(DS_PRODUTO.FIS_NFITEMSVC, DS_PRODUTO.FIS_NFITEMSVC)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
	endif
	;<---

	if (CD_PRODUTO.FIS_NFITEMSVC != "")
		if (CD_CFOP.FIS_NFITEMSVC = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falta CFOP no produto %%CD_PRODUTO.FIS_NFITEMSVC%%%!", "ADICIONAL=Operação->FISSVCO004.geraNF")
			return (-1)
		endif	
		
		if (CD_CST.FIS_NFITEMSVC = "")
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falta CST no produto %%CD_PRODUTO.FIS_NFITEMSVC%%%!", "ADICIONAL=Operação->FISSVCO004.geraNF")
			return (-1)
		endif
	endif

	vInObs = <FALSE>
	
	;-- MAD [Proj/Tar.061/862] - 31/08/2010
	if (CD_DECRETO.FIS_NFITEMSVC = 1020) | (CD_DECRETO.FIS_NFITEMSVC = 10201) | (CD_DECRETO.FIS_NFITEMSVC = 10202) | (CD_DECRETO.FIS_NFITEMSVC = 10203)
		if ($prAplicMvaSubTrib$ != "") & ($ufOrigem$ = "SC") & ($ufDestino$ = "SC") & ($tpRegimeTrib$ = 2 | $tpRegimeTrib$ = 3)
			creocc "TMP_NR08SVC", -1
			NR_08.TMP_NR08SVC = 1
			retrieve/o "TMP_NR08SVC"
			if ($status = 0)
				if ($dsAdicionalRegra$ = "")
					$dsAdicionalRegra$ = $dsEmbLegalSubTrib$
				else
					$dsAdicionalRegra$ = "%%$dsAdicionalRegra$%%^%%$dsEmbLegalSubTrib$"
				endif
			endif	
		endif	
	endif
	;;
	
	if (piDsLstProduto != "") & (CD_ESPECIE.FIS_NFITEMSVC != $cdEspecieServico$)
		repeat
			getitem vDsRegistro, piDsLstProduto, 1
			vCdProduto = $item("CD_PRODUTO", vDsRegistro)
			if (vCdProduto != 0) 
				creocc "FIS_NFITEMPROSVC", -1
				CD_PRODUTO.FIS_NFITEMPROSVC = vCdProduto
				retrieve/o "FIS_NFITEMPROSVC"
				if ($status = -7)
					retrieve/x "FIS_NFITEMPROSVC"
				endif 
				CD_EMPFAT.FIS_NFITEMPROSVC = CD_EMPFAT.TRA_TRANSACAOSVC
				CD_GRUPOEMPRESA.FIS_NFITEMPROSVC = CD_GRUPOEMPRESA.TRA_TRANSACAOSVC 
				QT_FATURADO.FIS_NFITEMPROSVC = QT_FATURADO.FIS_NFITEMPROSVC + $item("QT_FATURADO", vDsRegistro)
				VL_UNITBRUTO.FIS_NFITEMPROSVC = $item("VL_UNITBRUTO", vDsRegistro)
				VL_UNITDESC.FIS_NFITEMPROSVC = $item("VL_UNITDESC", vDsRegistro)
				VL_UNITLIQUIDO.FIS_NFITEMPROSVC = $item("VL_UNITLIQUIDO", vDsRegistro)				
				VL_TOTALDESC.FIS_NFITEMPROSVC = VL_TOTALDESC.FIS_NFITEMPROSVC + $item("VL_TOTALDESC", vDsRegistro)
				VL_TOTALLIQUIDO.FIS_NFITEMPROSVC = VL_TOTALLIQUIDO.FIS_NFITEMPROSVC + $item("VL_TOTALLIQUIDO", vDsRegistro)
				VL_TOTALBRUTO.FIS_NFITEMPROSVC = VL_TOTALBRUTO.FIS_NFITEMPROSVC + $item("VL_TOTALBRUTO", vDsRegistro)			
				CD_COMPVEND.FIS_NFITEMPROSVC = $item("CD_COMPVEND", vDsRegistro)
				CD_PROMOCAO.FIS_NFITEMPROSVC = $item("CD_PROMOCAO", vDsRegistro)
				CD_OPERADOR.FIS_NFITEMPROSVC = $item("CD_USUARIO", $xlpg$)
				DT_CADASTRO.FIS_NFITEMPROSVC = $datim

				;-- MAD [Proj/Tar.170/011] - 16/07/2010
				;---- WMC - Proj 182 Tar 040 - 15/04/2011
				;if ($prAplicMvaSubTrib$ = "") & ($inPDVOtimizado$ = <TRUE>)
				if (($prAplicMvaSubTrib$ = "") & ($inPDVOtimizado$ = <TRUE>)) | ($tpImpObsRegraFiscalNf$ = 1)
				;----//----//----
					vInObs = <FALSE>
					viParams = ""
					putitem/id viParams, "CD_PRODUTO" , CD_PRODUTO.FIS_NFITEMPROSVC
					putitem/id viParams, "CD_OPERACAO", CD_OPERACAO.GER_OPERACAOSVC
					activate "FISSVCO033".buscaRegraFiscalProduto($xlpg$, viParams, voParams, $xCdErro$, $xCtxerro$)
					if ($procerror)
						$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						return(-1)
					elseif ($status < 0)
						$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
						return(-1)
					endif

					vCdRegraFiscalProd = $item("CD_REGRAFISCAL", voParams)
					
					if (vCdRegraFiscalProd != "")
						creocc "TMP_NR08SVC", -1
						NR_08.TMP_NR08SVC = vCdRegraFiscalProd
						retrieve/o "TMP_NR08SVC"
						if ($status = 0)

							viParams = ""
							putitem/id viParams, "CD_REGRAFISCAL", vCdRegraFiscalProd
							activate "FISSVCO033".buscaDadosRegraFiscal($xlpg$, viParams, voParams, $xCdErro$, $xCtxerro$)
							if ($procerror)
								$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
								return(-1)
							elseif ($status < 0)
								$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
								return(-1)
							endif
	
							;-- MAD [Proj/Tar.170/035] - 17/08/2010
							vTpReducao = $item("TP_REDUCAO" , voParams)
							vTpAliqIcms = $item("TP_ALIQICMS", voParams)
	
							if (vTpReducao = "" & vTpAliqIcms = "")
								vInObs = <TRUE>
	
							elseif (vTpReducao = "G" | vTpReducao = "H" | vTpReducao = "I") | %\
								((vTpReducao = "A" | vTpReducao = "B" | vTpReducao = "C") & $ufOrigem$ = $ufDestino$) | %\
								((vTpReducao = "D" | vTpReducao = "E" | vTpReducao = "F") & $ufOrigem$ != $ufDestino$) 
								vInObs = <TRUE>
	
							elseif (vTpAliqIcms = "C") | (vTpAliqIcms = "A" & $ufOrigem$ = $ufDestino$) | %\
								(vTpAliqIcms = "B" & $ufOrigem$ != $ufDestino$)
								vInObs = <TRUE>
							endif
							;;

							if (CD_REGRAFISCAL.GER_S_OPERACASVC > 0)
								vCdRegraFiscal = CD_REGRAFISCAL.GER_S_OPERACASVC
							elseif (CD_REGRAFISCAL.GER_OPERACAOSVC > 0)
								vCdRegraFiscal = CD_REGRAFISCAL.GER_OPERACAOSVC
							endif

							if (vCdRegraFiscalProd != vCdRegraFiscal) & (vInObs = <TRUE>)
								if ($dsAdicionalRegra$ = "")
									$dsAdicionalRegra$ = $item("DS_ADICIONAL", voParams)
								else
									$dsAdicionalRegra$ = "%%$dsAdicionalRegra$%%^%%$item('DS_ADICIONAL',voParams)"
								endif
							endif
						endif
					endif
				endif
				;;	

;				;thamati 22/03/2010 [Proj. 0130 - Tar. 0991]
;				;>-- MAC - PRJ 156 TAR 179 - 12/02/2010 ---
;				clear/e "TRA_ITEMLOTESVC"
;				CD_EMPRESA.TRA_ITEMLOTESVC/init = CD_EMPRESA.TRA_TRANSITEMSVC
;				NR_TRANSACAO.TRA_ITEMLOTESVC/init = NR_TRANSACAO.TRA_TRANSITEMSVC
;				DT_TRANSACAO.TRA_ITEMLOTESVC/init = DT_TRANSACAO.TRA_TRANSITEMSVC
;				NR_ITEM.TRA_ITEMLOTESVC/init = NR_ITEM.TRA_TRANSITEMSVC
;				retrieve/e "TRA_ITEMLOTESVC"
;				if ($status >= 0)
;					setocc "TRA_ITEMLOTESVC", 1
;					while ($status >= 0)
;						;>-- Duplica tabela PRD_LOTEINF
;						vLstLoteInf = ""
;						putitem/id vLstLoteInf, "CD_EMPRESA", CD_EMPLOTE.TRA_ITEMLOTESVC
;						putitem/id vLstLoteInf, "NR_LOTE", NR_LOTE.TRA_ITEMLOTESVC
;						putitem/id vLstLoteInf, "NR_ITEM", NR_ITEMLOTE.TRA_ITEMLOTESVC
;						putitem/id vLstLoteInf, "DT_FATURA", DT_FATURA.FIS_NFITEMPROSVC
;						putitem/id vLstLoteInf, "CD_EMPRESANF", CD_EMPRESA.FIS_NFITEMPROSVC
;						putitem/id vLstLoteInf, "NR_FATURA", NR_FATURA.FIS_NFITEMPROSVC
;						putitem/id vLstLoteInf, "NR_ITEMNF", NR_ITEM.FIS_NFITEMPROSVC
;						putitem/id vLstLoteInf, "CD_PRODUTONF", CD_PRODUTO.FIS_NFITEMPROSVC
;						putitem $LstLoteInfGeral$, -1, vLstLoteInf
;						setocc ("TRA_ITEMLOTESVC"), $curocc ("TRA_ITEMLOTESVC") + 1
;					endwhile
;				endif
;				;--<
				;

				if (TP_MODALIDADE.GER_OPERACAOSVC = "C" & TP_OPERACAO.GER_OPERACAOSVC = "S" & TP_MODALIDADE.GER_S_OPERACASVC = "C")
					creocc "FIS_NFITEMCONSVC", -1
					CD_EMPRESA.FIS_NFITEMCONSVC = CD_EMPRESA.FIS_NFITEMPROSVC
					NR_FATURA.FIS_NFITEMCONSVC = NR_FATURA.FIS_NFITEMPROSVC
					DT_FATURA.FIS_NFITEMCONSVC = DT_FATURA.FIS_NFITEMPROSVC
					NR_ITEM.FIS_NFITEMCONSVC = NR_ITEM.FIS_NFITEMPROSVC
					CD_PRODUTO.FIS_NFITEMCONSVC = CD_PRODUTO.FIS_NFITEMPROSVC
					retrieve/o "FIS_NFITEMCONSVC"
					if ($status = -7)
						retrieve/x "FIS_NFITEMCONSVC"
					endif
					CD_EMPFAT.FIS_NFITEMCONSVC = CD_EMPFAT.FIS_NFITEMPROSVC
					CD_GRUPOEMPRESA.FIS_NFITEMCONSVC = CD_GRUPOEMPRESA.FIS_NFITEMPROSVC
					;situacao de pendente
					TP_SITUACAO.FIS_NFITEMCONSVC = 1
					CD_OPERADOR.FIS_NFITEMCONSVC = $item("CD_USUARIO", $xlpg$)
					DT_CADASTRO.FIS_NFITEMCONSVC = $datim
				endif
	
				vDsLstItemUn = $item("DS_LSTITEMUN", vDsRegistro)
				if (vDsLstItemUn != "")
					creocc "FIS_NFITEMUNSVC", -1
					;-- MAD [Proj/Tar.156/591] - 26/07/2011
					retrieve/o "FIS_NFITEMUNSVC"
					if ($status = -7)
						retrieve/x "FIS_NFITEMUNSVC"
					endif
					;;
					getlistitems/occ vDsLstItemUn, "FIS_NFITEMUNSVC"
					CD_OPERADOR.FIS_NFITEMUNSVC = $item("CD_USUARIO", $xlpg$)
					DT_CADASTRO.FIS_NFITEMUNSVC = $datim
				endif
				
				vDsLstValor = $item("DS_LSTVALOR", vDsRegistro)
				vDsLstSerial = $item("DS_LSTSERIAL", vDsRegistro)
				vDsLstDespesa = $item("DS_LSTDESPESA", vDsRegistro)
				vDsLstItemLote = $item("DS_LSTITEMLOTE", vDsRegistro) ;thamati 22/03/2010 [Proj. 0130 - Tar. 0991]				
				vDsLstItemPrdFin = $item("DS_LSTITEMPRDFIN", vDsRegistro) ; DIONE |179/0005| 17/12/10

				if (vDsLstValor != "")				
					repeat
						getitem vDsRegistro, vDsLstValor, 1
						vTpValor = $item("TP_VALOR", vDsRegistro)
						vCdValor = $item("CD_VALOR", vDsRegistro)
						creocc "FIS_NFITEMVLSVC", -1
						TP_VALOR.FIS_NFITEMVLSVC = vTpValor
						CD_VALOR.FIS_NFITEMVLSVC = vCdValor
						retrieve/o "FIS_NFITEMVLSVC"
						if ($status = -7)
							retrieve/x "FIS_NFITEMVLSVC"
						endif
						delitem/id vDsRegistro, "TP_VALOR"
						delitem/id vDsRegistro, "CD_VALOR"
						getlistitems/occ vDsRegistro, "FIS_NFITEMVLSVC"
						CD_EMPFAT.FIS_NFITEMVLSVC = CD_EMPFAT.TRA_TRANSACAOSVC
						CD_GRUPOEMPRESA.FIS_NFITEMVLSVC = CD_GRUPOEMPRESA.TRA_TRANSACAOSVC
						CD_OPERADOR.FIS_NFITEMVLSVC = $item("CD_USUARIO", $xlpg$)
						DT_CADASTRO.FIS_NFITEMVLSVC = $datim
						delitem vDsLstValor, 1
					until (vDsLstValor = "")
				endif
				
				if (vDsLstSerial != "")
					if (TP_OPERACAO.TRA_TRANSACAOSVC = "E")
						viParams = ""
						putitem/id viParams, "CD_PRODUTO", CD_PRODUTO.FIS_NFITEMPROSVC
						putitem/id viParams, "DS_LSTSERIAL", vDsLstSerial
						putitem/id viParams, "TP_SITUACAO", 1 ;Ativo
						activate "PRDSVCO021".incluiSerialProduto($xlpg$, viParams, voParams,$xCdErro$, $xCtxerro$)
						if ($procerror) 
							$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
							return(-1)
						elseif ($status < 0)
							$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
							return(-1)
						endif
					endif
					
					repeat
						getitem vDsRegistro, vDsLstSerial, 1
						creocc "FIS_NFITEMSERSVC", -1
						NR_SEQUENCIA.FIS_NFITEMSERSVC = $curocc("FIS_NFITEMSERSVC") ;$item("NR_SEQUENCIA", vDsRegistro)
						retrieve/o "FIS_NFITEMSERSVC"
						if ($status = -7)
							retrieve/x "FIS_NFITEMSERSVC"
						endif
						CD_EMPFAT.FIS_NFITEMSERSVC = $item("CD_EMPFAT", vDsRegistro)
						CD_GRUPOEMPRESA.FIS_NFITEMSERSVC = $item("CD_GRUPOEMPRESA", vDsRegistro)
						DS_SERIAL.FIS_NFITEMSERSVC = $item("DS_SERIAL", vDsRegistro)
						CD_OPERADOR.FIS_NFITEMSERSVC = $item("CD_USUARIO", $xlpg$)
						DT_CADASTRO.FIS_NFITEMSERSVC = $datim
						
						delitem vDsLstSerial, 1
					until (vDsLstSerial = "")
				endif

				if (vDsLstDespesa != "")
					repeat
						getitem vDsRegistro, vDsLstDespesa, 1
						if ($item("CD_DESPESAITEM", vDsRegistro) > 0) & ($item("CD_CCUSTO", vDsRegistro) > 0)
							creocc "FIS_NFITEMDESSVC", -1
							CD_DESPESAITEM.FIS_NFITEMDESSVC = $item("CD_DESPESAITEM", vDsRegistro)
							CD_CCUSTO.FIS_NFITEMDESSVC = $item("CD_CCUSTO", vDsRegistro)
							retrieve/o "FIS_NFITEMDESSVC"
							if ($status = -7)
								retrieve/x "FIS_NFITEMDESSVC"
							endif
							PR_RATEIO.FIS_NFITEMDESSVC = $item("PR_RATEIO", vDsRegistro)
							CD_OPERADOR.FIS_NFITEMDESSVC = $item("CD_USUARIO", $xlpg$)
							DT_CADASTRO.FIS_NFITEMDESSVC = $datim
						endif
						delitem vDsLstDespesa, 1
					until (vDsLstDespesa = "")
				endif
				;thamati 22/03/2010 [Proj. 0130 - Tar. 0991]
				if (vDsLstItemLote != "")
					repeat
						getitem vDsRegistro, vDsLstItemLote, 1						
						if ($inItemLote$)
							creocc "FIS_NFITEMPLOSVC", -1
							NR_SEQUENCIA.FIS_NFITEMPLOSVC= $curocc("FIS_NFITEMPLOSVC") ;$item("NR_SEQUENCIA", vDsRegistro)
							retrieve/o "FIS_NFITEMPLOSVC"
							if ($status = -7)
								retrieve/x "FIS_NFITEMPLOSVC"
							endif
							CD_EMPLOTE.FIS_NFITEMPLOSVC = $item("CD_EMPLOTE", vDsRegistro)
							NR_LOTE.FIS_NFITEMPLOSVC = $item("NR_LOTE", vDsRegistro)
							NR_ITEMLOTE.FIS_NFITEMPLOSVC = $item("NR_ITEMLOTE", vDsRegistro)
							QT_LOTE.FIS_NFITEMPLOSVC = $item("QT_LOTE", vDsRegistro)
							QT_CONE.FIS_NFITEMPLOSVC = $item("QT_CONE", vDsRegistro)
							CD_BARRALOTE.FIS_NFITEMPLOSVC = $item("CD_BARRALOTE", vDsRegistro)
							CD_OPERADOR.FIS_NFITEMPLOSVC = $item("CD_USUARIO", $xlpg$)
							DT_CADASTRO.FIS_NFITEMPLOSVC = $datim
						else	
							;thamati 29/06/2010 [Proj. 0156 - Tar. 0362]
							if ($tinTinturaria$ = 1) 
								creocc "FIS_NFITEMPLOSVC", -1
								NR_SEQUENCIA.FIS_NFITEMPLOSVC= $curocc("FIS_NFITEMPLOSVC") ;$item("NR_SEQUENCIA", vDsRegistro)
								retrieve/o "FIS_NFITEMPLOSVC"
								if ($status = -7)
									retrieve/x "FIS_NFITEMPLOSVC"
								endif
								CD_EMPLOTE.FIS_NFITEMPLOSVC = $item("CD_EMPLOTE", vDsRegistro)
								NR_LOTE.FIS_NFITEMPLOSVC = $item("NR_LOTE", vDsRegistro)
								NR_ITEMLOTE.FIS_NFITEMPLOSVC = $item("NR_ITEMLOTE", vDsRegistro)
								QT_LOTE.FIS_NFITEMPLOSVC = $item("QT_LOTE", vDsRegistro)
								QT_CONE.FIS_NFITEMPLOSVC = $item("QT_CONE", vDsRegistro)
								CD_BARRALOTE.FIS_NFITEMPLOSVC = $item("CD_BARRALOTE", vDsRegistro)
								CD_OPERADOR.FIS_NFITEMPLOSVC = $item("CD_USUARIO", $xlpg$)
								DT_CADASTRO.FIS_NFITEMPLOSVC = $datim
							endif
							;
							vLstLoteInf = ""
							putitem/id vLstLoteInf, "CD_EMPRESA", $item("CD_EMPLOTE", vDsRegistro)
							putitem/id vLstLoteInf, "NR_LOTE", $item("NR_LOTE", vDsRegistro)
							putitem/id vLstLoteInf, "NR_ITEM", $item("NR_ITEMLOTE", vDsRegistro)
							putitem/id vLstLoteInf, "DT_FATURA", DT_FATURA.FIS_NFITEMPROSVC
							putitem/id vLstLoteInf, "CD_EMPRESANF", CD_EMPRESA.FIS_NFITEMPROSVC
							putitem/id vLstLoteInf, "NR_FATURA", NR_FATURA.FIS_NFITEMPROSVC
							putitem/id vLstLoteInf, "NR_ITEMNF", NR_ITEM.FIS_NFITEMPROSVC
							putitem/id vLstLoteInf, "CD_PRODUTONF", CD_PRODUTO.FIS_NFITEMPROSVC
							putitem $LstLoteInfGeral$, -1, vLstLoteInf					
						endif
						delitem vDsLstItemLote, 1
					until (vDsLstItemLote = "")	
				endif
				;

				; --- DIONE |179/0005| 17/12/10
				if (vDsLstItemPrdFin != "")
					repeat
						getitem vDsRegistro, vDsLstItemPrdFin, 1	

						creocc "FIS_NFITEMPPRSVC", -1
						CD_EMPPRDFIN.FIS_NFITEMPPRSVC	= $item("CD_EMPPRDFIN", vDsRegistro)
						NR_PRDFIN.FIS_NFITEMPPRSVC 		= $item("NR_PRDFIN", vDsRegistro)
						retrieve/o "FIS_NFITEMPPRSVC"
						if ($status = -7)
							retrieve/x "FIS_NFITEMPPRSVC"
						endif
						CD_OPERADOR.FIS_NFITEMPPRSVC = $item("CD_USUARIO", $xlpg$)
						DT_CADASTRO.FIS_NFITEMPPRSVC = $datim

						delitem vDsLstItemPrdFin, 1
					until (vDsLstItemPrdFin = "")
				endif
				; ---

			endif				
			delitem piDsLstProduto, 1
		until (piDsLstProduto = "")
		setocc "FIS_NFITEMPROSVC", 1
	endif
 	
	;-- MAD [Proj/Tar.061/503] - 19/12/2008
	;if ($tpModDctoFiscalLocal$ = 27) ; Condição implementada por Deusdete em 20/04/2007, zerar estes valores p/ nfs de complemento ICMS / CIAP
	;; ICJ [PROJ/TAR 175/28] (14/12/2010)	
	;if ($tpModDctoFiscalLocal$ = 85)
	if ($tpModDctoFiscalLocal$ = 85) | ($tpModDctoFiscalLocal$ = 87)
	;;
		VL_TOTALLIQUIDO.FIS_NFITEMSVC = 0
		VL_TOTALDESC.FIS_NFITEMSVC = 0
		QT_FATURADO.FIS_NFITEMSVC = 0
		VL_UNITBRUTO.FIS_NFITEMSVC = 0
		VL_TOTALBRUTO.FIS_NFITEMSVC = 0
		VL_UNITLIQUIDO.FIS_NFITEMSVC = 0 
		VL_UNITDESC.FIS_NFITEMSVC = 0
		VL_TOTALPRODUTO.FIS_NFSVC = 0
		VL_DESCONTO.FIS_NFSVC = 0
		QT_FATURADO.FIS_NFSVC = 0
		VL_TOTALNOTA.FIS_NFSVC = 0
		VL_BASEICMS.FIS_NFSVC = 0
	endif

	VL_TOTALPRODUTO.FIS_NFSVC = VL_TOTALPRODUTO.FIS_NFSVC + VL_TOTALLIQUIDO.FIS_NFITEMSVC
	VL_DESCONTO.FIS_NFSVC = VL_DESCONTO.FIS_NFSVC + VL_TOTALDESC.FIS_NFITEMSVC
	QT_FATURADO.FIS_NFSVC = QT_FATURADO.FIS_NFSVC + QT_FATURADO.FIS_NFITEMSVC

	;-- MAD [Proj/Tar.149/064] - 26/10/2009
	if (CD_DECRETO.FIS_NFITEMSVC != "") & ($inGravaDsDecretoObsNf$ = <TRUE>) & (vInObs = <TRUE>)
		creocc "FIS_DECRETOSVC", -1
		CD_DECRETO.FIS_DECRETOSVC = CD_DECRETO.FIS_NFITEMSVC
		retrieve/o "FIS_DECRETOSVC"
		if ($status = -7)
			retrieve/x "FIS_DECRETOSVC"
		endif
	endif
	;;

	DS_LSTIMPOSTO.FIS_NFITEMSVC = ""
	if ($empty("TMP_NR09SVC") = 0)
		setocc "TMP_NR09SVC", 1
		while ($status >= 0) 
			putlistitems/occ vDsRegistro, "TMP_NR09SVC"
			putitem DS_LSTIMPOSTO.FIS_NFITEMSVC, -1, vDsRegistro
			setocc "TMP_NR09SVC", $curocc("TMP_NR09SVC") + 1
		endwhile	
	endif

	return(0)
end ; geraItemNF

;--------------------
entry geraImpostoItem
;--------------------
	variables
		numeric vCdImposto, vTpProducao, vTpRegime, vCdDecreto, vVlDiferimento
		numeric vVlICMS2, vVlBaseICMS2, vVlICMSSubst2, vVlBaseICMSSubst2, vVlIPI2, vVlCalc, vVlDif
		numeric vVlFator, vVlFatorLiquido, vVlFatorBruto
		numeric vNrOccICMS, vNrOccSubst, vNrOccIPI, vNrSeq, vVlAplicado
		string viParams, voParams, vDsOperacao, vDsRegistro, vDsLstImposto, vCdCST
		boolean vInICMS, vInICMSSubst, vInIPI, vInCOFINS, vInPIS
	endvariables

	if (IN_CALCIMPOSTO.GER_S_OPERACASVC != <TRUE>)
		return(0)
	endif

	VL_IPI.FIS_NFSVC = 0
	VL_BASEICMSSUBS.FIS_NFSVC = 0
	VL_ICMSSUBST.FIS_NFSVC = 0
	VL_BASEICMS.FIS_NFSVC = 0
	VL_ICMS.FIS_NFSVC = 0
	vVlICMS2 = 0 
	vVlBaseICMS2 = 0 
	vVlICMSSubst2 = 0 
	vVlBaseICMSSubst2 = 0
	vVlFatorLiquido = 0
	vVlFatorBruto = 0
	vVlFator = 0

	clear/e "TMP_K02SVC"

	if ($empty("FIS_NFITEMSVC") = 0)
		setocc "FIS_NFITEMSVC", 1
		while ($status >= 0)
			setocc "FIS_NFITEMPROSVC", 1

			;Mendes - PRJ=156/TAR=652 - 03/10/2011
			;vVlFator = (VL_DESPACESSOR.FIS_NFITEMSVC + VL_FRETE.FIS_NFITEMSVC + VL_SEGURO.FIS_NFITEMSVC + VL_TOTALLIQUIDO.FIS_NFITEMSVC) / VL_TOTALLIQUIDO.FIS_NFITEMSVC			
			vVlFatorLiquido = (VL_DESPACESSOR.FIS_NFITEMSVC + VL_FRETE.FIS_NFITEMSVC + VL_SEGURO.FIS_NFITEMSVC + VL_TOTALLIQUIDO.FIS_NFITEMSVC) / VL_TOTALLIQUIDO.FIS_NFITEMSVC			
			vVlFatorBruto = (VL_DESPACESSOR.FIS_NFITEMSVC + VL_FRETE.FIS_NFITEMSVC + VL_SEGURO.FIS_NFITEMSVC + VL_TOTALBRUTO.FIS_NFITEMSVC) / VL_TOTALBRUTO.FIS_NFITEMSVC
			;;;

			if (IN_CALCIMPOSTO.GER_OPERACAOSVC = <TRUE>)				
				if (DS_LSTIMPOSTO.FIS_NFITEMSVC != "")
					vDsLstImposto = DS_LSTIMPOSTO.FIS_NFITEMSVC
					repeat
						getitem vDsRegistro, vDsLstImposto, 1
						vCdImposto = $item("NR_GERAL", vDsRegistro)
						if (vCdImposto > 0)
							creocc "FIS_NFITEMIMPSVC", -1
							CD_IMPOSTO.FIS_NFITEMIMPSVC = vCdImposto
							CD_EMPFAT.FIS_NFITEMIMPSVC = CD_EMPFAT.TRA_TRANSACAOSVC
							CD_GRUPOEMPRESA.FIS_NFITEMIMPSVC = CD_GRUPOEMPRESA.TRA_TRANSACAOSVC
							PR_ALIQUOTA.FIS_NFITEMIMPSVC = $item("PR_ALIQUOTA", vDsRegistro)
							PR_BASECALC.FIS_NFITEMIMPSVC = $item("PR_BASECALC", vDsRegistro)
							PR_REDUBASE.FIS_NFITEMIMPSVC = $item("PR_REDUBASE", vDsRegistro)
							VL_BASECALC.FIS_NFITEMIMPSVC = $item("VL_BASECALC", vDsRegistro)
							VL_ISENTO.FIS_NFITEMIMPSVC = $item("VL_ISENTO", vDsRegistro)
							VL_OUTRO.FIS_NFITEMIMPSVC = $item("VL_OUTRO", vDsRegistro)
							VL_IMPOSTO.FIS_NFITEMIMPSVC = $item("VL_IMPOSTO", vDsRegistro)
							CD_PRODUTO.FIS_NFITEMIMPSVC = ""
							CD_OPERADOR.FIS_NFITEMIMPSVC = $item("CD_USUARIO", $xlpg$)
							DT_CADASTRO.FIS_NFITEMIMPSVC = $datim
							CD_CST.FIS_NFITEMIMPSVC = $item("CD_CST", vDsRegistro) ;-- MAD [Proj/Tar.170/188] - 18/02/2011

							if (CD_IMPOSTO.FIS_NFITEMIMPSVC != 4) ;ISS
								;Mendes - PRJ=156/TAR=652 - 03/10/2011	
								if (CD_IMPOSTO.FIS_NFITEMIMPSVC = 3) ;IPI
									;-- Hugo em 09/12/11 Tarefa 156-689
									;vVlFator = vVlFatorBruto
									vVlFator = 1
									;--
								else
									vVlFator = vVlFatorLiquido
								endif
								;;;
								if (vVlFator > 1) 
									VL_BASECALC.FIS_NFITEMIMPSVC = VL_BASECALC.FIS_NFITEMIMPSVC * vVlFator
									VL_ISENTO.FIS_NFITEMIMPSVC = VL_ISENTO.FIS_NFITEMIMPSVC * vVlFator
									VL_OUTRO.FIS_NFITEMIMPSVC = VL_OUTRO.FIS_NFITEMIMPSVC * vVlFator
									VL_IMPOSTO.FIS_NFITEMIMPSVC = VL_IMPOSTO.FIS_NFITEMIMPSVC * vVlFator
								endif 
							endif
			
							if (CD_IMPOSTO.FIS_NFITEMIMPSVC = 1) ;ICMS
								VL_BASEICMS.FIS_NFSVC = VL_BASEICMS.FIS_NFSVC + VL_BASECALC.FIS_NFITEMIMPSVC
								VL_ICMS.FIS_NFSVC = VL_ICMS.FIS_NFSVC + VL_IMPOSTO.FIS_NFITEMIMPSVC
			
								if (VL_BASECALC.FIS_NFITEMIMPSVC > 0)
									creocc "TMP_CSTALIQSVC", -1
									CD_CST.TMP_CSTALIQSVC/init = CD_CST.FIS_NFITEMSVC
									PR_ALIQUOTA.TMP_CSTALIQSVC/init = PR_ALIQUOTA.FIS_NFITEMIMPSVC
									retrieve/o "TMP_CSTALIQSVC"
									if ($status = -7)
										retrieve/x "TMP_CSTALIQSVC"
									endif
									VL_BASECALC.TMP_CSTALIQSVC/init = VL_BASECALC.TMP_CSTALIQSVC + VL_BASECALC.FIS_NFITEMIMPSVC
									VL_IMPOSTO.TMP_CSTALIQSVC/init = VL_IMPOSTO.TMP_CSTALIQSVC + VL_IMPOSTO.FIS_NFITEMIMPSVC
								endif
				
								if (CD_DECRETO.FIS_NFITEMSVC = 6142)
									vVlDiferimento = VL_BASECALC.FIS_NFITEMIMPSVC * PR_ALIQUOTA.FIS_NFITEMIMPSVC / 100
									vVlDiferimento = vVlDiferimento[round, 6]
									$vlICMSDiferido$ = $vlICMSDiferido$ + vVlDiferimento
								endif
								creocc "TMP_K02SVC", -1
								NR_CHAVE01.TMP_K02SVC/init = CD_IMPOSTO.FIS_NFITEMIMPSVC
								NR_CHAVE02.TMP_K02SVC/init = $curocc("FIS_NFITEMSVC")
								VL_GERAL.TMP_K02SVC/init = VL_IMPOSTO.FIS_NFITEMIMPSVC
								PR_REDUBASE.TMP_K02SVC/init = PR_REDUBASE.FIS_NFITEMIMPSVC ;-- MAD [Proj/Tar.170/377] - 21/10/2011
							endif

							if (CD_IMPOSTO.FIS_NFITEMIMPSVC = 2) ;ICMSSubst
								VL_BASEICMSSUBS.FIS_NFSVC = VL_BASEICMSSUBS.FIS_NFSVC + VL_BASECALC.FIS_NFITEMIMPSVC
								VL_ICMSSUBST.FIS_NFSVC = VL_ICMSSUBST.FIS_NFSVC + VL_IMPOSTO.FIS_NFITEMIMPSVC
								creocc "TMP_K02SVC", -1
								NR_CHAVE01.TMP_K02SVC/init = CD_IMPOSTO.FIS_NFITEMIMPSVC
								NR_CHAVE02.TMP_K02SVC/init = $curocc("FIS_NFITEMSVC")
								VL_GERAL.TMP_K02SVC/init = VL_IMPOSTO.FIS_NFITEMIMPSVC
							endif
		
							if (CD_IMPOSTO.FIS_NFITEMIMPSVC = 3) ;IPI
								VL_IPI.FIS_NFSVC = VL_IPI.FIS_NFSVC + VL_IMPOSTO.FIS_NFITEMIMPSVC
								creocc "TMP_K02SVC", -1
								NR_CHAVE01.TMP_K02SVC/init = CD_IMPOSTO.FIS_NFITEMIMPSVC
								NR_CHAVE02.TMP_K02SVC/init = $curocc("FIS_NFITEMSVC")
								VL_GERAL.TMP_K02SVC/init = VL_IMPOSTO.FIS_NFITEMIMPSVC
							endif
			
							;---Elia Proj. 061/630 24/06/09
							vCdCST = CD_CST.FIS_NFITEMSVC[2 : 2]
							if ((vCdCST = "10") | (vCdCST = "30") | (vCdCST = "60") | (vCdCST = "70")) & ($inSubstituicao$ = <FALSE>)
								$inSubstituicao$ = <TRUE>
							endif
						endif
						delitem vDsLstImposto, 1
					until (vDsLstImposto = "")
				endif
			else
				viParams = ""
				putitem/id viParams, "CD_EMPRESA", CD_EMPFAT.TRA_TRANSACAOSVC
				putitem/id viParams, "UF_DESTINO", DS_SIGLAESTADO.TRA_REMDESSVC
				putitem/id viParams, "TP_ORIGEMEMISSAO", TP_ORIGEMEMISSAO.TRA_TRANSACAOSVC
				if (CD_ESPECIE.FIS_NFITEMSVC = $cdEspecieServico$)
					putitem/id viParams, "CD_SERVICO", CD_PRODUTO.FIS_NFITEMSVC
				elseif (TP_MODALIDADE.GER_S_OPERACASVC = "A")
					putitem/id viParams, "CD_MPTER", CD_PRODUTO.FIS_NFITEMSVC
				else
					putitem/id viParams, "CD_PRODUTO", CD_PRODUTO.FIS_NFITEMPROSVC
				endif
				putitem/id viParams, "CD_OPERACAO", CD_OPERACAO.GER_S_OPERACASVC
				putitem/id viParams, "CD_PESSOA", CD_PESSOA.TRA_REMDESSVC
				putitem/id viParams, "CD_CST", CD_CST.FIS_NFITEMSVC
				putitem/id viParams, "VL_TOTALBRUTO", VL_TOTALBRUTO.FIS_NFITEMSVC
				putitem/id viParams, "VL_TOTALLIQUIDO", VL_TOTALLIQUIDO.FIS_NFITEMSVC
				putitem/id viParams, "TP_MODDCTOFISCAL", TP_MODDCTOFISCAL.FIS_NFSVC
				;-- MAD [Proj/Tar.170/035] - 17/08/2010
				;putitem/id viParams,"NR_CODIGOFISCAL", NR_CODIGOFISCAL.PES_CLIENTESVC ;---Elia Proj. 61/196 28/11/07
				putitem/id viParams, "NR_CODIGOFISCAL", $nrCodFiscal$
				;;
				putitem/id viParams, "DT_INIVIGENCIA", DT_EMISSAO.FIS_NFSVC ;--> VSOUZA PRJ/TAR 192/013 03/11/2011
				activate "FISSVCO015".calculaImpostoItem($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
				if ($procerror) 
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					return(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					return(-1)
				endif 
		
				vDsLstImposto = $item("DS_LSTIMPOSTO", voParams)
				vCdCST = $item("CD_CST", voParams)
				vCdDecreto = $item("CD_DECRETO", voParams)
		
				if (vDsLstImposto != "")
					repeat
						getitem vDsRegistro, vDsLstImposto, 1
			
						creocc "FIS_NFITEMIMPSVC", -1
						getlistitems/occ vDsRegistro, "FIS_NFITEMIMPSVC"
						CD_EMPFAT.FIS_NFITEMIMPSVC = CD_EMPFAT.TRA_TRANSACAOSVC
						CD_GRUPOEMPRESA.FIS_NFITEMIMPSVC = CD_GRUPOEMPRESA.TRA_TRANSACAOSVC
						CD_OPERADOR.FIS_NFITEMIMPSVC = $item("CD_USUARIO", $xlpg$)
						DT_CADASTRO.FIS_NFITEMIMPSVC = $datim

						if (CD_IMPOSTO.FIS_NFITEMIMPSVC != 4) ;ISS
							;-- Hugo em 09/12/11 Tarefa 156-689
							if (CD_IMPOSTO.FIS_NFITEMIMPSVC = 3) ;IPI
								vVlFator = 1
							else
								vVlFator = vVlFatorLiquido
							endif
							;--
							
							if (vVlFator > 1) 
								VL_BASECALC.FIS_NFITEMIMPSVC = VL_BASECALC.FIS_NFITEMIMPSVC * vVlFator
								VL_ISENTO.FIS_NFITEMIMPSVC = VL_ISENTO.FIS_NFITEMIMPSVC * vVlFator
								VL_OUTRO.FIS_NFITEMIMPSVC = VL_OUTRO.FIS_NFITEMIMPSVC * vVlFator
								VL_IMPOSTO.FIS_NFITEMIMPSVC = VL_IMPOSTO.FIS_NFITEMIMPSVC * vVlFator
							endif 
						endif
		
						if (CD_IMPOSTO.FIS_NFITEMIMPSVC = 1) ;ICMS
							if (VL_BASECALC.FIS_NFITEMIMPSVC > 0)
								creocc "TMP_CSTALIQSVC", -1
								CD_CST.TMP_CSTALIQSVC/init = vCdCST
								PR_ALIQUOTA.TMP_CSTALIQSVC/init = PR_ALIQUOTA.FIS_NFITEMIMPSVC
								retrieve/o "TMP_CSTALIQSVC"
								if ($status = -7)
									retrieve/x "TMP_CSTALIQSVC"
								endif
								VL_BASECALC.TMP_CSTALIQSVC/init = VL_BASECALC.TMP_CSTALIQSVC + VL_BASECALC.FIS_NFITEMIMPSVC
								VL_IMPOSTO.TMP_CSTALIQSVC/init = VL_IMPOSTO.TMP_CSTALIQSVC + VL_IMPOSTO.FIS_NFITEMIMPSVC
							endif
							VL_BASEICMS.FIS_NFSVC = VL_BASEICMS.FIS_NFSVC + VL_BASECALC.FIS_NFITEMIMPSVC
							VL_ICMS.FIS_NFSVC = VL_ICMS.FIS_NFSVC + VL_IMPOSTO.FIS_NFITEMIMPSVC
							if (vCdDecreto = 6142)
								vVlDiferimento = VL_BASECALC.FIS_NFITEMIMPSVC * PR_ALIQUOTA.FIS_NFITEMIMPSVC / 100
								vVlDiferimento = vVlDiferimento[round, 6]
								$vlICMSDiferido$ = $vlICMSDiferido$ + vVlDiferimento
							endif
							creocc "TMP_K02SVC", -1
							NR_CHAVE01.TMP_K02SVC/init = CD_IMPOSTO.FIS_NFITEMIMPSVC
							NR_CHAVE02.TMP_K02SVC/init = $curocc("FIS_NFITEMSVC")
							VL_GERAL.TMP_K02SVC/init = VL_IMPOSTO.FIS_NFITEMIMPSVC
							PR_REDUBASE.TMP_K02SVC/init = PR_REDUBASE.FIS_NFITEMIMPSVC ;-- MAD [Proj/Tar.170/377] - 21/10/2011
						endif
		
						if (CD_IMPOSTO.FIS_NFITEMIMPSVC = 2) ;ICMSSubst
							VL_BASEICMSSUBS.FIS_NFSVC = VL_BASEICMSSUBS.FIS_NFSVC + VL_BASECALC.FIS_NFITEMIMPSVC
							VL_ICMSSUBST.FIS_NFSVC = VL_ICMSSUBST.FIS_NFSVC + VL_IMPOSTO.FIS_NFITEMIMPSVC
							creocc "TMP_K02SVC", -1
							NR_CHAVE01.TMP_K02SVC/init = CD_IMPOSTO.FIS_NFITEMIMPSVC
							NR_CHAVE02.TMP_K02SVC/init = $curocc("FIS_NFITEMSVC")
							VL_GERAL.TMP_K02SVC/init = VL_IMPOSTO.FIS_NFITEMIMPSVC
						endif
		
						if (CD_IMPOSTO.FIS_NFITEMIMPSVC = 3) ;IPI
							VL_IPI.FIS_NFSVC = VL_IPI.FIS_NFSVC + VL_IMPOSTO.FIS_NFITEMIMPSVC
							creocc "TMP_K02SVC", -1
							NR_CHAVE01.TMP_K02SVC/init = CD_IMPOSTO.FIS_NFITEMIMPSVC
							NR_CHAVE02.TMP_K02SVC/init = $curocc("FIS_NFITEMSVC")
							VL_GERAL.TMP_K02SVC/init = VL_IMPOSTO.FIS_NFITEMIMPSVC
						endif
				
						delitem vDsLstImposto, 1
					until (vDsLstImposto = "")
				endif
			endif

			if ($empty("FIS_NFITEMIMPSVC") = 0) & ($inNFe$ = <TRUE>)
				setocc "FIS_NFITEMIMPSVC", 1
				while ($status >= 0)
					if (CD_IMPOSTO.FIS_NFITEMIMPSVC = 1) 
						if ($inArredondaTruncaIcms$ = <TRUE>)
							VL_BASECALC.FIS_NFITEMIMPSVC = VL_BASECALC.FIS_NFITEMIMPSVC[round, 2]
							VL_IMPOSTO.FIS_NFITEMIMPSVC = VL_IMPOSTO.FIS_NFITEMIMPSVC[round, 2]
						else
							vVlCalc = VL_BASECALC.FIS_NFITEMIMPSVC * 100
							vVlCalc = vVlCalc[trunc]
							VL_BASECALC.FIS_NFITEMIMPSVC = vVlCalc / 100
							vVlCalc = VL_IMPOSTO.FIS_NFITEMIMPSVC * 100
							vVlCalc = vVlCalc[trunc]
							VL_IMPOSTO.FIS_NFITEMIMPSVC = vVlCalc / 100
						endif
						vVlBaseICMS2 = vVlBaseICMS2 + VL_BASECALC.FIS_NFITEMIMPSVC
						vVlICMS2 = vVlICMS2 + VL_IMPOSTO.FIS_NFITEMIMPSVC
					endif
					if (CD_IMPOSTO.FIS_NFITEMIMPSVC = 2) 
						if ($inArredondaTruncaIcms$ = <TRUE>)
							VL_BASECALC.FIS_NFITEMIMPSVC = VL_BASECALC.FIS_NFITEMIMPSVC[round, 2]
							VL_IMPOSTO.FIS_NFITEMIMPSVC = VL_IMPOSTO.FIS_NFITEMIMPSVC[round, 2]
						else
							vVlCalc = VL_BASECALC.FIS_NFITEMIMPSVC * 100
							vVlCalc = vVlCalc[trunc]
							VL_BASECALC.FIS_NFITEMIMPSVC = vVlCalc / 100
							vVlCalc = VL_IMPOSTO.FIS_NFITEMIMPSVC * 100
							vVlCalc = vVlCalc[trunc]
							VL_IMPOSTO.FIS_NFITEMIMPSVC = vVlCalc / 100
						endif
						vVlBaseICMSSubst2 = vVlBaseICMSSubst2 + VL_BASECALC.FIS_NFITEMIMPSVC
						vVlICMSSubst2 = vVlICMSSubst2 + VL_IMPOSTO.FIS_NFITEMIMPSVC
					endif
					if (CD_IMPOSTO.FIS_NFITEMIMPSVC = 3) 
						if ($inArredondaTruncaIcms$ = <TRUE>)
							VL_BASECALC.FIS_NFITEMIMPSVC = VL_BASECALC.FIS_NFITEMIMPSVC[round, 2]
							VL_IMPOSTO.FIS_NFITEMIMPSVC = VL_IMPOSTO.FIS_NFITEMIMPSVC[round, 2]
						else
							vVlCalc = VL_BASECALC.FIS_NFITEMIMPSVC * 100
							vVlCalc = vVlCalc[trunc]
							VL_BASECALC.FIS_NFITEMIMPSVC = vVlCalc / 100
							vVlCalc = VL_IMPOSTO.FIS_NFITEMIMPSVC * 100
							vVlCalc = vVlCalc[trunc]
							VL_IMPOSTO.FIS_NFITEMIMPSVC = vVlCalc / 100
						endif
						vVlIPI2 = vVlIPI2 + VL_IMPOSTO.FIS_NFITEMIMPSVC
					endif

					setocc "FIS_NFITEMIMPSVC", $curocc("FIS_NFITEMIMPSVC") + 1
				endwhile
			endif

			if ($inGravaDsDecretoObsNf$ = <TRUE>) & (CD_DECRETO.FIS_NFITEMSVC > 0)
				creocc "FIS_DECRETOSVC", -1
				CD_DECRETO.FIS_DECRETOSVC = CD_DECRETO.FIS_NFITEMSVC
				retrieve/o "FIS_DECRETOSVC"
				if ($status = -7)
					retrieve/x "FIS_DECRETOSVC"
				endif
			endif

			setocc "FIS_NFITEMSVC", $curocc("FIS_NFITEMSVC") + 1
		endwhile

		if ($inNFe$ = <TRUE>)
			;-- MAD [Proj/Tar.170/377] - 21/10/2011
			;sort/e "TMP_K02SVC", "NR_CHAVE01.TMP_K02SVC:a, VL_GERAL.TMP_K02SVC:d"
			sort/e "TMP_K02SVC", "NR_CHAVE01.TMP_K02SVC:a, PR_REDUBASE.TMP_K02SVC:d, VL_GERAL.TMP_K02SVC:d"
			;;
			vNrOccICMS = 0
			vNrOccSubst = 0
			vNrOccIPI = 0
			
			setocc "TMP_K02SVC", 1
			while ($status >= 0)
				if (NR_CHAVE01.TMP_K02SVC = 1) & (vNrOccICMS = 0)
					vNrOccICMS = $curocc("TMP_K02SVC")
				endif
				if (NR_CHAVE01.TMP_K02SVC = 2) & (vNrOccSubst = 0)
					vNrOccSubst = $curocc("TMP_K02SVC")
				endif
				if (NR_CHAVE01.TMP_K02SVC = 3) & (vNrOccIPI = 0)
					vNrOccIPI = $curocc("TMP_K02SVC")
				endif				
				setocc "TMP_K02SVC", $curocc("TMP_K02SVC") + 1
			endwhile
	
			;-- MAD [Proj/Tar.170/326] - 06/07/2011
			;vVlDif = VL_BASEICMS.FIS_NFSVC - vVlBaseICMS2
			vVlDif = VL_BASEICMS.FIS_NFSVC[round,2] - vVlBaseICMS2
			;;
			vNrSeq = 0
			while (vVlDif != 0)
				if (vVlDif > 0)
					if (vVlDif > 0.9)
						vVlAplicado = 0.9
						vVlDif = vVlDif - 0.9
					else
						vVlAplicado = vVlDif
						vVlDif = 0
					endif
				else
					if (vVlDif < -0.9)
						vVlAplicado = -0.9
						vVlDif = vVlDif + 0.9
					else
						vVlAplicado = vVlDif
						vVlDif = 0
					endif
				endif
				setocc "TMP_K02SVC", (vNrOccICMS + vNrSeq)
				if ($status >= 0)
					setocc "FIS_NFITEMSVC", NR_CHAVE02.TMP_K02SVC
					creocc "FIS_NFITEMIMPSVC", -1
					CD_IMPOSTO.FIS_NFITEMIMPSVC/init = 1
					retrieve/o "FIS_NFITEMIMPSVC"
					if ($status = 4)
						VL_BASECALC.FIS_NFITEMIMPSVC = VL_BASECALC.FIS_NFITEMIMPSVC + vVlAplicado
					else
						discard "FIS_NFITEMIMPSVC"
					endif
				endif
				vNrSeq = vNrSeq + 1
			endwhile

			;-- MAD [Proj/Tar.170/326] - 06/07/2011
			;vVlDif = VL_ICMS.FIS_NFSVC - vVlICMS2
			vVlDif = VL_ICMS.FIS_NFSVC[round,2] - vVlICMS2
			;;
			vNrSeq = 0
			while (vVlDif != 0)
				if (vVlDif > 0)
					if (vVlDif > 0.9)
						vVlAplicado = 0.9
						vVlDif = vVlDif - 0.9
					else
						vVlAplicado = vVlDif
						vVlDif = 0
					endif
				else
					if (vVlDif < -0.9)
						vVlAplicado = -0.9
						vVlDif = vVlDif + 0.9
					else
						vVlAplicado = vVlDif
						vVlDif = 0
					endif
				endif
				setocc "TMP_K02SVC", (vNrOccICMS + vNrSeq)
				if ($status >= 0)
					setocc "FIS_NFITEMSVC", NR_CHAVE02.TMP_K02SVC
					creocc "FIS_NFITEMIMPSVC", -1
					CD_IMPOSTO.FIS_NFITEMIMPSVC/init = 1
					retrieve/o "FIS_NFITEMIMPSVC"
					if ($status = 4)
						VL_IMPOSTO.FIS_NFITEMIMPSVC = VL_IMPOSTO.FIS_NFITEMIMPSVC + vVlAplicado
					else
						discard "FIS_NFITEMIMPSVC"
					endif
				endif
				vNrSeq = vNrSeq + 1
			endwhile

			;-- MAD [Proj/Tar.170/326] - 06/07/2011
			;vVlDif = VL_BASEICMSSUBS.FIS_NFSVC - vVlBaseICMSSubst2
			vVlDif = VL_BASEICMSSUBS.FIS_NFSVC[round,2] - vVlBaseICMSSubst2
			;;
			vNrSeq = 0
			while (vVlDif != 0)
				if (vVlDif > 0)
					if (vVlDif > 0.9)
						vVlAplicado = 0.9
						vVlDif = vVlDif - 0.9
					else
						vVlAplicado = vVlDif
						vVlDif = 0
					endif
				else
					if (vVlDif < -0.9)
						vVlAplicado = -0.9
						vVlDif = vVlDif + 0.9
					else
						vVlAplicado = vVlDif
						vVlDif = 0
					endif
				endif
				setocc "TMP_K02SVC", (vNrOccSubst + vNrSeq)
				if ($status >= 0)
					setocc "FIS_NFITEMSVC", NR_CHAVE02.TMP_K02SVC
					creocc "FIS_NFITEMIMPSVC", -1
					CD_IMPOSTO.FIS_NFITEMIMPSVC/init = 2
					retrieve/o "FIS_NFITEMIMPSVC"
					if ($status = 4)
						VL_BASECALC.FIS_NFITEMIMPSVC = VL_BASECALC.FIS_NFITEMIMPSVC + vVlAplicado
					else
						discard "FIS_NFITEMIMPSVC"
					endif
				endif
				vNrSeq = vNrSeq + 1
			endwhile

			;-- MAD [Proj/Tar.170/326] - 06/07/2011
			;vVlDif = VL_ICMSSUBST.FIS_NFSVC - vVlICMSSubst2
			vVlDif = VL_ICMSSUBST.FIS_NFSVC[round,2] - vVlICMSSubst2
			;;
			vNrSeq = 0
			while (vVlDif != 0)
				if (vVlDif > 0)
					if (vVlDif > 0.9)
						vVlAplicado = 0.9
						vVlDif = vVlDif - 0.9
					else
						vVlAplicado = vVlDif
						vVlDif = 0
					endif
				else
					if (vVlDif < -0.9)
						vVlAplicado = -0.9
						vVlDif = vVlDif + 0.9
					else
						vVlAplicado = vVlDif
						vVlDif = 0
					endif
				endif
				setocc "TMP_K02SVC", (vNrOccSubst + vNrSeq)
				if ($status >= 0)
					setocc "FIS_NFITEMSVC", NR_CHAVE02.TMP_K02SVC
					creocc "FIS_NFITEMIMPSVC", -1
					CD_IMPOSTO.FIS_NFITEMIMPSVC/init = 2
					retrieve/o "FIS_NFITEMIMPSVC"
					if ($status = 4)
						VL_IMPOSTO.FIS_NFITEMIMPSVC = VL_IMPOSTO.FIS_NFITEMIMPSVC + vVlAplicado
					else
						discard "FIS_NFITEMIMPSVC"
					endif
				endif
				vNrSeq = vNrSeq + 1
			endwhile

			;-- MAD [Proj/Tar.170/326] - 06/07/2011
			;vVlDif = VL_IPI.FIS_NFSVC - vVlIPI2
			vVlDif = VL_IPI.FIS_NFSVC[round,2] - vVlIPI2
			;;
			vNrSeq = 0
			while (vVlDif != 0)
				if (vVlDif > 0)
					if (vVlDif > 0.9)
						vVlAplicado = 0.9
						vVlDif = vVlDif - 0.9
					else
						vVlAplicado = vVlDif
						vVlDif = 0
					endif
				else
					if (vVlDif < -0.9)
						vVlAplicado = -0.9
						vVlDif = vVlDif + 0.9
					else
						vVlAplicado = vVlDif
						vVlDif = 0
					endif
				endif
				setocc "TMP_K02SVC", (vNrOccIPI + vNrSeq)
				if ($status >= 0)
					setocc "FIS_NFITEMSVC", NR_CHAVE02.TMP_K02SVC
					creocc "FIS_NFITEMIMPSVC", -1
					CD_IMPOSTO.FIS_NFITEMIMPSVC/init = 3
					retrieve/o "FIS_NFITEMIMPSVC"
					if ($status = 4)
						VL_IMPOSTO.FIS_NFITEMIMPSVC = VL_IMPOSTO.FIS_NFITEMIMPSVC + vVlAplicado
					else
						discard "FIS_NFITEMIMPSVC"
					endif
				endif
				vNrSeq = vNrSeq + 1
			endwhile
		endif
	endif
		
	return(0)
end

;----------------------------------------
entry geraTransport
;----------------------------------------

	VL_DESPACESSOR.FIS_NFSVC = VL_DESPACESSOR.TRA_TRANSACAOSVC
	VL_FRETE.FIS_NFSVC = VL_FRETE.TRA_TRANSACAOSVC
	VL_SEGURO.FIS_NFSVC = VL_SEGURO.TRA_TRANSACAOSVC

	if ($empty("TRA_TRANSPORTSVC") = 0)
		if (CD_TRANSPORT.TRA_TRANSPORTSVC = 0)
			return(0)
		endif

		if (TP_FRETE.TRA_TRANSPORTSVC = "")
			return(0)
		endif

		setocc "TRA_TRANSPORTSVC", 1
		while ($status >= 0)			
			creocc "FIS_NFTRANSPSVC", -1			
			CD_TRANSPORT.FIS_NFTRANSPSVC = CD_TRANSPORT.TRA_TRANSPORTSVC
			NM_TRANSPORT.FIS_NFTRANSPSVC = NM_TRANSPORT.TRA_TRANSPORTSVC
			CD_EMPFAT.FIS_NFTRANSPSVC = CD_EMPFAT.TRA_TRANSACAOSVC
			CD_GRUPOEMPRESA.FIS_NFTRANSPSVC = CD_GRUPOEMPRESA.TRA_TRANSACAOSVC
			TP_FRETE.FIS_NFTRANSPSVC = TP_FRETE.TRA_TRANSPORTSVC
			QT_VOLUME.FIS_NFTRANSPSVC = QT_VOLUME.TRA_TRANSPORTSVC
			CD_TRANSREDESPAC.FIS_NFTRANSPSVC = CD_TRANSREDESPAC.TRA_TRANSPORTSVC
			NM_TRANSREDESPAC.FIS_NFTRANSPSVC = NM_TRANSREDESPAC.TRA_TRANSPORTSVC
			NR_PLACA.FIS_NFTRANSPSVC = NR_PLACA.TRA_TRANSPORTSVC
			QT_PESOBRUTO.FIS_NFTRANSPSVC = QT_PESOBRUTO.TRA_TRANSPORTSVC
			QT_PESOLIQUIDO.FIS_NFTRANSPSVC = QT_PESOLIQUIDO.TRA_TRANSPORTSVC
			VL_FRETE.FIS_NFTRANSPSVC = VL_FRETE.TRA_TRANSPORTSVC
			DS_ESPECIE.FIS_NFTRANSPSVC = DS_ESPECIE.TRA_TRANSPORTSVC
			DS_MARCA.FIS_NFTRANSPSVC = DS_MARCA.TRA_TRANSPORTSVC
			NR_PLACA.FIS_NFTRANSPSVC = NR_PLACA.TRA_TRANSPORTSVC
			DS_UFPLACA.FIS_NFTRANSPSVC = DS_UFPLACA.TRA_TRANSPORTSVC
			NM_LOGRADOURO.FIS_NFTRANSPSVC = NM_LOGRADOURO.TRA_TRANSPORTSVC
			DS_TPLOGRADOURO.FIS_NFTRANSPSVC = DS_TPLOGRADOURO.TRA_TRANSPORTSVC
			NR_LOGRADOURO.FIS_NFTRANSPSVC = NR_LOGRADOURO.TRA_TRANSPORTSVC
			NR_CAIXAPOSTAL.FIS_NFTRANSPSVC = NR_CAIXAPOSTAL.TRA_TRANSPORTSVC
			NM_BAIRRO.FIS_NFTRANSPSVC = NM_BAIRRO.TRA_TRANSPORTSVC
			CD_CEP.FIS_NFTRANSPSVC = CD_CEP.TRA_TRANSPORTSVC
			NM_MUNICIPIO.FIS_NFTRANSPSVC = NM_MUNICIPIO.TRA_TRANSPORTSVC
			DS_SIGLAESTADO.FIS_NFTRANSPSVC = DS_SIGLAESTADO.TRA_TRANSPORTSVC
			NR_RGINSCREST.FIS_NFTRANSPSVC = NR_RGINSCREST.TRA_TRANSPORTSVC
			NR_CPFCNPJ.FIS_NFTRANSPSVC = NR_CPFCNPJ.TRA_TRANSPORTSVC
			CD_OPERADOR.FIS_NFTRANSPSVC = $item("CD_USUARIO", $xlpg$)
			DT_CADASTRO.FIS_NFTRANSPSVC = $datim
			setocc "TRA_TRANSPORTSVC", $curocc("TRA_TRANSPORTSVC") + 1
		endwhile
	endif

	return(0)

end ; entry geraTransport

; Marcio / Elia / Virginia Proj. 175/110 - 170/239 - 07/04/2011
;----------------------------------------
entry rateiaValorCapa
;----------------------------------------
	variables
		numeric vVlCalc, vVlRestoDespAcessor, vVlRestoFrete, vVlRestoSeguro, vNrOccItem, vVlMaiorItem
	endvariables

	if ($tpLancamentoFrete$ != 2)
		return(0)
	endif

	vVlRestoDespAcessor = VL_DESPACESSOR.FIS_NFSVC
	vVlRestoFrete = VL_FRETE.FIS_NFSVC
	vVlRestoSeguro = VL_SEGURO.FIS_NFSVC

	if ($empty("FIS_NFITEMSVC") = 0)
		setocc "FIS_NFITEMSVC", 1
		while ($status >= 0)
			vVlCalc = (VL_TOTALLIQUIDO.FIS_NFITEMSVC / VL_TOTALPRODUTO.FIS_NFSVC) * VL_DESPACESSOR.FIS_NFSVC
			VL_DESPACESSOR.FIS_NFITEMSVC = vVlCalc[round, 2]
			vVlCalc = (VL_TOTALLIQUIDO.FIS_NFITEMSVC / VL_TOTALPRODUTO.FIS_NFSVC) * VL_FRETE.FIS_NFSVC
			VL_FRETE.FIS_NFITEMSVC = vVlCalc[round, 2]
			vVlCalc = (VL_TOTALLIQUIDO.FIS_NFITEMSVC / VL_TOTALPRODUTO.FIS_NFSVC) * VL_SEGURO.FIS_NFSVC
			VL_SEGURO.FIS_NFITEMSVC = vVlCalc[round, 2]
			vVlRestoDespAcessor = vVlRestoDespAcessor - VL_DESPACESSOR.FIS_NFITEMSVC
			vVlRestoFrete = vVlRestoFrete - VL_FRETE.FIS_NFITEMSVC
			vVlRestoSeguro = vVlRestoSeguro - VL_SEGURO.FIS_NFITEMSVC
			if (VL_TOTALLIQUIDO.FIS_NFITEMSVC > vVlMaiorItem)
				vVlMaiorItem = VL_TOTALLIQUIDO.FIS_NFITEMSVC
				vNrOccItem = $curocc("FIS_NFITEMSVC")
			endif
			setocc "FIS_NFITEMSVC", $curocc("FIS_NFITEMSVC") + 1
		endwhile
	endif

	if (vVlRestoDespAcessor != 0)
		setocc "FIS_NFITEMSVC", vNrOccItem
		VL_DESPACESSOR.FIS_NFITEMSVC = VL_DESPACESSOR.FIS_NFITEMSVC + vVlRestoDespAcessor
	endif
	if (vVlRestoFrete != 0)
		setocc "FIS_NFITEMSVC", vNrOccItem
		VL_FRETE.FIS_NFITEMSVC = VL_FRETE.FIS_NFITEMSVC + vVlRestoFrete
	endif
	if (vVlRestoSeguro != 0)
		setocc "FIS_NFITEMSVC", vNrOccItem
		VL_SEGURO.FIS_NFITEMSVC = VL_SEGURO.FIS_NFITEMSVC + vVlRestoSeguro
	endif

	return(0)
end


;----------------------------------------
entry geraParcela
;----------------------------------------
	variables
		string viParams, voParams
		numeric vNrParcela, vVlResto, vVlParcela, vVlCalc, vVlFinanceiro, vPrFinanceiro, vVlNota
		date vDtSistema
	endvariables
	
	vDtSistema = $item("DT_SISTEMA", $xlpg$)

	;-- MAD [Proj/Tar.156/015] - 28/09/2009
	if (IN_FINANCEIRO.GER_S_OPERACASVC != <TRUE>) & (IN_FINANCEIRO.GER_OPERACAOSVC != <TRUE>)
		return(0)
	endif
	;;
	
	;-------------------------------------------------------------------------------
	;Fazer com que o parcelamento seja de acordo com o valor gerado para o financeiro
	;se o valor do financeiro for diferente do valor total da transacao
	;assume o valor do financeiro.
	;Por Hugo em 27/11/2009 Tarefa: 102-745
	viParams = ""
	putitem/id viParams, "CD_EMPRESA", CD_EMPRESA.TRA_TRANSACAOSVC
	putitem/id viParams, "NR_TRANSACAO", NR_TRANSACAO.TRA_TRANSACAOSVC
	putitem/id viParams, "DT_TRANSACAO", DT_TRANSACAO.TRA_TRANSACAOSVC
	activate "GERSVCO058".buscaValorFinanceiroTransacao($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		return(-1)
	endif
	
	vVlFinanceiro = $item("VL_FINANCEIRO", voParams)
	
	if (vVlFinanceiro != VL_TOTAL.TRA_TRANSACAOSVC)
		vPrFinanceiro = vVlFinanceiro / VL_TOTAL.TRA_TRANSACAOSVC * 100
		vVlNota = VL_TOTALNOTA.FIS_NFSVC * vPrFinanceiro / 100
	else
		vVlNota = VL_TOTALNOTA.FIS_NFSVC
	endif
	
	vVlResto = vVlNota
	;-------------------------------------------------------------------------------
	
	if ($empty("TRA_VENCIMENTSVC") = 0)
		setocc "TRA_VENCIMENTSVC", 1
		while ($status >= 0)
			vNrParcela = vNrParcela + 1
			
			;-------------------------------------------------------------------------------
			;Por Hugo em 27/11/2009 Tarefa: 102-745
;			vVlCalc = (VL_PARCELA.TRA_VENCIMENTSVC / VL_TOTAL.TRA_TRANSACAOSVC) * VL_TOTALNOTA.FIS_NFSVC
			vVlCalc = (VL_PARCELA.TRA_VENCIMENTSVC / vVlFinanceiro) * vVlNota
			;-------------------------------------------------------------------------------
			vVlParcela = vVlCalc[round, 2]
			vVlResto = vVlResto - vVlParcela
			
			creocc "FIS_NFVENCTOSVC",-1
			NR_PARCELA.FIS_NFVENCTOSVC = vNrParcela
			CD_EMPFAT.FIS_NFVENCTOSVC = CD_EMPFAT.TRA_TRANSACAOSVC
			CD_GRUPOEMPRESA.FIS_NFVENCTOSVC = CD_GRUPOEMPRESA.TRA_TRANSACAOSVC
			CD_OPERADOR.FIS_NFVENCTOSVC = $item("CD_USUARIO", $xlpg$)
			DT_CADASTRO.FIS_NFVENCTOSVC = $datim
			VL_PARCELA.FIS_NFVENCTOSVC = vVlParcela
			DT_VENCIMENTO.FIS_NFVENCTOSVC = DT_VENCIMENTO.TRA_VENCIMENTSVC
			if (DT_VENCIMENTO.FIS_NFVENCTOSVC < vDtSistema)
				DT_VENCIMENTO.FIS_NFVENCTOSVC = vDtSistema
			endif
			TP_FORMAPGTO.FIS_NFVENCTOSVC = TP_FORMAPGTO.TRA_VENCIMENTSVC
			
			setocc "TRA_VENCIMENTSVC", $curocc("TRA_VENCIMENTSVC") + 1
		endwhile

		if (vVlResto != 0)
			setocc "FIS_NFVENCTOSVC", 1
			VL_PARCELA.FIS_NFVENCTOSVC = VL_PARCELA.FIS_NFVENCTOSVC + vVlResto
		endif
	else
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%CD_EMPFAT.TRA_TRANSACAOSVC %%%/ %%NR_TRANSACAO.TRA_TRANSACAOSVC não possui parcelamento!", "ADICIONAL=Operação->FISSVCO004.geraNF")
		return (-1)
	endif
	
	return(0)
end

;----------------------------------------
entry geraRemDest
;----------------------------------------
	variables
		string viParams, voParams
	endvariables	
	
	if ($empty("TRA_REMDESSVC") != 0)
		viParams = "" 
		putitem/id viParams, "CD_EMPRESA", CD_EMPRESA.TRA_TRANSACAOSVC
		putitem/id viParams, "NR_TRANSACAO", NR_TRANSACAO.TRA_TRANSACAOSVC
		putitem/id viParams, "DT_TRANSACAO", DT_TRANSACAO.TRA_TRANSACAOSVC
		activate "TRASVCO004".gravaEnderecoTransacao($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
		if ($procerror) 
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			return(-1)
		endif

		clear/e "TRA_REMDESSVC"
		retrieve/e "TRA_REMDESSVC"
		if ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%CD_EMPFAT.TRA_TRANSACAOSVC %%%/ %%NR_TRANSACAO.TRA_TRANSACAOSVC não possui dados do emitende/destinatário!", "ADICIONAL=Operação->FISSVCO004.geraNF")
			return (-1)
		endif
	endif

	creocc "FIS_NFREMDESSVC", -1
	CD_EMPFAT.FIS_NFREMDESSVC = CD_EMPFAT.TRA_TRANSACAOSVC
	CD_GRUPOEMPRESA.FIS_NFREMDESSVC = CD_GRUPOEMPRESA.TRA_TRANSACAOSVC
	CD_OPERADOR.FIS_NFREMDESSVC = $item("CD_USUARIO", $xlpg$)
	DT_CADASTRO.FIS_NFREMDESSVC = $datim
	NM_NOME.FIS_NFREMDESSVC = NM_NOME.TRA_REMDESSVC
	TP_PESSOA.FIS_NFREMDESSVC = TP_PESSOA.TRA_REMDESSVC
	CD_PESSOA.FIS_NFREMDESSVC = CD_PESSOA.TRA_REMDESSVC
	IN_CONTRIBUINTE.FIS_NFREMDESSVC = IN_CONTRIBUINTE.TRA_REMDESSVC
	CD_CEP.FIS_NFREMDESSVC = CD_CEP.TRA_REMDESSVC
	NR_RGINSCREST.FIS_NFREMDESSVC = NR_RGINSCREST.TRA_REMDESSVC
	NR_CPFCNPJ.FIS_NFREMDESSVC = NR_CPFCNPJ.TRA_REMDESSVC
	DS_TPLOGRADOURO.FIS_NFREMDESSVC = DS_TPLOGRADOURO.TRA_REMDESSVC
	NM_LOGRADOURO.FIS_NFREMDESSVC = NM_LOGRADOURO.TRA_REMDESSVC
	NM_COMPLEMENTO.FIS_NFREMDESSVC = NM_COMPLEMENTO.TRA_REMDESSVC
	NR_LOGRADOURO.FIS_NFREMDESSVC = NR_LOGRADOURO.TRA_REMDESSVC
	NM_BAIRRO.FIS_NFREMDESSVC = NM_BAIRRO.TRA_REMDESSVC
	NM_MUNICIPIO.FIS_NFREMDESSVC = NM_MUNICIPIO.TRA_REMDESSVC
	DS_SIGLAESTADO.FIS_NFREMDESSVC = DS_SIGLAESTADO.TRA_REMDESSVC
	NR_CAIXAPOSTAL.FIS_NFREMDESSVC = NR_CAIXAPOSTAL.TRA_REMDESSVC
	NR_TELEFONE.FIS_NFREMDESSVC = NR_TELEFONE.TRA_REMDESSVC
	
	return(0)

end

;----------------------------------------
entry geraECF
;----------------------------------------

	if ($empty("TRA_TRANSACECSVC") = 0)
		creocc "FIS_NFECFSVC", -1
		CD_EMPECF.FIS_NFECFSVC = CD_EMPECF.TRA_TRANSACECSVC
		NR_ECF.FIS_NFECFSVC = NR_ECF.TRA_TRANSACECSVC
		CD_EMPFAT.FIS_NFECFSVC = CD_EMPFAT.TRA_TRANSACAOSVC
		CD_GRUPOEMPRESA.FIS_NFECFSVC = CD_GRUPOEMPRESA.TRA_TRANSACAOSVC
		CD_OPERADOR.FIS_NFECFSVC = $item("CD_USUARIO", $xlpg$)
		DT_CADASTRO.FIS_NFECFSVC = $datim
		NR_CUPOM.FIS_NFECFSVC = NR_CUPOM.TRA_TRANSACECSVC
	endif
	
	return(0)

end

;----------------------------------------
entry geraObservacao
;----------------------------------------
	params
		string pDsLinhaObs : IN
	endparams

	variables
		string vDsLinha, vDsAdicional, vDsLinhaObs, vDsDecreto, viParams, voParams, vDsLinhaAux
		numeric vNrLinha, vNrPos, vNrPosDecreto
	endvariables
	
	vNrLinha = 0

	if ($inPDVOtimizado$ != <TRUE>)
		if ($vlICMSDiferido$ > 0)
			$vlICMSDiferido$ = $vlICMSDiferido$[round, 2]
			$vlICMSDiferido$ = $vlICMSDiferido$ - VL_ICMS.FIS_NFSVC
			if ($vlICMSDiferido$ > 0)
				creocc "OBS_NFSVC",-1
				vNrLinha = vNrLinha + 1
				NR_LINHA.OBS_NFSVC = vNrLinha
				CD_EMPFAT.OBS_NFSVC = CD_EMPFAT.TRA_TRANSACAOSVC
				CD_GRUPOEMPRESA.OBS_NFSVC = CD_GRUPOEMPRESA.TRA_TRANSACAOSVC
 				vDsLinha = "ICMS DIF.PARC. EM 33,33% CONF.ART. 96 INCISO I DO RICMS-PR: %%$vlICMSDiferido$"
				CD_OPERADOR.OBS_NFSVC = $item("CD_USUARIO", $xlpg$)
				DT_CADASTRO.OBS_NFSVC = $datim			
				DS_OBSERVACAO.OBS_NFSVC = vDsLinha[1 : 80]
			endif
		endif

		if ($empty("TMP_CSTALIQSVC") = 0) & (TP_ORIGEMEMISSAO.TRA_TRANSACAOSVC = 1) ;Própria
			if($inExibeResumoCstNF$ = <TRUE>);testa o parametro empresa para imprimit o resumo de CST na nota fiscal
				setocc "TMP_CSTALIQSVC", 1
				while ($status >= 0)
					creocc "OBS_NFSVC",-1
					vNrLinha = vNrLinha + 1
					NR_LINHA.OBS_NFSVC = vNrLinha
					CD_EMPFAT.OBS_NFSVC = CD_EMPFAT.TRA_TRANSACAOSVC
					CD_GRUPOEMPRESA.OBS_NFSVC = CD_GRUPOEMPRESA.TRA_TRANSACAOSVC
					vDsLinha = "CST %%CD_CST.TMP_CSTALIQSVC ICMS %%PR_ALIQUOTA.TMP_CSTALIQSVC"
					$vlBaseCalc$ = VL_BASECALC.TMP_CSTALIQSVC[round, 2]
					$vlImposto$ = VL_IMPOSTO.TMP_CSTALIQSVC[round, 2]
					vDsLinha = "%%vDsLinha %%$vlBaseCalc$ = %%$vlImposto$"
					CD_OPERADOR.OBS_NFSVC = $item("CD_USUARIO", $xlpg$)
					DT_CADASTRO.OBS_NFSVC = $datim			
					DS_OBSERVACAO.OBS_NFSVC = vDsLinha[1 : 80]
					setocc "TMP_CSTALIQSVC", $curocc("TMP_CSTALIQSVC") + 1
				endwhile
			endif
		endif

		if ($inExibeResumoCfopNF$ = <TRUE>)
			if ($empty("F_TMP_NR09SVC") = 0)
				setocc "F_TMP_NR09SVC", 1
				while ($status >= 0)
					creocc "OBS_NFSVC",-1
					vNrLinha = vNrLinha + 1
					NR_LINHA.OBS_NFSVC = vNrLinha
					CD_EMPFAT.OBS_NFSVC = CD_EMPFAT.TRA_TRANSACAOSVC
					CD_GRUPOEMPRESA.OBS_NFSVC = CD_GRUPOEMPRESA.TRA_TRANSACAOSVC
					$vlImposto$ = VL_TOTAL.F_TMP_NR09SVC[round, 2]
					;-- MAD [Proj/Tar.149/098] - 26/11/2010
					if ($inExibeQtdProdNF$ = <TRUE>)
						vDsLinha = "CFOP %%NR_GERAL.F_TMP_NR09SVC = %%$vlImposto$, QT: %%QT_ITEM.F_TMP_NR09SVC"
					else
					;;
						vDsLinha = "CFOP %%NR_GERAL.F_TMP_NR09SVC = %%$vlImposto$"
					endif
					CD_OPERADOR.OBS_NFSVC = $item("CD_USUARIO", $xlpg$)
					DT_CADASTRO.OBS_NFSVC = $datim			
					DS_OBSERVACAO.OBS_NFSVC = vDsLinha[1 : 80]
					setocc "F_TMP_NR09SVC", $curocc("F_TMP_NR09SVC") + 1
				endwhile
			endif
		endif
	endif

	if ($dsAdicionalRegra$ != "") & (TP_ORIGEMEMISSAO.TRA_TRANSACAOSVC = 1) ;Própria
		;Oda... se já tiver dados no tra_transacnf, nao ira imprimir a obs da regra fiscal.
		if ($empty("OBS_TRANSACNFSVC") = 1)
			vDsAdicional = $dsAdicionalRegra$
			while(vDsAdicional != "")
				scan vDsAdicional, "%%^"
				if ($result > 0)
					vDsLinha = vDsAdicional[1, $result - 1]
					vDsAdicional = vDsAdicional[$result + 1] 
				else
					vDsLinha = vDsAdicional
					vDsAdicional = ""
				endif
				creocc "OBS_NFSVC", -1
				vNrLinha = vNrLinha + 1
				NR_LINHA.OBS_NFSVC = vNrLinha
				CD_EMPFAT.OBS_NFSVC = CD_EMPFAT.FIS_NFSVC
				CD_GRUPOEMPRESA.OBS_NFSVC = CD_GRUPOEMPRESA.FIS_NFSVC
				CD_OPERADOR.OBS_NFSVC = $item("CD_USUARIO", $xlpg$)
				DT_CADASTRO.OBS_NFSVC = $datim
				DS_OBSERVACAO.OBS_NFSVC = vDsLinha[1 : 80]
			endwhile
		endif
	endif
	
	if ($empty("OBS_TRANSACNFSVC") = 0)
		setocc "OBS_TRANSACNFSVC", 1
		while ($status >= 0)
			creocc "OBS_NFSVC",-1
			vNrLinha = vNrLinha + 1
			NR_LINHA.OBS_NFSVC = vNrLinha
			CD_EMPFAT.OBS_NFSVC = CD_EMPFAT.TRA_TRANSACAOSVC
			CD_GRUPOEMPRESA.OBS_NFSVC = CD_GRUPOEMPRESA.TRA_TRANSACAOSVC
			CD_OPERADOR.OBS_NFSVC = $item("CD_USUARIO", $xlpg$)
			DT_CADASTRO.OBS_NFSVC = $datim
			DS_OBSERVACAO.OBS_NFSVC = DS_OBSERVACAO.OBS_TRANSACNFSVC[1 : 80]
			setocc "OBS_TRANSACNFSVC", $curocc("OBS_TRANSACNFSVC") + 1
		endwhile
	endif

	;-- MAD [Proj/Tar.149/064] - 26/10/2009
	if (!$empty("FIS_DECRETOSVC")) & ($inGravaDsDecretoObsNf$ = <TRUE>)
		setocc "FIS_DECRETOSVC", -1
		setocc "FIS_DECRETOSVC", 1
		while ($status >= 0)
			vDsDecreto = DS_DECRETO.FIS_DECRETOSVC
			;--> VSOUZA PRJ/TAR 170/386 01/11/2011
			;--> Lógica implementada para gerar várias linhas enquanto houver observação no decreto
			;--> Cada linha conterá 80 caracteres e caso uma palavra não termine até o final da linha
			;--> toda a palavra será jogada para a próxima linha
			while (vDsDecreto != "")
				vNrPosDecreto = 80
				if (vDsDecreto[80 : 1] != "") 
					if (vDsDecreto[80 : 1] != " ") & (vDsDecreto[81 : 1] != " ")
						while (vDsDecreto[vNrPosDecreto : 1] != " ") & (vNrPosDecreto > 0)
							vNrPosDecreto = vNrPosDecreto - 1
						endwhile
						if (vNrPosDecreto = 0)
							vNrPosDecreto = 80
						endif
					endif
				endif
			;vDsDecreto = DS_DECRETO.FIS_DECRETOSVC
			;while(vDsDecreto != "")
			;	scan vDsDecreto, "%%^" 
			;	if ($result > 0)
			;		vDsLinha = vDsDecreto[1, $result - 1]
			;		vDsDecreto = vDsDecreto[$result + 1] 
			;	else
			;		vDsLinha = vDsDecreto
			;		vDsDecreto = "" 
			;	endif
				creocc "OBS_NFSVC", -1
				vNrLinha = vNrLinha + 1
				NR_LINHA.OBS_NFSVC = vNrLinha
				CD_EMPFAT.OBS_NFSVC = CD_EMPFAT.FIS_NFSVC
				CD_GRUPOEMPRESA.OBS_NFSVC = CD_GRUPOEMPRESA.FIS_NFSVC
				CD_OPERADOR.OBS_NFSVC = $item("CD_USUARIO", $xlpg$)
				DT_CADASTRO.OBS_NFSVC = $datim
				DS_OBSERVACAO.OBS_NFSVC = vDsDecreto[1 : vNrPosDecreto]
				vNrPosDecreto = vNrPosDecreto + 1
				vDsDecreto = vDsDecreto[vNrPosDecreto]
				;DS_OBSERVACAO.OBS_NFSVC = vDsLinha[1 : 80]
			;endwhile
			endwhile	
			;-------------------------------------<
			setocc "FIS_DECRETOSVC", $curocc("FIS_DECRETOSVC") + 1
		endwhile
	endif
	;;

	; Ranghetti - 170/355 16/09/2011 ->
	if ($inIncluiIpiDevSimp$ = 1) & (TP_MODALIDADE.GER_OPERACAOSVC = 3)&($inOptSimples$ = <TRUE>) & (VL_IPI.FIS_NFSVC > 0)
		vDsLinha = "VALOR DO IPI: R$ %%VL_IPI.FIS_NFSVC"

		creocc "OBS_NFSVC", -1
		vNrLinha = vNrLinha + 1
		NR_LINHA.OBS_NFSVC = vNrLinha
		CD_EMPFAT.OBS_NFSVC = CD_EMPFAT.FIS_NFSVC
		CD_GRUPOEMPRESA.OBS_NFSVC = CD_GRUPOEMPRESA.FIS_NFSVC
		CD_OPERADOR.OBS_NFSVC = $item("CD_USUARIO", $xlpg$)
		DT_CADASTRO.OBS_NFSVC = $datim
		DS_OBSERVACAO.OBS_NFSVC = vDsLinha[1 : 80]
	endif
	; <-
	;-- VSOUZA PRJ/TAR 170/383 26/10/2011
 ;--> Lógica implementada para gerar SEMPRE a última observação da N.F. FIXA de
	;--> de acordo com os parâmetros "IN_GRAVA_OBS_NF" e "DS_OBS_NF" <------------
	if ($inGravaObsNf$ = 1) ; <TRUE> 
		vDsLinhaAux = $dsObsNf$
		while (vDsLinhaAux != "")
			vNrPos = 80
			if (vDsLinhaAux[80 : 1] != "") 
				if (vDsLinhaAux[80 : 1] != " ") & (vDsLinhaAux[81 : 1] != " ")
					while (vDsLinhaAux[vNrPos : 1] != " ") & (vNrPos > 0)
						vNrPos = vNrPos - 1
					endwhile
					if (vNrPos = 0)
						vNrPos = 80
					endif
				endif
			endif
			creocc "OBS_NFSVC", -1
			vNrLinha = vNrLinha + 1
			NR_LINHA.OBS_NFSVC = vNrLinha
			CD_EMPFAT.OBS_NFSVC = CD_EMPFAT.FIS_NFSVC
			CD_GRUPOEMPRESA.OBS_NFSVC = CD_GRUPOEMPRESA.FIS_NFSVC
			CD_OPERADOR.OBS_NFSVC = $item("CD_USUARIO", $xlpg$)
			DT_CADASTRO.OBS_NFSVC = $datim
			DS_OBSERVACAO.OBS_NFSVC = vDsLinhaAux[1 : vNrPos]
			vNrPos = vNrPos + 1
			vDsLinhaAux = vDsLinhaAux[vNrPos]
		endwhile
	endif
	;------------------------------------<	
	return(0)

end

;----------------------------------------
entry limpaString
;----------------------------------------
;--->MNT Prj 156/0345 - 07/06/2010
	params
		String piString:IN
		String poStringSaida:OUT
	endparams

	variables
		String vDsString, vDsStringSaida, vChar
		Numeric vTamanho, vPosicao
		Boolean vInValido 	
	endvariables

	vDsString = piString

	vDsString = $replace(vDsString, 1,"STRING ","",-1)	

	length vDsString
	vTamanho = $result
	if (vTamanho < 1)
		return (0)
	endif

	vPosicao = 0
	vDsStringSaida = ""
	repeat
		vPosicao = vPosicao + 1
		vInValido = <TRUE>
		vChar = vDsString[vPosicao:1]

		if (vChar = "<" | vChar = ">" | vChar = "&" | vChar = "%%"%%%" | vChar = "'" | vChar = "%" | vChar = "" | vChar = "·>" | vChar = "·<" | vChar = "·&")
			vInValido = <FALSE>
		endif

		if (vInValido = <TRUE>)
			vDsStringSaida = "%%vDsStringSaida%%vChar"
		endif
	until (vPosicao >= vTamanho)

	poStringSaida = vDsStringSaida 

	return(0)
End;entry limpaString


;-----------------------------------------
;-- MAD [Proj/Tar.158/140] - 12/07/2010
entry geraNFReferencial
;-----------------------------------------
	variables
		String vDsLstOperRef, vCdOperacao
	endvariables

	vDsLstOperRef = $dsLstOperObrigNfRef$ ; MRT | PRJ 66/519 | 22/11/2011 -->>
	vDsLstOperRef = $replace(vDsLstOperRef, 1, ";", "·;", -1)
	if (vDsLstOperRef != "")
		repeat
			getitem vCdOperacao, vDsLstOperRef, 1
			if (CD_OPERACAO.FIS_NFSVC = vCdOperacao) & ($empty("TRA_TRANREFSVC"))
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Operação %%vCdOperacao da NF precisa de NF referencial, parâmetro DS_LST_OPER_OBRIG_NF_REF!", "ADICIONAL=Operação->FISSVCO004.geraNFReferencial")
				return (-1)
			endif
			delitem vDsLstOperRef, 1
		until(vDsLstOperRef = "")
	endif ; <<--				

	if (!$empty("TRA_TRANREFSVC"))
		setocc "TRA_TRANREFSVC", 1
		while ($status >= 0)

			creocc "FIS_NFREFSVC", -1
			CD_EMPRESAREF.FIS_NFREFSVC = CD_EMPRESANFREF.TRA_TRANREFSVC
			NR_FATURAREF.FIS_NFREFSVC = NR_FATURANFREF.TRA_TRANREFSVC
			DT_FATURAREF.FIS_NFREFSVC = DT_FATURANFREF.TRA_TRANREFSVC
			CD_OPERADOR.FIS_NFREFSVC = $item("CD_USUARIO", $xlpg$)
			DT_CADASTRO.FIS_NFREFSVC = $datim
			TP_REFERENCIAL.FIS_NFREFSVC = TP_REFERENCIAL.TRA_TRANREFSVC

			setocc "TRA_TRANREFSVC", $curocc("TRA_TRANREFSVC") + 1
		endwhile
	endif

	return(0)

End ; entry geraNFReferencial
;;

;----------------------------------------
;-- MAD [Proj/Tar.061/916] - 25/01/2011
entry geraItemSeloEnt
;----------------------------------------

	params
		string piDsLstSelo : IN
	endparams

	variables
		string vDsRegistro
	endvariables

	if (piDsLstSelo != "") 
		repeat
			getitem vDsRegistro, piDsLstSelo, 1

			VL_BASECALC.FIS_NFISELOENSVC = VL_BASECALC.FIS_NFISELOENSVC + $item("VL_BASECALC" , vDsRegistro)
			VL_SUBTRIB.FIS_NFISELOENSVC = VL_SUBTRIB.FIS_NFISELOENSVC + $item("VL_SUBTRIB" , vDsRegistro)
			VL_IPI.FIS_NFISELOENSVC = VL_IPI.FIS_NFISELOENSVC + $item("VL_IPI" , vDsRegistro)
			VL_FRETE.FIS_NFISELOENSVC = VL_FRETE.FIS_NFISELOENSVC + $item("VL_FRETE" , vDsRegistro)
			VL_SEGURO.FIS_NFISELOENSVC = VL_SEGURO.FIS_NFISELOENSVC + $item("VL_SEGURO" , vDsRegistro)
			VL_DESPACESSOR.FIS_NFISELOENSVC = VL_DESPACESSOR.FIS_NFISELOENSVC + $item("VL_DESPACESSOR", vDsRegistro)
			PR_ALIQUOTA.FIS_NFISELOENSVC = PR_ALIQUOTA.FIS_NFISELOENSVC + $item("PR_ALIQUOTA" , vDsRegistro)
			CD_OPERADOR.FIS_NFISELOENSVC = $item("CD_USUARIO", $xlpg$)
			DT_CADASTRO.FIS_NFISELOENSVC = $datim

			delitem piDsLstSelo, 1
		until (piDsLstSelo = "")
		setocc "FIS_NFISELOENSVC", 1
	endif

	return(0)

End ; entry geraItemSeloEnt
;;

; Ranghetti - 170/355 - 16/09/2011 -> 
;----------------------------------------
entry alteraVlIpi
;----------------------------------------

	if($empty("FIS_NFSVC"))
		return (0)
	endif

	if ($inIncluiIpiDevSimp$ = 1) & (TP_MODALIDADE.GER_OPERACAOSVC = 3)&($inOptSimples$ = <TRUE>) & (VL_IPI.FIS_NFSVC > 0)
		setocc "FIS_NFITEMSVC", 1
		while($status >= 0)

			setocc "FIS_NFITEMIMPSVC", 1
			while($status >= 0)
				if(CD_IMPOSTO.FIS_NFITEMIMPSVC = 3)
					discard "FIS_NFITEMIMPSVC", 0
					break
				endif	
				setocc "FIS_NFITEMIMPSVC", $curocc("FIS_NFITEMIMPSVC") +1 
			endwhile

			setocc "FIS_NFITEMSVC", $curocc("FIS_NFITEMSVC") +1 
		endWhile

		VL_IPI.FIS_NFSVC = 0
	endif
	
	return(0)

End ; entry alteraVlIpi
; < -


;------------------------------
entry geraSeloFiscalEnt 
;------------------------------
; 	DIONE |195/0002| 30/11/11
;------------------------------
	variables		
		numeric vCdEmpresaTra, vNrTransacao, vCdEmpresaNf, vNrFatura
		date vDtTransacao, vDtFatura
	endvariables

	vCdEmpresaTra = CD_EMPRESA.TRA_TRANSACAOSVC
	vNrTransacao = NR_TRANSACAO.TRA_TRANSACAOSVC
	vDtTransacao = DT_TRANSACAO.TRA_TRANSACAOSVC
	vCdEmpresaNf = CD_EMPRESA.FIS_NFSVC
	vNrFatura = NR_FATURA.FIS_NFSVC		
	vDtFatura = DT_FATURA.FIS_NFSVC	
	
	if (vCdEmpresaTra = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa da transação não informada!", "ADICIONAL=Operação->FISSVCO024.gravaSeloFiscalEnt")
		return(-1)
	endif

	if (vNrTransacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número da transação não informado!", "ADICIONAL=Operação->FISSVCO024.gravaSeloFiscalEnt")
		return(-1)
	endif

	if (vDtTransacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data da transação não informada!", "ADICIONAL=Operação->FISSVCO024.gravaSeloFiscalEnt")
		return(-1)
	endif

	if (vCdEmpresaNf = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa da nota fiscal não informada!", "ADICIONAL=Operação->FISSVCO024.gravaSeloFiscalEnt")
		return(-1)
	endif

	if (vNrFatura = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número da fatura não informado!", "ADICIONAL=Operação->FISSVCO024.gravaSeloFiscalEnt")
		return(-1)
	endif

	if (vDtFatura = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data da fatura não informada!", "ADICIONAL=Operação->FISSVCO024.gravaSeloFiscalEnt")
		return(-1)
	endif

	if (!$empty("TRA_SELOENTSVC"))

		clear/e "FIS_NFSELOENTSVC"
		creocc "FIS_NFSELOENTSVC", -1
		VL_ANTECIPADO.FIS_NFSELOENTSVC = VL_ANTECIPADO.TRA_SELOENTSVC
		VL_SUBSTITUIDO.FIS_NFSELOENTSVC = VL_SUBSTITUIDO.TRA_SELOENTSVC
		VL_DIFERENCIAL.FIS_NFSELOENTSVC = VL_DIFERENCIAL.TRA_SELOENTSVC
		CD_OPERADOR.FIS_NFSELOENTSVC = $item("CD_USUARIO", $xlpg$)
		DT_CADASTRO.FIS_NFSELOENTSVC = $datim
	endif

	return(0)

End ;operation gravaSeloFiscalEnt
;;

;-----------------------
public operation geraNF
;-----------------------
	params
		string  piGlobal    :IN
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		numeric vCdEmpresa, vNrTransacao, vVlCalc, vTpLoopItem, vNrItem, vCdRegraFiscal, vPos
		numeric vQtFaturado, vVlTotalBruto, vVlTotalLiquido, vVlTotalDesc, vVlTotalDescCab, vCdDecreto
		numeric vCdSeqGrupoProx, vVlUnitProx, vCdCFOPProx, vCdCompVendProx, vCdTamanhoProx, vTpContrInspSaldoLote
		string  vDsRegistro, vDsLstTransacao, vDsLstNF, vDsRegistroItem, vDsLstItem, vDsLstValor, vTpAliqIcms
		string  viParams, voParams, vCdTipoClas, vCdCorProx, vDsLstSerial, vDsNulo, vDsLstDespesa, vTpReducao
		boolean vInLoopCapa, vInPrimeira, vInReemissao, vInAgrupaItem, vInItemDescritivo, vInObs
		date    vDtTransacao
		string  vDsLoteInf, vDsLstLoteInfGeral
		numeric vCdEmpLote, vNrLote, vNrItemLote, vNfInicial, vVlSubMaior, vNrItemSubMaior, VTPMODDOCTOFIS, vVlBaseIcmsSub
		numeric vVlIcmsSub, vVlBaseIcms, vVlIcms, vVlIcmsMaior, vNrItemMaior, vVlCalcula, vVlBaseCalc, vConsulta
		string  vDsLstNotaFiscal, vLstNF, vDsLinhaObs, vDsLstSelo
	endvariables

	$xlpg$                = piGlobal
	vDsLstNotaFiscal      = ""
	vCdEmpresa            = $item("CD_EMPRESA"              , piParams)	
	vDsLstTransacao       = $item("DS_LSTTRANSACAO"         , piParams)
	$inReemissao$         = $item("IN_REEMISSAO"            , piParams)
	$cdModeloNF$          = $item("CD_MODELONF"             , piParams)
	$nrNf$                = $item("NR_NF"                   , piParams)
	$cdSerie$             = $item("CD_SERIE"                , piParams)
	$dtEmissao$           = $item("DT_EMISSAO"              , piParams)
	$dtSaidaEntrada$      = $item("DT_SAIDAENTRADA"         , piParams)
	$dtEntrega$           = $item("DT_ENTREGA"              , piParams)
	$dtFatura$            = $item("DT_FATURA"               , piParams) ;---Elia Proj. 102/393 12/09/08		
	$hrSaida$             = $item("HR_SAIDA"                , piParams) ;---Elia Proj. 102/218 12/02/08
	$LstLoteInfGeral$     = "" ;>-- MAC - PRJ 156 TAR 179 - 12/02/2010 
	$inItemLote$          = $item("IN_ITEMLOTE"             , piParams) ;thamati 22/03/2010 [Proj. 0130 - Tar. 0991]
	$tinTinturaria$       = $item("TIN_TINTURARIA"          , $xlpg$) ;thamati 29/06/2010 [Proj. 0156 - Tar. 0362]
	vTpContrInspSaldoLote = $item("TP_CONTR_INSP_SALDO_LOTE", $$gParamGlb) ;-- ALX - 130/1328 - 26/11/2010 --;

	if($dtSaidaEntrada$ = "") 
		$dtSaidaEntrada$ = $item("DT_SISTEMA", $xlpg$)
	endif

	$tpModDctoFiscalLocal$ = $item("TP_MODDCTOFISCAL"      , piParams)
	$cdEspecieServico$     = $item("CD_ESPECIE_SERVICO_TRA", $xlpg$)
	$dsLstFatura$          = ""

	;thamati 22/03/2010 [Proj. 0130 - Tar. 0991]
	if ($inItemLote$ = "")
		;-->> ALX - 130/1328 - 26/11/2010 --;
		if (vTpContrInspSaldoLote = 1)
			$inItemLote$ = <TRUE>
		;--<<
		else
			$inItemLote$ = <FALSE>
		endif
	endif
	;

	if (vDsLstTransacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Lista de transação não informada!", "ADICIONAL=Operação->FISSVCO004.geraNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	call getParam(vCdEmpresa)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if ($status < 0)
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	if ($dtEncerramento$ != "") & ($dtSaidaEntrada$ != "")
		if ($dtSaidaEntrada$ <= $dtEncerramento$)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=NF/Fatura %%NR_NF.FIS_NFSVC%%%/%%NR_FATURA.FIS_NFSVC possui data de movimento anterior ao encerramento do livro fiscal!", "ADICIONAL=Operação->FISSVCO004.geraNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1) 
		endif
	endif
	
	vCdTipoClas = $cdTipoClas$
	clear/e "PRD_TIPOCLASSVC"
	length(vCdTipoClas)
	while ($result > 0)
		creocc "PRD_TIPOCLASSVC", -1
		scan vCdTipoClas, ";"
		if ($result > 0)
			CD_TIPOCLAS.PRD_TIPOCLASSVC = vCdTipoClas[1 : $result - 1]
			vCdTipoClas = vCdTipoClas[$result + 1]
		else
			CD_TIPOCLAS.PRD_TIPOCLASSVC = vCdTipoClas
			vCdTipoClas = ""
		endif
		retrieve/o "PRD_TIPOCLASSVC"
		if ($status = -7)
			retrieve/x "PRD_TIPOCLASSVC"
		else
			remocc "PRD_TIPOCLASSVC", $curocc("PRD_TIPOCLASSVC")
		endif
		length(vCdTipoClas)
	endwhile    

	clear/e "FIS_NFSVC"
	
	repeat
		getitem vDsRegistro, vDsLstTransacao, 1
		vCdEmpresa   = $item("CD_EMPRESA", vDsRegistro)
		vNrTransacao = $item("NR_TRANSACAO", vDsRegistro)
		vDtTransacao = $item("DT_TRANSACAO", vDsRegistro)

		if (vCdEmpresa = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->FISSVCO004.geraNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
	
		if (vNrTransacao = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número da transação não informado!", "ADICIONAL=Operação->FISSVCO004.geraNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
	
		if (vDtTransacao = "")
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número da transação não informado!", "ADICIONAL=Operação->FISSVCO004.geraNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif

		clear/e "TRA_TRANSACAOSVC"
		CD_EMPRESA.TRA_TRANSACAOSVC   = vCdEmpresa
		NR_TRANSACAO.TRA_TRANSACAOSVC = vNrTransacao
		DT_TRANSACAO.TRA_TRANSACAOSVC = vDtTransacao
		retrieve/e "TRA_TRANSACAOSVC"
		if ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->FISSVCO004.geraNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif

		viParams = ""
		putitem/id viParams, "CD_PESSOA", CD_PESSOA.TRA_TRANSACAOSVC
		activate "PESSVCO005".buscaDadosPessoa($xlpg$, viParams, voParams, $xCdErro$, $xCtxerro$)
		if ($procerror)       
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		$tpRegimeTrib$ = $item("TP_REGIMETRIB", voParams)

		viParams = ""
		putitem/id viParams, "CD_CLIENTE" , CD_PESSOA.TRA_TRANSACAOSVC
		activate "FISSVCO032".carregaPesCliente($xlpg$, viParams, voParams, $xCdErro$, $xCtxerro$)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		$nrCodFiscal$ = $item("NR_CODIGOFISCAL", voParams)

		vInPrimeira = <TRUE>

		clear/e "GER_MODNFCSVC"
		clear/e "FIS_DECRETOSVC"
		$inQuebraItem$ = <FALSE>
		$tpAgrupamento$ = "F" ;Item
		if ($tpImpressaoCodPrdEcf$ = 0) ;-=CANONICO=- (06/12/2010) TAR 1716 PRJ 22
			$tpCodigoItem$ = 4 ;Produto
		endif
		vInItemDescritivo = <FALSE>

		if (TP_ORIGEMEMISSAO.TRA_TRANSACAOSVC = 1) ;Emissão própria
			if ($cdModeloNF$ > 0)
				CD_MODELONF.GER_MODNFCSVC/init = $cdModeloNF$
				retrieve/e "GER_MODNFCSVC"
				if ($status >= 0)
					if (IN_AGRUPA_GRUPO.GER_MODNFCSVC = "")
						$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Modelo de NF %%$cdModeloNF$ não possui tipo de agrupamento de item informado. Utilize o GERFM016 para cadastrar!", "ADICIONAL=Operação->FISSVCO004.geraNF")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						exit(-1)
					endif
					if (TP_CODPRODUTO.GER_MODNFCSVC = 0)
						$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Modelo de NF %%$cdModeloNF$ não possui tipo de código de item informado. Utilize o GERFM016 para cadastrar!", "ADICIONAL=Operação->FISSVCO004.geraNF")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						exit(-1)
					endif

					;-- MAD [Proj/Tar.156/001] - 16/09/2009
					if ($tpModDctoFiscalLocal$ = 55) ; NF-e
						$inQuebraItem$ = <FALSE>
					else
					;;
						$inQuebraItem$ = IN_QUEBRANF.GER_MODNFCSVC
					endif
					$tpAgrupamento$ = IN_AGRUPA_GRUPO.GER_MODNFCSVC
					$tpCodigoItem$ = TP_CODPRODUTO.GER_MODNFCSVC
					;---Elia Proj. 22/660 30/06/08 
					; Alteracao realizada juntamente com Srs. Fuiza e Marcio
					;if ($tpAgrupamento$ = "C" | $tpAgrupamento$ = "A")
					;	$tpAgrupamento$ = "T"
					;endif
					;
				endif
			endif

			if ($inReemissao$ = <TRUE>)
				if ($nrNf$ = 0)
					$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número de NF não informado!", "ADICIONAL=Operação->FISSVCO004.geraNF")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif
			endif
		else
			if ($nrNf$ = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número de NF não informado!", "ADICIONAL=Operação->FISSVCO004.geraNF")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif

			clear/e "V_FIS_NFREMDESVC"
			CD_EMPFAT.V_FIS_NFREMDESVC/init = CD_EMPFAT.TRA_TRANSACAOSVC
			if (CD_PESSOA.TRA_REMDESSVC != "")
				CD_PESSOAREMDES.V_FIS_NFREMDESVC/init = CD_PESSOA.TRA_REMDESSVC
			else
				CD_PESSOANF.V_FIS_NFREMDESVC/init = CD_PESSOA.TRA_TRANSACAOSVC
			endif
			NR_NF.V_FIS_NFREMDESVC/init            = $nrNf$
			CD_SERIE.V_FIS_NFREMDESVC/init         = $cdSerie$
			TP_SITUACAO.V_FIS_NFREMDESVC/init      = "·!·=X" ;Excluída
			TP_ORIGEMEMISSAO.V_FIS_NFREMDESVC/init = 2 ;Emissão de terceiros
			TP_MODDCTOFISCAL.V_FIS_NFREMDESVC/init = $tpModDctoFiscalLocal$ ;;ICJ [PROJ/TAR 61/867] (20/09/2010)
			retrieve/e "V_FIS_NFREMDESVC"	
			if ($status >= 0)
				if (NR_FATURA.V_FIS_NFREMDESVC != NR_FATURA.FIS_NFSVC | DT_FATURA.V_FIS_NFREMDESVC != DT_FATURA.FIS_NFSVC) & %\
				   (TP_MODDCTOFISCAL.V_FIS_NFREMDESVC != 6) & (TP_MODDCTOFISCAL.V_FIS_NFREMDESVC != 21) & (TP_MODDCTOFISCAL.V_FIS_NFREMDESVC != 22) ;-- MAD [Proj/Tar.189/044] - 23/11/2011
					;;ICJ [PROJ/TAR 61/867] (20/09/2010)
					;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=NF %%$nrNf$ %%$cdSerie$ já cadastrada para a pessoa %%CD_PESSOAREMDES.V_FIS_NFREMDESVC%%%!", "ADICIONAL=Operação->FISSVCO004.geraNF")
					$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=NF %%$nrNf$ %%$cdSerie$ Modelo Documento %%$tpModDctoFiscalLocal$ já cadastrada para a pessoa %%CD_PESSOAREMDES.V_FIS_NFREMDESVC%%%!", "ADICIONAL=Operação->FISSVCO004.geraNF")
					;;	
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif
			endif
			$inQuebraCFOP$ = <FALSE>
		endif

		clear/e "GER_OPERACAOSVC"
		CD_OPERACAO.GER_OPERACAOSVC/init = CD_OPERACAO.TRA_TRANSACAOSVC
		retrieve/e "GER_OPERACAOSVC"
		if ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Operaçao %%CD_OPERACAO.GER_OPERACAOSVC não cadastrada!", "ADICIONAL=Operação->FISSVCO004.geraNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif

		if (TP_ORIGEMEMISSAO.TRA_TRANSACAOSVC = 1) ;Emissão própria	
			if (TP_DOCTO.GER_OPERACAOSVC = 2) | (TP_DOCTO.GER_OPERACAOSVC = 3) ;ECF
				$inQuebraItem$ = <FALSE>
				$tpAgrupamento$ = "F" ;Item
				if ($tpImpressaoCodPrdEcf$ = 0) ;-=CANONICO=- (06/12/2010) TAR 1716 PRJ 22
					$tpCodigoItem$ = 4 ;Produto
				endif
				$inQuebraCFOP$ = <FALSE>
			endif
		endif
	
		setocc "GER_S_OPERACASVC", 1
		if (!$dbocc("GER_S_OPERACASVC"))
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Operação %%CD_OPERACAO.GER_OPERACAOSVC não possui operação de movimento!", "ADICIONAL=Operação->FISSVCO004.geraNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif

		if (TP_ORIGEMEMISSAO.TRA_TRANSACAOSVC = 1) ;Emissão própria	
			if (TP_DOCTO.GER_S_OPERACASVC = 2) | (TP_DOCTO.GER_S_OPERACASVC = 3) ;ECF
				$inQuebraItem$ = <FALSE>
				$tpAgrupamento$ = "F" ;Item
				if ($tpImpressaoCodPrdEcf$ = 0) ;-=CANONICO=- (06/12/2010) TAR 1716 PRJ 22
					$tpCodigoItem$ = 4 ;Produto
				endif
				$inQuebraCFOP$ = <FALSE>
			elseif (TP_DOCTO.GER_S_OPERACASVC = 1) ;Nota fiscal
				vDsNulo = ""
				clear/e "TRA_TRANSITEMSVC"
				CD_PRODUTO.TRA_TRANSITEMSVC/init  = "·=%%vDsNulo"
				CD_BARRAPRD.TRA_TRANSITEMSVC/init = "·=%%vDsNulo"
				retrieve/e "TRA_TRANSITEMSVC"
				if ($status >= 0)
					vInItemDescritivo = <TRUE>
				endif
				clear/e "TRA_TRANSITEMSVC"
				retrieve/e "TRA_TRANSITEMSVC"
			endif

			if (TP_MODALIDADE.GER_S_OPERACASVC = "6") ;Produção 
				$inQuebraCFOP$ = <FALSE>
			endif
	
			if (TP_MODALIDADE.GER_S_OPERACASVC = "A") ;Produção terceiro
				$tpAgrupamento$ = "F" ;Item
			endif
		endif

		if (CD_REGRAFISCAL.GER_S_OPERACASVC > 0)
			vCdRegraFiscal = CD_REGRAFISCAL.GER_S_OPERACASVC
		elseif (CD_REGRAFISCAL.GER_OPERACAOSVC > 0)
			vCdRegraFiscal = CD_REGRAFISCAL.GER_OPERACAOSVC
		endif

		viParams = ""
		putitem/id viParams, "CD_REGRAFISCAL", vCdRegraFiscal
		activate "FISSVCO033".buscaDadosRegraFiscal($xlpg$, viParams, voParams, $xCdErro$, $xCtxerro$)
		if ($procerror)       
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif

		;-- MAD [Proj/Tar.170/035] - 17/08/2010
		;$dsAdicionalRegra$ = $item("DS_ADICIONAL", voParams)

		vTpReducao  = $item("TP_REDUCAO" , voParams)
		vTpAliqIcms = $item("TP_ALIQICMS", voParams)
		vCdDecreto  = $item("CD_DECRETO" , voParams)
		$ufDestino$ = DS_SIGLAESTADO.TRA_REMDESSVC
		vInObs      = <FALSE>	

		if (vTpReducao = "" & vTpAliqIcms = "")
			vInObs = <TRUE>

		elseif (vTpReducao  = "G" | vTpReducao = "H" | vTpReducao = "I") | %\
			((vTpReducao = "A" | vTpReducao = "B" | vTpReducao = "C") & $ufOrigem$ = $ufDestino$) | %\
			((vTpReducao = "D" | vTpReducao = "E" | vTpReducao = "F") & $ufOrigem$ != $ufDestino$) 
			vInObs = <TRUE>

		elseif (vTpAliqIcms = "C") | (vTpAliqIcms = "A" & $ufOrigem$ = $ufDestino$) | %\
			(vTpAliqIcms = "B" & $ufOrigem$ != $ufDestino$)
			vInObs = <TRUE>
		endif
		
		if (vInObs = <TRUE>)
			$dsAdicionalRegra$ = $item("DS_ADICIONAL", voParams)
		endif
		;;

		if ($empty("TRA_TRANSITEMSVC") = 0)
			if ($dtEmissao$ = "")
				;-- MAD [Proj/Tar.170/010] - 15/07/2010
				;$dtEmissao$ = DT_TRANSACAO.TRA_TRANSACAOSVC
				if (TP_ORIGEMEMISSAO.TRA_TRANSACAOSVC = 2) ; Emissão terceiros
					$dtEmissao$ = DT_TRANSACAO.TRA_TRANSACAOSVC
				else
					$dtEmissao$ = $item("DT_SISTEMA", $xlpg$)
				endif
				;;
			endif
		
			vInLoopCapa = <TRUE>
			if (vInItemDescritivo = <TRUE>)
				sort/e "TRA_TRANSITEMSVC", "NR_ITEM.TRA_TRANSITEMSVC"
			else 
				if ($tpAgrupamento$ = "T") ;Grupo
					;---Elia Proj. 102/261 19/03/08
					sort/e "TRA_TRANSITEMSVC", "CD_CFOP.TRA_TRANSITEMSVC, CD_NIVELGRUPO.TRA_TRANSITEMSVC, CD_SEQGRUPO.TRA_TRANSITEMSVC, VL_UNITLIQUIDO.TRA_TRANSITEMSVC, CD_COMPVEND.TRA_TRANSITEMSVC"
				elseif ($tpAgrupamento$ = "C") ;Cor
					sort/e "TRA_TRANSITEMSVC", "CD_CFOP.TRA_TRANSITEMSVC, CD_NIVELGRUPO.TRA_TRANSITEMSVC, CD_SEQGRUPO.TRA_TRANSITEMSVC, CD_COR.TRA_TRANSITEMSVC, VL_UNITLIQUIDO.TRA_TRANSITEMSVC, CD_COMPVEND.TRA_TRANSITEMSVC"
				elseif ($tpAgrupamento$ = "A") ;Tamanho
					sort/e "TRA_TRANSITEMSVC", "CD_CFOP.TRA_TRANSITEMSVC, CD_NIVELGRUPO.TRA_TRANSITEMSVC, CD_SEQGRUPO.TRA_TRANSITEMSVC, CD_TAMANHO.TRA_TRANSITEMSVC, VL_UNITLIQUIDO.TRA_TRANSITEMSVC, CD_COMPVEND.TRA_TRANSITEMSVC"
				elseif ($inQuebraCFOP$ = <TRUE>)
					sort/e "TRA_TRANSITEMSVC", "CD_CFOP.TRA_TRANSITEMSVC, NR_ITEM.TRA_TRANSITEMSVC"
				else
					sort/e "TRA_TRANSITEMSVC", "NR_ITEM.TRA_TRANSITEMSVC"
				endif
			endif
			setocc "TRA_TRANSITEMSVC" , -1
			setocc "TRA_TRANSITEMSVC" , 1 
		
			while (vInLoopCapa = <TRUE>)
				vTpLoopItem      = 0
				vQtFaturado      = 0
				vVlTotalBruto    = 0
				vVlTotalLiquido  = 0
				vVlTotalDesc     = 0
				vVlTotalDescCab  = 0
				$vlICMSDiferido$ = 0
				vNrItem          = 0
				vCdSeqGrupoProx  = 0
				vCdCorProx       = ""
				vCdTamanhoProx   = 0
				vVlUnitProx      = 0
				vCdCompVendProx  = 0
				vCdCFOPProx      = 0
				$inSubstituicao$ = <FALSE>
				clear/e "TMP_NR09SVC" 
				clear/e "TMP_NR08SVC"
				clear/e "F_TMP_NR09SVC"
	
				if ($inLog$ = <TRUE>)
					$hrInicio$ = $clock
					putmess "- Inicio gera NF. geraCapaNF FISSVCO004: %%$hrInicio$"
				endif
				
				call geraCapaNF()
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif
				if ($status < 0)
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif

				if ($inLog$ = <TRUE>)
					$hrFim$ = $clock
					$hrTempo$ = $hrFim$ - $hrInicio$
					putmess "- Fim gera NF. geraCapaNF FISSVCO004: %%$hrFim$ - %%$hrTempo$"
					
					$hrInicio$ = $clock
					putmess "- Inicio gera NF. geraRemDest FISSVCO004: %%$hrInicio$"
				endif

				; Marcio / Elia / Virginia Proj. 175/110
				$inNFe$ = <FALSE>
				if (!$empty("F_TMP_NR08SVC"))
					creocc "F_TMP_NR08SVC", -1
					NR_08.F_TMP_NR08SVC/init = TP_MODDCTOFISCAL.FIS_NFSVC
					retrieve/o "F_TMP_NR08SVC"
					if ($status = 4)
						$inNFe$ = <TRUE>
					else
						discard "F_TMP_NR08SVC"
					endif
				endif
				
				call geraRemDest()
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif
				if ($status < 0)
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif

				if ($inLog$ = <TRUE>)
					$hrFim$   = $clock
					$hrTempo$ = $hrFim$ - $hrInicio$
					putmess "- Fim gera NF. geraRemDest FISSVCO004: %%$hrFim$ - %%$hrTempo$"
					
					$hrInicio$ = $clock
					putmess "- Inicio gera NF. geraNFReferencial FISSVCO004: %%$hrInicio$"
				endif
				
				;-- MAD [Proj/Tar.158/140] - 12/07/2010
				call geraNFReferencial()
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif
				if ($status < 0)
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif
				;;

				if ($inLog$ = <TRUE>)
					$hrFim$   = $clock
					$hrTempo$ = $hrFim$ - $hrInicio$
					putmess "- Fim gera NF. geraNFReferencial FISSVCO004: %%$hrFim$ - %%$hrTempo$"
				endif		
				
				;--- DIONE |195/0002| 30/11/2011
				call geraSeloFiscalEnt()
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif
				if ($status < 0)
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif
				;;-- MAD [Proj/Tar.061/859] - 30/08/2010
				;if (TP_OPERACAO.TRA_TRANSACAOSVC = "E")
				;	viParams = ""
				;	putitem/id viParams, "CD_EMPRESATRA", CD_EMPRESA.TRA_TRANSACAOSVC
				;	putitem/id viParams, "NR_TRANSACAO" , NR_TRANSACAO.TRA_TRANSACAOSVC
				;	putitem/id viParams, "DT_TRANSACAO" , DT_TRANSACAO.TRA_TRANSACAOSVC
				;	putitem/id viParams, "CD_EMPRESANF" , CD_EMPRESA.FIS_NFSVC
				;	putitem/id viParams, "NR_FATURA"    , NR_FATURA.FIS_NFSVC					
				;	putitem/id viParams, "DT_FATURA"    , DT_FATURA.FIS_NFSVC					
				;	activate "FISSVCO024".gravaSeloFiscalEnt($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
				;	if ($procerror)
				;		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				;		poCdErro = $xCdErro$
				;		poCtxErro = $xCtxErro$
				;		exit(-1)
				;	elseif ($status < 0)
				;		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				;		poCdErro = $xCdErro$
				;		poCtxErro = $xCtxErro$
				;		exit(-1)
				;	endif
				;endif
				;;;
				;--- Comentado [Proj/Tar.061/859], gerava erro de constraint pois a rotina tenta gravar a FIS_NFSELOENT
				;--- antes de sua entidade pai, FIS_NF, esta gravada.

	
				while (vTpLoopItem = 0)
					vCdSeqGrupoProx = $next(CD_SEQGRUPO.TRA_TRANSITEMSVC)
					vCdCorProx      = $next(CD_COR.TRA_TRANSITEMSVC)
					vCdTamanhoProx  = $next(CD_TAMANHO.TRA_TRANSITEMSVC)
					vVlUnitProx     = $next(VL_UNITLIQUIDO.TRA_TRANSITEMSVC)
					vCdCFOPProx     = $next(CD_CFOP.TRA_TRANSITEMSVC)
					vCdCompVendProx = $next(CD_COMPVEND.TRA_TRANSITEMSVC)				
					
					vDsRegistroItem = ""
					putitem/id vDsRegistroItem, "CD_PRODUTO", CD_PRODUTO.TRA_TRANSITEMSVC
					putitem/id vDsRegistroItem, "CD_COMPVEND", CD_COMPVEND.TRA_TRANSITEMSVC
					putitem/id vDsRegistroItem, "CD_PROMOCAO", CD_PROMOCAO.TRA_TRANSITEMSVC
					putitem/id vDsRegistroItem, "QT_FATURADO", QT_SOLICITADA.TRA_TRANSITEMSVC
					putitem/id vDsRegistroItem, "VL_UNITBRUTO", VL_UNITBRUTO.TRA_TRANSITEMSVC
					putitem/id vDsRegistroItem, "VL_UNITLIQUIDO", VL_UNITLIQUIDO.TRA_TRANSITEMSVC
					vVlCalc = VL_UNITDESC.TRA_TRANSITEMSVC + VL_UNITDESCCAB.TRA_TRANSITEMSVC
					putitem/id vDsRegistroItem, "VL_TOTALBRUTO", VL_TOTALBRUTO.TRA_TRANSITEMSVC
					putitem/id vDsRegistroItem, "VL_TOTALLIQUIDO", VL_TOTALLIQUIDO.TRA_TRANSITEMSVC
					putitem/id vDsRegistroItem, "VL_UNITDESC", vVlCalc
					vVlCalc = VL_TOTALDESC.TRA_TRANSITEMSVC + VL_TOTALDESCCAB.TRA_TRANSITEMSVC
					putitem/id vDsRegistroItem, "VL_TOTALDESC", vVlCalc
					if ($empty("TRA_ITEMIMPOSSVC") = 0)
						setocc "TRA_ITEMIMPOSSVC", 1
						while ($status >= 0)   
							creocc "TMP_NR09SVC", -1
							NR_GERAL.TMP_NR09SVC/init = CD_IMPOSTO.TRA_ITEMIMPOSSVC
							retrieve/o "TMP_NR09SVC"
							PR_ALIQUOTA.TMP_NR09SVC/init = PR_ALIQUOTA.TRA_ITEMIMPOSSVC
							PR_BASECALC.TMP_NR09SVC/init = PR_BASECALC.TRA_ITEMIMPOSSVC	
							PR_REDUBASE.TMP_NR09SVC/init = PR_REDUBASE.TRA_ITEMIMPOSSVC
							VL_BASECALC.TMP_NR09SVC/init = VL_BASECALC.TMP_NR09SVC + VL_BASECALC.TRA_ITEMIMPOSSVC
							VL_ISENTO.TMP_NR09SVC/init   = VL_ISENTO.TMP_NR09SVC   + VL_ISENTO.TRA_ITEMIMPOSSVC
							VL_OUTRO.TMP_NR09SVC/init    = VL_OUTRO.TMP_NR09SVC    + VL_OUTRO.TRA_ITEMIMPOSSVC
							VL_IMPOSTO.TMP_NR09SVC/init  = VL_IMPOSTO.TMP_NR09SVC  + VL_IMPOSTO.TRA_ITEMIMPOSSVC
							CD_CST.TMP_NR09SVC/init      = CD_CST.TRA_ITEMIMPOSSVC ;-- MAD [Proj/Tar.170/188] - 18/02/2011
							;-- MAD [Proj/Tar.170/347] - 25/08/2011 - Comentado a lógica abaixo
							;;ICJ [PROJ/TAR 170/188] (22/02/2011)
							;clear/e "FIS_REGRAIMPOSVC"
							;CD_IMPOSTO.FIS_REGRAIMPOSVC/init = CD_IMPOSTO.TRA_ITEMIMPOSSVC
							;CD_REGRAFISCAL.FIS_REGRAIMPOSVC/init = vCdRegraFiscal
							;retrieve/e "FIS_REGRAIMPOSVC"
							;if ($status >= 0)
							;	CD_CST.TMP_NR09SVC/init = CD_CST.FIS_REGRAIMPOSVC
							;endif
							;;;
							setocc "TRA_ITEMIMPOSSVC", $curocc("TRA_ITEMIMPOSSVC") + 1
						endwhile
					endif
					
					if ($empty("TRA_ITEMSERIASVC") = 0)
						vDsLstSerial = ""
						setocc "TRA_ITEMSERIASVC", 1
						while ($status >= 0)   
							vDsRegistro = ""
							putitem/id vDsRegistro, "NR_SEQUENCIA", NR_SEQUENCIA.TRA_ITEMSERIASVC
							putitem/id vDsRegistro, "CD_EMPFAT", CD_EMPFAT.TRA_ITEMSERIASVC
							putitem/id vDsRegistro, "CD_GRUPOEMPRESA", CD_GRUPOEMPRESA.TRA_ITEMSERIASVC
							putitem/id vDsRegistro, "DS_SERIAL", DS_SERIAL.TRA_ITEMSERIASVC
							putitem vDsLstSerial, -1, vDsRegistro
							setocc "TRA_ITEMSERIASVC", $curocc("TRA_ITEMSERIASVC") + 1
						endwhile
						putitem/id vDsRegistroItem, "DS_LSTSERIAL", vDsLstSerial
					endif

					if ($empty("TRA_ITEMVLSVC") = 0)
						vDsLstValor = ""
						setocc "TRA_ITEMVLSVC", 1
						while ($status >= 0)   
							vDsRegistro = ""
							putitem/id vDsRegistro, "TP_VALOR", TP_VALOR.TRA_ITEMVLSVC
							putitem/id vDsRegistro, "CD_VALOR", CD_VALOR.TRA_ITEMVLSVC
							putitem/id vDsRegistro, "TP_ATUALIZACAO", TP_ATUALIZACAO.TRA_ITEMVLSVC
							putitem/id vDsRegistro, "VL_UNITARIOORIG", VL_UNITARIOORIG.TRA_ITEMVLSVC
							putitem/id vDsRegistro, "VL_UNITARIO", VL_UNITARIO.TRA_ITEMVLSVC
							putitem/id vDsRegistro, "PR_DESCONTO", PR_DESCONTO.TRA_ITEMVLSVC
							putitem/id vDsRegistro, "PR_DESCONTOCAB", PR_DESCONTOCAB.TRA_ITEMVLSVC
							putitem/id vDsRegistro, "IN_PADRAO", IN_PADRAO.TRA_ITEMVLSVC
							putitem vDsLstValor, -1, vDsRegistro
							setocc "TRA_ITEMVLSVC", $curocc("TRA_ITEMVLSVC") + 1
						endwhile
						putitem/id vDsRegistroItem, "DS_LSTVALOR", vDsLstValor
					else
						;Compra / Transferência de entrada
						if (TP_OPERACAO.TRA_TRANSACAOSVC = "E") & (TP_MODALIDADE.GER_OPERACAOSVC = 2 | TP_MODALIDADE.GER_OPERACAOSVC = 4) & (CD_ESPECIE.TRA_TRANSITEMSVC != $cdEspecieServico$)
							$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Produto %%CD_PRODUTO.TRA_TRANSITEMSVC da transação %%NR_TRANSACAO.TRA_TRANSITEMSVC não possui valores cadastrados", "ADICIONAL=Operação->FISSVCO004.geraNF")
							poCdErro = $xCdErro$
							poCtxErro = $xCtxErro$
							exit(-1)
						endif
					endif

					if ($empty("TRA_ITEMUNSVC") = 0)
						vDsRegistro = ""
						putitem/id vDsRegistro, "CD_EMPFAT", CD_EMPFAT.TRA_ITEMUNSVC
						putitem/id vDsRegistro, "CD_GRUPOEMPRESA", CD_GRUPOEMPRESA.TRA_ITEMUNSVC
						putitem/id vDsRegistro, "CD_ESPECIE", CD_ESPECIE.TRA_ITEMUNSVC
						putitem/id vDsRegistro, "TP_OPERACAO", TP_OPERACAO.TRA_ITEMUNSVC
						putitem/id vDsRegistro, "QT_CONVERSAO", QT_CONVERSAO.TRA_ITEMUNSVC
						putitem/id vDsRegistroItem, "DS_LSTITEMUN", vDsRegistro
					endif

					;thamati 22/03/2010 [Proj. 0130 - Tar. 0991]
					if (!$empty("TRA_ITEMLOTESVC"))
						vDsLstValor = ""
						setocc "TRA_ITEMLOTESVC", 1
						while ($status >= 0)
							vDsRegistro = ""
							putitem/id vDsRegistro, "NR_SEQUENCIA", NR_SEQUENCIA.TRA_ITEMLOTESVC
   						putitem/id vDsRegistro, "CD_EMPLOTE", CD_EMPLOTE.TRA_ITEMLOTESVC
							putitem/id vDsRegistro, "NR_LOTE", NR_LOTE.TRA_ITEMLOTESVC
							putitem/id vDsRegistro, "NR_ITEMLOTE", NR_ITEMLOTE.TRA_ITEMLOTESVC
							putitem/id vDsRegistro, "QT_LOTE", QT_LOTE.TRA_ITEMLOTESVC
							putitem/id vDsRegistro, "QT_CONE", QT_CONE.TRA_ITEMLOTESVC
							putitem/id vDsRegistro, "CD_BARRALOTE", CD_BARRALOTE.TRA_ITEMLOTESVC							
							putitem vDsLstValor, -1, vDsRegistro
							setocc "TRA_ITEMLOTESVC", $curocc("TRA_ITEMLOTESVC") + 1
						endwhile
						putitem/id vDsRegistroItem, "DS_LSTITEMLOTE", vDsLstValor 
					endif
					;

					; --- DIONE |179/0005| 17/12/2010
					if (!$empty("TRA_ITEMPRDFISVC"))
						vDsLstValor = ""
						setocc "TRA_ITEMPRDFISVC", 1
						while ($status >= 0)
							vDsRegistro = ""
							putitem/id vDsRegistro, "CD_EMPRESA", CD_EMPRESA.TRA_ITEMPRDFISVC
  							putitem/id vDsRegistro, "NR_TRANSACAO", NR_TRANSACAO.TRA_ITEMPRDFISVC
							putitem/id vDsRegistro, "DT_TRANSACAO", DT_TRANSACAO.TRA_ITEMPRDFISVC
							putitem/id vDsRegistro, "NR_ITEM", NR_ITEM.TRA_ITEMPRDFISVC
							putitem/id vDsRegistro, "CD_EMPPRDFIN", CD_EMPPRDFIN.TRA_ITEMPRDFISVC
							putitem/id vDsRegistro, "NR_PRDFIN", NR_PRDFIN.TRA_ITEMPRDFISVC

							putitem vDsLstValor, -1, vDsRegistro
							setocc "TRA_ITEMPRDFISVC", $curocc("TRA_ITEMPRDFISVC") + 1
						endwhile
						putitem/id vDsRegistroItem, "DS_LSTITEMPRDFIN", vDsLstValor 
					endif
					; ---

					;-- MAD [Proj/Tar.061/916] - 25/01/2011
					if (!$empty("TRA_ITEMSELOESVC"))
						setocc "TRA_ITEMSELOESVC", 1
						while ($status >= 0)
							vDsRegistro = ""
							putlistitems/occ vDsRegistro, "TRA_ITEMSELOESVC"
							putitem vDsLstSelo, -1, vDsRegistro
							setocc "TRA_ITEMSELOESVC", $curocc("TRA_ITEMSELOESVC") + 1
						endwhile
					endif
					;;

					viParams = ""
					putitem/id viParams, "CD_EMPRESA", CD_EMPRESA.TRA_TRANSITEMSVC
					putitem/id viParams, "NR_TRANSACAO", NR_TRANSACAO.TRA_TRANSITEMSVC
					putitem/id viParams, "DT_TRANSACAO", DT_TRANSACAO.TRA_TRANSITEMSVC
					putitem/id viParams, "NR_ITEM", NR_ITEM.TRA_TRANSITEMSVC
					activate "TRASVCO016".buscaDespesaItem($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
					if ($procerror)
						$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						exit(-1)
					elseif ($status < 0)
						$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						exit(-1)
					endif
					vDsLstDespesa = $item("DS_LSTDESPESA", voParams)
					if (vDsLstDespesa != "")
						putitem/id vDsRegistroItem, "DS_LSTDESPESA", vDsLstDespesa
					endif
					
					putitem vDsLstItem, -1, vDsRegistroItem

					vInAgrupaItem = <FALSE>
					 
					if ($curocc("TRA_TRANSITEMSVC") < $totocc("TRA_TRANSITEMSVC"))
						if ($tpAgrupamentoItemNF$ = 01)
							if ($tpAgrupamento$ = "T") ;Grupo
								if (CD_CFOP.TRA_TRANSITEMSVC = vCdCFOPProx) & (CD_SEQGRUPO.TRA_TRANSITEMSVC = vCdSeqGrupoProx) & (CD_COMPVEND.TRA_TRANSITEMSVC = vCdCompVendProx)
									vInAgrupaItem = <TRUE>					
								endif
							elseif ($tpAgrupamento$ = "C") ;Cor
								if (CD_CFOP.TRA_TRANSITEMSVC = vCdCFOPProx) & (CD_SEQGRUPO.TRA_TRANSITEMSVC = vCdSeqGrupoProx) & (CD_COMPVEND.TRA_TRANSITEMSVC = vCdCompVendProx) & (CD_COR.TRA_TRANSITEMSVC = vCdCorProx)
									vInAgrupaItem = <TRUE>					
								endif
							elseif ($tpAgrupamento$ = "A") ;Tamanho
								if (CD_CFOP.TRA_TRANSITEMSVC = vCdCFOPProx) & (CD_SEQGRUPO.TRA_TRANSITEMSVC = vCdSeqGrupoProx)  & (CD_COMPVEND.TRA_TRANSITEMSVC = vCdCompVendProx) & (CD_TAMANHO.TRA_TRANSITEMSVC = vCdTamanhoProx)
									vInAgrupaItem = <TRUE>					
								endif
							endif
						else
							if ($tpAgrupamento$ = "T") ;Grupo
								if (CD_CFOP.TRA_TRANSITEMSVC = vCdCFOPProx) & (CD_SEQGRUPO.TRA_TRANSITEMSVC = vCdSeqGrupoProx) & (VL_UNITLIQUIDO.TRA_TRANSITEMSVC = vVlUnitProx) & (CD_COMPVEND.TRA_TRANSITEMSVC = vCdCompVendProx)
									vInAgrupaItem = <TRUE>					
								endif
							elseif ($tpAgrupamento$ = "C") ;Cor
								if (CD_CFOP.TRA_TRANSITEMSVC = vCdCFOPProx) & (CD_SEQGRUPO.TRA_TRANSITEMSVC = vCdSeqGrupoProx) & (VL_UNITLIQUIDO.TRA_TRANSITEMSVC = vVlUnitProx) & (CD_COMPVEND.TRA_TRANSITEMSVC = vCdCompVendProx) & (CD_COR.TRA_TRANSITEMSVC = vCdCorProx)
									vInAgrupaItem = <TRUE>					
								endif
							elseif ($tpAgrupamento$ = "A") ;Tamanho
								if (CD_CFOP.TRA_TRANSITEMSVC = vCdCFOPProx) & (CD_SEQGRUPO.TRA_TRANSITEMSVC = vCdSeqGrupoProx) & (VL_UNITLIQUIDO.TRA_TRANSITEMSVC = vVlUnitProx) & (CD_COMPVEND.TRA_TRANSITEMSVC = vCdCompVendProx) & (CD_TAMANHO.TRA_TRANSITEMSVC = vCdTamanhoProx)
									vInAgrupaItem = <TRUE>					
								endif
							endif
						endif
						if (CD_PRODUTO.TRA_TRANSITEMSVC = 0) & (CD_BARRAPRD.TRA_TRANSITEMSVC = "")
							vInAgrupaItem = <FALSE>
						endif
					endif

					if (vInAgrupaItem = <TRUE>)
						vQtFaturado     = vQtFaturado     + QT_SOLICITADA.TRA_TRANSITEMSVC            
						vVlTotalBruto   = vVlTotalBruto   + VL_TOTALBRUTO.TRA_TRANSITEMSVC                
						vVlTotalLiquido = vVlTotalLiquido + VL_TOTALLIQUIDO.TRA_TRANSITEMSVC
						vVlTotalDesc    = vVlTotalDesc    + VL_TOTALDESC.TRA_TRANSITEMSVC
						vVlTotalDescCab = vVlTotalDescCab + VL_TOTALDESCCAB.TRA_TRANSITEMSVC
					else
						vNrItem = vNrItem + 1
						QT_SOLICITADA.TRA_TRANSITEMSVC/init   = QT_SOLICITADA.TRA_TRANSITEMSVC   + vQtFaturado
						VL_TOTALBRUTO.TRA_TRANSITEMSVC/init   = VL_TOTALBRUTO.TRA_TRANSITEMSVC   + vVlTotalBruto
						VL_TOTALLIQUIDO.TRA_TRANSITEMSVC/init = VL_TOTALLIQUIDO.TRA_TRANSITEMSVC + vVlTotalLiquido
						VL_TOTALDESC.TRA_TRANSITEMSVC/init    = VL_TOTALDESC.TRA_TRANSITEMSVC    + vVlTotalDesc        
						VL_TOTALDESCCAB.TRA_TRANSITEMSVC/init = VL_TOTALDESCCAB.TRA_TRANSITEMSVC + vVlTotalDescCab
						
						if ($inLog$ = <TRUE>) & ($curocc("TRA_TRANSITEMSVC") = 1)
							$hrInicio$ = $clock
							putmess "- Inicio gera NF. geraItemNF FISSVCO004: %%$hrInicio$"
						endif

						call geraItemNF(vDsLstItem, vNrItem)
						if ($procerror)
							$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
							poCdErro = $xCdErro$
							poCtxErro = $xCtxErro$
							exit(-1)
						endif
						if ($status < 0)
							poCdErro = $xCdErro$
							poCtxErro = $xCtxErro$
							exit(-1)
						endif
						
						if ($inLog$ = <TRUE>) & ($curocc("TRA_TRANSITEMSVC") = 1)
							$hrFim$ = $clock
							$hrTempo$ = $hrFim$ - $hrInicio$
							putmess "- Fim gera NF. geraItemNF FISSVCO004: %%$hrFim$ - %%$hrTempo$"
						endif

						;-- MAD [Proj/Tar.061/916] - 25/01/2011
						call geraItemSeloEnt(vDsLstSelo)
						if ($procerror)
							$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
							poCdErro = $xCdErro$
							poCtxErro = $xCtxErro$
							exit(-1)
						endif
						if ($status < 0)
							poCdErro = $xCdErro$
							poCtxErro = $xCtxErro$
							exit(-1)
						endif						

						vDsLstItem = ""
						vDsLstSelo = ""
						vQtFaturado     = 0
						vVlTotalBruto   = 0
						vVlTotalLiquido = 0
						vVlTotalDesc    = 0
						vVlTotalDescCab = 0
						clear/e "TMP_NR09SVC"
					endif
					if ($inQuebraItem$ = <TRUE>) & (vNrItem = NR_ITENS.GER_MODNFCSVC)
						vTpLoopItem = 1
					endif
					if ($inQuebraCFOP$ = <TRUE>) & (CD_CFOP.TRA_TRANSITEMSVC != vCdCFOPProx)
						vTpLoopItem = 1
					endif
					; -> rodrigo - PRJ 130 TAR 1367 - 13/01/2011
					if ($nrItemQuebraNf$ > 0) & (vNrItem = $nrItemQuebraNf$)
						vTpLoopItem = 1
					endif
					; <- rodrigo - PRJ 130 TAR 1367 - 13/01/2011

					setocc "TRA_TRANSITEMSVC" , $curocc("TRA_TRANSITEMSVC") + 1
					if ($status < 0)
						vTpLoopItem = 2
					endif            
				endwhile
			
				if (vInPrimeira = <TRUE>)
					if ($inLog$ = <TRUE>)
						$hrInicio$ = $clock
						putmess "- Inicio gera NF. geraTransport FISSVCO004: %%$hrInicio$"
					endif
	
					call geraTransport()
					if ($procerror)
						$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						exit(-1)
					endif
					if ($status < 0)
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						exit(-1)
					endif
				
					if ($inLog$ = <TRUE>)
						$hrFim$   = $clock
						$hrTempo$ = $hrFim$ - $hrInicio$
						putmess "- Fim gera NF. geraTransport FISSVCO004: %%$hrFim$ - %%$hrTempo$"
					endif

					call rateiaValorCapa()
					if ($procerror)
						$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						exit(-1)
					endif
					if ($status < 0)
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						exit(-1)
					endif
					
					vInPrimeira = <FALSE>
				endif

				call geraImpostoItem()
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif
				if ($status < 0)
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif

				VL_TOTALNOTA.FIS_NFSVC = VL_TOTALPRODUTO.FIS_NFSVC + VL_DESPACESSOR.FIS_NFSVC + %\
								    VL_FRETE.FIS_NFSVC + VL_SEGURO.FIS_NFSVC + %\
								    VL_IPI.FIS_NFSVC + VL_ICMSSUBST.FIS_NFSVC

;				if (TP_FRETE.FIS_NFTRANSPSVC = 2) ;Destinatário
;					vVlFrete = VL_FRETE.FIS_NFSVC
;				else
;					if ($inSomaFrete$ = <TRUE>)
;						vVlFrete = VL_FRETE.FIS_NFSVC
;					else
;						vVlFrete = 0
;					endif
;				endif
;				VL_TOTALNOTA.FIS_NFSVC = VL_TOTALPRODUTO.FIS_NFSVC + VL_DESPACESSOR.FIS_NFSVC + %\
;								    vVlFrete + VL_SEGURO.FIS_NFSVC + %\
;								    VL_IPI.FIS_NFSVC + VL_ICMSSUBST.FIS_NFSVC
;			
				if ($inLog$ = <TRUE>)
					$hrInicio$ = $clock
					putmess "- Inicio gera NF. geraParcela FISSVCO004: %%$hrInicio$"
				endif
				
				call geraParcela()
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif
				if ($status < 0)
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif			

				if ($inLog$ = <TRUE>)
					$hrFim$   = $clock
					$hrTempo$ = $hrFim$ - $hrInicio$
					putmess "- Fim gera NF. geraParcela FISSVCO004: %%$hrFim$ - %%$hrTempo$"
					
					$hrInicio$ = $clock
					putmess "- Inicio gera NF. geraECF FISSVCO004: %%$hrInicio$"
				endif
				
				call geraECF()
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif
				if ($status < 0)
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif

	
				if ($inLog$ = <TRUE>)
					$hrFim$   = $clock
					$hrTempo$ = $hrFim$ - $hrInicio$
					putmess "- Fim gera NF. geraECF FISSVCO004: %%$hrFim$ - %%$hrTempo$"
				endif
				
				call geraObservacao(vDsLinhaObs)
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
			   endif
				if ($status < 0)
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif			
			
				if (vTpLoopItem = 2)
					vInLoopCapa = <FALSE>
				endif
			endwhile
		else
			if ($inLog$ = <TRUE>)
				$hrInicio$ = $clock
				putmess "- Inicio gera NF. geraCapaNF FISSVCO004: %%$hrInicio$"
			endif
			
			call geraCapaNF()
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
			if ($status < 0)
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif

			if ($inLog$ = <TRUE>)
				$hrFim$   = $clock
				$hrTempo$ = $hrFim$ - $hrInicio$
				putmess "- Fim gera NF. geraCapaNF FISSVCO004: %%$hrFim$ - %%$hrTempo$"
				
				$hrInicio$ = $clock
				putmess "- Inicio gera NF. geraRemDest FISSVCO004: %%$hrInicio$"
			endif
			
			call geraRemDest()
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
			if ($status < 0)
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
			
			if ($inLog$ = <TRUE>)
				$hrFim$ = $clock
				$hrTempo$ = $hrFim$ - $hrInicio$
				putmess "- Fim gera NF. geraRemDest FISSVCO004: %%$hrFim$ - %%$hrTempo$"
			endif
		endif
		
		if (TP_MODALIDADE.GER_OPERACAOSVC = "D") ; Hugo Tarefa 61-136  09/08/07
			VL_TOTALNOTA.FIS_NFSVC    = 0
			VL_TOTALPRODUTO.FIS_NFSVC = 0
			VL_DESPACESSOR.FIS_NFSVC  = 0
			VL_SEGURO.FIS_NFSVC       = 0
			VL_FRETE.FIS_NFSVC        = 0 
			QT_FATURADO.FIS_NFSVC     = 0
			VL_BASEICMS.FIS_NFSVC     = 0
		endif

		;-- MAD [Proj/Tar.170/163] - 13/01/2011
		; A lógica abaixo foi inserida fora do laço (repeat)
		;;ICJ [PROJ/TAR 170/107] (26/10/2010)	
		;vLstNF = ""
		;putitem/id vLstNF, "CD_EMPRESA", CD_EMPRESA.FIS_NFSVC
		;putitem/id vLstNF, "DT_FATURA", DT_FATURA.FIS_NFSVC
		;putitem/id vLstNF, "NR_FATURA", NR_FATURA.FIS_NFSVC
		;putitem/id vLstNF, "CD_MODELONF", CD_MODELONF.FIS_NFSVC
		;putitem vDsLstNotaFiscal, -1, vLstNF
		;;
		
		; Ranghetti - 170/355 - 16/09/2011 ->
		if($inIncluiIpiDevSimp$ = 1)
			call alteraVlIpi()
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
			if ($status < 0)
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
		endif
		; <-		

		delitem vDsLstTransacao, 1
	until (vDsLstTransacao = "")

	;-- MAD [Proj/Tar.170/163] - 13/01/2011
	if ($empty("FIS_NFSVC") = 0)
		vPos = $curocc("FIS_NFSVC")
		setocc "FIS_NFSVC", 1
		while ($status >= 0)    
			vLstNF = ""
			putitem/id vLstNF, "CD_EMPRESA"      ,CD_EMPRESA.FIS_NFSVC
			putitem/id vLstNF, "DT_FATURA"       ,DT_FATURA.FIS_NFSVC
			putitem/id vLstNF, "NR_FATURA"       ,NR_FATURA.FIS_NFSVC
			putitem/id vLstNF, "CD_MODELONF"     ,CD_MODELONF.FIS_NFSVC
			putitem/id vLstNF, "TP_ORIGEMEMISSAO",TP_ORIGEMEMISSAO.FIS_NFSVC
			putitem vDsLstNotaFiscal, -1, vLstNF
			setocc "FIS_NFSVC", $curocc("FIS_NFSVC") + 1
		endwhile
		setocc "FIS_NFSVC", vPos
	endif
	;;

	$collhandle("FIS_NFSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	;---Elia Proj. 061/410 14/08/08
	if (TP_OPERACAO.GER_OPERACAOSVC = "S") & (TP_MODALIDADE.GER_OPERACAOSVC = 3 | TP_MODALIDADE.GER_OPERACAOSVC = 4) ; S - Saida / 3 - Devolucao / 4 - Venda
		viParams = piParams
		activate "FISSVCO024".gravaObsNfFisco($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")        
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif
	;

	if ($tpModDctoFiscalLocal$ = 55) ; NF-e
		repeat
			getitem vDsRegistro, vDsLstNotaFiscal, 1
			if ($item("TP_ORIGEMEMISSAO",vDsRegistro) = 1) ;Emissão própria

				putitem/id viParams, "CD_EMPRESA" , $item("CD_EMPRESA", vDsRegistro)
				putitem/id viParams, "NR_FATURA"  , $item("NR_FATURA", vDsRegistro)
				putitem/id viParams, "DT_FATURA"  , $item("DT_FATURA", vDsRegistro)
				putitem/id viParams, "CD_MODELONF", $item("CD_MODELONF", vDsRegistro)
				activate "FISSVCO024".gravaObsNfe($xlpg$, viParams, voParams, $xCdErro$, $xCtxerro$)
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")        
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
			endif
			delitem vDsLstNotaFiscal, 1
		until (vDsLstNotaFiscal = "")
		;;
	endif
	
	;>-- MAC - PRJ 156 TAR 179 - 12/02/2010 ---
;	if ($LstLoteInfGeral$ != "") ;thamati 22/03/2010 [Proj. 0130 - Tar. 0991]
	if ($LstLoteInfGeral$ != "") & (!$inItemLote$) 
		vDsLstLoteInfGeral = $LstLoteInfGeral$
		repeat
			getitem vDsLoteInf, vDsLstLoteInfGeral, 1
			vDsLstNF = ""
			vCdEmpLote  = $item("CD_EMPRESA", vDsLoteInf)
			vNrLote     = $item("NR_LOTE", vDsLoteInf)
			vNrItemLote = $item("NR_ITEM", vDsLoteInf)
			putitem vDsLstNF, -1, vDsLoteInf
			viParams = ""
			putitem/id viParams, "CD_EMPRESA", vCdEmpLote
			putitem/id viParams, "NR_LOTE", vNrLote
			putitem/id viParams, "NR_ITEM", vNrItemLote 
			putitem/id viParams, "IN_INCLUSAO", <TRUE>
			putitem/id viParams, "DS_LSTNF", vDsLstNF
			activate "PRDSVCO020".gravaLoteINF($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif			
			delitem vDsLstLoteInfGeral, 1
		until (vDsLstLoteInfGeral = "")
	endif
	;--<

	poParams = ""
	vDsLstNF = ""
	if ($empty("FIS_NFSVC") = 0)
		setocc "FIS_NFSVC", 1
		while ($status >= 0)    
			vDsRegistro = ""
			putitem/id vDsRegistro, "CD_EMPRESA", CD_EMPRESA.FIS_NFSVC
			putitem/id vDsRegistro, "NR_FATURA", NR_FATURA.FIS_NFSVC
			putitem/id vDsRegistro, "DT_FATURA", DT_FATURA.FIS_NFSVC
			putitem vDsLstNF, -1, vDsRegistro
			
			;thamati 22/03/2010 [Proj. 0130 - Tar. 0991]
;          	tarefa 0156/0179 - 12/02/2010, começou a gravar PRD_LOTEINF
;			;Hugo em 29/07/09 Tarefa 130-617
;			if (TP_OPERACAO.FIS_NFSVC = "E") ;Entrada 
;				viParams = vDsRegistro
;				activate "FISSVCO024".vinculaLoteTransacaoNF($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
;				if ($procerror)
;					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")        
;					poCdErro = $xCdErro$
;					poCtxErro = $xCtxErro$
;					return(-1)
;				elseif ($xCdErro$)
;					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
;					poCdErro = $xCdErro$
;					poCtxErro = $xCtxErro$
;					return(-1)
;				endif
;			endif
			;

			; @>-/-- Virginia - PRJ 052 - TAR 353 - 03/12/2009
			viParams = vDsRegistro
			putitem/id viParams, "CD_MODULO", "FIS"
			activate "CTBSVCO016".geraContabilizaEmi($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>,$procerror,$procerrorcontext,"")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return (-1)
			elseif ($xCdErro$)
				$instancehandle->SetStatus(<STS_ERRO>,$xCdErro$,$xCtxErro$,"")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return (-1)
			endif
			; --\-<@
		
			setocc "FIS_NFSVC", $curocc("FIS_NFSVC") + 1
		endwhile
	endif
	putitem/id poParams, "DS_LSTNF", vDsLstNF
	
	exit(0)
end

;---Elia Proj. 130/487 22/05/09---
;;---Logica movida para o FISSVCO038
;public operation atualizaEstoqueNF
;;---------------------------------
;	return (0)
;End ; operation atualizaEstoqueNF

;-----------------------
public operation emiteNF
;-----------------------
	params
		string  piGlobal    :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		string  viParams, voParams, vDsRegistro, vDsLstNF, vdsLstNrNF, vCdSerie, vDsLstTransp
		numeric vCdEmpresa, vNrFatura, vNrNF, vCdModeloNF, vNrLinha, vModDctoFiscal, vNrNFTransp
		date    vDtFatura, vDtSistema
		boolean vInECF
	endvariables

	$xlpg$ = piGlobal
	
	vDsLstNF    = $item("DS_LSTNF", piParams)
	vCdModeloNF = $item("CD_MODELONF", piParams)
	vInECF      = $item("IN_ECF", piParams)
	vDtSistema  = $item("DT_SISTEMA", $xlpg$)	

	clear/e "GER_MODNFCSVC"
	
	if (vCdModeloNF = 0)
		if (vInECF != <TRUE>)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Modelo de NF não informado!", "ADICIONAL=Operação->FISSVCO004.emiteNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
	else		
		CD_MODELONF.GER_MODNFCSVC/init = vCdModeloNF
		retrieve/e "GER_MODNFCSVC"
		if ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Modelo de NF %%vCdModeloNF não cadastrado!", "ADICIONAL=Operação->FISSVCO004.emiteNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
	endif
	
	;-- MAD [Proj/Tar.175/030] - 03/01/2011
	call getParam(vCdEmpresa)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if ($status < 0)
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	;;

	viParams = "" 
	putitem/id viParams, "DS_LSTNF", vDsLstNF
	activate "SICSVCO005".reservaNumeroNF($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext)
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	vDsLstNF = $item("DS_LSTNF", voParams)
	vDsLstNrNF = $item("DS_LSTNF", voParams)

	if (vDsLstNF = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Lista de NF não informada!", "ADICIONAL=Operação->FISSVCO004.emiteNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	clear/e "FIS_NFSVC"
	
	repeat
		getitem vDsRegistro, vDsLstNF, 1
		vCdEmpresa = $item("CD_EMPRESA", vDsRegistro)
		vNrFatura  = $item("NR_FATURA", vDsRegistro)
		vDtFatura  = $item("DT_FATURA", vDsRegistro)
		
		if (vCdEmpresa = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->FISSVCO004.emiteNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		
		if (vNrFatura = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Fatura não informado!", "ADICIONAL=Operação->FISSVCO004.emiteNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1) 
		endif
		
		if (vDtFatura = "")
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data NF não informada!", "ADICIONAL=Operação->FISSVCO004.emiteNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		
		creocc "FIS_NFSVC", -1
		CD_EMPRESA.FIS_NFSVC/init = vCdEmpresa
		NR_FATURA.FIS_NFSVC/init  = vNrFatura
		DT_FATURA.FIS_NFSVC/init  = vDtFatura
		retrieve/o "FIS_NFSVC"
		if ($status = -7)
			retrieve/x "FIS_NFSVC"
		else
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=NF %%vCdEmpresa / %%vNrFatura não cadastrada!", "ADICIONAL=Operação->FISSVCO004.emiteNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1) 
		endif
		vModDctoFiscal = TP_MODDCTOFISCAL.FIS_NFSVC ;ICJ [PROJ/TAR 61/867] (23/09/2010)
		clear/e "GER_OPERACAOSVC"
		CD_OPERACAO.GER_OPERACAOSVC/init = CD_OPERACAO.FIS_NFSVC
		retrieve/e "GER_OPERACAOSVC"
		if ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Operaçao %%CD_OPERACAO.GER_OPERACAOSVC não cadastrada!", "ADICIONAL=Operação->FISSVCO004.emiteNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif

		if (TP_SITUACAO.FIS_NFSVC = "N") ;Normal
			if (TP_DOCTO.GER_OPERACAOSVC = 0);Nao definido
				discard "FIS_NFSVC"
			else
				if (TP_DOCTO.GER_OPERACAOSVC = 2) | (TP_DOCTO.GER_OPERACAOSVC = 3) ;Cupom fiscal
					vCdSerie = "ECF"
				else
					vCdSerie = DS_SIGLA.GER_SERIESVC
					if (vCdSerie = "")
						vCdSerie = "UN"
					endif
				endif	
			
				if (TP_ORIGEMEMISSAO.FIS_NFSVC = 2) ;Emissão terceiro
					NR_NF.FIS_NFSVC = NR_FATURA.FIS_NFSVC
					CD_SERIE.FIS_NFSVC = vCdSerie
					DT_EMISSAO.FIS_NFSVC = vDtSistema
					TP_SITUACAO.FIS_NFSVC = "E" ;Emitida
				else
					viParams = ""
					putitem/id viParams, "CD_EMPRESA", CD_EMPRESA.FIS_NFSVC
					putitem/id viParams, "NR_FATURA", NR_FATURA.FIS_NFSVC
					putitem/id viParams, "DT_FATURA", DT_FATURA.FIS_NFSVC
					putitem/id viParams, "CD_EMPFAT", CD_EMPFAT.FIS_NFSVC
					putitem/id viParams, "CD_SERIE", vCdSerie
					;---- WMC - 11/11/2010 - PRJ 170 TAR 121
					;putitem/id viParams, "TP_MODDCTOFISCALLOCAL", TP_MODDCTOFISCAL.FIS_NFSVC ;ICJ [PROJ/TAR 61/867] (23/09/2010)
					if (TP_MODDCTOFISCAL.FIS_NFSVC != 85) & (TP_MODDCTOFISCAL.FIS_NFSVC != 87)
						putitem/id viParams, "TP_MODDCTOFISCALLOCAL", TP_MODDCTOFISCAL.FIS_NFSVC 
					else
						putitem/id viParams, "TP_MODDCTOFISCALLOCAL", $tpModDctoFiscal$
					endif
					;----//----//----
					newinstance "GERSVCO001","GERSVCO001","TRANSACTION=TRUE"
					activate "GERSVCO001".buscaNrNF($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
					if ($procerror)
						$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext)
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						exit(-1)
					elseif ($status < 0)
						$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						exit(-1)
					endif
					;Quando for ECF o servico de numeracao nao grava/commit o numero na NF
					;porque existem transacao no banco pendente sobre o FIS_NF(no caso F7)
					if (vCdSerie = "ECF")
						vNrNF = $item("NR_NF", voParams)
						if (vNrNF = 0)
							$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Não foi possivel obter numeração para a NF(ECF) %%vCdEmpresa / %%vNrFatura%%%!", "ADICIONAL=Operação->FISSVCO004.emiteNF")
							poCdErro = $xCdErro$
							poCtxErro = $xCtxErro$
							exit(-1)
						endif
						NR_NF.FIS_NFSVC = vNrNF
						CD_SERIE.FIS_NFSVC = vCdSerie
					else
						discard "FIS_NFSVC"
						creocc "FIS_NFSVC", -1
						CD_EMPRESA.FIS_NFSVC/init = vCdEmpresa
						NR_FATURA.FIS_NFSVC/init  = vNrFatura
						DT_FATURA.FIS_NFSVC/init  = vDtFatura
						TP_MODDCTOFISCAL.FIS_NFSVC/init = vModDctoFiscal ;;ICJ [PROJ/TAR 61/867] (20/09/2010)
						retrieve/o "FIS_NFSVC"
						if ($status = -7)
							retrieve/x "FIS_NFSVC"
						else
							$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Não possível recarregar a NF %%vCdEmpresa / %%vNrFatura após a rotina de numeração!", "ADICIONAL=Operação->FISSVCO004.emiteNF")
							poCdErro = $xCdErro$
							poCtxErro = $xCtxErro$
							exit(-1) 
						endif
					endif
					DT_EMISSAO.FIS_NFSVC  = vDtSistema
					TP_SITUACAO.FIS_NFSVC = "E" ;Emitida
					CD_MODELONF.FIS_NFSVC = CD_MODELONF.GER_MODNFCSVC
				endif
			endif	
		elseif (TP_SITUACAO.FIS_NFSVC = "E") ;Emitida
		else
			discard "FIS_NF"
		endif
		
		delitem vDsLstNF, 1
	until (vDsLstNF = "")

	setocc "FIS_NFSVC", 1

	if ($empty("FIS_NFSVC") != 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Nenhuma NF emitida!", "ADICIONAL=Operação->FISSVCO004.emiteNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)	
	endif
	
	;Hugo em 09/02/11 Tarefa 130-1402
	vNrNFTransp = 0
	
	setocc "FIS_NFSVC", -1
	if ($totocc("FIS_NFSVC") > 1)
		setocc "FIS_NFSVC", 1
		
		vNrNFTransp = NR_NF.FIS_NFSVC
	endif
	
	vDsLstTransp = ""
	;
	
	setocc "FIS_NFSVC", 1
	while ($status >= 0)
		if (TP_ORIGEMEMISSAO.FIS_NFSVC = 1) ;Emissão própria
			if (NR_NF.FIS_NFSVC = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Não foi possivel obter numeração para a NF %%vCdEmpresa / %%vNrFatura%%%!", "ADICIONAL=Operação->FISSVCO004.emiteNF")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif 
			clear/e "FIS_S_NFSVC"
			CD_EMPFAT.FIS_S_NFSVC/init        = CD_EMPFAT.FIS_NFSVC
			NR_NF.FIS_S_NFSVC/init            = NR_NF.FIS_NFSVC
			CD_SERIE.FIS_S_NFSVC/init         = CD_SERIE.FIS_NFSVC
			TP_SITUACAO.FIS_S_NFSVC/init      = "·!·=X" ;Excluída
			TP_ORIGEMEMISSAO.FIS_S_NFSVC/init = 1 ;Emissão própria
			TP_MODDCTOFISCAL.FIS_S_NFSVC/init = TP_MODDCTOFISCAL.FIS_NFSVC  ;;ICJ [PROJ/TAR 61/867] (20/09/2010)
			retrieve/e "FIS_S_NFSVC"	
			if ($status >= 0)
				if (NR_FATURA.FIS_S_NFSVC != NR_FATURA.FIS_NFSVC) | (DT_FATURA.FIS_S_NFSVC != DT_FATURA.FIS_NFSVC)
					$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=NF %%NR_NF.FIS_NFSVC já cadastrada!", "ADICIONAL=Operação->FISSVCO004.emiteNF")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif
			endif
		endif
		
		;Hugo em 09/02/11 Tarefa 130-1402
		if (vNrNFTransp != 0)
			clear/e "GER_OPERACAOSVC"
			CD_OPERACAO.GER_OPERACAOSVC/init = CD_OPERACAO.FIS_NFSVC
			retrieve/e "GER_OPERACAOSVC"
			if ($status >= 0)
				if (TP_DOCTO.GER_OPERACAOSVC != 1) ;Diferente de nota fiscal
					vNrNFTransp = 0
				endif
			endif
			
			if (TP_SITUACAO.FIS_NFSVC != "E") ;Diferente de situação emitida
				vNrNFTransp = 0
			endif
			
			if ($curocc("FIS_NFSVC") < $totocc("FIS_NFSVC"))
				if (CD_EMPRESAORI.FIS_NFSVC != $next(CD_EMPRESAORI.FIS_NFSVC) | NR_TRANSACAOORI.FIS_NFSVC != $next(NR_TRANSACAOORI.FIS_NFSVC) | DT_TRANSACAOORI.FIS_NFSVC != $next(DT_TRANSACAOORI.FIS_NFSVC))
					vNrNFTransp = 0
				endif
			endif
		endif
		
		if (vNrNFTransp != 0) & ($curocc("FIS_NFSVC") > 1)
			vDsRegistro = ""
			putitem/id vDsRegistro, "CD_EMPRESA", CD_EMPRESA.FIS_NFSVC
			putitem/id vDsRegistro, "NR_FATURA", NR_FATURA.FIS_NFSVC
			putitem/id vDsRegistro, "DT_FATURA", DT_FATURA.FIS_NFSVC
			putitem vDsLstTransp, -1, vDsRegistro
		elseif (vNrNFTransp = 0)
			vDsLstTransp = ""
		endif
		;
		
		setocc "FIS_NFSVC", $curocc("FIS_NFSVC") + 1
	endwhile
	setocc "FIS_NFSVC", 1
	
	$collhandle("FIS_NFSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif	
	
	;Hugo em 09/02/11 Tarefa 130-1402
	if (vDsLstTransp != "")
		viParams = ""
		putitem/id viParams, "DS_LSTNF", vDsLstTransp
		putitem/id viParams, "DS_OBSERVACAO", "DADOS DA TRANSPORTADORA SE ENCONTRAM NA N.F. %%vNrNFTransp%%%"
		newinstance "FISSVCO004","FISSVCO004O","TRANSACTION=FALSE"
		activate "FISSVCO004O".gravaObsNF($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")        
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif
	;

	viParams = "" 
	putitem/id viParams, "DS_LSTNF", vDsLstNrNF
	activate "SICSVCO005".liberaNumeroNF($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext)
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif	

	vDsLstNrNF = $item("DS_LSTNF", voParams)

	poParams = ""	
	putitem/id poParams, "DS_LSTNF", vDsLstNrNF

	exit(0)
end

;--------------------------
public operation gravaECFNF
;--------------------------
	params
		string  piGlobal    :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		string viParams, voParams
		numeric vCdEmpresa, vNrFatura, vCdEmpECF, vNrECF, vNrCupom
		date vDtFatura
	endvariables

	$xlpg$ = piGlobal

	vCdEmpresa = $item("CD_EMPRESA", piParams)
	vNrFatura  = $item("NR_FATURA", piParams)
	vDtFatura  = $item("DT_FATURA", piParams)
	vCdEmpECF  = $item("CD_EMPECF", piParams)
	vNrECF     = $item("NR_ECF", piParams)
	vNrCupom   = $item("NR_CUPOM", piParams)

	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->FISSVCO004.gravaECFNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	if (vNrFatura = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Fatura não informado!", "ADICIONAL=Operação->FISSVCO004.gravaECFNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1) 
	endif
		
	if (vDtFatura = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data NF não informada!", "ADICIONAL=Operação->FISSVCO004.gravaECFNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	if (vCdEmpECF = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa da ECF não informada!", "ADICIONAL=Operação->FISSVCO004.gravaECFNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	if (vNrECF = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número da ECF não informada!", "ADICIONAL=Operação->FISSVCO004.gravaECFNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	if (vNrCupom = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número do cupom não informado!", "ADICIONAL=Operação->FISSVCO004.gravaECFNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	;-=CANONICO=- (02/07/2009) TAR 607 PRJ 61
	clear/e "FIS_ECFSVC"
	CD_EMPRESA.FIS_ECFSVC/init = vCdEmpresa	
	NR_ECF.FIS_ECFSVC/init = vNrECF
	retrieve/e "FIS_ECFSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número da ECF %%vNrECF não cadastrado!", "ADICIONAL=Operação->FISSVCO004.gravaECFNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	clear/e "FIS_NFSVC"
	CD_EMPRESA.FIS_NFSVC/init = vCdEmpresa
	NR_FATURA.FIS_NFSVC/init  = vNrFatura
	DT_FATURA.FIS_NFSVC/init  = vDtFatura
	retrieve/o "FIS_NFSVC"
	if ($status = -7)
		retrieve/x "FIS_NFSVC"
	elseif ($status = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=NF %%vNrFatura não cadastrada!", "ADICIONAL=Operação->FISSVCO004.gravaECFNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1) 
	endif  

	clear/e "FIS_NFECFSVC"
	retrieve/e "FIS_NFECFSVC"
	if ($status >= 0)
		$collhandle("FIS_NFECFSVC")->Excluir()
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
	else
		clear/e "FIS_NFECFSVC"
	endif

	CD_EMPECF.FIS_NFECFSVC       = vCdEmpECF
	NR_ECF.FIS_NFECFSVC          = vNrECF
	CD_SERIEFAB.FIS_NFECFSVC     = CD_SERIEFAB.FIS_ECFSVC ;-=CANONICO=- (02/07/2009) TAR 607 PRJ 61 - GRAVAR NUMERO SERIE DA IMPRESSORA
	CD_EMPFAT.FIS_NFECFSVC       = CD_EMPFAT.FIS_NFSVC
	CD_GRUPOEMPRESA.FIS_NFECFSVC = CD_GRUPOEMPRESA.FIS_NFSVC
	TP_SITUACAO.FIS_NFECFSVC     = "N" ;Normal
	NR_CUPOM.FIS_NFECFSVC        = vNrCupom
	CD_OPERADOR.FIS_NFECFSVC     = $item("CD_USUARIO", $xlpg$)
	DT_CADASTRO.FIS_NFECFSVC     = $datim	

	$collhandle("FIS_NFECFSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	exit(0)
end

;--------------------------------
public operation alteraSituacaoNF
;--------------------------------
	params
		string  piGlobal    :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		string  viParams, voParams, vDsRegistro, vDsLstNF, vTpSituacao
		numeric vCdEmpresa, vNrFatura
		date    vDtFatura
		boolean vInValidaTransacao
	endvariables
	
	$xlpg$ = piGlobal
	
	vDsLstNF    = $item("DS_LSTNF", piParams)    
	vTpSituacao = $item("TP_SITUACAO", piParams)
	;---Hugo em 09/12/11 Tarefa 182-210
	vInValidaTransacao = $item("IN_VALIDATRANSACAO", piParams)
	if (vInValidaTransacao = "")
		vInValidaTransacao = <TRUE>
	endif
	;---

	if (vDsLstNF = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Lista de NF não informada!", "ADICIONAL=Operação->FISSVCO004.alteraSituacaoNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	if (vTpSituacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Situação não informada!", "ADICIONAL=Operação->FISSVCO004.alteraSituacaoNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	if (vTpSituacao != "N") & (vTpSituacao != "E") & (vTpSituacao != "C") & (vTpSituacao != "X") & (vTpSituacao != "D")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Situação %%vTpSituacao inválida!", "ADICIONAL=Operação->FISSVCO004.alteraSituacaoNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	call getParam(0)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if ($status < 0)
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	clear/e "FIS_NFSVC"
	repeat
		getitem vDsRegistro, vDsLstNF, 1
		vCdEmpresa = $item("CD_EMPRESA", vDsRegistro)
		vNrFatura  = $item("NR_FATURA", vDsRegistro)
		vDtFatura  = $item("DT_FATURA", vDsRegistro)
		
		if (vCdEmpresa = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->FISSVCO004.alteraSituacaoNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		
		if (vNrFatura = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Fatura não informado!", "ADICIONAL=Operação->FISSVCO004.alteraSituacaoNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1) 
		endif
		
		if (vDtFatura = "")
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data NF não informada!", "ADICIONAL=Operação->FISSVCO004.alteraSituacaoNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		
		creocc "FIS_NFSVC", -1
		CD_EMPRESA.FIS_NFSVC/init = vCdEmpresa
		NR_FATURA.FIS_NFSVC/init  = vNrFatura
		DT_FATURA.FIS_NFSVC/init  = vDtFatura
		retrieve/o "FIS_NFSVC"
		if ($status = -7)
			retrieve/x "FIS_NFSVC"

			; ---
			if (vTpSituacao = "C" | vTpSituacao = "X") & (vInValidaTransacao = <TRUE>) ;Hugo em 09/12/11 Tarefa 182-210 - Incluido a validação da transacao
				clear/e "TRA_TRANSACAOSVC"
				CD_EMPRESA.TRA_TRANSACAOSVC/init   = CD_EMPRESAORI.FIS_NFSVC
				NR_TRANSACAO.TRA_TRANSACAOSVC/init = NR_TRANSACAOORI.FIS_NFSVC
				DT_TRANSACAO.TRA_TRANSACAOSVC/init = DT_TRANSACAOORI.FIS_NFSVC
				retrieve/e "TRA_TRANSACAOSVC"
				if ($status >= 0)
					if(TP_SITUACAO.TRA_TRANSACAOSVC != 6) ; CANCELADA
						$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%NR_TRANSACAOORI.TRA_TRANSACAOSVC não está cancelada!", "ADICIONAL=Operação->FISSVCO004.alteraSituacaoNF")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					endif
				endif
			endif
			; ---
	
			;---Elia Proj. 61/378 13/06/08
			clear/e "GER_OPERACAOSVC"
			CD_OPERACAO.GER_OPERACAOSVC/init = CD_OPERACAO.FIS_NFSVC
			retrieve/e "GER_OPERACAOSVC"
			if ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Operaçao %%CD_OPERACAO.FIS_NFSVC não cadastrada!", "ADICIONAL=Operação->FISSVCO004.alteraSituacaoNF")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
			;if ($dtEncerramento$ != "")
			if ($dtEncerramento$ != "") & (TP_DOCTO.GER_OPERACAOSVC != 0) ; 0 - Não definido
			;
				if (DT_SAIDAENTRADA.FIS_NFSVC <= $dtEncerramento$)
					$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=NF/Fatura %%NR_NF.FIS_NFSVC%%%/%%NR_FATURA.FIS_NFSVC possuir data de movimento anterior ao encerramento do livro fiscal!", "ADICIONAL=Operação->FISSVCO004.alteraSituacaoNF")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1) 
				endif
			endif
		elseif ($status = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=NF %%vNrFatura não cadastrada!", "ADICIONAL=Operação->FISSVCO004.alteraSituacaoNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1) 
		endif  
		
		TP_SITUACAO.FIS_NFSVC = vTpSituacao
		CD_OPERADOR.FIS_NFSVC = $item("CD_USUARIO", $xlpg$)
		DT_CADASTRO.FIS_NFSVC = $datim        
		
		delitem vDsLstNF, 1
	until (vDsLstNF = "")

	$collhandle("FIS_NFSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif    

	exit(0)
end

;---------------------------------
public operation alteraImpressaoNF
;---------------------------------
	params
		string  piGlobal    :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		string  viParams, voParams, vDsRegistro, vDsLstNF
		numeric vCdEmpresa, vNrFatura, vCdModeloNF
		date    vDtFatura
	endvariables
	
	$xlpg$ = piGlobal
	
	vDsLstNF    = $item("DS_LSTNF", piParams)    
	vCdModeloNF = $item("CD_MODELONF", piParams)

	if (vDsLstNF = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Lista de NF não informada!", "ADICIONAL=Operação->FISSVCO004.alteraImpressaoNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	if (vCdModeloNF = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Modelo de NF não informado!", "ADICIONAL=Operação->FISSVCO004.alteraImpressaoNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	clear/e "GER_MODNFCSVC"
	CD_MODELONF.GER_MODNFCSVC = vCdModeloNF
	retrieve/e "GER_MODNFCSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Modelo de NF %%vCdModeloNF não cadastrado!", "ADICIONAL=Operação->FISSVCO004.alteraImpressaoNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	clear/e "FIS_NFSVC"
	
	repeat
		getitem vDsRegistro, vDsLstNF, 1
		vCdEmpresa = $item("CD_EMPRESA", vDsRegistro)
		vNrFatura  = $item("NR_FATURA", vDsRegistro)
		vDtFatura  = $item("DT_FATURA", vDsRegistro)
		
		if (vCdEmpresa = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->FISSVCO004.alteraImpressaNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		
		if (vNrFatura = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Fatura não informado!", "ADICIONAL=Operação->FISSVCO004.alteraImpressaoNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1) 
		endif
		
		if (vDtFatura = "")
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data NF não informada!", "ADICIONAL=Operação->FISSVCO004.alteraImpressaoNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		
		creocc "FIS_NFSVC", -1
		CD_EMPRESA.FIS_NFSVC/init = vCdEmpresa
		NR_FATURA.FIS_NFSVC/init  = vNrFatura
		DT_FATURA.FIS_NFSVC/init  = vDtFatura
		retrieve/o "FIS_NFSVC"
		if ($status = -7)
			retrieve/x "FIS_NFSVC"
		elseif ($status = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=NF %%vNrFatura não cadastrada!", "ADICIONAL=Operação->FISSVCO004.alteraImpressaoNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1) 
		endif  

		if (TP_ORIGEMEMISSAO.FIS_NFSVC = 1) ;Emissão própria
			clear/e "FIS_S_NFSVC"
			CD_EMPFAT.FIS_S_NFSVC/init        = CD_EMPFAT.FIS_NFSVC
			NR_NF.FIS_S_NFSVC/init            = NR_NF.FIS_NFSVC
			CD_SERIE.FIS_S_NFSVC/init         = CD_SERIE.FIS_NFSVC
			TP_SITUACAO.FIS_S_NFSVC/init      = "·!·=X" ;Excluída
			TP_ORIGEMEMISSAO.FIS_S_NFSVC/init = 1 ;Emissão própria
			TP_MODDCTOFISCAL.FIS_S_NFSVC/init = TP_MODDCTOFISCAL.FIS_NFSVC  ;;ICJ [PROJ/TAR 61/867] (20/09/2010)
			retrieve/e "FIS_S_NFSVC"	
			if ($status >= 0)
				if (NR_FATURA.FIS_S_NFSVC != NR_FATURA.FIS_NFSVC) | (DT_FATURA.FIS_S_NFSVC != DT_FATURA.FIS_NFSVC)
					$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=NF %%NR_NF.FIS_NFSVC já cadastrada!", "ADICIONAL=Operação->FISSVCO004.alteraImpressaoNF")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif
			endif
		endif

		CD_MODELONF.FIS_NFSVC = vCdModeloNF
		if (NR_IMPRESSAO.FIS_NFSVC = 0)
			NR_IMPRESSAO.FIS_NFSVC = 1
		else
			NR_IMPRESSAO.FIS_NFSVC = NR_IMPRESSAO.FIS_NFSVC + 1
		endif
		CD_USUIMPRESSAO.FIS_NFSVC = $item("CD_USUARIO", $xlpg$)
		DT_IMPRESSAO.FIS_NFSVC    = $datim		
		CD_OPERADOR.FIS_NFSVC     = $item("CD_USUARIO", $xlpg$)
		DT_CADASTRO.FIS_NFSVC     = $datim        
		
		delitem vDsLstNF, 1
	until (vDsLstNF = "")

	$collhandle("FIS_NFSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif    

	exit(0)
end

;---------------------------
public operation gravaCapaNF
;---------------------------
	params
		string  piGlobal    :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		string  viParams, voParams
		numeric vCdEmpresa, vNrFatura, vTpModDctoFiscal, vCdGrupoEmpresa
		date    vDtFatura
		boolean vInInclusao
	endvariables

	$xlpg$ = piGlobal
	
	vCdEmpresa       = $item("CD_EMPRESA", piParams)	
	vCdGrupoEmpresa  = $item("CD_GRUPOEMPRESA", piParams)
	vNrFatura        = $item("NR_FATURA", piParams)
	vDtFatura        = $item("DT_FATURA", piParams)
	vInInclusao      = $item("IN_INCLUSAO", piParams)
	vTpModDctoFiscal = $item("TP_MODDCTOFISCAL", piParams)
	
	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->FISSVCO004.gravaCapaNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (vInInclusao = <TRUE>)
		if (vNrFatura > 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Fatura não pode ser informada p/ inclusão!", "ADICIONAL=Operação->FISSVCO004.gravaCapaNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	else
		if (vNrFatura = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Fatura não informado!", "ADICIONAL=Operação->FISSVCO004.gravaCapaNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif
	
	if (vDtFatura = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data NF não informada!", "ADICIONAL=Operação->FISSVCO004.gravaCapaNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	call getParam(vCdEmpresa)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($status < 0)
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif	

	clear/e "TRA_TRANSACAOSVC"
	
	if (vInInclusao = <TRUE>)
		viParams = ""
		putitem/id viParams, "NM_ENTIDADE", "FIS_NF"	
		activate "GERSVCO031".getNumSeq($xlpg$, viParams, voParams, $xCdErro$, $xCtxerro$)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif    
		vNrFatura = $item("NR_SEQUENCIA", voParams)

		clear/e "FIS_NFSVC"
		creocc "FIS_NFSVC", -1	
		CD_EMPRESA.FIS_NFSVC = vCdEmpresa
		NR_FATURA.FIS_NFSVC  = vNrFatura
		DT_FATURA.FIS_NFSVC  = vDtFatura
	else
		clear/e "FIS_NFSVC"
		CD_EMPRESA.FIS_NFSVC/init = vCdEmpresa
		NR_FATURA.FIS_NFSVC/init  = vNrFatura
		DT_FATURA.FIS_NFSVC/init  = vDtFatura
		retrieve/e "FIS_NFSVC"
		if ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=NF %%vNrFatura não cadastrada!", "ADICIONAL=Operação->FISSVCO004.gravaCapaNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif 
		if ($dtEncerramento$ != "")
			if (DT_SAIDAENTRADA.FIS_NFSVC <= $dtEncerramento$)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=NF/Fatura %%NR_NF.FIS_NFSVC%%%/%%NR_FATURA.FIS_NFSVC possui data de movimento anterior ao encerramento do livro fiscal!", "ADICIONAL=Operação->FISSVCO004.gravaCapaNF")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		endif
		if (NR_TRANSACAOORI.FIS_NFSVC > 0)
			clear/e "TRA_TRANSACAOSVC"
			CD_EMPRESA.TRA_TRANSACAOSVC   = CD_EMPRESAORI.FIS_NFSVC
			NR_TRANSACAO.TRA_TRANSACAOSVC = NR_TRANSACAOORI.FIS_NFSVC
			DT_TRANSACAO.TRA_TRANSACAOSVC = DT_TRANSACAOORI.FIS_NFSVC
			retrieve/e "TRA_TRANSACAOSVC"
			if ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%NR_TRANSACAOORI.TRA_TRANSACAOSVC não cadastrada!", "ADICIONAL=Operação->FISSVCO004.gravaCapaNF")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
			vCdGrupoEmpresa = CD_GRUPOEMPRESA.TRA_TRANSACAOSVC
		endif
	endif

	delitem/id piParams, "CD_EMPRESA"
	delitem/id piParams, "NR_FATURA"
	delitem/id piParams, "DT_FATURA"

	getlistitems/occ piParams, "FIS_NFSVC"

	if (DT_SAIDAENTRADA.FIS_NFSVC = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data saída/entrada não informada!", "ADICIONAL=Operação->FISSVCO004.gravaCapaNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if ($dtEncerramento$ != "")
		if (DT_SAIDAENTRADA.FIS_NFSVC <= $dtEncerramento$)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=NF/Fatura %%NR_NF.FIS_NFSVC%%%/%%NR_FATURA.FIS_NFSVC possui data de movimento anterior ao encerramento do livro fiscal!", "ADICIONAL=Operação->FISSVCO004.gravaCapaNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif

	if (TP_SITUACAO.FIS_NFSVC = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Situação não informada!", "ADICIONAL=Operação->FISSVCO004.gravaCapaNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (TP_SITUACAO.FIS_NFSVC = "E") ;Emitida
		if (DT_EMISSAO.FIS_NFSVC = "")
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data emissão não informada!", "ADICIONAL=Operação->FISSVCO004.gravaCapaNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	
		if (NR_NF.FIS_NFSVC = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número NF não informada!", "ADICIONAL=Operação->FISSVCO004.gravaCapaNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif	
	endif

	if (HR_SAIDA.FIS_NFSVC = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Hora de saída não informada!", "ADICIONAL=Operação->FISSVCO004.gravaCapaNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (CD_PESSOA.FIS_NFSVC = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Pessoa não informada!", "ADICIONAL=Operação->FISSVCO004.gravaCapaNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (CD_COMPVEND.FIS_NFSVC = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Comprador/vendedor não informado!", "ADICIONAL=Operação->FISSVCO004.gravaCapaNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (CD_CONDPGTO.FIS_NFSVC = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Condição de pagamento não informada!", "ADICIONAL=Operação->FISSVCO004.gravaCapaNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (CD_OPERACAO.FIS_NFSVC = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Operação não informada!", "ADICIONAL=Operação->FISSVCO004.gravaCapaNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (vCdGrupoEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Grupo empresa não informado!", "ADICIONAL=Operação->FISSVCO004.gravaCapaNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	clear/e "GER_OPERACAOSVC"
	CD_OPERACAO.GER_OPERACAOSVC/init = CD_OPERACAO.FIS_NFSVC
	retrieve/e "GER_OPERACAOSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Operaçao %%CD_OPERACAO.FIS_NFSVC não cadastrada!", "ADICIONAL=Operação->FISSVCO004.gravaCapaNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	if (vInInclusao = <TRUE>)
		CD_EMPFAT.FIS_NFSVC = CD_EMPRESA.FIS_NFSVC
	endif

;	if (TP_FRETE.FIS_NFTRANSPSVC = 2) ;Destinatário
;		vVlFrete = VL_FRETE.FIS_NFSVC
;	else
;		if ($inSomaFrete$ = <TRUE>)
;			vVlFrete = VL_FRETE.FIS_NFSVC
;		else
;			vVlFrete = 0
;		endif
;	endif
;
;	VL_TOTALNOTA.FIS_NFSVC    = VL_TOTALPRODUTO.FIS_NFSVC + VL_DESPACESSOR.FIS_NFSVC + vVlFrete + VL_SEGURO.FIS_NFSVC + VL_IPI.FIS_NFSVC + VL_ICMSSUBST.FIS_NFSVC
	VL_TOTALNOTA.FIS_NFSVC    = VL_TOTALPRODUTO.FIS_NFSVC + VL_DESPACESSOR.FIS_NFSVC + VL_FRETE.FIS_NFSVC + VL_SEGURO.FIS_NFSVC + VL_IPI.FIS_NFSVC + VL_ICMSSUBST.FIS_NFSVC
	TP_OPERACAO.FIS_NFSVC     = TP_OPERACAO.GER_OPERACAOSVC
	CD_GRUPOEMPRESA.FIS_NFSVC = vCdGrupoEmpresa
	CD_OPERADOR.FIS_NFSVC     = $item("CD_USUARIO", $xlpg$)
	DT_CADASTRO.FIS_NFSVC     = $datim 

	;-- MAD [Proj/Tar.061/503] - 19/12/2008
	;if (vTpModDctoFiscal = 27) ; Implementado por Deusdete em 20/04/2007, zerar os valores qdo for complemento de icms/ciap
	;; ICJ [PROJ/TAR 175/28] (14/12/2010)	
	;if (vTpModDctoFiscal = 85)
	if (vTpModDctoFiscal = 85) | (vTpModDctoFiscal = 87)
	;;	
		VL_TOTALNOTA.FIS_NFSVC    = 0
		VL_TOTALPRODUTO.FIS_NFSVC = 0
		VL_DESPACESSOR.FIS_NFSVC  = 0
		VL_SEGURO.FIS_NFSVC       = 0
		VL_FRETE.FIS_NFSVC        = 0 
		QT_FATURADO.FIS_NFSVC     = 0
		VL_BASEICMS.FIS_NFSVC     = 0
	endif

	$collhandle("FIS_NFSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif  

	poParams = ""
	putitem/id poParams, "CD_EMPRESA", CD_EMPRESA.FIS_NFSVC
	putitem/id poParams, "NR_FATURA", NR_FATURA.FIS_NFSVC
	putitem/id poParams, "DT_FATURA", DT_FATURA.FIS_NFSVC

	return(0)
end

;----------------------------------
public operation gravaObsNF
;----------------------------------
	params    
		string  piGlobal    :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		string  dsLinhaObs, vDsLstNF, vDsRegistro
		numeric vCdEmpresa, vNrFatura, NrLinha, viParams, voParams
		date    vDtFatura
	endvariables
	
	$xlpg$ = piGlobal
	
	vDsLstNF = $item("DS_LSTNF", piParams)
	if (vDsLstNF = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Lista de nota não informada!", "ADICIONAL=Operação->FISSVCO004.gravaObsNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	clear/e "FIS_NF"
	
	repeat
		getitem vDsRegistro, vDsLstNF, 1
		vCdEmpresa = $item("CD_EMPRESA", vDsRegistro)
		vNrFatura  = $item("NR_FATURA", vDsRegistro)
		vDtFatura  = $item("DT_FATURA", vDsRegistro)
		dsLinhaObs = $item("DS_OBSERVACAO", piParams)
		if (dsLinhaObs = "")
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Observação não informada!", "ADICIONAL=Operação->FISSVCO004.gravaObsNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1) 
		endif

		if (vDtFatura = "")
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data da fatura não informada!", "ADICIONAL=Operação->FISSVCO004.gravaObsNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1) 
		endif
 
		if (vNrFatura = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número da fatura não informada!", "ADICIONAL=Operação->FISSVCO004.gravaObsNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1) 
		endif

		if (vCdEmpresa = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa da transação não informada!", "ADICIONAL=Operagão->FISSVCO004.gravaObsNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1) 
		endif

		creocc "FIS_NFSVC", -1
		CD_EMPRESA.FIS_NFSVC/init = vCdEmpresa
		NR_FATURA.FIS_NFSVC/init  = vNrFatura
		DT_FATURA.FIS_NFSVC/init  = vDtFatura
		retrieve/o "FIS_NFSVC"
		if ($status = -7)
			retrieve/x "FIS_NFSVC"
		elseif ($status != 4)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=NF %%vNrFatura não cadastrada!", "ADICIONAL=Operação->FISSVCO004.gravaObsNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif       

		setocc "OBS_NFSVC", -1
		NrLinha = NR_LINHA.OBS_NFSVC + 1
		creocc "OBS_NFSVC", -1
		CD_EMPFAT.OBS_NFSVC       = CD_EMPFAT.FIS_NFSVC
		CD_GRUPOEMPRESA.OBS_NFSVC = CD_GRUPOEMPRESA.FIS_NFSVC
		NR_LINHA.OBS_NFSVC        = NrLinha
		DS_OBSERVACAO.OBS_NFSVC   = DsLinhaObs[1 : 80]
		CD_OPERADOR.OBS_NFSVC     = $item("CD_USUARIO", $xlpg$)
		DT_CADASTRO.OBS_NFSVC     = $datim 
		
		delitem vDsLstNF, 1
	until (vDsLstNF = "")	

	$collhandle("OBS_NFSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif      
	
	return(0)
end;

;-------------------------------
public operation gravaItemProdNF
;-------------------------------
	params
		string  piGlobal    :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		numeric vCdEmpresa, vNrFatura, vCdProduto,vNritem
		date    vDtFatura
	endvariables

	$xlpg$ = piGlobal

	vCdEmpresa = $item("CD_EMPRESA", piParams)
	vNrFatura  = $item("NR_FATURA", piParams)
	vDtFatura  = $item("DT_FATURA", piParams)
	vCdProduto = $item("CD_PRODUTO", piParams)
	vNrItem    = $item("NR_ITEM", piParams)	
	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->FISSVCO004.gravaItemProdNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
		
	if (vNrFatura = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Fatura não informado!", "ADICIONAL=Operação->FISSVCO004.gravaItemProdNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vDtFatura = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data NF não informada!", "ADICIONAL=Operação->FISSVCO004.gravaItemProdNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (vCdProduto = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Produto não informado!", "ADICIONAL=Operação->FISSVCO004.gravaItemProdNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (vNrItem = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número do item não informado!", "ADICIONAL=Operação->FISSVCO004.gravaItemProdNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	call getParam(vCdEmpresa)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($status < 0)
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	clear/e "FIS_NFSVC"
	CD_EMPRESA.FIS_NFSVC/init = vCdEmpresa
	NR_FATURA.FIS_NFSVC/init  = vNrFatura
	DT_FATURA.FIS_NFSVC/init  = vDtFatura
	retrieve/e "FIS_NFSVC"	
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Nota Fiscal não encotrada!", "ADICIONAL=Operação->FISSVCO004.gravaItemProdNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif  

	if ($dtEncerramento$ != "")
		if (DT_SAIDAENTRADA.FIS_NFSVC <= $dtEncerramento$)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=NF/Fatura %%NR_NF.FIS_NFSVC%%%/%%NR_FATURA.FIS_NFSVC possui data de movimento anterior ao encerramento do livro fiscal!", "ADICIONAL=Operação->FISSVCO004.gravaItemProdNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif

	clear/e "FIS_NFITEMSVC"
	NR_ITEM.FIS_NFITEMSVC/init = vNrItem
	retrieve/e "FIS_NFITEMSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Itens da Nota Fiscal não encotrada!", "ADICIONAL=Operação->FISSVCO004.gravaItemProdNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif  

	clear/e "FIS_NFITEMPROSVC"
	CD_PRODUTO.FIS_NFITEMPROSVC/init = vCdProduto
	retrieve/e "FIS_NFITEMPROSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Produto %%vCdProduto não encotrado!", "ADICIONAL=Operação->FISSVCO004.gravaItemProdNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif  

	delitem/id piParams, "CD_EMPRESA"
	delitem/id piParams, "NR_FATURA"
	delitem/id piParams, "DT_FATURA"
	delitem/id piParams, "NR_ITEM"
	delitem/id piParams, "CD_PRODUTO"

	getlistitems/occ piParams, "FIS_NFITEMPROSVC"

	$collhandle("FIS_NFITEMPROSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif  

	return(0)
end

;---------------------------
public operation gravaItemNF
;---------------------------
	params
		string  piGlobal    :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		numeric vCdEmpresa, vNrFatura, vCdProduto, vNritem, vTpModDctoFiscal
		date    vDtFatura
		boolean vInInclusao
	endvariables
	
	$xlpg$ = piGlobal

	vCdEmpresa       = $item("CD_EMPRESA", piParams)
	vNrFatura        = $item("NR_FATURA", piParams)
	vDtFatura        = $item("DT_FATURA", piParams)
	vCdProduto       = $item("CD_PRODUTO", piParams)
	vNrItem          = $item("NR_ITEM", piParams)
	vInInclusao      = $item("IN_INCLUSAO", piParams)
	vTpModDctoFiscal = $item("TP_MODDCTOFISCAL", piParams)

	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->FISSVCO004.gravaItemNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
		
	if (vNrFatura = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Fatura não informado!", "ADICIONAL=Operação->FISSVCO004.gravaItemNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vDtFatura = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data NF não informada!", "ADICIONAL=Operação->FISSVCO004.gravaItemNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (vCdProduto = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Produto não informado!", "ADICIONAL=Operação->FISSVCO004.gravaItemNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (vNrItem = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número do item não informado!", "ADICIONAL=Operação->FISSVCO004.gravaItemNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	call getParam(vCdEmpresa)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($status < 0)
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	clear/e "FIS_NFSVC"
	CD_EMPRESA.FIS_NFSVC/init = vCdEmpresa
	NR_FATURA.FIS_NFSVC/init  = vNrFatura
	DT_FATURA.FIS_NFSVC/init  = vDtFatura
	retrieve/e "FIS_NFSVC"	
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Nota Fiscal não encotrada!", "ADICIONAL=Operação->FISSVCO004.gravaItemNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif  

	if ($dtEncerramento$ != "")
		if (DT_SAIDAENTRADA.FIS_NFSVC <= $dtEncerramento$)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=NF/Fatura %%NR_NF.FIS_NFSVC%%%/%%NR_FATURA.FIS_NFSVC possui data de movimento anterior ao encerramento do livro fiscal!", "ADICIONAL=Operação->FISSVCO004.gravaItemNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif

	if (vInInclusao = <TRUE>)
	else
		clear/e "FIS_NFITEMSVC"
		NR_ITEM.FIS_NFITEMSVC/init = vNrItem
		retrieve/e "FIS_NFITEMSVC"
		if ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Itens da Nota Fiscal não encotrada!", "ADICIONAL=Operação->FISSVCO004.gravaItemNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif  

		delitem/id piParams, "CD_EMPRESA"
		delitem/id piParams, "NR_FATURA"
		delitem/id piParams, "DT_FATURA"
		delitem/id piParams, "NR_ITEM"
	endif

	getlistitems/occ piParams, "FIS_NFITEMSVC"

	CD_EMPFAT.FIS_NFITEMSVC       = CD_EMPFAT.FIS_NFSVC
	CD_GRUPOEMPRESA.FIS_NFITEMSVC = CD_GRUPOEMPRESA.FIS_NFSVC
	CD_OPERADOR.FIS_NFITEMSVC     = $item("CD_USUARIO", $xlpg$)
	DT_CADASTRO.FIS_NFITEMSVC     = $datim

	;-- MAD [Proj/Tar.061/503] - 19/12/2008
	;if (vTpModDctoFiscal = 27) ; Implementado por Deusdete em 20/04/2007, zerar os valores qdo for complemento de icms/ciap
	;; ICJ [PROJ/TAR 175/28] (14/12/2010)	
	;if (vTpModDctoFiscal = 85)
	if (vTpModDctoFiscal = 85) | (vTpModDctoFiscal = 87)
	;;	
	;;
		VL_TOTALLIQUIDO.FIS_NFITEMSVC = 0
		VL_TOTALBRUTO.FIS_NFITEMSVC   = 0
		VL_UNITLIQUIDO.FIS_NFITEMSVC  = 0
		VL_UNITBRUTO.FIS_NFITEMSVC    = 0
		QT_FATURADO.FIS_NFITEMSVC     = 0
	endif

	$collhandle("FIS_NFITEMSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif      

	return(0)
end

;-------------------------------
public operation gravaEnderecoNF
;-------------------------------
	params
		string  piGlobal    :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		numeric vCdEmpresa, vNrFatura, vCdProduto,vNritem
		date    vDtFatura
	endvariables
	
	$xlpg$ = piGlobal

	vCdEmpresa = $item("CD_EMPRESA", piParams)
	vNrFatura  = $item("NR_FATURA", piParams)
	vDtFatura  = $item("DT_FATURA", piParams)
	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->FISSVCO004.gravaEnderecoNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
		
	if (vNrFatura = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Fatura não informado!", "ADICIONAL=Operação->FISSVCO004.gravaEnderecoNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vDtFatura = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data NF não informada!", "ADICIONAL=Operação->FISSVCO004.gravaEnderecoNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	call getParam(vCdEmpresa)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($status < 0)
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	clear/e "FIS_NFSVC"
	CD_EMPRESA.FIS_NFSVC/init = vCdEmpresa
	NR_FATURA.FIS_NFSVC/init  = vNrFatura
	DT_FATURA.FIS_NFSVC/init  = vDtFatura
	retrieve/e "FIS_NFSVC"	
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Nota Fiscal não encotrada!", "ADICIONAL=Operação->FISSVCO004.gravaEnderecoNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if ($dtEncerramento$ != "")
		if (DT_SAIDAENTRADA.FIS_NFSVC <= $dtEncerramento$)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=NF/Fatura %%NR_NF.FIS_NFSVC%%%/%%NR_FATURA.FIS_NFSVC possui data de movimento anterior ao encerramento do livro fiscal!", "ADICIONAL=Operação->FISSVCO004.gravaEnderecoNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif  

	delitem/id piParams, "CD_EMPRESA"
	delitem/id piParams, "NR_FATURA"
	delitem/id piParams, "DT_FATURA"

	getlistitems/occ piParams, "FIS_NFREMDESSVC"
	CD_EMPFAT.FIS_NFREMDESSVC       = CD_EMPFAT.FIS_NFSVC
	CD_GRUPOEMPRESA.FIS_NFREMDESSVC = CD_GRUPOEMPRESA.FIS_NFSVC
	if (NM_NOME.FIS_NFREMDESSVC = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Nome da pessoa não informado!", "ADICIONAL=Operação->FISSVCO004.gravaEnderecoNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	$collhandle("FIS_NFREMDESSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif      

	return(0)
end

;-------------------------------------
public operation gravaTransportadoraNF
;-------------------------------------
	params
		string  piGlobal    :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		numeric vCdEmpresa, vNrFatura, vCdProduto,vNritem
		date    vDtFatura
	endvariables
	
	$xlpg$ = piGlobal

	vCdEmpresa = $item("CD_EMPRESA", piParams)
	vNrFatura  = $item("NR_FATURA", piParams)
	vDtFatura  = $item("DT_FATURA", piParams)

	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->FISSVCO004.gravaTransportadoraNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
		
	if (vNrFatura = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Fatura não informado!", "ADICIONAL=Operação->FISSVCO004.gravaTransportadoraNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vDtFatura = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data NF não informada!", "ADICIONAL=Operação->FISSVCO004.gravaTransportadoraNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	call getParam(vCdEmpresa)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($status < 0)
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	clear/e "FIS_NFSVC"
	CD_EMPRESA.FIS_NFSVC/init = vCdEmpresa
	NR_FATURA.FIS_NFSVC/init  = vNrFatura
	DT_FATURA.FIS_NFSVC/init  = vDtFatura
	retrieve/e "FIS_NFSVC"	
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Nota Fiscal não encotrada!", "ADICIONAL=Operação->FISSVCO004.gravaTransportadoraNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif  

	if ($dtEncerramento$ != "")
		if (DT_SAIDAENTRADA.FIS_NFSVC <= $dtEncerramento$)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=NF/Fatura %%NR_NF.FIS_NFSVC%%%/%%NR_FATURA.FIS_NFSVC possui data de movimento anterior ao encerramento do livro fiscal!", "ADICIONAL=Operação->FISSVCO004.gravaTransportadoraNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif  

	delitem/id piParams, "CD_EMPRESA"
	delitem/id piParams, "NR_FATURA"
	delitem/id piParams, "DT_FATURA"

	getlistitems/occ piParams, "FIS_NFTRANSPSVC"
	CD_EMPFAT.FIS_NFTRANSPSVC       = CD_EMPFAT.FIS_NFSVC
	CD_GRUPOEMPRESA.FIS_NFTRANSPSVC = CD_GRUPOEMPRESA.FIS_NFSVC

	if (CD_TRANSPORT.FIS_NFTRANSPSVC = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transportadora não informada!", "ADICIONAL=Operação->FISSVCO004.gravaTransportadoraNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (TP_FRETE.FIS_NFTRANSPSVC = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Tipo de frete não informado!", "ADICIONAL=Operação->FISSVCO004.gravaTransportadoraNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	$collhandle("FIS_NFTRANSPSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif      

	return(0)
end

;----------------------------------
public operation gravaItemImpostoNF
;----------------------------------
	params
		string  piGlobal    :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		string  vDsLstImposto, vDsRegistro, vDsImposto
		numeric vCdEmpresa, vNrFatura, vCdImposto,vNritem
		date    vDtFatura
		boolean vInNaoExcluir
	endvariables
	
	$xlpg$ = piGlobal

	vDsLstImposto = $item("DS_LSTIMPOSTO",piParams)
	vCdEmpresa    = $item("CD_EMPRESA", piParams)
	vNrFatura     = $item("NR_FATURA", piParams)
	vDtFatura     = $item("DT_FATURA", piParams)
	vCdImposto    = $item("CD_IMPOSTO", piParams)
	vNrItem       = $item("NR_ITEM", piParams)	
	vInNaoExcluir = $item("IN_NAOEXCLUIR", piParams)	

	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->FISSVCO004.gravaItemImpostoNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
		
	if (vNrFatura = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Fatura não informado!", "ADICIONAL=Operação->FISSVCO004.gravaItemImpostoNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vDtFatura = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data NF não informada!", "ADICIONAL=Operação->FISSVCO004.gravaItemImpostoNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (vNrItem = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número do item não informado!", "ADICIONAL=Operação->FISSVCO004.gravaItemImpostoNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	call getParam(vCdEmpresa)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($status < 0)
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	clear/e "FIS_NFSVC"
	CD_EMPRESA.FIS_NFSVC/init = vCdEmpresa
	NR_FATURA.FIS_NFSVC/init  = vNrFatura
	DT_FATURA.FIS_NFSVC/init  = vDtFatura
	retrieve/e "FIS_NFSVC"	
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Nota Fiscal não encotrada!", "ADICIONAL=Operação->FISSVCO004.gravaItemImpostoNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif  

	if ($dtEncerramento$ != "")
		if (DT_SAIDAENTRADA.FIS_NFSVC <= $dtEncerramento$)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=NF/Fatura %%NR_NF.FIS_NFSVC%%%/%%NR_FATURA.FIS_NFSVC possui data de movimento anterior ao encerramento do livro fiscal!", "ADICIONAL=Operação->FISSVCO004.gravaItemImpostoNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif  

	clear/e "FIS_NFITEMSVC"
	NR_ITEM.FIS_NFITEMSVC/init = vNrItem
	retrieve/e "FIS_NFITEMSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Itens da Nota Fiscal não encotrada!", "ADICIONAL=Operação->FISSVCO004.gravaItemImpostoNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif  

	if ($empty("FIS_NFITEMIMPSVC") = 0)
		;---- WMC & MAD Proj 170 Tar 288 - 31/05/2011 
		if (vInNaoExcluir = <TRUE>)	
			vDsImposto = vDsLstImposto
			if (vDsImposto != "")
				repeat
					getitem vDsRegistro, vDsImposto, 1
					clear/e "FIS_NFITEMIMPSVC"
					CD_IMPOSTO.FIS_NFITEMIMPSVC/init = $item("CD_IMPOSTO", vDsRegistro)
					retrieve/e "FIS_NFITEMIMPSVC"				
					if ($status >= 0)
						$collhandle("FIS_NFITEMIMPSVC")->Excluir()
						if ($procerror)
							$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
							poCdErro = $xCdErro$
							poCtxErro = $xCtxErro$
							return(-1)
						elseif ($status < 0)
							$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
							poCdErro = $xCdErro$
							poCtxErro = $xCtxErro$
							return(-1)
						endif      
					endif

					delitem vDsImposto, 1
				until (vDsImposto = "")
			endif
		;----//----//----
		else
			$collhandle("FIS_NFITEMIMPSVC")->Excluir()
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif      
		endif
	endif

	if (vDsLstImposto != "")
		repeat
			getitem vDsRegistro, vDsLstImposto, 1
			vCdImposto = $item("CD_IMPOSTO", vDsRegistro)

			if (vCdImposto = "")
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Imposto não informado!", "ADICIONAL=Operação->FISSVCO004.gravaItemImpostoNF")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif

			creocc "FIS_NFITEMIMPSVC", -1
		
			getlistitems/occ vDsRegistro, "FIS_NFITEMIMPSVC"
			CD_EMPFAT.FIS_NFITEMIMPSVC       = CD_EMPFAT.FIS_NFITEMSVC
			CD_GRUPOEMPRESA.FIS_NFITEMIMPSVC = CD_GRUPOEMPRESA.FIS_NFITEMSVC
			CD_OPERADOR.FIS_NFITEMIMPSVC     = $item("CD_USUARIO",$xlpg$)
			DT_CADASTRO.FIS_NFITEMIMPSVC     = $datim

			delitem vDsLstImposto, 1
		until (vDsLstImposto = "")
	endif

	$collhandle("FIS_NFITEMIMPSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif  

	;---Elia Proj. 130/487 22/05/09 
	;call calculaTotalNF()
	$collhandle("FIS_NFSVC")->calculaTotalNF()
	;
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	;

	$collhandle("FIS_NFSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif    

	return(0)
end

;----------------------------------
public operation gravaImpostoNF
;----------------------------------
	params
		string  piGlobal    :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		string  vDsLstImposto,vDsRegistro
		numeric vCdEmpresa, vNrFatura, vCdImposto,vNritem
		date    vDtFatura
	endvariables
	
	$xlpg$ = piGlobal

	vDsLstImposto = $item("DS_LSTIMPOSTO",piParams)
	vCdEmpresa    = $item("CD_EMPRESA", piParams)
	vNrFatura     = $item("NR_FATURA", piParams)
	vDtFatura     = $item("DT_FATURA", piParams)
	;vCdImposto   = $item("CD_IMPOSTO", piParams)	

	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->FISSVCO004.gravaImpostoNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
		
	if (vNrFatura = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Fatura não informado!", "ADICIONAL=Operação->FISSVCO004.gravaImpostoNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vDtFatura = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data NF não informada!", "ADICIONAL=Operação->FISSVCO004.gravaImpostoNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	call getParam(vCdEmpresa)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($status < 0)
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	clear/e "FIS_NFSVC"
	CD_EMPRESA.FIS_NFSVC/init = vCdEmpresa
	NR_FATURA.FIS_NFSVC/init  = vNrFatura
	DT_FATURA.FIS_NFSVC/init  = vDtFatura
	retrieve/e "FIS_NFSVC"	
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Nota Fiscal não encotrada!", "ADICIONAL=Operação->FISSVCO004.gravaImpostoNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif  

	if ($dtEncerramento$ != "")
		if (DT_SAIDAENTRADA.FIS_NFSVC <= $dtEncerramento$)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=NF/Fatura %%NR_NF.FIS_NFSVC%%%/%%NR_FATURA.FIS_NFSVC possui data de movimento anterior ao encerramento do livro fiscal!", "ADICIONAL=Operação->FISSVCO004.gravaImpostoNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif  

	if ($empty("FIS_NFIMPOSTOSVC") = 0)
		$collhandle("FIS_NFIMPOSTOSVC")->Excluir()
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif      
	endif

	if (vDsLstImposto != "")
		repeat
			getitem vDsRegistro, vDsLstImposto, 1
			vCdImposto = $item("CD_IMPOSTO", vDsRegistro)

			if (vCdImposto = "")
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Imposto não informado!", "ADICIONAL=Operação->FISSVCO004.gravaImpostoNF")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif

			creocc "FIS_NFIMPOSTOSVC", -1
		
			getlistitems/occ vDsRegistro, "FIS_NFIMPOSTOSVC"
			CD_EMPFAT.FIS_NFIMPOSTOSVC       = CD_EMPFAT.FIS_NFITEMSVC
			CD_GRUPOEMPRESA.FIS_NFIMPOSTOSVC = CD_GRUPOEMPRESA.FIS_NFITEMSVC
			CD_OPERADOR.FIS_NFIMPOSTOSVC     = $item("CD_USUARIO",$xlpg$)
			DT_CADASTRO.FIS_NFIMPOSTOSVC     = $datim

			delitem vDsLstImposto, 1
		until (vDsLstImposto = "")
	endif

	$collhandle("FIS_NFIMPOSTOSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif  

	;---Elia Proj. 130/487 22/05/09 
	;call calculaTotalNF()
	$collhandle("FIS_NFSVC")->calculaTotalNF()
	;
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	$collhandle("FIS_NFSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif    

	return(0)
end

;--------------------------------
public operation alteraVendedorNF
;Marcelo Oda
;Altera o vendedor da NF. Criado para alterar o vendedor do Vale Troca para acertar a comissao
;Chamado pelo TRASVCO004.AlteraVendedor
;--------------------------------
	params
		string  piGlobal    :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		string  viParams, voParams, vDsRegistro, vDsLstNF
		numeric vCdEmpresa, vNrFatura, vCdVendedor, vCdEmpTransacao, vNrTransacao
		date    vDtFatura, vDtTransacao
	endvariables
	
	$xlpg$ = piGlobal
	
	vDsLstNF        = $item("DS_LSTNF", piParams)    
	vCdEmpTransacao = $item("CD_EMPTRANSACAO", piParams)
	vNrTransacao    = $item("NR_TRANSACAO", piParams)
	vDtTransacao    = $item("DT_TRANSACAO", piParams)

	vCdVendedor = $item("CD_COMPVEND", piParams)

	if (vDsLstNF = "")
		if (vCdEmpTransacao = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->FISSVCO004.alteraVendedorNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif

		if (vNrTransacao = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número da transação não informado!", "ADICIONAL=Operação->FISSVCO004.alteraVendedorNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif

		if (vDtTransacao = "")
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data transação não informada!", "ADICIONAL=Operação->FISSVCO004.alteraVendedorNF")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif		
	endif

	if (vCdVendedor = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Vendedor não informado!", "ADICIONAL=Operação->FISSVCO004.alteraVendedorNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	clear/e "FIS_NFSVC"

	if (vDsLstNF = "")
		CD_EMPRESAORI.FIS_NFSVC/init   = vCdEmpTransacao
		NR_TRANSACAOORI.FIS_NFSVC/init = vNrTransacao
		DT_TRANSACAOORI.FIS_NFSVC/init = vDtTransacao
		retrieve/e "FIS_NFSVC"
		if ($status < 0)
			clear/e "FIS_NFSVC"
			exit(0)
		endif
	else
		repeat
			getitem vDsRegistro, vDsLstNF, 1
			vCdEmpresa = $item("CD_EMPRESA", vDsRegistro)
			vNrFatura  = $item("NR_FATURA", vDsRegistro)
			vDtFatura  = $item("DT_FATURA", vDsRegistro)
			if (vCdEmpresa = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->FISSVCO004.alteraVendedorNF")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
			if (vNrFatura = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Fatura não informado!", "ADICIONAL=Operação->FISSVCO004.alteraVendedorNF")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1) 
			endif
			if (vDtFatura = "")
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data NF não informada!", "ADICIONAL=Operação->FISSVCO004.alteraVendedorNF")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
			creocc "FIS_NFSVC", -1
			CD_EMPRESA.FIS_NFSVC/init = vCdEmpresa
			NR_FATURA.FIS_NFSVC/init  = vNrFatura
			DT_FATURA.FIS_NFSVC/init  = vDtFatura
			retrieve/o "FIS_NFSVC"
			if ($status = -7)
				retrieve/x "FIS_NFSVC"
			elseif ($status = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=NF %%vNrFatura não cadastrada!", "ADICIONAL=Operação->FISSVCO004.alteraVendedorNF")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1) 
			endif  
				
			delitem vDsLstNF, 1
		until (vDsLstNF = "")
	endif

	if ($empty("FIS_NFSVC") = 0)
		setocc "FIS_NFSVC", 1
		while($status >=0)	
			CD_COMPVEND.FIS_NFSVC = vCdVendedor;altera vendedor da capa da NF
			CD_OPERADOR.FIS_NFSVC = $item("CD_USUARIO", $xlpg$)
			DT_CADASTRO.FIS_NFSVC = $datim

			if ($empty("FIS_NFITEMSVC") = 0)
				setocc "FIS_NFITEMSVC", 1
				while($status >=0)
					if ($empty("FIS_NFITEMPROSVC") = 0)
						setocc "FIS_NFITEMPROSVC", 1
						while($status >=0)
							CD_COMPVEND.FIS_NFITEMPROSVC = vCdVendedor
							CD_OPERADOR.FIS_NFITEMPROSVC = $item("CD_USUARIO", $xlpg$)
							DT_CADASTRO.FIS_NFITEMPROSVC = $datim
							setocc "FIS_NFITEMPROSVC", $curocc("FIS_NFITEMPROSVC") + 1	
						endwhile
					endif
					setocc "FIS_NFITEMSVC", $curocc("FIS_NFITEMSVC") + 1	
				endwhile
			endif
	
			setocc "FIS_NFSVC", $curocc("FIS_NFSVC") + 1	
		endwhile

		$collhandle("FIS_NFSVC")->Salvar()
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif

	exit(0)
end

;-----------------------------------------
public operation consignadoDevolverFaturar
;-----------------------------------------
	params
		string  piGlobal    :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		string  vDsLstItem, vTpConsignado, vDsItem
		numeric vQtConsignado, vQtSaldo
		numeric vCdEmpresa, vNrFatura, vNrItem, vCdProduto
		date    vDtFatura
	endvariables
	
	$xlpg$ = piGlobal
	
	vDsLstItem    = $item("DS_CONSIGNADO", piParams)
	vTpConsignado = $item("TP_CONSIGNADO", piParams)
	
	if (vDsLstItem = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Lista de item consignado não informado!", "ADICIONAL=Operação->FISSVCO004.consignadoDevolverFaturar")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	if (vTpConsignado = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Lista de item consignado não informado!", "ADICIONAL=Operação->FISSVCO004.consignadoDevolverFaturar")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	repeat
		getitem vDsItem, vDsLstItem, 1
		vCdEmpresa = $item("CD_EMPRESA", vDsItem)
		vNrFatura  = $item("NR_FATURA", vDsItem)
		vDtFatura  = $item("DT_FATURA", vDsItem)
		vNrItem    = $item("NR_ITEM", vDsItem)
		vCdProduto = $item("CD_PRODUTO", vDsItem)
		
		clear/e "FIS_NFSVC"
		CD_EMPRESA.FIS_NFSVC/init = vCdEmpresa
		NR_FATURA.FIS_NFSVC/init  = vNrFatura
		DT_FATURA.FIS_NFSVC/init  = vDtFatura
		retrieve/e "FIS_NFSVC"
		if ($status >= 0)
			clear/e "FIS_NFITEMSVC"
			NR_ITEM.FIS_NFITEMSVC/init = vNrItem
			retrieve/e "FIS_NFITEMSVC"
			if ($status >= 0)
				clear/e "FIS_NFITEMPROSVC"
				CD_PRODUTO.FIS_NFITEMPROSVC/init = vCdProduto
				retrieve/e "FIS_NFITEMPROSVC"
				if ($status >= 0)
					vQtSaldo = QT_FATURADO.FIS_NFITEMPROSVC
					
					if ($empty("FIS_NFITEMCONSVC") = 0)
						if (vTpConsignado = "DEVOLVER")
							vQtConsignado                 = $item("QT_DEVOLVIDA", vDsItem)
							QT_DEVOLVIDA.FIS_NFITEMCONSVC = QT_DEVOLVIDA.FIS_NFITEMCONSVC + vQtConsignado
						endif
						
						if (vTpConsignado = "FATURAR")
							vQtConsignado = $item("QT_VENDIDA", vDsItem)
							QT_VENDIDA.FIS_NFITEMCONSVC = QT_VENDIDA.FIS_NFITEMCONSVC + vQtConsignado
						endif
						
						vQtSaldo = vQtSaldo - QT_DEVOLVIDA.FIS_NFITEMCONSVC - QT_VENDIDA.FIS_NFITEMCONSVC
						
						if (vQtSaldo <= 0)
							TP_SITUACAO.FIS_NFITEMCONSVC = 2 ;Atendido
						endif
						
						$collhandle("FIS_NFITEMCONSVC")->Salvar()
						if ($procerror)
							$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
							poCdErro = $xCdErro$
							poCtxErro = $xCtxErro$
							exit(-1)
						elseif ($status < 0)
							$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
							poCdErro = $xCdErro$
							poCtxErro = $xCtxErro$
							exit(-1)
						endif
					endif
				endif
			endif
		endif
		
		delitem vDsLstItem, 1
	until (vDsLstItem = "")
	
	exit(0)
end

;--------------------------
;Hugo Andreo Ferro em 27/07/07
;O servico de grava de log de nf foi removido do FISSVCO004
;e transferido para o FISSVCO024 por motivo de estouro de tamanho
;do FISSVCO004.
public operation gravaLogNF
;--------------------------
	params
		string  piGlobal    :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		string viParams, voParams
	endvariables
	
	$xlpg$ = piGlobal

	viParams = piParams
	activate "FISSVCO024".gravaLogNF($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")        
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($xCdErro$)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	return(0)
end

;----------------------------------
public operation consignadoCancelar
;----------------------------------
	params
		string  piGlobal    :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		string  vDsLstItem, vTpConsignado, vDsItem
		numeric vQtConsignado, vQtSaldo
		numeric vCdEmpresa, vNrFatura, vNrItem, vCdProduto
		date    vDtFatura
	endvariables
	
	$xlpg$ = piGlobal
	
	vDsLstItem = $item("DS_CONSIGNADO", piParams)
	vTpConsignado = $item("TP_CONSIGNADO", piParams)
	
	if (vDsLstItem = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Lista de item consignado não informado!", "ADICIONAL=Operação->FISSVCO004.consignadoDevolverFaturar")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	if (vTpConsignado = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Lista de item consignado não informado!", "ADICIONAL=Operação->FISSVCO004.consignadoDevolverFaturar")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	repeat
		getitem vDsItem, vDsLstItem, 1
		vCdEmpresa = $item("CD_EMPRESA", vDsItem)
		vNrFatura  = $item("NR_FATURA", vDsItem)
		vDtFatura  = $item("DT_FATURA", vDsItem)
		vNrItem    = $item("NR_ITEM", vDsItem)
		vCdProduto = $item("CD_PRODUTO", vDsItem)
		
		clear/e "FIS_NFSVC"
		CD_EMPRESA.FIS_NFSVC/init = vCdEmpresa
		NR_FATURA.FIS_NFSVC/init  = vNrFatura
		DT_FATURA.FIS_NFSVC/init  = vDtFatura
		retrieve/e "FIS_NFSVC"
		if ($status >= 0)
			clear/e "FIS_NFITEMSVC"
			NR_ITEM.FIS_NFITEMSVC/init = vNrItem
			retrieve/e "FIS_NFITEMSVC"
			if ($status >= 0)
				clear/e "FIS_NFITEMPROSVC"
				CD_PRODUTO.FIS_NFITEMPROSVC/init = vCdProduto
				retrieve/e "FIS_NFITEMPROSVC"
				if ($status >= 0)
					vQtSaldo = QT_FATURADO.FIS_NFITEMPROSVC
					
					if ($empty("FIS_NFITEMCONSVC") = 0)
						if (vTpConsignado = "DEVOLVER")
							vQtConsignado                 = $item("QT_DEVOLVIDA", vDsItem)
							QT_DEVOLVIDA.FIS_NFITEMCONSVC = QT_DEVOLVIDA.FIS_NFITEMCONSVC - vQtConsignado
						endif
						
						if (vTpConsignado = "FATURAR")
							vQtConsignado               = $item("QT_VENDIDA", vDsItem)
							QT_VENDIDA.FIS_NFITEMCONSVC = QT_VENDIDA.FIS_NFITEMCONSVC - vQtConsignado
						endif
						
						vQtSaldo = vQtSaldo - QT_DEVOLVIDA.FIS_NFITEMCONSVC - QT_VENDIDA.FIS_NFITEMCONSVC
						
						if (vQtSaldo > 0)
							TP_SITUACAO.FIS_NFITEMCONSVC = 1 ;Aberto
						endif
						
						$collhandle("FIS_NFITEMCONSVC")->Salvar()
						if ($procerror)
							$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
							poCdErro = $xCdErro$
							poCtxErro = $xCtxErro$
							exit(-1)
						elseif ($status < 0)
							$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
							poCdErro = $xCdErro$
							poCtxErro = $xCtxErro$
							exit(-1)
						endif
					endif
				endif
			endif
		endif

		delitem vDsLstItem, 1
	until (vDsLstItem = "")
	
	exit(0)
end



;-----------------------------
public operation removeECFNF
;-----------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		numeric vCdEmpresa, vNrFatura
		date vDtFatura
	endvariables
	
	vCdEmpresa = $item("CD_EMPRESA", piParams)
	vNrFatura = $item("NR_FATURA", piParams)
	vDtFatura = $item("DT_FATURA", piParams)
	
	if (vCdEmpresa = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->FISSVCO004.removeECFNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (vNrFatura = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número da fatura não informada!", "ADICIONAL=Operação->FISSVCO004.removeECFNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (vDtFatura = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data da fatura não informada!", "ADICIONAL=Operação->FISSVCO004.removeECFNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	clear/e "FIS_NFSVC"
	CD_EMPRESA.FIS_NFSVC = vCdEmpresa
	NR_FATURA.FIS_NFSVC = vNrFatura
	DT_FATURA.FIS_NFSVC = vDtFatura
	retrieve/e "FIS_NFSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Registro não cadastrado!", "ADICIONAL=Operação->FISSVCO004.removeECFNF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	clear/e "FIS_NFECFSVC"
	retrieve/e "FIS_NFECFSVC"
	if ($status >= 0)
		$collhandle("FIS_NFECFSVC")->Excluir()
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif
	
	return(0)
end ;removeECFNF


