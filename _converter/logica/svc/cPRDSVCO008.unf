entry getParam
	params
		numeric piCdEmpresa : IN
		string piDsOperacao : IN
	endparams

	variables
		string viParams, voParams
	endvariables

	if (piCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa para busca de parâmetros não infomada!", "ADICIONAL=Operação->%%piDsOperacao")
		return(-1)
	endif
	
	viParams = ""
	putitem viParams, -1, "CD_EMP_PADRAO_PRD"
	putitem viParams, -1, "TP_VALIDACAO_EMBALAGEM" ; Adriano - Projeto/Tarefa 22/1788 - 11/03/2011
	activate "ADMSVCO001".GetParamEmpresa(piCdEmpresa, viParams, voParams, $xCdErro$, $xCtxErro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		return(-1)
	elseif ($xCdErro$)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%$item("DESCRICAO", $xCtxErro$)", "")
		return(-1)
	endif

	$cdEmpresaValorEmp$ = $item("CD_EMP_PADRAO_PRD", voParams)
	$tpValidacaoEmbalagem$ = $item("TP_VALIDACAO_EMBALAGEM", voParams); Adriano - Projeto/Tarefa 22/1788 - 11/03/2011

	viParams = ""
	putitem viParams, -1, "CD_EMPVALOR"
	activate "ADMSVCO001".GetLstParametro(viParams, voParams, $xCdErro$, $xCtxErro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		return(-1)
	elseif ($xCdErro$)
		$instancehandle->SetErroApl($xCtxErro$, $xCdErro$, $xCtxErro$)
		return(-1)
	endif

	$cdEmpresaValorSis$ = $item("CD_EMPVALOR", voParams)
	
	return(0)
end

;-------------------------------
public operation validaQtdFracionada
	;-------------------------------
	params
		string  $xlpg$    :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		string vDsLstEmpresa, vDsLstEmp
		numeric vCdProduto, vCdEmpresa, vCdEmpresaParam, vlValor, vlResto
		boolean vInAchou, vResult
	endvariables

	vCdProduto = $item("CD_PRODUTO", piParams)
	vCdEmpresaParam = $item("CD_EMPRESA", piParams)
	if (vCdEmpresaParam = 0)
		vCdEmpresaParam = $item("CD_EMPRESA", $xlpg$)
	endif
	vlValor = $item("QT_QUANTIDADE", piParams)

	if (vCdProduto = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Produto não informado!", "ADICIONAL=Operação->PRDSVCO008.validaQtdFracionada")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	call getParam(vCdEmpresaParam, "PRDSVCO008.validaQtdFracionada")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($status < 0)
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	vDsLstEmpresa = ""
	putitem vDsLstEmpresa, -1, vCdEmpresaParam
	if ($cdEmpresaValorEmp$ > 0) & ($cdEmpresaValorEmp$ != vCdEmpresaParam)
		putitem vDsLstEmpresa, -1, $cdEmpresaValorEmp$
	endif
	if ($cdEmpresaValorSis$ > 0) & ($cdEmpresaValorSis$ != vCdEmpresaParam)
		putitem vDsLstEmpresa, -1, $cdEmpresaValorSis$
	endif

	vInAchou = <FALSE>
	vDsLstEmp = vDsLstEmpresa
	repeat
		getitem vCdEmpresa, vDsLstEmpresa, 1
		clear/e "PRD_PRDINFOSVC"
		CD_EMPRESA.PRD_PRDINFOSVC/init = vCdEmpresa
		CD_PRODUTO.PRD_PRDINFOSVC/init = vCdProduto
		retrieve/e "PRD_PRDINFOSVC"
		if ($status >= 0)
			vInAchou = <TRUE>
		endif
		delitem vDsLstEmpresa, 1
	until (vDsLstEmpresa = "") | (vInAchou = <TRUE>)

	if (vInAchou = <FALSE>)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Produto %%vCdProduto sem dados p/ a(s) empresa(s) %%vDsLstEmp cadastrados!", "ADICIONAL=Operação->PRDSVCO008.validaQtdFracionada")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	vlResto = $frac(vlValor)
	if (vlResto > 0 & IN_FRACIONADO.PRD_PRDINFOSVC != <TRUE>)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Produto %%vCdProduto não aceita quantidade $fracionada!", "ADICIONAL=Operação->PRDSVCO008.validaQtdFracionada")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)	
	endif	
	
	exit(0)
End

;--------------------------------
public operation buscaDadosFilial
;--------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		string vDsLstEmpresa
		numeric vCdEmpresa, vCdEmpresaParam, vCdProduto
		boolean vInAchou	
	endvariables

	vCdProduto = $item("CD_PRODUTO", piParams)
	vCdEmpresaParam = $item("CD_EMPRESA", piParams)
	if (vCdEmpresaParam = 0)
		vCdEmpresaParam = $item("CD_EMPRESA", $xlpg$)
	endif

	if (vCdProduto = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Produto não informado!", "ADICIONAL=Operação->PRDSVCO008.buscaDadosFilial")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	call getParam(vCdEmpresaParam, "PRDSVCO008.buscaDadosFilial")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($status < 0)
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	vDsLstEmpresa = ""
	putitem vDsLstEmpresa, -1, vCdEmpresaParam
	if ($cdEmpresaValorEmp$ > 0) & ($cdEmpresaValorEmp$ != vCdEmpresaParam)
		putitem vDsLstEmpresa, -1, $cdEmpresaValorEmp$
	endif
	if ($cdEmpresaValorSis$ > 0) & ($cdEmpresaValorSis$ != vCdEmpresaParam)
		putitem vDsLstEmpresa, -1, $cdEmpresaValorSis$
	endif

	vInAchou = <FALSE>
	repeat
		getitem vCdEmpresa, vDsLstEmpresa, 1
		clear/e "PRD_PRDINFOSVC"
		CD_EMPRESA.PRD_PRDINFOSVC/init = vCdEmpresa
		CD_PRODUTO.PRD_PRDINFOSVC/init = vCdProduto
		retrieve/e "PRD_PRDINFOSVC"
		if ($status >= 0)
			vInAchou = <TRUE>
		endif
		delitem vDsLstEmpresa, 1
	until (vDsLstEmpresa = "") | (vInAchou = <TRUE>)

	if (vInAchou = <FALSE>)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Dados p/ filial não cadastrados p/ o produto %%vCdProduto%%%!", "ADICIONAL=Operação->PRDSVCO008.buscaDadosFilial")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	; --- DIONE |102/0897| 22/07/2010
	clear/e "PRD_PRDINFOADSVC"
	if(!$empty("PRD_PRDINFOSVC"))
		CD_EMPRESA.PRD_PRDINFOADSVC/init = CD_EMPRESA.PRD_PRDINFOSVC
		CD_PRODUTO.PRD_PRDINFOADSVC/init = CD_PRODUTO.PRD_PRDINFOSVC
		retrieve/e "PRD_PRDINFOADSVC"
	endif
	; ---

	poParams = ""
	putlistitems/occ poParams, "PRD_PRDINFOSVC"	
	putitem/id poParams, "QT_COMPMULTIPLA", QT_COMPMULTIPLA.PRD_PRDINFOADSVC
	putitem/id poParams, "QT_COMPECONOMICA", QT_COMPECONOMICA.PRD_PRDINFOADSVC
	putitem/id poParams, "TP_FREQVENDA", TP_FREQVENDA.PRD_PRDINFOADSVC
	putitem/id poParams, "NR_VARIACAO", NR_VARIACAO.PRD_PRDINFOADSVC
	return(0)
end


;--------------------------------
public operation buscaEstoqueMinMax
;--------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		string vDsLstEmpresa
		numeric vCdEmpresa, vCdProduto, vCdGrupoempresa
		boolean vInAchou	
	endvariables

	vCdProduto = $item("CD_PRODUTO", piParams)
	vCdEmpresa = $item("CD_EMPRESA", piParams)

	if (vCdProduto = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Produto não informado!", "ADICIONAL=Operação->PRDSVCO008.buscaEstoqueMinMax")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->PRDSVCO008.buscaEstoqueMinMax")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif


;	call getParam(vCdEmpresaParam, "PRDSVCO008.buscaDadosFilial")
;	if ($procerror)
;		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
;		poCdErro = $xCdErro$
;		poCtxErro = $xCtxErro$
;		return(-1)
;	endif
;	if ($status < 0)
;		poCdErro = $xCdErro$
;		poCtxErro = $xCtxErro$
;		return(-1)
;	endif

;	vDsLstEmpresa = ""
;	putitem vDsLstEmpresa, -1, vCdEmpresaParam
;	if ($cdEmpresaValorEmp$ > 0) & ($cdEmpresaValorEmp$ != vCdEmpresaParam)
;		putitem vDsLstEmpresa, -1, $cdEmpresaValorEmp$
;	endif
;	if ($cdEmpresaValorSis$ > 0) & ($cdEmpresaValorSis$ != vCdEmpresaParam)
;		putitem vDsLstEmpresa, -1, $cdEmpresaValorSis$
;	endif

;	vInAchou = <FALSE>
;	while ($status >= 0)
;		getitem vCdEmpresa, vDsLstEmpresa, 1
		clear/e "PRD_PRDINFOSVC"
		CD_EMPRESA.PRD_PRDINFOSVC/init = vCdEmpresa
		CD_PRODUTO.PRD_PRDINFOSVC/init = vCdProduto
		retrieve/e "PRD_PRDINFOSVC"
		if ($status >= 0)
			vInAchou = <TRUE>
		endif
 

;	if (vInAchou = <FALSE>)
;		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Dados p/ filial não cadastrados p/ o produto %%vCdProduto%%%!", "ADICIONAL=Operação->PRDSVCO008.buscaDadosFilial")
;		poCdErro = $xCdErro$
;		poCtxErro = $xCtxErro$
;		exit(-1)
;	endif

	poParams = ""
	putlistitems/occ poParams, "PRD_PRDINFOSVC"	

	return(0)
end

;-------------------------------
public operation validaEmbalagem
;-------------------------------
	params
		string  $xlpg$    :IN    
		string  piParams  :IN
		string  poParams  :OUT
		string  poCdErro  :OUT
		string  poCtxErro :OUT
	endparams
	
	variables
		numeric vCdProduto, vQtSolicitada, vQtMin, vQtMax, vQtResto, vQtEmbalagem
		string vDsQtPermitida
	endvariables

	vCdProduto = $item("CD_PRODUTO", piParams)
	vQtSolicitada = $item("QT_QUANTIDADE", piParams)

	if (vCdProduto = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Produto não informado!", "ADICIONAL=Operação->PRDSVCO008.validaQtdFracionada")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	clear/e "PRD_EMBALAGEMSVC"
	CD_PRODUTO.PRD_EMBALAGEMSVC = vCdProduto
	retrieve/e "PRD_EMBALAGEMSVC"
	if ($status >= 0)

;-- Adriano - Projeto/Tarefa 22/1788 - 11/03/2011

		if ($tpValidacaoEmbalagem$ = 1)
			setocc "PRD_EMBALAGEMSVC", 1
			while ($status >= 0)
				if (QT_EMBALAGEM.PRD_EMBALAGEMSVC > 1)
					if (vDsQtPermitida =	"")
						vDsQtPermitida = QT_EMBALAGEM.PRD_EMBALAGEMSVC[round, 0]
					else
						vDsQtPermitida = "%%vDsQtPermitida%%%, %%QT_EMBALAGEM.PRD_EMBALAGEMSVC[round, 0]"
					endif
				endif
				setocc "PRD_EMBALAGEMSVC", $curocc("PRD_EMBALAGEMSVC") + 1
			endwhile

			clear/e "PRD_EMBALAGEMSVC"
			CD_PRODUTO.PRD_EMBALAGEMSVC = vCdProduto
			QT_EMBALAGEM.PRD_EMBALAGEMSVC = vQtSolicitada 
			retrieve/e "PRD_EMBALAGEMSVC"         
			if ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Quantidade não cadastrada para o produto %%vCdProduto!%%^ Quantidade(s)permitida(s) %%vDsQtPermitida", "ADICIONAL=Operação->PRDSVCO008.validaEmbalagem")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
;--
		else
			vQtEmbalagem = 0
			sort/e "PRD_EMBALAGEMSVC", "QT_EMBALAGEM.PRD_EMBALAGEMSVC"
			setocc "PRD_EMBALAGEMSVC", 1
			while ($status >= 0) & (vQtEmbalagem = 0)
				if (QT_EMBALAGEM.PRD_EMBALAGEMSVC > 1)
					vQtEmbalagem = QT_EMBALAGEM.PRD_EMBALAGEMSVC
				endif
				setocc "PRD_EMBALAGEMSVC", $curocc("PRD_EMBALAGEMSVC") + 1
			endwhile

			if (vQtEmbalagem > 1)
				vQtResto = vQtSolicitada % vQtEmbalagem

				if (vQtResto != 0)
					vQtMin = vQtSolicitada - vQtResto
					vQtMax = vQtMin + vQtEmbalagem

					$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=A quantidade %%vQtSolicitada não é multipla da quantidade da embalagem %%vQtEmbalagem%%%.%%^As quantidades mais próximas são %%vQtMin%%% e %%vQtMax%%%!", "ADICIONAL=Operação->PRDSVCO008.validaEmbalagem")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif

				poParams = ""
				putitem/id poParams, "QT_EMBALAGEM", vQtEmbalagem
			endif
		endif
	endif

	exit(0)
end ;validaEmbalagem

;-----------------------------------
public operation buscaDadosGrupoInfo
;-----------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		string vDsLstEmpresa
		numeric vCdEmpresa, vCdEmpresaParam, vCdSeqGrupo
		boolean vInAchou	
	endvariables

	vCdSeqGrupo = $item("CD_SEQGRUPO", piParams)
	vCdEmpresaParam = $item("CD_EMPRESA", piParams)
	if (vCdEmpresaParam = 0)
		vCdEmpresaParam = $item("CD_EMPRESA", $xlpg$)
	endif

	if (vCdSeqGrupo = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Grupo não informado!", "ADICIONAL=Operação->PRDSVCO008.buscaDadosFilial")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	call getParam(vCdEmpresaParam, "PRDSVCO008.buscaDadosFilial")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($status < 0)
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	vDsLstEmpresa = ""
	putitem vDsLstEmpresa, -1, vCdEmpresaParam
	if ($cdEmpresaValorEmp$ > 0) & ($cdEmpresaValorEmp$ != vCdEmpresaParam)
		putitem vDsLstEmpresa, -1, $cdEmpresaValorEmp$
	endif
	if ($cdEmpresaValorSis$ > 0) & ($cdEmpresaValorSis$ != vCdEmpresaParam)
		putitem vDsLstEmpresa, -1, $cdEmpresaValorSis$
	endif

	vInAchou = <FALSE>
	repeat
		getitem vCdEmpresa, vDsLstEmpresa, 1
		clear/e "PRD_GRUPOINFOSVC"
		CD_EMPRESA.PRD_GRUPOINFOSVC/init = vCdEmpresa
		CD_SEQGRUPO.PRD_GRUPOINFOSVC/init = vCdSeqGrupo
		retrieve/e "PRD_GRUPOINFOSVC"
		if ($status >= 0)
			vInAchou = <TRUE>
		endif
		delitem vDsLstEmpresa, 1
	until (vDsLstEmpresa = "") | (vInAchou = <TRUE>)

	if (vInAchou = <FALSE>)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Dados de informação não cadastrados para o grupo %%vCdSeqGrupo%%%!", "ADICIONAL=Operação->PRDSVCO008.buscaDadosFilial")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	poParams = ""
	putlistitems/occ poParams, "PRD_GRUPOINFOSVC"	

	return(0)
end

;---------------------------------------
public operation validaProdutoFornecedor
;---------------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		numeric vCdFornecedor, vCdProduto, vCdProdutoGenerico
	endvariables
	
	vCdFornecedor = $item("CD_FORNECEDOR", piParams)
	vCdProduto = $item("CD_PRODUTO", piParams)
	vCdProdutoGenerico = $item("CD_PRODUTO_GENERICO_DEV", $xlpg$)
	
	if (vCdProdutoGenerico = vCdProduto)
		return(0) ;Para o produto generico do paramentro CD_PRODUTO_GENERICO_DEV nao validar fornecedor.
	endif
	
	if (vCdFornecedor = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Fornecedor não informado!", "ADICIONAL=Operação->PRDSVCO008.validaProdutoFornecedor")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	if (vCdProduto = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Produto não informado!", "ADICIONAL=Operação->PRDSVCO008.validaProdutoFornecedor")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	clear/e "PRD_PRODUTOFOSVC"
	CD_FORNECEDOR.PRD_PRODUTOFOSVC/init = vCdFornecedor
	retrieve/e "PRD_PRODUTOFOSVC"
	if ($status >= 0)
		clear/e "PRD_PRODUTOFOSVC"
		CD_FORNECEDOR.PRD_PRODUTOFOSVC/init = vCdFornecedor
		CD_PRODUTO.PRD_PRODUTOFOSVC/init = vCdProduto
		retrieve/e "PRD_PRODUTOFOSVC"
		if ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Produto %%vCdProduto não cadastrado para o fornecedor %%vCdFornecedor!", "ADICIONAL=Operação->PRDSVCO008.validaProdutoFornecedor")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif
	
	return(0)
end


;---------------------------------------
public operation buscaDadosComposicaoPrd
	;---------------------------------------
	;<thamati 29/04/2009 [Proj. 102 - Tar. 522]		
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		numeric vCdProduto, vNrComposicao, vNrItemComposicao 
		string vTpComposicao, vDsCampo, vTpPercentual 
	endvariables

	vDsCampo = ""
	vTpPercentual = ""
	vCdProduto = $item("CD_PRODUTO", piParams)
	vNrComposicao = $item("NR_COMPOSICAO", piParams)
	vNrItemComposicao =$item("NR_ITEMCOMPOSICAO", piParams)
	vTpComposicao =$item("TP_COMPOSICAO", piParams) ; C - retorna a descrição da composicao / I - retorna o percentual e descrição da fibra da composicao
	vTpPercentual = $item("TP_PERCENTUAL", piParams)

	if (vCdProduto = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Produto não informado!", "ADICIONAL=Operação->PRDSVCO008.buscaDadosComposicaoPrd")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (vNrComposicao = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Código da composição não informado!", "ADICIONAL=Operação->PRDSVCO008.buscaDadosComposicaoPrd")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (vTpComposicao = "I") & (vNrItemComposicao = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Código do item da composição não informado!", "ADICIONAL=Operação->PRDSVCO008.buscaDadosComposicaoPrd")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	clear/e "PRD_PRDCOMPSVC"
	CD_PRODUTO.PRD_PRDCOMPSVC = vCdProduto
	retrieve/e "PRD_PRDCOMPSVC"
	if($status >= 0)	

		setocc "PRD_PRDCOMPSVC", -1
		setocc "PRD_PRDCOMPSVC", vNrComposicao
		if ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Composição não cadastrada para o produto!", "ADICIONAL=Operação->PRDSVCO008.buscaDadosComposicaoPrd")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif

		clear/e "PRD_COMPOSCSVC"
		CD_COMPOSICAO.PRD_COMPOSCSVC/init = CD_COMPOSICAO.PRD_PRDCOMPSVC
		retrieve/e "PRD_COMPOSCSVC"
		if($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Composição não cadastrada!", "ADICIONAL=Operação->PRDSVCO008.buscaDadosComposicaoPrd")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif

		if (vTpComposicao = "C") 
			vDsCampo = "%%DS_COMPOSICAO.PRD_COMPOSCSVC"
		else 
			setocc "PRD_COMPOSCSVC", 1
			sort/e "PRD_COMPOSISVC", "PR_COMPOSICAO.PRD_COMPOSISVC desc"
			setocc "PRD_COMPOSISVC",  vNrItemComposicao 
			if ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Item não cadastrado na composição!", "ADICIONAL=Operação->PRDSVCO008.buscaDadosComposicaoPrd")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		
			clear/e "PRD_FIBRASVC"
			CD_FIBRA.PRD_FIBRASVC/init = CD_FIBRA.PRD_COMPOSISVC
			retrieve/e "PRD_FIBRASVC"
			if($status >= 0)
				if (vTpPercentual = 1)
					$PrPercentual1$ = PR_COMPOSICAO.PRD_COMPOSISVC
					vDsCampo = "%%$PrPercentual1$ %%%% %%DS_FIBRA.PRD_FIBRASVC"
				;== BY BIANCHINI [PRJ/TAREFA 148/0603] 13/10/2010 =====================================
				elseif (vTpPercentual  = 4)
					$PrPercentual4$ = PR_COMPOSICAO.PRD_COMPOSISVC
					vDsCampo = "%%$PrPercentual4$ %%%% %%DS_FIBRA.PRD_FIBRASVC"
				;======================================================================================
				else
					$PrPercentual$ = PR_COMPOSICAO.PRD_COMPOSISVC
					vDsCampo = "%%$PrPercentual$ %%%% %%DS_FIBRA.PRD_FIBRASVC"
				endif
			else
				vDsCampo = ""
			endif
		endif
	else
		clear/e "PRD_PRDGRADESVC"
		CD_PRODUTO.PRD_PRDGRADESVC = vCdProduto
		retrieve/e "PRD_PRDGRADESVC"
		if($status >= 0)
			sort/e "PRD_GRUPOCOMPSVC","CD_COMPOSICAO.PRD_GRUPOCOMPSVC"
			setocc "PRD_GRUPOCOMPSVC", vNrComposicao
			if($status < 0) 
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Composição não cadastrada para o grupo!", "ADICIONAL=Operação->PRDSVCO008.buscaDadosComposicaoPrd")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		
			if(CD_COMPOSICAO.PRD_GRUPOCOMPSVC = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Código da composição não cadastrado!", "ADICIONAL=Operação->PRDSVCO008.buscaDadosComposicaoPrd")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif

			clear/e "PRD_COMPOSCSVC"
			CD_COMPOSICAO.PRD_COMPOSCSVC/init = CD_COMPOSICAO.PRD_GRUPOCOMPSVC
			retrieve/e "PRD_COMPOSCSVC"
			if($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Composição não cadastrada!", "ADICIONAL=Operação->PRDSVCO008.buscaDadosComposicaoPrd")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif

			if (vTpComposicao = "C")	
				vDsCampo = "%%DS_COMPOSICAO.PRD_COMPOSCSVC"
			else
				setocc "PRD_COMPOSCSVC", 1
				sort/e "PRD_COMPOSISVC", "PR_COMPOSICAO.PRD_COMPOSISVC desc"
				setocc "PRD_COMPOSISVC", vNrItemComposicao 
				if ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Item não cadastrado na composição!", "ADICIONAL=Operação->PRDSVCO008.buscaDadosComposicaoPrd")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
				clear/e "PRD_FIBRASVC"
				CD_FIBRA.PRD_FIBRASVC/init = CD_FIBRA.PRD_COMPOSISVC
				retrieve/e "PRD_FIBRASVC"
				if($status >= 0)
					if (vTpPercentual = 1)
						$PrPercentual1$ = PR_COMPOSICAO.PRD_COMPOSISVC
						vDsCampo = "%%$PrPercentual1$ %%%% %%DS_FIBRA.PRD_FIBRASVC"
					;== BY BIANCHINI [PRJ/TAREFA 148/0603] 13/10/2010 =====================================
					elseif (vTpPercentual  = 4)
						$PrPercentual4$ = PR_COMPOSICAO.PRD_COMPOSISVC
						vDsCampo = "%%$PrPercentual4$ %%%% %%DS_FIBRA.PRD_FIBRASVC"
					;======================================================================================
					else
						$PrPercentual$ = PR_COMPOSICAO.PRD_COMPOSISVC
						vDsCampo = "%%$PrPercentual$ %%%% %%DS_FIBRA.PRD_FIBRASVC"
					endif
				else
					vDsCampo = ""
				endif											
			endif
		endif	
	endif
	
	poParams = ""
	putitem/id poParams, "DS_COMPOSICAO", vDsCampo	

	return (0)
End;operation buscaDadosComposicaoPrd

;---------------------------------------
public operation buscaDadosComposicaoGrupoPrd
	;---------------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		numeric vCdProduto, vNrComposicao, vCdSeqGrupo
		string vDsLstCompGrupo, vDsItemFibra, vDsLstFibra, vDsItemCompGrupo
		string vDsItemCompProd, vDsLstCompProd
	endvariables
	
	vCdSeqGrupo = $item("CD_SEQGRUPO", piParams)
	vCdProduto = $item("CD_PRODUTO", piParams)

	if (vCdSeqGrupo = 0 & vCdProduto = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Código do grupo e/ou produto não informado!", "ADICIONAL=Operação->PRDSVCO008.buscaDadosComposicaoGrupoPrd")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	vDsLstCompProd = ""
	vDsLstCompGrupo = ""

	if (vCdSeqGrupo > 0)
		clear/e "F_PRD_GRUPOCOSVC"
		CD_SEQGRUPO.F_PRD_GRUPOCOSVC/init = vCdSeqGrupo
		retrieve/e "F_PRD_GRUPOCOSVC"
		if ($status >= 0)
			setocc "F_PRD_GRUPOCOSVC", 1
			while ($status >= 0)
				clear/e "PRD_COMPOSCSVC"
				CD_COMPOSICAO.PRD_COMPOSCSVC/init = CD_COMPOSICAO.F_PRD_GRUPOCOSVC
				retrieve/e "PRD_COMPOSCSVC"
				if($status >= 0 & !$empty(PRD_COMPOSISVC))
					vDsLstFibra = ""
					setocc "PRD_COMPOSISVC", 1
						while ($status >= 0)

						clear/e "PRD_FIBRASVC"
						CD_FIBRA.PRD_FIBRASVC/init = CD_FIBRA.PRD_COMPOSISVC
						retrieve/e "PRD_FIBRASVC"
						if($status >= 0)
							vDsItemFibra = ""
							putitem/id vDsItemFibra, "CD_FIBRA", CD_FIBRA.PRD_COMPOSISVC
							putitem/id vDsItemFibra, "PR_COMPOSICAO", PR_COMPOSICAO.PRD_COMPOSISVC
							putitem/id vDsItemFibra, "DS_FIBRA", DS_FIBRA.PRD_FIBRASVC
							putitem vDsLstFibra, -1, vDsItemFibra
						endif
					
						setocc "PRD_COMPOSISVC", $curocc(PRD_COMPOSISVC) + 1
					endwhile
	
					vDsItemCompGrupo = ""
					putitem/id vDsItemCompGrupo, "CD_COMPOSICAO", CD_COMPOSICAO.PRD_COMPOSCSVC
					putitem/id vDsItemCompGrupo, "DS_LSTFIBRA", vDsLstFibra
					putitem vDsLstCompGrupo, -1, vDsItemCompGrupo

				endif
				setocc "F_PRD_GRUPOCOSVC", $curocc(F_PRD_GRUPOCOSVC) + 1
			endwhile
		endif

		if (vDsLstCompGrupo != "")
			putitem/id poParams, "DS_LSTCOMPGRUPO", vDsLstCompGrupo
		endif
	endif
	
	if (vCdProduto > 0)
		clear/e "PRD_PRDCOMPSVC"
		CD_PRODUTO.PRD_PRDCOMPSVC/init = vCdProduto
		retrieve/e "PRD_PRDCOMPSVC"
		if ($status >= 0)
			setocc "PRD_PRDCOMPSVC", 1
			while ($status >= 0)
				clear/e "PRD_COMPOSCSVC"
				CD_COMPOSICAO.PRD_COMPOSCSVC/init = CD_COMPOSICAO.PRD_PRDCOMPSVC
				retrieve/e "PRD_COMPOSCSVC"
				if($status >= 0 & !$empty(PRD_COMPOSISVC))
					vDsLstFibra = ""
					setocc "PRD_COMPOSISVC", 1
					while ($status >= 0)

						clear/e "PRD_FIBRASVC"
						CD_FIBRA.PRD_FIBRASVC/init = CD_FIBRA.PRD_COMPOSISVC
						retrieve/e "PRD_FIBRASVC"
						if($status >= 0)
							vDsItemFibra = ""
							putitem/id vDsItemFibra, "CD_FIBRA", CD_FIBRA.PRD_COMPOSISVC
							putitem/id vDsItemFibra, "PR_COMPOSICAO", PR_COMPOSICAO.PRD_COMPOSISVC
							putitem/id vDsItemFibra, "DS_FIBRA", DS_FIBRA.PRD_FIBRASVC
							putitem vDsLstFibra, -1, vDsItemFibra
						endif
					
						setocc "PRD_COMPOSISVC", $curocc(PRD_COMPOSISVC) + 1
					endwhile
	
					vDsItemCompProd = ""
					putitem/id vDsItemCompProd, "CD_COMPOSICAO", CD_COMPOSICAO.PRD_COMPOSCSVC
					putitem/id vDsItemCompProd, "DS_LSTFIBRA", vDsLstFibra
					putitem vDsLstCompProd, -1, vDsItemCompProd

				endif

				setocc "PRD_PRDCOMPSVC", $curocc(PRD_PRDCOMPSVC) + 1
			endwhile
		endif
		
		if (vDsLstCompProd != "")
			putitem/id poParams, "DS_LSTCOMPPRODUTO", vDsLstCompProd
		endif
	endif
	
	return (0)
End ; buscaDadosComposicaoGrupo

;-------------------------------
public operation buscaGradeFrequencia
	;-------------------------------
	;thamati 29/07/2010 [Proj. 0130 - Tar. 1191]	
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	variables
		numeric vCdSeqGrupo, vCdTamanho, vQtFrequencia
		string vCdCor
	endvariables		
	
	vCdSeqGrupo = $item("CD_SEQGRUPO", piParams)
	vCdCor = $item("CD_COR", piParams)
	vCdTamanho = $item("CD_TAMANHO", piParams)

	if (vCdSeqGrupo = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Grupo não informado!", "ADICIONAL=Operação->PRDSVCO008.buscaGradeFrequencia")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (vCdCor = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Cor não informada!", "ADICIONAL=Operação->PRDSVCO008.buscaGradeFrequencia")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (vCdTamanho = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Tamnho não informado!", "ADICIONAL=Operação->PRDSVCO008.buscaGradeFrequencia")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	clear/e "PRD_PRDGRADESVC"
	CD_SEQGRUPO.PRD_PRDGRADESVC/init = vCdSeqGrupo 
	retrieve/e "PRD_PRDGRADESVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Grupo não encontrado!", "ADICIONAL=Operação->PRDSVCO008.buscaGradeFrequencia")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)		
	endif

	vQtFrequencia = 0

	clear/e "PRD_GRDFREQCOSVC"
	CD_SEQ.PRD_GRDFREQCOSVC/init = vCdSeqGrupo 
	CD_COR.PRD_GRDFREQCOSVC/init = vCdCor 
	CD_TAMANHO.PRD_GRDFREQCOSVC/init = vCdTamanho 
	IN_PADRAO.PRD_GRDFREQCOSVC/init = <TRUE>
	retrieve/e "PRD_GRDFREQCOSVC"
	if ($status >= 0)
		vQtFrequencia = QT_FREQUENCIA.PRD_GRDFREQCOSVC
	endif	

	if (vQtFrequencia = 0)	
		clear/e "PRD_GRDFREQGSVC"
		CD_SEQGRUPO.PRD_GRDFREQGSVC/init = vCdSeqGrupo 
		CD_TAMANHO.PRD_GRDFREQGSVC/init = vCdTamanho 
		IN_PADRAO.PRD_GRDFREQGSVC/init = <TRUE>
		retrieve/e "PRD_GRDFREQGSVC"
		if ($status >= 0)
			vQtFrequencia = QT_FREQUENCIA.PRD_GRDFREQGSVC
		endif
	endif

	if (vQtFrequencia = 0)	
		clear/e "PRD_GRDFREQSVC"
		CD_GRADE.PRD_GRDFREQSVC/init = "·=%%CD_GRADE.PRD_GRUPOSVC"
		CD_TAMANHO.PRD_GRDFREQSVC/init = vCdTamanho 
		IN_PADRAO.PRD_GRDFREQSVC/init = <TRUE>
		retrieve/e "PRD_GRDFREQSVC"
		if ($status >= 0)
			vQtFrequencia = QT_FREQUENCIA.PRD_GRDFREQSVC
		endif
	endif

	poParams = ""
	putitem/id poParams, "QT_FREQUENCIA", vQtFrequencia 

	return(0)
End ; operation buscaGradeFrequencia
