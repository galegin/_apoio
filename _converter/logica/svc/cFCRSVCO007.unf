;----------------------------
entry getParam
; MFGALEGO - 27/12/2006 ; Michelin / BRASCOL - SM 1795
;----------------------------
;
	variables
		string vpiParams, vpoParams
	endvariables
	
	vpiParams = ""
	putitem vpiParams, -1, "IN_VARIACAO_CAMBIAL"
	activate "ADMSVCO001".getLstParametro(vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
	if ($procerror)
		$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
	elseif ($status < 0)
		$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
	endif
	$inVariacaoCambial$ = $item("IN_VARIACAO_CAMBIAL", vpoParams)
	
	;buscar parametro empresa
	$xlplemp$ = ""
	putitem $xlplemp$, -1, "IN_TP_NOTA_DEBITO_JURO"
	putitem $xlplemp$, -1, "NR_PORTADOR_JUROS"
	putitem $xLplEmp$, -1, "IN_JURO_ISENCAO_ABERTO"  ;MTF(02/04/2008) - Projeto 120, tarefa 0027.
	putitem $xLplEmp$, -1, "TP_COBRANCA_BANCO_RECEB" ;Projeto 078 - Tarefa 4094 - Aloisio Gargantini - 24/02/2011
	activate "ADMSVCO001".GetParamEmpresa($item("CD_EMPRESA", $$gParamGlb), $xlplemp$, $xlplemp$, $xcderro$, $xctxerro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
	elseif ($xcdErro$)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
	endif
	$inTpNotaDebitoJuro$   = $item("IN_TP_NOTA_DEBITO_JURO",  $xlplemp$)
	if ($inTpNotaDebitoJuro$ = "")
		$inTpNotaDebitoJuro$ = <FALSE>
	endif
	$nrPortadorJuro$       = $item("NR_PORTADOR_JUROS",       $xlplemp$)
	$inJuroIsencaoAberto$  = $item("IN_JURO_ISENCAO_ABERTO",  $xLplEmp$) ;MTF(02/04/2008) - Projeto 120, tarefa 0027.
	$tpCobrancaBancoReceb$ = $item("TP_COBRANCA_BANCO_RECEB", $xLplEmp$) ;Projeto 078 - Tarefa 4094 - Aloisio Gargantini - 24/02/2011
	
	return(0)	
end ; getParam

;----------------------------
entry buscaTpDocumentoJuro
; MFGALEGO - 27/12/2006 ; Michelin / BRASCOL - SM 1795
;----------------------------
	params
		numeric poTpDocumentoJuro : INOUT
	endparams

	call getParam()
	
	poTpDocumentoJuro = 1 ; Fatura

	if ($inTpNotaDebitoJuro$ = <TRUE>)
	    poTpDocumentoJuro = 6 ; Nota de Débito
	endif

	return(0)	
end ; buscaTpDocumentoJuro

;-----------------------------------------
; MFGALEGO - 04/07/2007 ; Paulek / ADS ; Prj 79 / Trf 64
;Efetuar a gravação da hora da baixa
entry gravaHoraDtBaixa
;-----------------------------------------
	variables
		date vData
	endvariables

	vData = dt_baixa.fcr_faturaisvc
	dt_baixa.fcr_faturaisvc = "%%vData %%$clock"

	return(0)
end ; gravaHoraDtBaixa

;-----------------------------------------------------;
public operation baixarFatura                         ;
;-----------------------------------------------------;
; MTF - 01/02/2005                                    ;
; Funcao : Baixa total e parcial de faturas.          ;
; Chamada: FCRFP010 - operation -> gravaRecebimento() ;
;-----------------------------------------------------;
;
	params
		string  piGlobal  :IN
		string  piParams  :IN
		string  poParams  :OUT
		numeric poCdErro  :OUT
		string  poCtxErro :OUT
	endparams
	variables
		string  vFatOriginal, vpiParams, vpoParams, vDsRegistro, vDsCheque, vCdComponente, vDtSistema, vDsFatReg, vDsCobBanco
		numeric vVlJuros, vVlRestanteFatOrig, vVlFaturaDesc, vVlRestanteFat, vVlOriginal, vNrDiasJuroFuturo, vVlJuroMulta
		numeric vVlFatura, vVlPago, vNrParcOrigem, vNrSequencia, vTpLanctoJuro, vVlIsencaoJuro, vVlIsencaoMulta, vTpCobrancaMover
		numeric vCdEmpFatOrig, vCdClienteOrig, vNrFatOrig, vNrParcelaOrig, vVlPagoFat, vVlJuroReal, vTpCobranca
		numeric vVlPagoAux, vVlFaturaAux, vVlPercentualProp, vVlBaixarFatura, vVlBaixarJuro, vVlBaixarDesconto
		numeric vVlDiferenca, vTpCobrancaLista
		date 	 vDtLiq
		boolean vInCobranca, vInBaixaEndosso
	endvariables
	
	vDtSistema             = $item("DT_SISTEMA",              piGlobal)
	$insabadoutil$         = $item("IN_SABADO_UTIL",          piParams)
	$nrdiascarenciaatraso$ = $item("NR_DIAS_CARENCIA_ATRASO", piParams)
	$nrdiascarenciamulta$  = $item("NR_DIAS_CARENCIA_MULTA",  piParams)
	$nrdiasdescpont$       = $item("NR_DIAS_DESC_PONT",       piParams)
	$tpaplicacaojuros$     = $item("TP_APLICACAO_JUROS",      piParams)
	; Specian (28/06/2007) Prj.: 078/624
	; A variável $dtpagamento$ foi configurada para o formato (Combined Date and Time)
	$dtpagamento$          = $item("DT_PAGAMENTO",            piParams)
	;
	vNrSequencia           = $item("NR_SEQUENCIA",            piParams)
	vVlOriginal            = $item("VL_ORIGINAL", piParams) - $item("VL_ABATIMENTO", piParams) ;Valor da fatura menos os valores de abatimento.
	vVlFatura              = $item("VL_FATURA",               piparams) ;Valor corrigido.
	vVlPago                = $item("VL_PAGO",                 piParams)
	vVlIsencaoJuro         = $item("VL_ISENCAOJURO",          piParams)
	vTpLanctoJuro          = $item("TP_LANCTOJURO",           piParams)
	vVlIsencaoMulta        = $item("VL_ISENCAOMULTA",         piParams)
	vNrDiasJuroFuturo      = $item("NR_DIAS_JURO_FUTURO",     piParams) ;MTF(23/10/2006) - Projeto 078, tarefa 052.
	;MTF(02/03/2007) - Projeto 078, tarefa 298.
	$vlacrescjurototal$    = $item("VL_ACRESC_JURO_TOTAL",    piParams)
	$vlacrescjuroparcial$  = $item("VL_ACRESC_JURO_PARCIAL",  piParams)
	vCdComponente          = $item("CD_COMPONENTE",           piParams)
	;
	;MTF(09/04/2007) - Projeto 078, tarefa 284.
	$nrdiasatraso$         = $item("NR_DIASATRASO",           piParams)
	$vljuros$              = $item("VL_JUROS",                piParams)
	$vlmulta$              = $item("VL_MULTA",                piParams)
	$vldesconto$           = $item("VL_DESCONTO",             piParams)	
	;
	$inRecebimentoFat$     = $item("IN_RECEBIMENTO_FAT",      piParams) ;MTF(23/08/2007) - Projeto 078, tarefa 769.
	;Projeto 078 - Tarefa 3525 - Aloisio Gargantini - 20/07/2010
	$vlDescontoTotal$      = $item("VL_DESCONTO_TOTAL",       piParams)
	$vlDescontoParcial$    = $item("VL_DESCONTO_PARCIAL",     piParams)
	;
	;MARTINEZ - PRJ/TAR 180/230 - 29/08/2011
	vInBaixaEndosso        = $item("IN_BAIXAENDOSSO",         piParams)
	if (vInBaixaEndosso = "")
		vInBaixaEndosso = <FALSE>
	endif
	;
	if ($item("CD_EMPRESA", piParams) = "")
		$instancehandle->setStatus(<STS_AVISO>, "GEN001", "DESCRICAO=Código de empresa não informada", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if ($item("CD_CLIENTE", piParams) = "")
		$instancehandle->setStatus(<STS_AVISO>, "GEN001", "DESCRICAO=Código de cliente não informado", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if ($item("NR_FAT", piParams) = "")
		$instancehandle->setStatus(<STS_AVISO>, "GEN001", "DESCRICAO=Número da fatura não informado", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if ($item("NR_PARCELA", piParams) = "")
		$instancehandle->setStatus(<STS_AVISO>, "GEN001", "DESCRICAO=Número da parcela da fatura não informado", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if ($item("VL_PAGO", piParams) = "")
		$instancehandle->setStatus(<STS_AVISO>, "GEN001", "DESCRICAO=Valor da fatura não informado", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	clear/e "FCR_FATURAISVC"
	cd_empresa.fcr_faturaisvc/init = $item("CD_EMPRESA", piParams)
	cd_cliente.fcr_faturaisvc/init = $item("CD_CLIENTE", piParams)
	nr_fat.fcr_faturaisvc/init     = $item("NR_FAT"    , piParams)
	nr_parcela.fcr_faturaisvc/init = $item("NR_PARCELA", piParams)
	retrieve/e "FCR_FATURAISVC"
	if ($status < 0)
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fatura não encontrada", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	$inJuroIsencaoAberto$ = "" ;MTF(02/04/2008) - Projeto 120, tarefa 0027.
	
	call getParam()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($status < 0)
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	vTpCobranca   = tp_cobranca.fcr_faturaisvc ;-- MAD [Proj/Tar.078/3300] - 08/04/2010
	vNrParcOrigem = nr_parcela.fcr_faturaisvc
	vFatOriginal  = ""
	
	putlistitems/occ vFatOriginal, "FCR_FATURAISVC"
	if (vVlPago = vVlFatura) & ($item("IN_PARCIAL", piParams) != <TRUE>);Pagamento integral da fatura.
		vl_desconto.fcr_faturaisvc   = $item("VL_DESCONTO",   piParams)
		vl_juros.fcr_faturaisvc      = $item("VL_JUROS",      piParams)
		vl_acrescimo.fcr_faturaisvc  = $item("VL_ACRESCIMO",  piParams)
		vl_despfin.fcr_faturaisvc    = $item("VL_DESPFIN",    piParams)
		vl_abatimento.fcr_faturaisvc = $item("VL_ABATIMENTO", piParams)
		
		;quando fatura for baixada pelo processo de renegociação (FCRFP041) - Marcos Rogerio - 05/05/06
		if ($item("IN_BAIXA_RENEGOCIACAO", piParams) = <TRUE>)
			tp_baixa.fcr_faturaisvc = 9
		else
			tp_baixa.fcr_faturaisvc = 1
		endif
		
		if ($item("IN_BAIXAVIABANCO", piParams) = <TRUE>)
			tp_baixa.fcr_faturaisvc = 12 ;Baixa por conta bancaria. 
		endif
		if ($item("IN_BAIXAFUNC", piParams) = <TRUE>)
			tp_baixa.fcr_faturaisvc = 24 ;Baixa fatura funcionario
		endif
		;--Douglas Ferreira - [Prj/Tarefa 186/0251] - 29/09/2011
		if (vInBaixaEndosso = <TRUE>)
			TP_BAIXA.FCR_FATURAISVC    = 28 ;Baixa título endossado
			TP_COBRANCA.FCR_FATURAISVC = 13 ;Endossado
		endif
		;
		cd_operbaixa.fcr_faturaisvc = $item("CD_USUARIO", piGlobal)
		vl_pago.fcr_faturaisvc      = $item("VL_PAGO",    piParams)
		
		if (dt_liq.fcr_faturaisvc != "")
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fatura já liquidada por outro processo ou manutenção.%%^Empresa: %%cd_empresa.fcr_faturaisvc   Cliente: %%cd_cliente.fcr_faturaisvc  Fatura: %%nr_fat.fcr_faturaisvc  Parcela: %%nr_parcela.fcr_faturaisvc", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		cd_empliq.fcr_faturaisvc   = $item("CD_EMPLIQ", piParams)
		dt_liq.fcr_faturaisvc      = $item("DT_LIQ",    piParams)
		nr_seqliq.fcr_faturaisvc   = $item("NR_SEQLIQ", piParams)
		if ($dtpagamento$ != "")
			dt_baixa.fcr_faturaisvc = $dtpagamento$
		else
			dt_baixa.fcr_faturaisvc = $item("DT_SISTEMA", piGlobal)
		endif
		
		call gravaHoraDtBaixa()
		if (vCdComponente != "")
			cd_componente.fcr_faturaisvc = vCdComponente
		endif
		
		cd_operador.fcr_faturaisvc = $item("CD_USUARIO", piGlobal)
		dt_cadastro.fcr_faturaisvc = $datim
		if ($status = -11)
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fatura sendo utilizada em outro processo ou manutenção.%%^Empresa: %%cd_empresa.fcr_faturaisvc   Cliente: %%cd_cliente.fcr_faturaisvc  Fatura: %%nr_fat.fcr_faturaisvc  Parcela: %%nr_parcela.fcr_faturaisvc", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		
		if (VL_PAGO.FCR_FATURAISVC != (VL_FATURA.FCR_FATURAISVC + VL_ACRESCIMO.FCR_FATURAISVC - (VL_DESCONTO.FCR_FATURAISVC + VL_ABATIMENTO.FCR_FATURAISVC + VL_OUTDESC.FCR_FATURAISVC + VL_IMPOSTO.FCR_FATURAISVC)))
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Valores de baixa do título incorretos.%%^Empresa: %%cd_empresa.fcr_faturaisvc   Cliente: %%cd_cliente.fcr_faturaisvc  Fatura: %%nr_fat.fcr_faturaisvc  Parcela: %%nr_parcela.fcr_faturaisvc", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		
		vDsFatReg = ""
		putlistitems/occ vDsFatReg, "FCR_FATURAISVC"
		vpiParams = ""
		putitem/id vpiParams, "DS_FATURAI",      vDsFatReg
		putitem/id vpiParams, "CD_COMPONENTE",   $componentname
		putitem/id vpiParams, "DS_CHEQUE",       ""
		putitem/id vpiParams, "IN_SEMCOMISSAO",  <TRUE>
		putitem/id vpiParams, "IN_SEMIMPOSTO",   <TRUE>
		putitem/id vpiParams, "IN_ALTSOFATURAI", <TRUE>
		activate "FCRSVCO001".geraFatura($$gParamGlb, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
		if ($procerror)
			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=  /  FCRSVCO007.baixarFatura() chamando FCRSVCO001.geraFatura()")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=  /  FCRSVCO007.baixarFatura() chamando FCRSVCO001.geraFatura()")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		
		if (vInBaixaEndosso = <FALSE>) ;MARTINEZ - PRJ/TAR 180/230 - 29/08/2011
			vpiParams = ""
			vpoParams = ""
			vpiParams = piParams
			putitem/id vpiParams, "IN_NAOSOMA", <TRUE>
			putitem/id vpiParams, "VL_PAGO",    vl_pago.fcr_faturaisvc ;0
			$instancehandle->gravaLiqFaturas(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
			if ($procerror)
				$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		endif

		;Baixar comissao da fatura.
		;MTF(02/10/2006) - Projeto 079, tarefa 009.
		;if ($item("IN_TRANSFERE_COMISSAO", piParams) = <TRUE>) & ($item("DS_COMISSAO", piParams) != "")
		if ($item("DS_COMISSAO", piParams) != "")
		;
			vpiParams = ""
			putitem/id vpiParams, "CD_EMPRESA", cd_empresa.fcr_faturaisvc
			putitem/id vpiParams, "CD_CLIENTE", cd_cliente.fcr_faturaisvc
			putitem/id vpiParams, "NR_FAT",     nr_fat.fcr_faturaisvc
			putitem/id vpiParams, "NR_PARCELA", nr_parcela.fcr_faturaisvc
			activate "FCRSVCO013".atualizaTransfComissao(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
			if ($procerror)
				$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		endif
		
		if ($vlacrescjuroparcial$ > 0)
			vpiParams = ""
			putitem/id vpiParams, "CD_EMPRESA",    cd_empresa.fcr_faturaisvc
			putitem/id vpiParams, "CD_CLIENTE",    cd_cliente.fcr_faturaisvc
			putitem/id vpiParams, "NR_FAT",        nr_fat.fcr_faturaisvc
			putitem/id vpiParams, "NR_PARCELA",    nr_parcela.fcr_faturaisvc
			putitem/id vpiParams, "DS_OBSERVACAO", "Vl. acresc. juro receb. R$ %%$vlacrescjurototal$ - Vl. acresc. parcial R$ %%$vlacrescjuroparcial$"
			putitem/id vpiParams, "CD_COMPONENTE", vCdComponente
			activate "FCRSVCO001".gravaObsFatura(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
			if ($procerror)
				$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		endif

		;Projeto 078 - Tarefa 3525 - Aloisio Gargantini - 20/07/2010		
		if ($vlDescontoParcial$ > 0)
			vpiParams = ""
			putitem/id vpiParams, "CD_EMPRESA",    cd_empresa.fcr_faturaisvc
			putitem/id vpiParams, "CD_CLIENTE",    cd_cliente.fcr_faturaisvc
			putitem/id vpiParams, "NR_FAT",        nr_fat.fcr_faturaisvc
			putitem/id vpiParams, "NR_PARCELA",    nr_parcela.fcr_faturaisvc
			putitem/id vpiParams, "DS_OBSERVACAO", "Vl. Desconto Total. R$ %%$vlDescontoTotal$ - Vl. Desconto Parcial R$ %%$vlDescontoParcial$"
			putitem/id vpiParams, "CD_COMPONENTE", vCdComponente
			activate "FCRSVCO001".gravaObsFatura(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
			if ($procerror)
				$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		endif
		;
		if ($nrdiasatraso$ > 0) & ($vljuros$ = 0) & ($vlmulta$ = 0) & ($vldesconto$ > 0)
			vpiParams = ""
			putitem/id vpiParams, "CD_EMPRESA",    cd_empresa.fcr_faturaisvc
			putitem/id vpiParams, "CD_CLIENTE",    cd_cliente.fcr_faturaisvc
			putitem/id vpiParams, "NR_FAT",        nr_fat.fcr_faturaisvc
			putitem/id vpiParams, "NR_PARCELA",    nr_parcela.fcr_faturaisvc
			putitem/id vpiParams, "DS_OBSERVACAO", "Fatura recebida com atraso e com desconto de R$ %%$vldesconto$"
			putitem/id vpiParams, "CD_COMPONENTE", vCdComponente
			activate "FCRSVCO001".gravaObsFatura(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
			if ($procerror)
				$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		endif
		;
	else
		vVlOriginal = 0
		;akiforna vVlOriginal = $item("VL_ORIGINAL", piParams) - $item("VL_ABATIMENTO", piParams) + $item("VL_DESPFIN", piParams) ;Valor da fatura menos os valores de abatimento.
		vVlOriginal = $item("VL_ORIGINAL", piParams) - vl_abatimento.fcr_faturaisvc - vl_imposto.fcr_faturaisvc - vl_outdesc.fcr_faturaisvc + vl_despfin.fcr_faturaisvc + vl_outacres.fcr_faturaisvc
		;
		
		;Pagamento Parcial. Esta pagando um valor menor do que o valor da fatura sem juros e descontos.
		;Projeto 078 - Tarefa 3343 - Aloisio Gargantini - 26/04/2010 - incluido código abaixo
		;Pagamento Parcial.
		tp_baixa.fcr_faturaisvc = 1
		if ($item("IN_BAIXAVIABANCO", piParams) = <TRUE>)
			tp_baixa.fcr_faturaisvc = 12 ;Baixa por conta bancaria. 
		endif
		;MFG(04/09/2009) - Projeto 052, tarefa 258.
		if ($item("IN_BAIXAFUNC", piParams) = <TRUE>)
			tp_baixa.fcr_faturaisvc = 24 ;Baixa fatura funcionario
		endif
		;
		;
		;MARTINEZ - PRJ/TAR 180/230 - 29/08/2011
		if (vInBaixaEndosso)
			TP_BAIXA.FCR_FATURAISVC    = 28 ;Baixa título endossado
			TP_COBRANCA.FCR_FATURAISVC = 13 ;Endossado
		endif
		;
		cd_operbaixa.fcr_faturaisvc = $item("CD_USUARIO",   piGlobal)
		vVlRestanteFat              = vl_fatura.fcr_faturaisvc
		vl_desconto.fcr_faturaisvc  = $item("VL_DESCONTO",  piParams)
		vl_juros.fcr_faturaisvc     = $item("VL_JUROS",     piParams)
		vl_acrescimo.fcr_faturaisvc = $item("VL_ACRESCIMO", piParams)
		vl_fatura.fcr_faturaisvc    = vVlPago - (vl_acrescimo.fcr_faturaisvc - (vl_abatimento.fcr_faturaisvc + vl_imposto.fcr_faturaisvc + vl_outdesc.fcr_faturaisvc + $item("VL_DESCONTO", piParams)))
		
		;Esta validação abaixo foi incluida, quando o titulo tem um valor de juro maior que o valor do titulo e o pagamento esta sendo feito parcial.
		if (vl_fatura.fcr_faturaisvc < 0)
			vVlOriginal = 0
			vVlOriginal = $item("VL_ORIGINAL", piParams)
			if (vVlPago < vVlOriginal)
				vVlOriginal = vVlPago - vl_abatimento.fcr_faturaisvc + vl_despfin.fcr_faturaisvc + vl_outacres.fcr_faturaisvc - vl_imposto.fcr_faturaisvc - vl_outdesc.fcr_faturaisvc
			else
				vVlOriginal = $item("VL_ORIGINAL", piParams) - vl_abatimento.fcr_faturaisvc + vl_despfin.fcr_faturaisvc + vl_outacres.fcr_faturaisvc - vl_imposto.fcr_faturaisvc - vl_outdesc.fcr_faturaisvc
			endif	
			vVlPagoAux        = vVlPago   - $vlacrescjuroparcial$ + $vlDescontoParcial$ - (vl_outacres.fcr_faturaisvc + vl_despfin.fcr_faturaisvc) + (vl_abatimento.fcr_faturaisvc + vl_outdesc.fcr_faturaisvc + vl_imposto.fcr_faturaisvc)
			;DANI - CASO 3 - está somando novamente o valor de abatimento no valor da fatura, sendo que o mesmo já vem calculado no vVlFatura (117,60)
			vVlFaturaAux      = vVlFatura - $vlacrescjuroparcial$ + $vlDescontoParcial$ - (vl_outacres.fcr_faturaisvc + vl_despfin.fcr_faturaisvc) + (vl_abatimento.fcr_faturaisvc + vl_outdesc.fcr_faturaisvc + vl_imposto.fcr_faturaisvc)
			;DANI - CASO 3 - está somando novamente o valor de abatimento, sendo que o mesmo já vem calculado no vVlFatura (117,60)
			vVlPercentualProp = vVlPagoAux / vVlFaturaAux
			vVlPercentualProp = vVlPercentualProp[round,6]
			vVlBaixarFatura   = vVlOriginal - $vlacrescjuroparcial$ + $vlDescontoParcial$ - (vl_outacres.fcr_faturaisvc + vl_despfin.fcr_faturaisvc) + (vl_abatimento.fcr_faturaisvc + vl_outdesc.fcr_faturaisvc + vl_imposto.fcr_faturaisvc)
			vVlBaixarFatura   = vVlBaixarFatura * vVlPercentualProp
			vVlBaixarFatura   = vVlBaixarFatura[round,2]
			vVlJuroMulta      = $vlJuros$ + $vlMulta$
			vVlBaixarJuro     = (vVlJuroMulta - $vlacrescjuroparcial$) * vVlPercentualProp
			vVlBaixarJuro     = vVlBaixarJuro[round,2]
			vVlBaixarDesconto = ($vlDesconto$ + $vlDescontoParcial$) * vVlPercentualProp
			vVlBaixarDesconto = vVlBaixarDesconto[round,2]
			VL_FATURA.FCR_FATURAISVC    = vVlBaixarFatura
			VL_JUROS.FCR_FATURAISVC     = vVlBaixarJuro
			VL_DESCONTO.FCR_FATURAISVC  = vVlBaixarDesconto
			vl_acrescimo.fcr_faturaisvc = VL_JUROS.FCR_FATURAISVC + vl_outacres.fcr_faturaisvc + vl_despfin.fcr_faturaisvc
		endif
		;
		if ((vVlIsencaoJuro + vVlIsencaoMulta) > 0) & (vVlPago != (VL_FATURA.FCR_FATURAISVC + (VL_JUROS.FCR_FATURAISVC + VL_DESPFIN.FCR_FATURAISVC + VL_OUTACRES.FCR_FATURAISVC) - (VL_DESCONTO.FCR_FATURAISVC + VL_ABATIMENTO.FCR_FATURAISVC + VL_IMPOSTO.FCR_FATURAISVC + VL_OUTDESC.FCR_FATURAISVC)))
			vVlDiferenca = vVlPago + (VL_DESCONTO.FCR_FATURAISVC + VL_ABATIMENTO.FCR_FATURAISVC + VL_OUTDESC.FCR_FATURAISVC + VL_IMPOSTO.FCR_FATURAISVC) - (VL_OUTACRES.FCR_FATURAISVC + VL_DESPFIN.FCR_FATURAISVC + VL_JUROS.FCR_FATURAISVC + VL_FATURA.FCR_FATURAISVC)
			VL_FATURA.FCR_FATURAISVC = VL_FATURA.FCR_FATURAISVC + vVlDiferenca
		endif
			
		vVlRestanteFat           = vVlRestanteFat - vl_fatura.fcr_faturaisvc
		vl_pago.fcr_faturaisvc   = vVlPago
		
		cd_empliq.fcr_faturaisvc = $item("CD_EMPLIQ", piParams)
		if (dt_liq.fcr_faturaisvc != "")
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fatura já liquidada por outro processo ou manutenção.%%^Empresa: %%cd_empresa.fcr_faturaisvc   Cliente: %%cd_cliente.fcr_faturaisvc  Fatura: %%nr_fat.fcr_faturaisvc  Parcela: %%nr_parcela.fcr_faturaisvc", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
			
		dt_liq.fcr_faturaisvc      = $item("DT_LIQ",    piParams)
		nr_seqliq.fcr_faturaisvc   = $item("NR_SEQLIQ", piParams)
		if ($dtpagamento$ != "")
			dt_baixa.fcr_faturaisvc = $dtpagamento$
		else
			dt_baixa.fcr_faturaisvc = $item("DT_SISTEMA", piGlobal)
		endif
			
		;Efetuar a gravação da hora da baixa
		call gravaHoraDtBaixa()
		
		if (vCdComponente != "")
			cd_componente.fcr_faturaisvc = vCdComponente
		endif
		cd_operador.fcr_faturaisvc  = $item("CD_USUARIO", piGlobal)
		dt_cadastro.fcr_faturaisvc  = $datim
		
		if ($status = -11)
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fatura sendo utilizada em outro processo ou manutenção.%%^Empresa: %%cd_empresa.fcr_faturaisvc   Cliente: %%cd_cliente.fcr_faturaisvc  Fatura: %%nr_fat.fcr_faturaisvc  Parcela: %%nr_parcela.fcr_faturaisvc", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
			
		if (VL_PAGO.FCR_FATURAISVC != (VL_FATURA.FCR_FATURAISVC + VL_ACRESCIMO.FCR_FATURAISVC - (VL_DESCONTO.FCR_FATURAISVC + VL_ABATIMENTO.FCR_FATURAISVC + VL_OUTDESC.FCR_FATURAISVC + VL_IMPOSTO.FCR_FATURAISVC)))
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Valores de baixa do título incorretos.%%^Empresa: %%cd_empresa.fcr_faturaisvc   Cliente: %%cd_cliente.fcr_faturaisvc  Fatura: %%nr_fat.fcr_faturaisvc  Parcela: %%nr_parcela.fcr_faturaisvc", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
			
		vDsFatReg = ""
		putlistitems/occ vDsFatReg, "FCR_FATURAISVC"
		vpiParams = ""
		putitem/id vpiParams, "DS_FATURAI",      vDsFatReg
		putitem/id vpiParams, "CD_COMPONENTE",   $componentname
		putitem/id vpiParams, "DS_CHEQUE",       ""
		putitem/id vpiParams, "IN_SEMCOMISSAO",  <TRUE>
		putitem/id vpiParams, "IN_SEMIMPOSTO",   <TRUE>
		putitem/id vpiParams, "IN_ALTSOFATURAI", <TRUE>
		activate "FCRSVCO001".geraFatura($$gParamGlb, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
		if ($procerror)
			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=  /  FCRSVCO007.baixarFatura() chamando FCRSVCO001.geraFatura()")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=  /  FCRSVCO007.baixarFatura() chamando FCRSVCO001.geraFatura()")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
			
		vCdEmpFatOrig  = cd_empresa.fcr_faturaisvc
		vCdClienteOrig = cd_cliente.fcr_faturaisvc
		vNrFatOrig     = nr_fat.fcr_faturaisvc
		vNrParcelaOrig = nr_parcela.fcr_faturaisvc
		
		if (vInBaixaEndosso = <FALSE>) ;MARTINEZ - PRJ/TAR 180/230 - 29/08/2011
			vpiParams = ""
			vpoParams = ""
			vpiParams = piParams
			putitem/id vpiParams, "IN_NAOSOMA",   <TRUE>
			putitem/id vpiparams, "TP_DOCUMENTO", tp_documento.fcr_faturaisvc
			putitem/id vpiParams, "VL_PAGO",      vl_pago.fcr_faturaisvc
			$instancehandle->gravaLiqFaturas(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
			if ($procerror)
				$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		endif

		if ($vlacrescjuroparcial$ > 0)
			vpiParams = ""
			putitem/id vpiParams, "CD_EMPRESA",    cd_empresa.fcr_faturaisvc
			putitem/id vpiParams, "CD_CLIENTE",    cd_cliente.fcr_faturaisvc
			putitem/id vpiParams, "NR_FAT",        nr_fat.fcr_faturaisvc
			putitem/id vpiParams, "NR_PARCELA",    nr_parcela.fcr_faturaisvc
			putitem/id vpiParams, "DS_OBSERVACAO", "Vl. acresc. juro receb. R$ %%$vlacrescjurototal$ - Vl. acresc. parcial R$ %%$vlacrescjuroparcial$"
			putitem/id vpiParams, "CD_COMPONENTE", vCdComponente
			activate "FCRSVCO001".gravaObsFatura(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
			if ($procerror)
				$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		endif
		;Projeto 078 - Tarefa 3525 - Aloisio Gargantini - 20/07/2010		
		if ($vlDescontoParcial$ > 0)
			vpiParams = ""
			putitem/id vpiParams, "CD_EMPRESA",    cd_empresa.fcr_faturaisvc
			putitem/id vpiParams, "CD_CLIENTE",    cd_cliente.fcr_faturaisvc
			putitem/id vpiParams, "NR_FAT",        nr_fat.fcr_faturaisvc
			putitem/id vpiParams, "NR_PARCELA",    nr_parcela.fcr_faturaisvc
			putitem/id vpiParams, "DS_OBSERVACAO", "Vl. Desconto Total. R$ %%$vlDescontoTotal$ - Vl. Desconto Parcial R$ %%$vlDescontoParcial$"
			putitem/id vpiParams, "CD_COMPONENTE", vCdComponente
			activate "FCRSVCO001".gravaObsFatura(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
			if ($procerror)
				$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		endif
		;
		if ($nrdiasatraso$ > 0) & ($vldesconto$ > 0)
			vpiParams = ""
			putitem/id vpiParams, "CD_EMPRESA",    cd_empresa.fcr_faturaisvc
			putitem/id vpiParams, "CD_CLIENTE",    cd_cliente.fcr_faturaisvc
			putitem/id vpiParams, "NR_FAT",        nr_fat.fcr_faturaisvc
			putitem/id vpiParams, "NR_PARCELA",    nr_parcela.fcr_faturaisvc
			putitem/id vpiParams, "DS_OBSERVACAO", "Fatura recebida com atraso e com desconto de R$ %%$vldesconto$"
			putitem/id vpiParams, "CD_COMPONENTE", vCdComponente
			activate "FCRSVCO001".gravaObsFatura(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
			if ($procerror)
				$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		endif
			
		;Baixar comissao da fatura.
		if ($item("DS_COMISSAO", piParams) != "")
			vpiParams = ""
			putitem/id vpiParams, "CD_EMPRESA", cd_empresa.fcr_faturaisvc
			putitem/id vpiParams, "CD_CLIENTE", cd_cliente.fcr_faturaisvc
			putitem/id vpiParams, "NR_FAT",     nr_fat.fcr_faturaisvc
			putitem/id vpiParams, "NR_PARCELA", nr_parcela.fcr_faturaisvc
			activate "FCRSVCO013".atualizaTransfComissao(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
			if ($procerror)
				$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		endif
			
		if (vVlRestanteFat > 0)
			;Gera a fatura com o valor restante da fatura original.
			clear/e "FCR_FATURAISVC"
			creocc  "FCR_FATURAISVC", -1
			getlistitems/occ vFatOriginal, "FCR_FATURAISVC"
			
			;Busca numero sequencia da fatura.
			vpiParams = ""
			vpoParams = ""
			putitem/id vpiParams, "TP_PARCELA", 2	
			$instancehandle->geraSeqParcela(vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
			if ($procerror)
				$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
			nr_parcelaorigem.fcr_faturaisvc = vNrParcOrigem
			nr_parcela.fcr_faturaisvc       = $item("NR_PARCELA", vpoParams)
			vl_juros.fcr_faturaisvc         = ""
			vl_desconto.fcr_faturaisvc      = ""
			vl_fatura.fcr_faturaisvc        = vVlRestanteFat
			vl_pago.fcr_faturaisvc          = 0
			vl_acrescimo.fcr_faturaisvc     = ""
			vl_outdesc.fcr_faturaisvc       = ""
			vl_outacres.fcr_faturaisvc      = ""
			vl_abatimento.fcr_faturaisvc    = ""
			vl_despfin.fcr_faturaisvc       = ""
			vl_imposto.fcr_faturaisvc       = ""
			cd_operador.fcr_faturaisvc      = $item("CD_USUARIO", piGlobal)
			dt_cadastro.fcr_faturaisvc      = $datim
			cd_opercad.fcr_faturaisvc       = $item("CD_USUARIO" , piGlobal)
			dt_opercad.fcr_faturaisvc       = $datim
			tp_inclusao.fcr_faturaisvc      = 2 ; automatico
			NR_NOSSONUMERO.FCR_FATURAISVC   = ""
			DS_DACNOSSONR.FCR_FATURAISVC    = ""
			TP_COBRANCA.FCR_FATURAISVC      = 0
			
			;* Claudemir - Prj/Tarefa: 78/3432 - 28/05/2010
			;if (vTpCobranca = 16) ; Cobrança em loja
			;	tp_cobranca.fcr_faturaisvc = vTpCobranca
			;endif
			
			if (vTpCobranca = 16) | (vTpCobranca = 17)  ; 16 - Cobrança em loja ou 17 - Aguardando recebimento
				tp_cobranca.fcr_faturaisvc = vTpCobranca
			;Projeto 078 - Tarefa 4094 - Aloisio Gargantini - 24/02/2011
			else
				if ($tpCobrancaBancoReceb$ != "")
					vTpCobrancaMover = ""
					vDsCobBanco      = $tpCobrancaBancoReceb$
					repeat
						getitem vTpCobrancaLista, vDsCobBanco, 1	
						if (vTpCobrancaLista = vTpCobranca) 
							vTpCobrancaMover = vTpCobrancaLista
						endif
						delitem vDsCobBanco , 1
					until (vDsCobBanco = "")	
					if (vTpCobrancaMover > 0)
						tp_cobranca.fcr_faturaisvc = vTPCobrancaMover
					endif
				endif
			;
			endif ;*
			;
			if (vCdComponente != "")
				cd_componente.fcr_faturaisvc = vCdComponente
			endif
				
			vDsFatReg = ""
			putlistitems/occ vDsFatReg, "FCR_FATURAISVC"
			vpiParams = ""
			putitem/id vpiParams, "DS_FATURAI",      vDsFatReg
			putitem/id vpiParams, "CD_COMPONENTE",   $componentname
			putitem/id vpiParams, "DS_CHEQUE",       ""
			putitem/id vpiParams, "IN_SEMCOMISSAO",  <TRUE>
			putitem/id vpiParams, "IN_SEMIMPOSTO",   <TRUE>
			putitem/id vpiParams, "IN_ALTSOFATURAI", <FALSE>
			activate "FCRSVCO001".geraFatura($$gParamGlb, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
			if ($procerror)
				$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=  /  FCRSVCO007.baixarFatura() chamando FCRSVCO001.geraFatura()")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=  /  FCRSVCO007.baixarFatura() chamando FCRSVCO001.geraFatura()")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
						
			if (vInBaixaEndosso = <FALSE>) ;MARTINEZ - PRJ/TAR 180/230 - 29/08/2011
				;Grava informacoes na liquidacao da nova fatura gerada.
				vpiParams = ""
				vpoParams = ""
				vpiParams = piParams
				vNrSequencia = vNrSequencia + 1
				putitem/id vpiParams, "NR_FAT",       nr_fat.fcr_faturaisvc
				putitem/id vpiParams, "NR_PARCELA",   nr_parcela.fcr_faturaisvc
				putitem/id vpiParams, "VL_FATURA",    vl_fatura.fcr_faturaisvc
				putitem/id vpiParams, "NR_SEQUENCIA", vNrSequencia
				putitem/id vpiParams, "TP_DOCUMENTO", tp_documento.fcr_faturaisvc
				putitem/id vpiParams, "TP_TIPOREG",   2
				putitem/id vpiParams, "IN_NAOSOMA",   <TRUE>
				if ($inRecebimentoFat$ = <TRUE>)
					putitem/id vpiParams, "VL_PAGO",   vl_fatura.fcr_faturaisvc
				else
					putitem/id vpiParams, "VL_PAGO",   0
				endif
				
				$instancehandle->gravaLiqFaturas(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
				if ($procerror)
					$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				elseif ($status < 0)
					$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
			endif
				
			vpiParams = ""
			putitem/id vpiParams, "CD_EMPFATORIG",  vCdEmpFatOrig
			putitem/id vpiParams, "CD_CLIENTEORIG", vCdClienteOrig
			putitem/id vpiParams, "NR_FATORIG",     vNrFatOrig
			putitem/id vpiParams, "NR_PARCELAORIG", vNrParcelaOrig
			putitem/id vpiParams, "CD_EMPRESA",     cd_empresa.fcr_faturaisvc
			putitem/id vpiParams, "CD_CLIENTE",     cd_cliente.fcr_faturaisvc
			putitem/id vpiParams, "NR_FAT",         nr_fat.fcr_faturaisvc
			putitem/id vpiParams, "NR_PARCELA",     nr_parcela.fcr_faturaisvc
			$instancehandle->gravarComissaoRecebimento(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
			if ($procerror)
				rollback
				$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=  /  FCRSVCO007.baixarFatura() chamando FCRSVCO007.gravarComissaoRecebimento()")
				return(-1)
			elseif ($status < 0)
				rollback
				$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=  /  FCRSVCO007.baixarFatura() chamando FCRSVCO007.gravarComissaoRecebimento()")
				return(-1)
			endif
			
			vpiParams = ""
			putitem/id vpiParams, "CD_EMPRESA",     cd_empresa.fcr_faturaisvc
			putitem/id vpiParams, "CD_CLIENTE",     cd_cliente.fcr_faturaisvc
			putitem/id vpiParams, "NR_FAT",         nr_fat.fcr_faturaisvc
			putitem/id vpiParams, "NR_PARCELA",     nr_parcela.fcr_faturaisvc
			putitem/id vpiParams, "IN_NOVAFATURA",  <TRUE>
			activate "FCRSVCO090".gravarClassificacaoFatura(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
			if ($procerror)
				$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif

			;--Douglas Ferreira - [Prj/Tarefa 180/0258] - 09/09/2011
			if (TP_DOCUMENTO.FCR_FATURAISVC = 2) ;Cheque

				clear/e "F_FCR_CHEQUESVC"
				CD_EMPRESA.F_FCR_CHEQUESVC/init = vCdEmpFatOrig
				CD_CLIENTE.F_FCR_CHEQUESVC/init = vCdClienteOrig
				NR_FAT.F_FCR_CHEQUESVC/init     = vNrFatOrig
				NR_PARCELA.F_FCR_CHEQUESVC/init = vNrParcelaOrig
				retrieve/e "F_FCR_CHEQUESVC"
				if ($status >= 0) & (DT_DEVOLUCAO1.F_FCR_CHEQUESVC != "")

					creocc "FCR_CHEQUESVC", -1
					CD_EMPRESA.FCR_CHEQUESVC/init = CD_EMPRESA.FCR_FATURAISVC
					CD_CLIENTE.FCR_CHEQUESVC/init = CD_CLIENTE.FCR_FATURAISVC
					NR_FAT.FCR_CHEQUESVC/init     = NR_FAT.FCR_FATURAISVC
					NR_PARCELA.FCR_CHEQUESVC/init = NR_PARCELA.FCR_FATURAISVC
					retrieve/o "FCR_CHEQUESVC"
					if ($status = 4) | ($status = -7)
						retrieve/x "FCR_CHEQUESVC"
					endif
					CD_MOTDEVCHQ.FCR_CHEQUESVC   = CD_MOTDEVCHQ.F_FCR_CHEQUESVC
					DT_DEVOLUCAO1.FCR_CHEQUESVC  = DT_DEVOLUCAO1.F_FCR_CHEQUESVC
					NR_CTAPESDEV1.FCR_CHEQUESVC  = NR_CTAPESDEV1.F_FCR_CHEQUESVC
					DT_BAIXA1.FCR_CHEQUESVC      = DT_BAIXA1.F_FCR_CHEQUESVC
					NR_CTAPESBX1.FCR_CHEQUESVC   = NR_CTAPESBX1.F_FCR_CHEQUESVC
					CD_MOTDEVCHQ2.FCR_CHEQUESVC  = CD_MOTDEVCHQ2.F_FCR_CHEQUESVC
					DT_DEVOLUCAO2.FCR_CHEQUESVC  = DT_DEVOLUCAO2.F_FCR_CHEQUESVC
					NR_CTAPESDEV2.FCR_CHEQUESVC  = NR_CTAPESDEV2.F_FCR_CHEQUESVC
					DT_BAIXA2.FCR_CHEQUESVC      = DT_BAIXA2.F_FCR_CHEQUESVC
					NR_CTAPESBX2.FCR_CHEQUESVC   = NR_CTAPESBX2.F_FCR_CHEQUESVC
					IN_REAPRESENTA.FCR_CHEQUESVC = IN_REAPRESENTA.F_FCR_CHEQUESVC
					CD_OPERADOR.FCR_CHEQUESVC    = $item("CD_USUARIO", piGlobal)
					DT_CADASTRO.FCR_CHEQUESVC    = $datim

					$collhandle("FCR_CHEQUESVC")->Salvar()
					if ($procerror)
						$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						poCdErro  = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					elseif ($status < 0)
						$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
						poCdErro  = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					endif
				endif
			endif
			;
		endif
			
		poParams = ""
		putitem/id poParams, "NR_SEQUENCIA", vNrSequencia
		;
	endif
	
	;Se houve isencao de juros, lancar o valor a empresa ou cliente conforme informado pelo usuario.
	if ((vVlIsencaoJuro > 0) | (vVlIsencaoMulta > 0)) & %\
	   ($item("TP_LANCTOJURO", piParams) != 99) ; MFGALEGO - 26/12/2006 ; Alex / LOJAGAUCHA - SM 1642/1827
		
		clear/e "FCR_FATURAISVC"
		creocc  "FCR_FATURAISVC", -1
		getlistitems/occ vFatOriginal, "FCR_FATURAISVC"
		
		if ($nrPortadorJuro$ > 0)
			NR_PORTADOR.FCR_FATURAISVC = $nrPortadorJuro$
		endif
		
		;Verifica se a isencao de juros sera lancada p/ empresa ou cliente.
		if ($item("TP_LANCTOJURO", piParams) = 2)
			clear/e "GER_EMPRESASVC"
			cd_empresa.ger_empresasvc/init = $item("CD_EMPRECEBIMENTO", piParams)
			retrieve/e "GER_EMPRESASVC"
			if ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Empresa inválida p/ gravar fatura de isençao de juros", "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
			cd_cliente.fcr_faturaisvc/init = cd_pessoa.ger_empresasvc
		endif
		
		;Busca numero sequencia da fatura.
		vpiParams = ""
		vpoParams = ""			
		;putitem/id vpiParams, "TP_PARCELA", 3 ; Projeto 078 - Tarefa 410 - Aloisio Gargantini - 30/04/2007 - comentado
		$instancehandle->geraSeqParcela(vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
		if ($procerror)
			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		
		nr_parcela.fcr_faturaisvc = $item("NR_PARCELA", vpoParams)
		if ($item("TP_LANCTOJURO", piParams) = 2)
			
			;MTF(07/11/2008) - Projeto 078, tarefa 1948.
			clear/e "F_FCR_FATURAISVC"
			cd_empresa.f_fcr_faturaisvc/init = cd_empresa.fcr_faturaisvc
			cd_cliente.f_fcr_faturaisvc/init = cd_cliente.fcr_faturaisvc
			nr_fat.f_fcr_faturaisvc/init     = nr_fat.fcr_faturaisvc
			retrieve/e "F_FCR_FATURAISVC"
			if ($status >= 0)
				setocc "F_FCR_FATURAISVC", -1
				if (nr_parcela.f_fcr_faturaisvc = 999)
					nr_fat.fcr_faturaisvc = vDtSistema
					
					$instancehandle->geraSeqParcela(vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
					if ($procerror)
						$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						poCdErro  = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					elseif ($status < 0)
						$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
						poCdErro  = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					endif
					nr_parcela.fcr_faturaisvc = $item("NR_PARCELA", vpoParams)
				endif
			endif
			;
			
			clear/e "FCR_FATURACSVC"
			creocc  "FCR_FATURACSVC", -1
			cd_empresa.fcr_faturacsvc = cd_empresa.fcr_faturaisvc
			cd_cliente.fcr_faturacsvc = cd_cliente.fcr_faturaisvc
			nr_fat.fcr_faturacsvc     = nr_fat.fcr_faturaisvc
			retrieve/o "FCR_FATURACSVC"
			if ($status = -7)
				retrieve/x "FCR_FATURACSVC"
			endif
			
			cd_operador.fcr_faturacsvc = $item("CD_USUARIO", piGlobal)
			dt_cadastro.fcr_faturacsvc = $datim
			$collhandle ("FCR_FATURACSVC")->salvar()
			if ($procerror)
				$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		endif
		; MFGALEGO - 27/12/2006 ; Michelin / BRASCOL - SM 1795
		;tp_documento.fcr_faturaisvc     = 1
		
		call buscaTpDocumentoJuro(tp_documento.fcr_faturaisvc)
		;
		dt_emissao.fcr_faturaisvc       = $dtpagamento$
		;MTF(23/10/2006) - Projeto 078, tarefa 052.
		;dt_vencimento.fcr_faturaisvc    = $dtpagamento$ ;item("DT_SISTEMA", piGlobal)
		dt_vencimento.fcr_faturaisvc    = $dtpagamento$ + vNrDiasJuroFuturo
		;
		vl_juros.fcr_faturaisvc         = ""
		vl_desconto.fcr_faturaisvc      = ""
		vl_outacres.fcr_faturaisvc      = 0
		vl_outdesc.fcr_faturaisvc       = 0
		vl_abatimento.fcr_faturaisvc    = 0
		vl_despfin.fcr_faturaisvc       = 0
		vl_imposto.fcr_faturaisvc       = 0
		vl_acrescimo.fcr_faturaisvc     = 0
		vl_outdesc.fcr_faturaisvc       = 0
		tp_faturamento.fcr_faturaisvc   = 5
		vl_fatura.fcr_faturaisvc        = vVlIsencaoJuro + vVlIsencaoMulta
		vl_original.fcr_faturaisvc      = vVlIsencaoJuro + vVlIsencaoMulta
		vl_pago.fcr_faturaisvc          = 0
		cd_operador.fcr_faturaisvc      = $item("CD_USUARIO", piGlobal)
		dt_cadastro.fcr_faturaisvc      = $datim
		;MTF(09/11/2007) - Projeto 078, tarefa 909.
		if (vCdComponente != "")
			cd_componente.fcr_faturaisvc = vCdComponente
		endif
		;
		; MFGALEGO - 25/01/2007 ; Michelin / RUAH
		if ($item("TP_LANCTOJURO", piParams) = 2)
			cd_empliq.fcr_faturaisvc = $item("CD_EMPLIQ", piParams)
			;MTF(04/10/2007) - Projeto 079, tarefa 163.
			if (dt_liq.fcr_faturaisvc != "")
				$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fatura já liquidada por outro processo ou manutenção.%%^Empresa: %%cd_empresa.fcr_faturaisvc   Cliente: %%cd_cliente.fcr_faturaisvc  Fatura: %%nr_fat.fcr_faturaisvc  Parcela: %%nr_parcela.fcr_faturaisvc", "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
			;
			dt_liq.fcr_faturaisvc    = $item("DT_LIQ",    piParams)
			nr_seqliq.fcr_faturaisvc = $item("NR_SEQLIQ", piParams)
			;MTF(28/03/2007) - Projeto 078, tarefa 300.
			if ($dtpagamento$ != "")
				dt_baixa.fcr_faturaisvc = $dtpagamento$
			else
				dt_baixa.fcr_faturaisvc = $item("DT_SISTEMA", piGlobal)
			endif
			;

			; MFGALEGO - 04/07/2007 ; Paulek / ADS
			;Efetuar a gravação da hora da baixa
			call gravaHoraDtBaixa()
			;

			tp_baixa.fcr_faturaisvc = 1 ; Via recebimento
			;MTF(20/06/2007) - Projeto 078, tarefa 601.
			if ($item("IN_BAIXAVIABANCO", piParams) = <TRUE>)
				tp_baixa.fcr_faturaisvc = 12 ;Baixa por conta bancaria. 
			endif
			;
		endif
		;
		;MTF(02/04/2008) - Projeto 120, tarefa 0027.
		if ($inJuroIsencaoAberto$ = <TRUE>)
			tp_baixa.fcr_faturaisvc = 16 ;Isentado.
		endif
		;
		
		;MTF(06/09/2007) - Projeto 078, tarefa 793.
		if ($status = -11)
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fatura sendo utilizada em outro processo ou manutenção.%%^Empresa: %%cd_empresa.fcr_faturaisvc   Cliente: %%cd_cliente.fcr_faturaisvc  Fatura: %%nr_fat.fcr_faturaisvc  Parcela: %%nr_parcela.fcr_faturaisvc", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		;
		;Projeto 078 - Tarefa 2966 - Aloisio Gargantini - 25/11/2009
		NR_NOSSONUMERO.FCR_FATURAISVC = ""
		DS_DACNOSSONR.FCR_FATURAISVC  = ""
		TP_COBRANCA.FCR_FATURAISVC    = 0
		;
		$collhandle ("FCR_FATURAISVC")->salvar()
		if ($procerror)
			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		
		vpiParams = ""
		putlistitems/occ      vDsRegistro,        "FCR_FATURAISVC"
		putitem/id vpiParams, "DS_FATURAI",       vDsRegistro
		putitem/id vpiParams, "DS_CHEQUE",        vDsCheque
		putitem/id vpiParams, "IN_ALTSOFATURAI",  <FALSE>
		putitem/id vpiParams, "IN_SEMCOMISSAO",   <TRUE>
		putitem/id vpiParams, "IN_SEMIMPOSTO",    <TRUE>
		putitem/id vpiParams, "IN_NAOGRVDESCANT", <TRUE>
		putitem/id vpiParams, "IN_NAOGRVDESC1",   <TRUE>
		putitem/id vpiParams, "IN_NAOGRVDESC2",   <TRUE>
		;MTF(09/11/2007) - Projeto 078, tarefa 909.
		if (vCdComponente != "")
			putitem/id vpiParams, "CD_COMPONENTE", vCdComponente
		else
			putitem/id vpiParams, "CD_COMPONENTE", $componentname
		endif
		;
		activate "FCRSVCO001".geraFatura(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
		if ($procerror)       
			$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Não gerou parcela para fatura de isenção de juro." , "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Não gerou parcela para fatura de isenção de juro." , "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		if (vpoParams = "")
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Nenhuma fatura retornada pelo serviço de gravação na isenção de juro.", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		
		;Grava informacoes na liquidacao da nova fatura gerada.
		vpiParams = ""
		vpoParams = ""
		vpiParams = piParams
		putitem/id vpiParams, "CD_EMPRESA",   cd_empresa.fcr_faturaisvc
		putitem/id vpiParams, "CD_CLIENTE",   cd_cliente.fcr_faturaisvc
		vNrSequencia = vNrSequencia + 1
		putitem/id vpiParams, "NR_FAT",       nr_fat.fcr_faturaisvc
		putitem/id vpiParams, "NR_PARCELA",   nr_parcela.fcr_faturaisvc
		putitem/id vpiParams, "VL_FATURA",    vl_fatura.fcr_faturaisvc
		putitem/id vpiParams, "NR_SEQUENCIA", vNrSequencia
		putitem/id vpiParams, "TP_TIPOREG",   2
		putitem/id vpiParams, "TP_DOCUMENTO", tp_documento.fcr_faturaisvc
		putitem/id vpiParams, "IN_NAOSOMA",   <TRUE>
		;MTF(23/08/2007) - Projeto 078, tarefa 769.
		;putitem/id vpiParams, "VL_PAGO",     0
		if ($inRecebimentoFat$ = <TRUE>)
			putitem/id vpiParams, "VL_PAGO",  vl_fatura.fcr_faturaisvc
		else
			putitem/id vpiParams, "VL_PAGO",  0
		endif
		;
		$instancehandle->gravaLiqFaturas(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
		if ($procerror)
			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		poParams = ""
		putitem/id poParams, "NR_SEQUENCIA", vNrSequencia
	endif

	; MFGALEGO - 26/12/2006 ; Alex / LOJAGAUCHA - SM 1642/1827
	if ((vVlIsencaoJuro > 0) | (vVlIsencaoMulta > 0)) & %\
	   ($item("TP_LANCTOJURO", piParams) = 99)
		$VL12D2$  = vVlIsencaoJuro + vVlIsencaoMulta
		vpiParams = ""
		putitem/id vpiParams, "CD_EMPRESA",    cd_empresa.fcr_faturaisvc
		putitem/id vpiParams, "CD_CLIENTE",    cd_cliente.fcr_faturaisvc
		putitem/id vpiParams, "NR_FAT",        nr_fat.fcr_faturaisvc
		putitem/id vpiParams, "NR_PARCELA",    nr_parcela.fcr_faturaisvc
		putitem/id vpiParams, "TP_LOGFAT",     14 ;Manutencao de fatura.
		;MTF(10/05/2007) - Projeto 078, tarefa 437.
		;putitem/id vpiParams, "DS_COMPONENTE", $componentname
		putitem/id vpiParams, "DS_COMPONENTE", vCdComponente
		;
		putitem/id vpiParams, "DS_OBS",        "ISENCAO DE JURO/MULTA NO VALOR DE %%$VL12D2$"
		activate "FCRSVCO001".gravaLogFatura(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
		if ($procerror)
			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=  / FCRSVCO007.baixarFatura() chamando FCRSVCO001.gravaLogFatura()")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		elseif ($status < 0)
			$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=  / FCRSVCO007.baixarFatura() chamando FCRSVCO001.gravaLogFatura()")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		endif
	endif
	;
	
	;MTF(22/01/2009) - Projeto 118, tarefa 0206.
	if ($inVariacaoCambial$ = <TRUE>)
		vpiParams = ""
		putitem/id vpiParams, "CD_EMPFAT",  $item("CD_EMPRESA", piParams)
		putitem/id vpiParams, "CD_CLIENTE", $item("CD_CLIENTE", piParams)
		putitem/id vpiParams, "NR_FAT",     $item("NR_FAT"    , piParams)
		putitem/id vpiParams, "NR_PARCELA", $item("NR_PARCELA", piParams)
		putitem/id vpiParams, "IN_BAIXA",   <TRUE>
		putitem/id vpiParams, "IN_PARCIAL", <FALSE>
		activate "FCRSVCO087".gravaFatVariacaoPagto(vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
		if ($procerror)
			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=  /  FCRSVCO007.baixarFatura() chamando FCRSVCO087.gravaFatVariacaoVenda()")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		elseif ($status < 0)
			$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=  /  FCRSVCO007.baixarFatura() chamando FCRSVCO087.gravaFatVariacaoVenda")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		endif
	endif
	;
	
	return(0)
End ;operation baixarFatura.


;------------------------------------------------------;
public operation baixarFaturaParcial                   ;
;------------------------------------------------------;
; MTF    : 26/07/2006          Projeto 074, tarefa 022 ;
; Funcao : Baixa parcial de fatura com proporcao de    ;
;          valor de recebimento para a fatura e juros. ;
; Chamada: FCRFP010 - operation -> gravaRecebimento()  ;
;------------------------------------------------------;
;
	params
		string  piGlobal  :IN
		string  piParams  :IN
		string  poParams  :OUT
		numeric poCdErro  :OUT
		string  poCtxErro :OUT
	endparams
	variables
		string  vFatOriginal, vpiParams, vpoParams, vDsRegistro, vDsCheque, vCdComponente, vDtSistema, vDsFatReg, vDsCobBanco
		numeric vVlJuros, vVlOriginal, vPercentualProp, vVlFatura, vVlPago, vNrParcOrigem, vNrSequencia, vTpCobrancaLista, vTpCobrancaMover
		numeric vTpLanctoJuro, vVlIsencaoJuro, vVlIsencaoMulta, vVlMulta, vVlBaixarJuro, vVlBaixarFatura, vVlBaixarDesconto
		numeric vVlJuroMulta, vVlPercentualProp, vVlRestante, vNrDiasJuroFuturo, vVlDescVar, vTpCobranca, vVlDiferenca
		numeric vCdEmpFatOrig, vCdClienteOrig, vNrFatOrig, vNrParcelaOrig, vVlFaturaLiq, vVlPagoAux, vVlFaturaAux
		boolean vInProporcional
	endvariables
	
	vDtSistema        = $item("DT_SISTEMA", piGlobal)
	$dtpagamento$     = $item("DT_PAGAMENTO", piParams)
	vNrSequencia      = $item("NR_SEQUENCIA", piParams)
	vVlOriginal       = $item("VL_ORIGINAL", piParams)
	vVlFatura         = $item("VL_FATURA", piparams) ;Valor corrigido.
	vVlPago           = $item("VL_PAGO", piParams)
	vVlIsencaoJuro    = $item("VL_ISENCAOJURO", piParams)
	vTpLanctoJuro     = $item("TP_LANCTOJURO", piParams)
	vVlIsencaoMulta   = $item("VL_ISENCAOMULTA", piParams)
	vVlJuroMulta      = $item("VL_JUROS", piParams) + $item("VL_MULTA", piParams)
	;MTF(23/10/2006) - Projeto 078, tarefa 052.
	vNrDiasJuroFuturo = $item("NR_DIAS_JURO_FUTURO", piParams)
	;
	;MTF(02/03/2007) - Projeto 078, tarefa 298.
	$vlacrescjurototal$   = $item("VL_ACRESC_JURO_TOTAL", piParams)
	$vlacrescjuroparcial$ = $item("VL_ACRESC_JURO_PARCIAL", piParams)
	vCdComponente         = $item("CD_COMPONENTE", piParams)
	;
	;MTF(09/04/2007) - Projeto 078, tarefa 284.
	$nrdiasatraso$        = $item("NR_DIASATRASO", piParams)
	$vljuros$             = $item("VL_JUROS", piParams)
	$vlmulta$             = $item("VL_MULTA", piParams)
	$vldesconto$          = $item("VL_DESCONTO", piParams)	
	;
	;Projeto 078 - Tarefa 3525 - Aloisio Gargantini - 20/07/2010
	$vlDescontoTotal$    = $item("VL_DESCONTO_TOTAL", piParams)
	$vlDescontoParcial$  = $item("VL_DESCONTO_PARCIAL", piParams)
	;
	if ($item("CD_EMPRESA", piParams) = "")
		$instancehandle->setStatus(<STS_AVISO>, "GEN001", "DESCRICAO=Código de empresa não informada", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if ($item("CD_CLIENTE", piParams) = "")
		$instancehandle->setStatus(<STS_AVISO>, "GEN001", "DESCRICAO=Código de cliente não informado", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if ($item("NR_FAT", piParams) = "")
		$instancehandle->setStatus(<STS_AVISO>, "GEN001", "DESCRICAO=Número da fatura não informado", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if ($item("NR_PARCELA", piParams) = "")
		$instancehandle->setStatus(<STS_AVISO>, "GEN001", "DESCRICAO=Número da parcela da fatura não informado", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if ($item("VL_PAGO", piParams) = "")
		$instancehandle->setStatus(<STS_AVISO>, "GEN001", "DESCRICAO=Valor da fatura não informado", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	clear/e "FCR_FATURAISVC"
	cd_empresa.fcr_faturaisvc/init = $item("CD_EMPRESA", piParams)
	cd_cliente.fcr_faturaisvc/init = $item("CD_CLIENTE", piParams)
	nr_fat.fcr_faturaisvc/init     = $item("NR_FAT"    , piParams)
	nr_parcela.fcr_faturaisvc/init = $item("NR_PARCELA", piParams)
	retrieve/e "FCR_FATURAISVC"
	if ($status < 0)
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fatura não encontrada", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	;MTF(02/04/2008) - Projeto 120, tarefa 0027.
	$inJuroIsencaoAberto$ = ""
	;
	
	call getParam()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($status < 0)
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	vTpCobranca   = tp_cobranca.fcr_faturaisvc ;-- MAD [Proj/Tar.078/3300] - 08/04/2010
	vNrParcOrigem = nr_parcela.fcr_faturaisvc
	vFatOriginal  = ""
	putlistitems/occ vFatOriginal, "FCR_FATURAISVC"
	
	vVlOriginal = 0
	vVlOriginal = $item("VL_ORIGINAL", piParams)
	if (vVlPago < vVlOriginal)
		;O valor pago da fatura foi menor que o valor da fatura original. Neste caso acha o valor da 		
		;fatura = vVlFatura - $item("VL_DESPFIN", piParam) + $item("VL_ABATIMENTO", piParams) + vVlJuroMulta
		vVlOriginal = vVlPago - $item("VL_ABATIMENTO", piParams) + $item("VL_DESPFIN", piParams) + vl_outacres.fcr_faturaisvc - vl_imposto.fcr_faturaisvc - vl_outdesc.fcr_faturaisvc
		vVlRestante = $item("VL_ORIGINAL", piParams) - vVlPago
	else
		vVlOriginal = $item("VL_ORIGINAL", piParams) - $item("VL_ABATIMENTO", piParams) + $item("VL_DESPFIN", piParams) + vl_outacres.fcr_faturaisvc - vl_imposto.fcr_faturaisvc - vl_outdesc.fcr_faturaisvc
	endif	
	
	if 	((vl_despfin.fcr_faturaisvc  = 0) | (vl_despfin.fcr_faturaisvc  = "")) & %\
		((vl_outacres.fcr_faturaisvc = 0) | (vl_outacres.fcr_faturaisvc = ""))
		
		vVlPagoAux        = vVlPago   - $vlacrescjuroparcial$ + $vlDescontoParcial$
		vVlFaturaAux      = vVlFatura - $vlacrescjuroparcial$ + $vlDescontoParcial$
		vVlPercentualProp = vVlPagoAux / vVlFaturaAux
		vVlPercentualProp = vVlPercentualProp[round,6]
		vVlBaixarFatura   = (vVlOriginal - $vlacrescjuroparcial$) * vVlPercentualProp
		vVlBaixarFatura   = vVlBaixarFatura[round,2]
		vVlBaixarJuro     = (vVlJuroMulta - $vlacrescjuroparcial$) * vVlPercentualProp
		vVlBaixarJuro     = vVlBaixarJuro[round,2]
		vVlBaixarDesconto = ($vlDesconto$ + $vlDescontoParcial$) * vVlPercentualProp
		vVlBaixarDesconto = vVlBaixarDesconto[round,2]
		vInProporcional   = <TRUE>
	else
		vVlBaixarFatura = vVlPago
		vVlBaixarJuro   = vVlJuroMulta
	endif
	
	;MTF(13/06/2007) - Projeto 078, tarefa 558;
	if ($item("IN_CAPITAL", piParams) = <TRUE>)
		vVlBaixarFatura = vVlPago - vVlJuroMulta
		vVlBaixarJuro   = vVlJuroMulta
	endif
	;
	
	;Baixar fatura original.
	tp_baixa.fcr_faturaisvc      = 1
	if ($item("IN_BAIXAVIABANCO", piParams) = <TRUE>)
		tp_baixa.fcr_faturaisvc  = 12 ;Baixa por conta bancaria. 
	endif
	if ($item("IN_BAIXAFUNC", piParams) = <TRUE>)
		tp_baixa.fcr_faturaisvc  = 24 ;Baixa fatura funcionario
	endif
	cd_operbaixa.fcr_faturaisvc  = $item("CD_USUARIO", piGlobal)
	;akiforna vl_juros.fcr_faturaisvc      = vVlBaixarJuro + $vlacrescjuroparcial$
	;akiforna vl_acrescimo.fcr_faturaisvc  = vl_despfin.fcr_faturaisvc + vl_outacres.fcr_faturaisvc + vVlBaixarJuro + $vlacrescjuroparcial$
	vl_juros.fcr_faturaisvc      = $item("VL_JUROS", piParams)
	;akiforna vl_acrescimo.fcr_faturaisvc  = $item("VL_ACRESCIMO", piParams)
	vl_acrescimo.fcr_faturaisvc  = $item("VL_JUROS", piParams) + $item("VL_MULTA", piParams) + vl_outacres.fcr_faturaisvc + vl_despfin.fcr_faturaisvc
	;
	vl_desconto.fcr_faturaisvc   = $item("VL_DESCONTO", piParams)
	vVlRestante = vl_fatura.fcr_faturaisvc
	if ($item("IN_CAPITAL", piParams) = <TRUE>)
		vl_fatura.fcr_faturaisvc = vVlBaixarFatura - (vl_outacres.fcr_faturaisvc + vl_despfin.fcr_faturaisvc - vl_abatimento.fcr_faturaisvc - vl_outdesc.fcr_faturaisvc - vl_imposto.fcr_faturaisvc)
	elseif (vInProporcional = <TRUE>)
		vl_fatura.fcr_faturaisvc    = vVlBaixarFatura + vl_abatimento.fcr_faturaisvc + vl_imposto.fcr_faturaisvc + vl_outdesc.fcr_faturaisvc
		vl_desconto.fcr_faturaisvc  = vVlBaixarDesconto + $vlDescontoParcial$
		vl_juros.fcr_faturaisvc     = vVlBaixarJuro   + $vlacrescjuroparcial$
		vl_acrescimo.fcr_faturaisvc = vl_juros.fcr_faturaisvc + vl_outacres.fcr_faturaisvc + vl_despfin.fcr_faturaisvc
		;Projeto 078 - Tarefa 3418 - Aloisio Gargantini - 24/05/2010
		if ((vVlIsencaoJuro + vVlIsencaoMulta) > 0) & (vVlPago != (VL_FATURA.FCR_FATURAISVC + (VL_JUROS.FCR_FATURAISVC + VL_DESPFIN.FCR_FATURAISVC + VL_OUTACRES.FCR_FATURAISVC) - (VL_DESCONTO.FCR_FATURAISVC + VL_ABATIMENTO.FCR_FATURAISVC + VL_IMPOSTO.FCR_FATURAISVC + VL_OUTDESC.FCR_FATURAISVC)))
			vVlDiferenca = vVlPago + (VL_DESCONTO.FCR_FATURAISVC + VL_ABATIMENTO.FCR_FATURAISVC + VL_OUTDESC.FCR_FATURAISVC + VL_IMPOSTO.FCR_FATURAISVC) - (VL_OUTACRES.FCR_FATURAISVC + VL_DESPFIN.FCR_FATURAISVC + VL_JUROS.FCR_FATURAISVC + VL_FATURA.FCR_FATURAISVC)
			VL_FATURA.FCR_FATURAISVC = VL_FATURA.FCR_FATURAISVC + vVlDiferenca
		endif
		;
	else
		vl_fatura.fcr_faturaisvc = vVlBaixarFatura - (($item("VL_JUROS", piParams) + $item("VL_MULTA", piParams) + vl_outacres.fcr_faturaisvc + vl_despfin.fcr_faturaisvc) - (vl_abatimento.fcr_faturaisvc + vl_outdesc.fcr_faturaisvc + vl_imposto.fcr_faturaisvc + $item("VL_DESCONTO", piParams)))
		
		;Esta validação abaixo foi incluida, quando o titulo tem um valor de juro maior que o valor do titulo e o pagamento esta sendo feito parcial.
		if (vl_fatura.fcr_faturaisvc < 0)
			vVlPagoAux        = vVlPago   - $vlacrescjuroparcial$ + $vlDescontoParcial$ - (vl_outacres.fcr_faturaisvc + vl_despfin.fcr_faturaisvc) + (vl_abatimento.fcr_faturaisvc + vl_outdesc.fcr_faturaisvc + vl_imposto.fcr_faturaisvc)
			vVlFaturaAux      = vVlFatura - $vlacrescjuroparcial$ + $vlDescontoParcial$ - (vl_outacres.fcr_faturaisvc + vl_despfin.fcr_faturaisvc) + (vl_abatimento.fcr_faturaisvc + vl_outdesc.fcr_faturaisvc + vl_imposto.fcr_faturaisvc)
			vVlPercentualProp = vVlPagoAux / vVlFaturaAux
			vVlPercentualProp = vVlPercentualProp[round,6]
			vVlBaixarFatura   = vVlOriginal - $vlacrescjuroparcial$ + $vlDescontoParcial$ - (vl_outacres.fcr_faturaisvc + vl_despfin.fcr_faturaisvc) + (vl_abatimento.fcr_faturaisvc + vl_outdesc.fcr_faturaisvc + vl_imposto.fcr_faturaisvc)
			vVlBaixarFatura   = vVlBaixarFatura * vVlPercentualProp
			vVlBaixarFatura   = vVlBaixarFatura[round,2]
			vVlBaixarJuro     = (vVlJuroMulta - $vlacrescjuroparcial$) * vVlPercentualProp
			vVlBaixarJuro     = vVlBaixarJuro[round,2]
			vVlBaixarDesconto = ($vlDesconto$ + $vlDescontoParcial$) * vVlPercentualProp
			vVlBaixarDesconto = vVlBaixarDesconto[round,2]
			VL_FATURA.FCR_FATURAISVC = vVlBaixarFatura
			VL_JUROS.FCR_FATURAISVC = vVlBaixarJuro
			VL_DESCONTO.FCR_FATURAISVC = vVlBaixarDesconto
			vl_acrescimo.fcr_faturaisvc  = VL_JUROS.FCR_FATURAISVC + vl_outacres.fcr_faturaisvc + vl_despfin.fcr_faturaisvc
		endif
		;
	endif
	vVlRestante = vVlRestante - vl_fatura.fcr_faturaisvc
	vl_pago.fcr_faturaisvc       = vVlPago
	cd_empliq.fcr_faturaisvc     = $item("CD_EMPLIQ", piParams)
	
	if (VL_PAGO.FCR_FATURAISVC != (VL_FATURA.FCR_FATURAISVC + VL_ACRESCIMO.FCR_FATURAISVC - (VL_DESCONTO.FCR_FATURAISVC + VL_ABATIMENTO.FCR_FATURAISVC + VL_OUTDESC.FCR_FATURAISVC + VL_IMPOSTO.FCR_FATURAISVC)))
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Valores de baixa do título incorretos.%%^Empresa: %%cd_empresa.fcr_faturaisvc   Cliente: %%cd_cliente.fcr_faturaisvc  Fatura: %%nr_fat.fcr_faturaisvc  Parcela: %%nr_parcela.fcr_faturaisvc", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	;MTF(04/10/2007) - Projeto 079, tarefa 163.
	if (dt_liq.fcr_faturaisvc != "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fatura já liquidada por outro processo ou manutenção.%%^Empresa: %%cd_empresa.fcr_faturaisvc   Cliente: %%cd_cliente.fcr_faturaisvc  Fatura: %%nr_fat.fcr_faturaisvc  Parcela: %%nr_parcela.fcr_faturaisvc", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	;
	dt_liq.fcr_faturaisvc        = $item("DT_LIQ", piParams)
	nr_seqliq.fcr_faturaisvc     = $item("NR_SEQLIQ", piParams)
	;MTF(12/03/2008) - Projeto 078, tarefa 1286.
	;cd_emplocal.fcr_faturaisvc   = 0
	;
	;MTF(28/03/2007) - Projeto 078, tarefa 300.
	if ($dtpagamento$ != "")
		dt_baixa.fcr_faturaisvc  = $dtpagamento$
	else
		dt_baixa.fcr_faturaisvc  = $item("DT_SISTEMA", piGlobal)
	endif
	;

	; MFGALEGO - 04/07/2007 ; Paulek / ADS
	;Efetuar a gravação da hora da baixa
	call gravaHoraDtBaixa()
	;
	;MTF(09/11/2007) - Projeto 078, tarefa 909.
	if (vCdComponente != "")
		cd_componente.fcr_faturaisvc = vCdComponente
	endif
	;
	cd_operador.fcr_faturaisvc   = $item("CD_USUARIO", piGlobal)
	dt_cadastro.fcr_faturaisvc   = $datim
	;MTF(06/09/2007) - Projeto 078, tarefa 793.
	if ($status = -11)
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fatura sendo utilizada em outro processo ou manutenção.%%^Empresa: %%cd_empresa.fcr_faturaisvc   Cliente: %%cd_cliente.fcr_faturaisvc  Fatura: %%nr_fat.fcr_faturaisvc  Parcela: %%nr_parcela.fcr_faturaisvc", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	;
	
	vDsFatReg = ""
	putlistitems/occ vDsFatReg, "FCR_FATURAISVC"
	vpiParams = ""
	putitem/id vpiParams, "DS_FATURAI",      vDsFatReg
	putitem/id vpiParams, "CD_COMPONENTE",   $componentname
	putitem/id vpiParams, "DS_CHEQUE",       ""
	putitem/id vpiParams, "IN_SEMCOMISSAO",  <TRUE>
	putitem/id vpiParams, "IN_SEMIMPOSTO",   <TRUE>
	putitem/id vpiParams, "IN_ALTSOFATURAI", <TRUE>
	activate "FCRSVCO001".geraFatura($$gParamGlb, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
	if ($procerror)
		$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=  /  FCRSVCO007.baixarFatura() chamando FCRSVCO001.geraFatura()")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=  /  FCRSVCO007.baixarFatura() chamando FCRSVCO001.geraFatura()")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	;$collhandle ("FCR_FATURAISVC")->salvar()
	;if ($procerror)
	;	$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
	;	poCdErro  = $xCdErro$
	;	poCtxErro = $xCtxErro$
	;	return(-1)
	;elseif ($status < 0)
	;	$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
	;	poCdErro  = $xCdErro$
	;	poCtxErro = $xCtxErro$
	;	return(-1)
	;endif
	
	vpiParams = ""
	vpiParams = piParams
	putitem/id vpiParams, "IN_NAOSOMA", <TRUE>
	putitem/id vpiParams, "VL_PAGO",    vl_pago.fcr_faturaisvc
	$instancehandle->gravaLiqFaturas(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
	if ($procerror)
		$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	;MTF(02/03/2007) - Projeto 078, tarefa 298.
	if ($vlacrescjuroparcial$ > 0)
		vpiParams = ""
		putitem/id vpiParams, "CD_EMPRESA",    cd_empresa.fcr_faturaisvc
		putitem/id vpiParams, "CD_CLIENTE",    cd_cliente.fcr_faturaisvc
		putitem/id vpiParams, "NR_FAT",        nr_fat.fcr_faturaisvc
		putitem/id vpiParams, "NR_PARCELA",    nr_parcela.fcr_faturaisvc
		putitem/id vpiParams, "DS_OBSERVACAO", "Vl. acresc. juro receb. R$ %%$vlacrescjurototal$ - Vl. acresc. parcial R$ %%$vlacrescjuroparcial$"
		putitem/id vpiParams, "CD_COMPONENTE", vCdComponente
		activate "FCRSVCO001".gravaObsFatura(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
		if ($procerror)
			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif
	;
	;Projeto 078 - Tarefa 3525 - Aloisio Gargantini - 20/07/2010		
	if ($vlDescontoParcial$ > 0)
		vpiParams = ""
		putitem/id vpiParams, "CD_EMPRESA",    cd_empresa.fcr_faturaisvc
		putitem/id vpiParams, "CD_CLIENTE",    cd_cliente.fcr_faturaisvc
		putitem/id vpiParams, "NR_FAT",        nr_fat.fcr_faturaisvc
		putitem/id vpiParams, "NR_PARCELA",    nr_parcela.fcr_faturaisvc
		putitem/id vpiParams, "DS_OBSERVACAO", "Vl. Desconto Total. R$ %%$vlDescontoTotal$ - Vl. Desconto Parcial R$ %%$vlDescontoParcial$"
		putitem/id vpiParams, "CD_COMPONENTE", vCdComponente
		activate "FCRSVCO001".gravaObsFatura(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
		if ($procerror)
			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif
	;
	;MTF(09/04/2007) - Projeto 078, tarefa 284.
	if ($nrdiasatraso$ > 0) & ($vljuros$ = 0) & ($vlmulta$ = 0) & ($vldesconto$ > 0)
		vpiParams = ""
		putitem/id vpiParams, "CD_EMPRESA",    cd_empresa.fcr_faturaisvc
		putitem/id vpiParams, "CD_CLIENTE",    cd_cliente.fcr_faturaisvc
		putitem/id vpiParams, "NR_FAT",        nr_fat.fcr_faturaisvc
		putitem/id vpiParams, "NR_PARCELA",    nr_parcela.fcr_faturaisvc
		putitem/id vpiParams, "DS_OBSERVACAO", "Fatura recebida com atraso e com desconto de R$ %%$vldesconto$"
		putitem/id vpiParams, "CD_COMPONENTE", vCdComponente
		activate "FCRSVCO001".gravaObsFatura(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
		if ($procerror)
			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif
	;
	;Baixar comissao da fatura.
	;MTF(02/10/2006) - Projeto 079, tarefa 009.
	;if ($item("IN_TRANSFERE_COMISSAO", piParams) = <TRUE>) & ($item("DS_COMISSAO", piParams) != "")
	if ($item("DS_COMISSAO", piParams) != "")
	;
		vpiParams = ""
		putitem/id vpiParams, "CD_EMPRESA", cd_empresa.fcr_faturaisvc
		putitem/id vpiParams, "CD_CLIENTE", cd_cliente.fcr_faturaisvc
		putitem/id vpiParams, "NR_FAT",     nr_fat.fcr_faturaisvc
		putitem/id vpiParams, "NR_PARCELA", nr_parcela.fcr_faturaisvc
		activate "FCRSVCO013".atualizaTransfComissao(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
		if ($procerror)
			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif
	
	;Gera uma nova fatura com o valor correspondente ao restante do valor original da fatura.
	
	;Projeto 078 - Tarefa 2518 - Aloisio Gargantini - 27/07/2009
	;;MFGALEGO - 31/08/2006	
	;;if (vVlOriginal > vVlBaixarFatura)
	;if (vVlOriginal > vVlBaixarFatura) | (vVlRestante > 0)
	;; MFGALEGO - 31/08/2006	
	if (vVlRestante > 0)
	;
		;MTF(11/04/2007) - Projeto 078, tarefa 356.
		vCdEmpFatOrig  = cd_empresa.fcr_faturaisvc
		vCdClienteOrig = cd_cliente.fcr_faturaisvc
		vNrFatOrig     = nr_fat.fcr_faturaisvc
		vNrParcelaOrig = nr_parcela.fcr_faturaisvc
		;
		
		clear/e "FCR_FATURAISVC"
		creocc  "FCR_FATURAISVC", -1
		getlistitems/occ vFatOriginal, "FCR_FATURAISVC"
		
		;Busca numero sequencia da fatura.
		vpiParams = ""
		vpoParams = ""
		; Projeto 078 - Tarefa 410 - Aloisio Gargantini - 30/04/2007	
;		putitem/id vpiParams, "TP_PARCELA", 2	
		;
		$instancehandle->geraSeqParcela(vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
		if ($procerror)
			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		nr_parcelaorigem.fcr_faturaisvc = vNrParcOrigem
		nr_parcela.fcr_faturaisvc       = $item("NR_PARCELA", vpoParams)
		vl_juros.fcr_faturaisvc         = 0
		vl_desconto.fcr_faturaisvc      = 0
		;Projeto 078 - Tarefa 2518 - Aloisio Gargantini - 27/07/2009
		;;MFGALEGO - 31/08/2006	
		;;vl_fatura.fcr_faturaisvc        = vVlOriginal - vVlBaixarFatura
		;vl_fatura.fcr_faturaisvc        = vVlOriginal - vVlBaixarFatura + vVlRestante
		vl_fatura.fcr_faturaisvc        = vVlRestante
		;
		;MFGALEGO - 31/08/2006	
		;MTF(13/06/2007) - Projeto 078, tarefa 558;
		if ($item("IN_CAPITAL", piParams) = <TRUE>)
			vl_fatura.fcr_faturaisvc    = vVlRestante
		endif
		;
		vl_pago.fcr_faturaisvc          = 0
		;vl_outacres.fcr_faturaisvc      = 0
		vl_outdesc.fcr_faturaisvc       = 0
		vl_outacres.fcr_faturaisvc      = 0
		vl_abatimento.fcr_faturaisvc    = 0
		vl_despfin.fcr_faturaisvc       = 0
		vl_imposto.fcr_faturaisvc       = 0
		vl_liquido.fcr_faturaisvc       = 0
		vl_acrescimo.fcr_faturaisvc     = 0
;		tp_faturamento.fcr_faturaisvc   = 5 ; MFGALEGO - 31/08/2006
		cd_operador.fcr_faturaisvc      = $item("CD_USUARIO", piGlobal)
		dt_cadastro.fcr_faturaisvc      = $datim  ;item("DT_SISTEMA", piGlobal)
		;MTF(09/11/2007) - Projeto 078, tarefa 909.
		if (vCdComponente != "")
			cd_componente.fcr_faturaisvc = vCdComponente
		endif
		;
		;Aloisio(15/01/2007) - Projeto 078 - Tarefa 158
		cd_opercad.fcr_faturaisvc  = $item("CD_USUARIO", piGlobal)
		dt_opercad.fcr_faturaisvc  = $datim
		tp_inclusao.fcr_faturaisvc  = 2 ; automatico
		;				
		;Projeto 078 - Tarefa 2966 - Aloisio Gargantini - 25/11/2009
		NR_NOSSONUMERO.FCR_FATURAISVC   = ""
		DS_DACNOSSONR.FCR_FATURAISVC    = ""
		TP_COBRANCA.FCR_FATURAISVC      = 0
		;

		;* Claudemir _ Prj/Tarefa: 78/3432 - 28/05/2010
		;-- MAD [Proj/Tar.078/3300] - 08/04/2010
		;if (vTpCobranca = 16) ; Cobrança em loja
		;	tp_cobranca.fcr_faturaisvc = vTpCobranca
		;endif

		;Projeto 078 - Tarefa 4094 - Aloisio Gargantini - 24/02/2011
		if (vTpCobranca = 16) | (vTpCobranca = 17)  ; 16 - Cobrança em loja ou 17 - Aguardando recebimento
			tp_cobranca.fcr_faturaisvc = vTpCobranca
		;Projeto 078 - Tarefa 4094 - Aloisio Gargantini - 24/02/2011
		else
			if ($tpCobrancaBancoReceb$ != "")
				vTpCobrancaMover = ""
				vDsCobBanco = $tpCobrancaBancoReceb$
				repeat
					getitem vTpCobrancaLista, vDsCobBanco, 1	
					if (vTpCobrancaLista = vTpCobranca) 
						vTpCobrancaMover = vTpCobrancaLista
					endif
					delitem vDsCobBanco , 1
				until (vDsCobBanco = "")	
				if (vTpCobrancaMover > 0)
					tp_cobranca.fcr_faturaisvc = vTPCobrancaMover
				endif
			endif
		;
		endif ;*

		vDsFatReg = ""
		putlistitems/occ vDsFatReg, "FCR_FATURAISVC"
		vpiParams = ""
		putitem/id vpiParams, "DS_FATURAI",      vDsFatReg
		putitem/id vpiParams, "CD_COMPONENTE",   $componentname
		putitem/id vpiParams, "DS_CHEQUE",       ""
		putitem/id vpiParams, "IN_SEMCOMISSAO",  <TRUE>
		putitem/id vpiParams, "IN_SEMIMPOSTO",   <TRUE>
		putitem/id vpiParams, "IN_ALTSOFATURAI", <FALSE>
		activate "FCRSVCO001".geraFatura($$gParamGlb, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
		if ($procerror)
			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=  /  FCRSVCO007.baixarFatura() chamando FCRSVCO001.geraFatura()")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=  /  FCRSVCO007.baixarFatura() chamando FCRSVCO001.geraFatura()")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		
		;$collhandle ("FCR_FATURAISVC")->salvar()
		;if ($procerror)
		;	$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		;	poCdErro  = $xCdErro$
		;	poCtxErro = $xCtxErro$
		;	return(-1)
		;elseif ($status < 0)
		;	$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		;	poCdErro  = $xCdErro$
		;	poCtxErro = $xCtxErro$
		;	return(-1)
		;endif
	
		;Grava informacoes na liquidacao da nova fatura gerada.
		vpiParams = ""
		vpiParams = piParams
		vNrSequencia = vNrSequencia + 1
		putitem/id vpiParams, "NR_FAT",       nr_fat.fcr_faturaisvc
		putitem/id vpiParams, "NR_PARCELA",   nr_parcela.fcr_faturaisvc
		putitem/id vpiParams, "VL_FATURA",    vl_fatura.fcr_faturaisvc
		putitem/id vpiParams, "TP_DOCUMENTO", tp_documento.fcr_faturaisvc
		putitem/id vpiParams, "NR_SEQUENCIA", vNrSequencia
		putitem/id vpiParams, "TP_TIPOREG",   2
		putitem/id vpiParams, "IN_NAOSOMA",   <TRUE>
		;MTF(23/08/2007) - Projeto 078, tarefa 769.
		;putitem/id vpiParams, "VL_PAGO",     0
		if ($inRecebimentoFat$ = <TRUE>)
			putitem/id vpiParams, "VL_PAGO",  vl_fatura.fcr_faturaisvc
		else
			putitem/id vpiParams, "VL_PAGO",  0
		endif
		;
		$instancehandle->gravaLiqFaturas(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
		if ($procerror)
			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		
		;Se o parametro IN_TRANSFERE_COMIS_CHQ estiver marcado como TRUE, 
		;gerar a comissao p/ o restante da fatura a receber.
		;MTF(02/10/2006) - Projeto 079, tarefa 009.
		;if ($item("IN_TRANSFERE_COMISSAO", piParams) = <TRUE>) & ($item("DS_COMISSAO", piParams) != "")
		
		;MTF(11/04/2007) - Projeto 078, tarefa 356.
		;if ($item("DS_COMISSAO", piParams) != "")
		;	vpiParams = ""
		;	putitem/id vpiParams, "CD_EMPRESA",      cd_empresa.fcr_faturaisvc
		;	putitem/id vpiParams, "CD_CLIENTE",      cd_cliente.fcr_faturaisvc
		;	putitem/id vpiParams, "NR_FAT",          nr_fat.fcr_faturaisvc
		;	putitem/id vpiParams, "NR_PARCELA",      nr_parcela.fcr_faturaisvc
		;	putitem/id vpiParams, "VL_FATURA",       vl_fatura.fcr_faturaisvc
		;	putitem/id vpiParams, "DS_COMISSAO",     $item("DS_COMISSAO", piParams)
		;	putitem/id vpiParams, "CD_TIPOCOMISSAO", $item("CD_TIPOCOMISSAO", piParams)
		;	;MTF(08/12/2006) - Projeto 078, tarefa 088.
		;	putitem/id vpiParams, "IN_RECPARCIAL",   <TRUE>
		;	;
		;	activate "FCRSVCO013".gravaComissaoRecebimento(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
		;	if ($procerror)
		;		rollback
		;		$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=  operation -> gravaRecebimento() chamando FCRSVCO013 -> gravaComissaoRecebimento()")
		;		return(-1)
		;	elseif ($status < 0)
		;		rollback
		;		$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=  operation -> gravaRecebimento() chamando FCRSVCO013 -> gravaComissaoRecebimento()")
		;		return(-1)
		;	endif
		;endif
		vpiParams = ""
		putitem/id vpiParams, "CD_EMPFATORIG",  vCdEmpFatOrig
		putitem/id vpiParams, "CD_CLIENTEORIG", vCdClienteOrig
		putitem/id vpiParams, "NR_FATORIG",     vNrFatOrig
		putitem/id vpiParams, "NR_PARCELAORIG", vNrParcelaOrig
		putitem/id vpiParams, "CD_EMPRESA",     cd_empresa.fcr_faturaisvc
		putitem/id vpiParams, "CD_CLIENTE",     cd_cliente.fcr_faturaisvc
		putitem/id vpiParams, "NR_FAT",         nr_fat.fcr_faturaisvc
		putitem/id vpiParams, "NR_PARCELA",     nr_parcela.fcr_faturaisvc
		$instancehandle->gravarComissaoRecebimento(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
		if ($procerror)
			rollback
			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=  /  FCRSVCO007.baixarFaturaParcial() chamando FCRSVCO007.gravarComissaoRecebimento()")
			return(-1)
		elseif ($status < 0)
			rollback
			$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=  /  FCRSVCO007.baixarFaturaParcial() chamando FCRSVCO007.gravarComissaoRecebimento()")
			return(-1)
		endif
		;
		;Projeto 078 - Tarefa 2357 - Aloisio Gargantini - 02/06/2009
		vpiParams = ""
		putitem/id vpiParams, "CD_EMPRESA",     cd_empresa.fcr_faturaisvc
		putitem/id vpiParams, "CD_CLIENTE",     cd_cliente.fcr_faturaisvc
		putitem/id vpiParams, "NR_FAT",         nr_fat.fcr_faturaisvc
		putitem/id vpiParams, "NR_PARCELA",     nr_parcela.fcr_faturaisvc
		putitem/id vpiParams, "IN_NOVAFATURA",  <TRUE>
		activate "FCRSVCO090".gravarClassificacaoFatura(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
		if ($procerror)
			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		;
	endif
	
	;;Gerar fatura de juros. 29/08/2006
	;if (vVlJuroMulta > vVlBaixarJuro)
	;	clear/e "FCR_FATURAISVC"
	;	creocc  "FCR_FATURAISVC", -1
	;	getlistitems/occ vFatOriginal, "FCR_FATURAISVC"
	;	
	;	;Busca numero sequencia da fatura.
	;	vpiParams = ""
	;	vpoParams = ""
	;	$instancehandle->geraSeqParcela(vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
	;	if ($procerror)
	;		$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
	;		poCdErro  = $xCdErro$
	;		poCtxErro = $xCtxErro$
	;		return(-1)
	;	elseif ($status < 0)
	;		$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
	;		poCdErro  = $xCdErro$
	;		poCtxErro = $xCtxErro$
	;		return(-1)
	;	endif
	;	nr_parcelaorigem.fcr_faturaisvc = vNrParcOrigem
	;	nr_parcela.fcr_faturaisvc       = $item("NR_PARCELA", vpoParams)
	;	tp_documento.fcr_faturaisvc     = 1
	;	dt_emissao.fcr_faturaisvc       = $dtpagamento$
	;	dt_vencimento.fcr_faturaisvc    = $dtpagamento$
	;	vl_juros.fcr_faturaisvc         = ""
	;	vl_desconto.fcr_faturaisvc      = ""
	;	tp_faturamento.fcr_faturaisvc   = 5
	;	vl_acrescimo.fcr_faturaisvc     = 0
	;	vl_outdesc.fcr_faturaisvc       = 0
	;	vl_despfin.fcr_faturaisvc       = 0
	;	vl_abatimento.fcr_faturaisvc    = 0
	;	vl_fatura.fcr_faturaisvc        = vVlJuroMulta - vVlBaixarJuro
	;	vl_original.fcr_faturaisvc      = vl_fatura.fcr_faturaisvc
	;	vl_pago.fcr_faturaisvc          = 0
	;	cd_operador.fcr_faturaisvc      = $item("CD_USUARIO", piGlobal)
	;	dt_cadastro.fcr_faturaisvc      = $item("DT_SISTEMA", piGlobal)
	;	cd_componente.fcr_faturaisvc    = "FCRSVCO007"
	;	
	;	$collhandle ("FCR_FATURAISVC")->salvar()
	;	if ($status < 0)
	;		$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
	;		poCdErro  = $xCdErro$
	;		poCtxErro = $xCtxErro$
	;		return(-1)
	;	endif
	;	
	;	;Grava informacoes na liquidacao da nova fatura gerada.
	;	vpiParams = ""
	;	vpiParams = piParams
	;	vNrSequencia = vNrSequencia + 1
	;	putitem/id vpiParams, "NR_FAT",       nr_fat.fcr_faturaisvc
	;	putitem/id vpiParams, "NR_PARCELA",   nr_parcela.fcr_faturaisvc
	;	putitem/id vpiParams, "VL_FATURA",    vl_fatura.fcr_faturaisvc
	;	putitem/id vpiParams, "NR_SEQUENCIA", vNrSequencia
	;	putitem/id vpiParams, "TP_TIPOREG",   2
	;	putitem/id vpiParams, "IN_NAOSOMA",   <TRUE>
	;	putitem/id vpiParams, "VL_PAGO",      0
	;	$instancehandle->gravaLiqFaturas(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
	;	if ($procerror)
	;		$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
	;		poCdErro  = $xCdErro$
	;		poCtxErro = $xCtxErro$
	;		return(-1)
	;	elseif ($status < 0)
	;		poCdErro  = $xCdErro$
	;		poCtxErro = $xCtxErro$
	;		return(-1)
	;	endif
	;endif

; MFGALEGO - 31/08/2006	
;	;Gerar um nova fatura para o restante da fatura que nao foi paga.
;	if (vVlRestante > 0)
;		clear/e "FCR_FATURAISVC"
;		creocc  "FCR_FATURAISVC", -1
;		getlistitems/occ vFatOriginal, "FCR_FATURAISVC"
;		
;		;Busca numero sequencia da fatura.
;		vpiParams = ""
;		vpoParams = ""
;		$instancehandle->geraSeqParcela(vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
;		if ($procerror)
;			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
;			poCdErro  = $xCdErro$
;			poCtxErro = $xCtxErro$
;			return(-1)
;		elseif ($status < 0)
;			$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
;			poCdErro  = $xCdErro$
;			poCtxErro = $xCtxErro$
;			return(-1)
;		endif
;		nr_parcelaorigem.fcr_faturaisvc = vNrParcOrigem
;		nr_parcela.fcr_faturaisvc       = $item("NR_PARCELA", vpoParams)
;		vl_juros.fcr_faturaisvc         = 0
;		vl_desconto.fcr_faturaisvc      = 0
;		vl_fatura.fcr_faturaisvc        = vVlRestante
;		vl_pago.fcr_faturaisvc          = 0
;		vl_outacres.fcr_faturaisvc      = 0
;		vl_outdesc.fcr_faturaisvc       = 0
;		vl_abatimento.fcr_faturaisvc    = 0
;		vl_despfin.fcr_faturaisvc       = 0
;		vl_imposto.fcr_faturaisvc       = 0
;		vl_liquido.fcr_faturaisvc       = 0
;		vl_acrescimo.fcr_faturaisvc     = 0
;		cd_operador.fcr_faturaisvc      = $item("CD_USUARIO", piGlobal)
;		dt_cadastro.fcr_faturaisvc      = $item("DT_SISTEMA", piGlobal)
;		cd_componente.fcr_faturaisvc    = "FCRSVCO007"
;		
;		$collhandle ("FCR_FATURAISVC")->salvar()
;		if ($status < 0)
;			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
;			poCdErro  = $xCdErro$
;			poCtxErro = $xCtxErro$
;			return(-1)
;		endif
;		
;		;Grava informacoes na liquidacao da nova fatura gerada.
;		vpiParams = ""
;		vpiParams = piParams
;		vNrSequencia = vNrSequencia + 1
;		putitem/id vpiParams, "NR_FAT",       nr_fat.fcr_faturaisvc
;		putitem/id vpiParams, "NR_PARCELA",   nr_parcela.fcr_faturaisvc
;		putitem/id vpiParams, "VL_FATURA",    vl_fatura.fcr_faturaisvc
;		putitem/id vpiParams, "NR_SEQUENCIA", vNrSequencia
;		putitem/id vpiParams, "TP_TIPOREG",   2
;		putitem/id vpiParams, "IN_NAOSOMA",   <TRUE>
;		putitem/id vpiParams, "VL_PAGO",      0
;		$instancehandle->gravaLiqFaturas(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
;		if ($procerror)
;			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
;			poCdErro  = $xCdErro$
;			poCtxErro = $xCtxErro$
;			return(-1)
;		elseif ($status < 0)
;			poCdErro  = $xCdErro$
;			poCtxErro = $xCtxErro$
;			return(-1)
;		endif
;		
;		;Se o parametro IN_TRANSFERE_COMIS_CHQ estiver marcado como TRUE, 
;		;gerar a comissao p/ o restante da fatura a receber.
;		if ($item("IN_TRANSFERE_COMISSAO", piParams) = <TRUE>) & ($item("DS_COMISSAO", piParams) != "")
;			vpiParams = ""
;			putitem/id vpiParams, "CD_EMPRESA",      cd_empresa.fcr_faturaisvc
;			putitem/id vpiParams, "CD_CLIENTE",      cd_cliente.fcr_faturaisvc
;			putitem/id vpiParams, "NR_FAT",          nr_fat.fcr_faturaisvc
;			putitem/id vpiParams, "NR_PARCELA",      nr_parcela.fcr_faturaisvc
;			putitem/id vpiParams, "VL_FATURA",       vl_fatura.fcr_faturaisvc
;			putitem/id vpiParams, "DS_COMISSAO",     $item("DS_COMISSAO", piParams)
;			putitem/id vpiParams, "CD_TIPOCOMISSAO", $item("CD_TIPOCOMISSAO", piParams)
;			activate "FCRSVCO013".gravaComissaoRecebimento(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
;			if ($procerror)
;				rollback
;				$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=  operation -> gravaRecebimento() chamando FCRSVCO013 -> gravaComissaoRecebimento()")
;				return(-1)
;			elseif ($status < 0)
;				rollback
;				$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=  operation -> gravaRecebimento() chamando FCRSVCO013 -> gravaComissaoRecebimento()")
;				return(-1)
;			endif
;		endif
;
;	endif
; MFGALEGO - 31/08/2006	
	
	;Se houve isencao de juros, lancar o valor a empresa ou cliente conforme informado pelo usuario.
	if ((vVlIsencaoJuro > 0) | (vVlIsencaoMulta > 0)) & %\
	   ($item("TP_LANCTOJURO", piParams) != 99) ; MFGALEGO - 26/12/2006 ; Alex / LOJAGAUCHA - SM 1642/1827
		
		clear/e "FCR_FATURAISVC"
		creocc  "FCR_FATURAISVC", -1
		getlistitems/occ vFatOriginal, "FCR_FATURAISVC"
		
		if ($nrPortadorJuro$ > 0)
			NR_PORTADOR.FCR_FATURAISVC = $nrPortadorJuro$
		endif
		
		;Verifica se a isencao de juros sera lancada p/ empresa ou cliente.
		if ($item("TP_LANCTOJURO", piParams) = 2)
			clear/e "GER_EMPRESASVC"
			cd_empresa.ger_empresasvc/init = $item("CD_EMPRECEBIMENTO", piParams)
			retrieve/e "GER_EMPRESASVC"
			if ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Empresa inválida p/ gravar fatura de isençao de juros", "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
			cd_cliente.fcr_faturaisvc/init = cd_pessoa.ger_empresasvc
		endif
		
		;Busca numero sequencia da fatura.
		vpiParams = ""
		vpoParams = ""
		; Projeto 078 - Tarefa 410 - Aloisio Gargantini - 30/04/2007	
;		putitem/id vpiParams, "TP_PARCELA", 3	
		;
		$instancehandle->geraSeqParcela(vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
		if ($procerror)
			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		
		nr_parcela.fcr_faturaisvc = $item("NR_PARCELA", vpoParams)
		if ($item("TP_LANCTOJURO", piParams) = 2)
			
			;MTF(07/11/2008) - Projeto 078, tarefa 1948.
			clear/e "F_FCR_FATURAISVC"
			cd_empresa.f_fcr_faturaisvc/init = cd_empresa.fcr_faturaisvc
			cd_cliente.f_fcr_faturaisvc/init = cd_cliente.fcr_faturaisvc
			nr_fat.f_fcr_faturaisvc/init     = nr_fat.fcr_faturaisvc
			retrieve/e "F_FCR_FATURAISVC"
			if ($status >= 0)
				setocc "F_FCR_FATURAISVC", -1
				if (nr_parcela.f_fcr_faturaisvc = 999)
					nr_fat.fcr_faturaisvc = vDtSistema
					
					$instancehandle->geraSeqParcela(vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
					if ($procerror)
						$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						poCdErro  = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					elseif ($status < 0)
						$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
						poCdErro  = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					endif
					nr_parcela.fcr_faturaisvc = $item("NR_PARCELA", vpoParams)
				endif
			endif
			;
			
			clear/e "FCR_FATURACSVC"
			creocc  "FCR_FATURACSVC", -1
			cd_empresa.fcr_faturacsvc  = cd_empresa.fcr_faturaisvc
			cd_cliente.fcr_faturacsvc  = cd_cliente.fcr_faturaisvc
			nr_fat.fcr_faturacsvc      = nr_fat.fcr_faturaisvc
			retrieve/o "FCR_FATURACSVC"
			if ($status = -7)
				retrieve/x "FCR_FATURACSVC"
			endif
			
			cd_operador.fcr_faturacsvc = $item("CD_USUARIO", piGlobal)
			dt_cadastro.fcr_faturacsvc = $datim
			$collhandle ("FCR_FATURACSVC")->salvar()
			if ($procerror)
				$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		endif
		; MFGALEGO - 27/12/2006 ; Michelin / BRASCOL - SM 1795
		;tp_documento.fcr_faturaisvc     = 1
		
		call buscaTpDocumentoJuro(tp_documento.fcr_faturaisvc)
		;
		dt_emissao.fcr_faturaisvc       = $dtpagamento$
		;MTF(23/10/2006) - Projeto 078, tarefa 052.
		;dt_vencimento.fcr_faturaisvc    = $dtpagamento$ ;item("DT_SISTEMA", piGlobal)
		dt_vencimento.fcr_faturaisvc    = $dtpagamento$ + vNrDiasJuroFuturo
		;
		vl_juros.fcr_faturaisvc         = ""
		vl_desconto.fcr_faturaisvc      = ""
		vl_outacres.fcr_faturaisvc      = 0
		vl_outdesc.fcr_faturaisvc       = 0
		vl_abatimento.fcr_faturaisvc    = 0
		vl_despfin.fcr_faturaisvc       = 0
		vl_imposto.fcr_faturaisvc       = 0
		vl_acrescimo.fcr_faturaisvc     = 0
		tp_faturamento.fcr_faturaisvc   = 5
		vl_fatura.fcr_faturaisvc        = vVlIsencaoJuro + vVlIsencaoMulta
		vl_original.fcr_faturaisvc      = vVlIsencaoJuro + vVlIsencaoMulta
		vl_pago.fcr_faturaisvc          = 0
		cd_operador.fcr_faturaisvc      = $item("CD_USUARIO", piGlobal)
		dt_cadastro.fcr_faturaisvc      = $datim ;item("DT_SISTEMA", piGlobal)
		;MTF(09/11/2007) - Projeto 078, tarefa 909.
		if (vCdComponente != "")
			cd_componente.fcr_faturaisvc = vCdComponente
		endif
		;
		;Projeto 078 - Tarefa 2966 - Aloisio Gargantini - 25/11/2009
		NR_NOSSONUMERO.FCR_FATURAISVC   = ""
		DS_DACNOSSONR.FCR_FATURAISVC    = ""
		TP_COBRANCA.FCR_FATURAISVC      = 0
		;
		; MFGALEGO - 25/01/2007 ; Michelin / RUAH
		if ($item("TP_LANCTOJURO", piParams) = 2)
			cd_empliq.fcr_faturaisvc     = $item("CD_EMPLIQ", piParams)
			;MTF(04/10/2007) - Projeto 079, tarefa 163.
			if (dt_liq.fcr_faturaisvc != "")
				$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fatura já liquidada por outro processo ou manutenção.%%^Empresa: %%cd_empresa.fcr_faturaisvc   Cliente: %%cd_cliente.fcr_faturaisvc  Fatura: %%nr_fat.fcr_faturaisvc  Parcela: %%nr_parcela.fcr_faturaisvc", "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
			;
			dt_liq.fcr_faturaisvc        = $item("DT_LIQ", piParams)
			nr_seqliq.fcr_faturaisvc     = $item("NR_SEQLIQ", piParams)
			;MTF(28/03/2007) - Projeto 078, tarefa 300.
			if ($dtpagamento$ != "")
				dt_baixa.fcr_faturaisvc  = $dtpagamento$
			else
				dt_baixa.fcr_faturaisvc  = $item("DT_SISTEMA", piGlobal)
			endif
			;

			; MFGALEGO - 04/07/2007 ; Paulek / ADS
			;Efetuar a gravação da hora da baixa
			call gravaHoraDtBaixa()
			;

			tp_baixa.fcr_faturaisvc      = 1 ; Via recebimento
			;MTF(20/06/2007) - Projeto 078, tarefa 601.
			if ($item("IN_BAIXAVIABANCO", piParams) = <TRUE>)
				tp_baixa.fcr_faturaisvc  = 12 ;Baixa por conta bancaria. 
			endif
			;
		endif
		;
		;MTF(02/04/2008) - Projeto 120, tarefa 0027.
		if ($inJuroIsencaoAberto$ = <TRUE>)
			tp_baixa.fcr_faturaisvc = 16 ;Isentado.
		endif
		;
		
		;MTF(06/09/2007) - Projeto 078, tarefa 793.
		if ($status = -11)
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fatura sendo utilizada em outro processo ou manutenção.%%^Empresa: %%cd_empresa.fcr_faturaisvc   Cliente: %%cd_cliente.fcr_faturaisvc  Fatura: %%nr_fat.fcr_faturaisvc  Parcela: %%nr_parcela.fcr_faturaisvc", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		;
		$collhandle ("FCR_FATURAISVC")->salvar()
		if ($procerror)
			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		
		vpiParams = ""
		putlistitems/occ      vDsRegistro,        "FCR_FATURAISVC"
		putitem/id vpiParams, "DS_FATURAI",       vDsRegistro
		putitem/id vpiParams, "DS_CHEQUE",        vDsCheque
		putitem/id vpiParams, "IN_ALTSOFATURAI",  <FALSE>
		putitem/id vpiParams, "IN_SEMCOMISSAO",   <TRUE>
		putitem/id vpiParams, "IN_SEMIMPOSTO",    <TRUE>
		putitem/id vpiParams, "IN_NAOGRVDESCANT", <TRUE>
		putitem/id vpiParams, "IN_NAOGRVDESC1",   <TRUE>
		putitem/id vpiParams, "IN_NAOGRVDESC2",   <TRUE>
		;MTF(09/11/2007) - Projeto 078, tarefa 909.
		if (vCdComponente != "")
			putitem/id vpiParams, "CD_COMPONENTE", vCdComponente
		else
			putitem/id vpiParams, "CD_COMPONENTE", $componentname
		endif
		;
		activate "FCRSVCO001".geraFatura(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
		if ($procerror)       
			$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Não gerou parcela para fatura de isenção de juro." , "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Não gerou parcela para fatura de isenção de juro." , "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		if (vpoParams = "")
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Nenhuma fatura retornada pelo serviço de gravação na isenção de juro.", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		
		;Grava informacoes na liquidacao da nova fatura gerada.
		vpiParams = ""
		vpoParams = ""
		vpiParams = piParams
		putitem/id vpiParams, "CD_EMPRESA",   cd_empresa.fcr_faturaisvc
		putitem/id vpiParams, "CD_CLIENTE",   cd_cliente.fcr_faturaisvc
		vNrSequencia = vNrSequencia + 1
		putitem/id vpiParams, "NR_FAT",       nr_fat.fcr_faturaisvc
		putitem/id vpiParams, "NR_PARCELA",   nr_parcela.fcr_faturaisvc
		putitem/id vpiParams, "VL_FATURA",    vl_fatura.fcr_faturaisvc
		putitem/id vpiParams, "NR_SEQUENCIA", vNrSequencia
		putitem/id vpiParams, "TP_TIPOREG",   2
		putitem/id vpiParams, "TP_DOCUMENTO", tp_documento.fcr_faturaisvc
		putitem/id vpiParams, "IN_NAOSOMA",   <TRUE>
		;MTF(23/08/2007) - Projeto 078, tarefa 769.
		;putitem/id vpiParams, "VL_PAGO",     0
		if ($inRecebimentoFat$ = <TRUE>)
			putitem/id vpiParams, "VL_PAGO",  vl_fatura.fcr_faturaisvc
		else
			putitem/id vpiParams, "VL_PAGO",  0
		endif
		;
		$instancehandle->gravaLiqFaturas(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
		if ($procerror)
			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif

	; MFGALEGO - 26/12/2006 ; Alex / LOJAGAUCHA - SM 1642/1827
	if ((vVlIsencaoJuro > 0) | (vVlIsencaoMulta > 0)) & %\
	   ($item("TP_LANCTOJURO", piParams) = 99)
		$VL12D2$ = vVlIsencaoJuro + vVlIsencaoMulta
		vpiParams = ""
		putitem/id vpiParams, "CD_EMPRESA",    cd_empresa.fcr_faturaisvc
		putitem/id vpiParams, "CD_CLIENTE",    cd_cliente.fcr_faturaisvc
		putitem/id vpiParams, "NR_FAT",        nr_fat.fcr_faturaisvc
		putitem/id vpiParams, "NR_PARCELA",    nr_parcela.fcr_faturaisvc
		putitem/id vpiParams, "TP_LOGFAT",     14 ;Manutencao de fatura.
		;MTF(10/05/2007) - Projeto 078, tarefa 437.
		;putitem/id vpiParams, "DS_COMPONENTE", $componentname
		putitem/id vpiParams, "DS_COMPONENTE", vCdComponente
		;
		putitem/id vpiParams, "DS_OBS",        "ISENCAO DE JURO/MULTA NO VALOR DE %%$VL12D2$"
		activate "FCRSVCO001".gravaLogFatura(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
		if ($procerror)
			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=  / FCRSVCO007.baixarFatura() chamando FCRSVCO001.gravaLogFatura()")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		elseif ($status < 0)
			$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=  / FCRSVCO007.baixarFatura() chamando FCRSVCO001.gravaLogFatura()")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		endif
	endif
	;

	;MTF(22/01/2009) - Projeto 118, tarefa 0206.
	if ($inVariacaoCambial$ = <TRUE>)
		vpiParams = ""
		putitem/id vpiParams, "CD_EMPFAT",  $item("CD_EMPRESA", piParams)
		putitem/id vpiParams, "CD_CLIENTE", $item("CD_CLIENTE", piParams)
		putitem/id vpiParams, "NR_FAT",     $item("NR_FAT"    , piParams)
		putitem/id vpiParams, "NR_PARCELA", $item("NR_PARCELA", piParams)
		putitem/id vpiParams, "IN_BAIXA",   <TRUE>
		putitem/id vpiParams, "IN_PARCIAL", <TRUE>
		activate "FCRSVCO087".gravaFatVariacaoPagto(vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
		if ($procerror)
			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=  /  FCRSVCO007.baixarFaturaParcial() chamando FCRSVCO087.gravaFatVariacaoVenda()")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		elseif ($status < 0)
			$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=  /  FCRSVCO007.baixarFaturaParcial() chamando FCRSVCO087.gravaFatVariacaoVenda")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		endif
	endif
	;

	poParams = ""
	putitem/id poParams, "NR_SEQUENCIA", vNrSequencia
	
	return(0)
End ;operation baixarFaturaParcial.


;---------------------------------
public operation gravaLiqFaturas
;---------------------------------
	params
		string  piGlobal  :IN    
		string  piParams  :IN
		string  poParams  :OUT
		string  poCdErro  :OUT
		string  poCtxErro :OUT
	endparams
	variables
		date    vDtTransacao, vDtSistema
		string  vDsRegistro, vDsLstTransacao, vDsLstFatura, vpiParams, vpoParams
		numeric vCdEmpresa, vNrTransacao, vNrSeqLiq, vNrCtaPesCx, vNrSeqHistRelSub
		numeric vCdCliente, vNrFat, vNrParcela, vNrSeq, vVlPago
	endvariables
	
	;No processo de baixa de cheque, quando ha deposito em dinheiro eh gravado o numero da conta banco
	;onde foi creditado o deposito (NR_CTAPES) e a conta onde foi debitado o valor (NR_CTAPESCX). Se 
	;houver tambem deposito em cheque grava a conta onde creditou o valor em cheque (NR_CTAPES), se a
	;empresa onde estiver sendo feito o processo sua conta caixa for filial grava a conta onde foi 
	;feito o debito (NR_CTAPESFCC) caso seja matriz nao grava esta informacao, somente a conta onde foi
	; creditado (NR_CTAPES) o valor em cheque.
	
	if ($item("IN_VALIDA", piParams) != <TRUE>)
		if ($item("CD_EMPRESA", piParams) = "")
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Código de empresa não informada", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		if ($item("CD_CLIENTE", piParams) = "")
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Código de cliente não informado", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		if ($item("NR_FAT", piParams) = "")
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Número da fatura nco informado", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		if ($item("NR_PARCELA", piParams) = "")
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Número da parcela da fatura não informado", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		if ($item("TP_DOCUMENTO", piParams) = "")
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Tipo de documento da fatura não informado", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif
	if ($item("CD_EMPLIQ", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Falta informar a empresa da liquidação", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($item("DT_LIQ", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Falta informar a data da liquidação", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($item("NR_SEQLIQ", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Falta informar a sequencia da liquidação", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($item("TP_LIQUIDACAO", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Falta informar o tipo da liquidação", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	vVlPago = $item("VL_PAGO", piParams)
	if ($item("IN_NAOSOMA", piParams) != <TRUE>)
		if (vVlPago  = 0)
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Falta informar o valor a liquidação", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif
	
	clear/e "FGR_LIQSVC"
	cd_empliq.fgr_liqsvc/init = $item("CD_EMPLIQ" , piParams)
	dt_liq.fgr_liqsvc/init    = $item("DT_LIQ"    , piParams)
	nr_seqliq.fgr_liqsvc/init = $item("NR_SEQLIQ" , piParams)
	retrieve/e "FGR_LIQSVC"
	if ($status < 0)
		creocc "FGR_LIQSVC", -1
		cd_empliq.fgr_liqsvc       = $item("CD_EMPLIQ"      , piParams)
		dt_liq.fgr_liqsvc          = $item("DT_LIQ"         , piParams)
		nr_seqliq.fgr_liqsvc       = $item("NR_SEQLIQ"      , piParams)
		tp_liquidacao.fgr_liqsvc   = $item("TP_LIQUIDACAO"  , piParams)
		cd_grupoempresa.fgr_liqsvc = $item("CD_GRUPOEMPRESA", piGlobal)
		cd_pessoa.fgr_liqsvc       = $item("CD_PESSOA"      , piParams)
	endif
	
	creocc "FGR_LIQITEMCRSVC", -1
	cd_empliq.fgr_liqitemcrsvc       = cd_empliq.fgr_liqsvc
	dt_liq.fgr_liqitemcrsvc          = dt_liq.fgr_liqsvc
	nr_seqliq.fgr_liqitemcrsvc       = nr_seqliq.fgr_liqsvc
	nr_seqitem.fgr_liqitemcrsvc      = $item("NR_SEQUENCIA"   , piParams)
	tp_tiporeg.fgr_liqitemcrsvc      = $item("TP_TIPOREG"     , piParams)
	nr_ctapes.fgr_liqitemcrsvc       = $item("NR_CTACREDITO"  , piParams)
	nr_ctapescx.fgr_liqitemcrsvc     = $item("NR_CTADEBITO"   , piParams)
	nr_ctapesfcc.fgr_liqitemcrsvc    = $item("NR_CTAPESFILIAL", piParams)
	cd_empfat.fgr_liqitemcrsvc       = $item("CD_EMPRESA"     , piParams)
	cd_cliente.fgr_liqitemcrsvc      = $item("CD_CLIENTE"     , piParams)
	nr_fat.fgr_liqitemcrsvc          = $item("NR_FAT"         , piParams)
	nr_parcela.fgr_liqitemcrsvc      = $item("NR_PARCELA"     , piParams)
	tp_documento.fgr_liqitemcrsvc    = $item("TP_DOCUMENTO"   , piParams)
	nr_ano.fgr_liqitemcrsvc          = $item("NR_PORTADOR"    , piParams) ;Hugo - Projeto: 24     Tarefa: 40
	cd_operador.fgr_liqsvc           = $item("CD_USUARIO"     , piGlobal)
	cd_operador.fgr_liqitemcrsvc     = $item("CD_USUARIO"     , piGlobal)
	dt_cadastro.fgr_liqsvc           = $datim
	dt_cadastro.fgr_liqitemcrsvc     = $datim
	vl_lancamento.fgr_liqitemcrsvc   = vVlPago
	nr_dofni.fgr_liqitemcrsvc        = $item("NR_DOFNI"       , piParams)
	if ($item("IN_NAOSOMA", piParams) != <TRUE>)
		vl_total.fgr_liqsvc          = vl_total.fgr_liqsvc + vVlPago
	endif
	;Projeto 180 - Tarefa 0181 - Aloisio Gargantini - 25/05/2011
	cd_emptransacao.fgr_liqitemcrsvc = $item("CD_EMPTRANSACAO", piParams)
	nr_transacao.fgr_liqitemcrsvc    = $item("NR_TRANSACAO"   , piParams)
	dt_transacao.fgr_liqitemcrsvc    = $item("DT_TRANSACAO"   , piParams)
	;			;
	$collhandle("FGR_LIQSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	;MARTINEZ - PRJ/TAR 180/173 - 05/05/2011
	if (CD_EMPFAT.FGR_LIQITEMCRSVC != "") & (CD_CLIENTE.FGR_LIQITEMCRSVC != "") & (NR_FAT.FGR_LIQITEMCRSVC != "") & (NR_PARCELA.FGR_LIQITEMCRSVC != "")
		vpiParams = ""
		putitem/id vpiParams, "CD_EMPLIQ",  CD_EMPLIQ.FGR_LIQITEMCRSVC
		putitem/id vpiParams, "DT_LIQ",     DT_LIQ.FGR_LIQITEMCRSVC
		putitem/id vpiParams, "NR_SEQLIQ",  NR_SEQLIQ.FGR_LIQITEMCRSVC
		putitem/id vpiParams, "NR_SEQITEM", NR_SEQITEM.FGR_LIQITEMCRSVC
		putitem/id vpiParams, "CD_EMPFAT",  CD_EMPFAT.FGR_LIQITEMCRSVC
		putitem/id vpiParams, "CD_CLIENTE", CD_CLIENTE.FGR_LIQITEMCRSVC
		putitem/id vpiParams, "NR_FAT",     NR_FAT.FGR_LIQITEMCRSVC
		putitem/id vpiParams, "NR_PARCELA", NR_PARCELA.FGR_LIQITEMCRSVC
		$instancehandle->gravaLiqICRAdic(piGlobal, vpiParams, poCdErro, poCtxErro)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
	endif
	;
	return(0)
End ;gravaLiqFaturas.


;-----------------------------------------------------------------------------;
public operation geraSeqParcela                                               ;
;-----------------------------------------------------------------------------;
; MTF - 03/02/2005                                                            ;
; Funcao : Gera um numero sequencial de parcela a partir do numero da fatura. ;
; Chamada: operation -> baixarFatura()                                        ;
;-----------------------------------------------------------------------------;
;
	params
		string  piParams : IN
		string  poParams : OUT
		numeric poCdErro :OUT
		string  poCtxErro :OUT
	endparams

	variables
		numeric vCdEmpresa, vCdCliente, vNrFatura, vNrParcela, vNrParcelaIni, vNrParcelaFim, vTpParcela
		string  vpiParams, vpoParams
	endvariables

	vCdEmpresa = cd_empresa.fcr_faturaisvc
	vCdCliente = cd_cliente.fcr_faturaisvc
	vNrFatura  = nr_fat.fcr_faturaisvc
	
	selectdb max(nr_parcela) from "FCR_FATURAISVC" u_where (cd_empresa.fcr_faturaisvc = vCdEmpresa & %\
											            cd_cliente.fcr_faturaisvc = vCdCliente & %\
												    nr_fat.fcr_faturaisvc = vNrFatura)       %\
												    to vNrParcela
	if (vNrParcela >= 200)
		vNrParcela = vNrParcela + 1
	else
		vNrParcela = 200
	endif

	poParams = ""
	putitem/id poParams, "NR_PARCELA", vNrParcela
	
	return (0)
End ;geraSeqParcela.


;-----------------------------------------;
public operation baixaCheque              ;
;-----------------------------------------;
; MTF - 03/03/2005                        ;
; Funcao : Baixa de cheques.              ;
; Chamada: FCRFP011 -  efetuarBaixa       ;
;-----------------------------------------;
;
	params
		string  piGlobal  :IN
		string  piParams  :IN
		string  poParams  :OUT
		numeric poCdErro  :OUT
		string  poCtxErro :OUT
	endparams
	variables
		string  vDsFaturas, vDsLinha, vpiParams, vpoParams, vpiValores, vDsAux
		boolean vInUtilizaCxFilial
		numeric vCdCliente, vNrFat, vNrParcela, vVlaCreditar, vNrSeqLiq, vNrSequencia, vNrPortador, vTpDocumento, vTpProcesso
		numeric vTpCobranca, vVlSaldoAnt, vVlSaldoAtualDoc, vVlSaldoAtual, vVlSaldo, vVlSaldoAntDoc, vNrCtaPesFCC, vNrSeqMovFCC
		Date    vDtLiq, vDtMovimFCC, vDtBaixa
	endvariables
	
	vInUtilizaCxFilial = $item("IN_UTILIZA_CXFILIAL", piParams)
	if ($item("CD_EMPPADRAO", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Falta informar o código da empresa", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($item("NR_CTADEBITO", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Falta informar o código da conta p/ debito", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($item("NR_CTACREDITO", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Falta informar o código da conta p/ crédito", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($item("DT_BAIXA", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Falta informar a data de baixa dos cheques", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($item("NR_PORTADOR", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Falta informar o novo portador para baixa dos cheques", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	;MTF(26/05/2006) - Projeto 069, tarefa 007.
	vTpDocumento = $item("TP_DOCUMENTO", piParams)
	if (vTpDocumento = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Favor informar o tipo de documento para baixa de cheques", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	;

	vDtBaixa    = $item("DT_BAIXA",    piParams) ;MARTINEZ - PRJ/TAR 180/235 - 10/08/2011
	vTpCobranca = $item("TP_COBRANCA", piParams) ;MTF(07/04/2008) - Projeto 078, tarefa 1375.
	vDsAux      = $item("DS_AUX",      piParams) ;Diogenes - 05/01/2009  - Proj.146 - Tar. 1
	
	;Projeto 078 - Tarefa 3602 - Aloisio Gargantini - 09/08/2010
	vTpProcesso = $item("TP_PROCESSO", piParams)
	$xlplemp$   = ""
	putitem $xlplemp$, -1, "IN_LOG_MOV_CTAPES"
	activate "ADMSVCO001".getLstParametro($xlplemp$, $xlplemp$, $xCdErro$, $xCtxErro$)
	if ($procerror)
		$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
	elseif ($status < 0)
		$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
	endif
	$inLogMovCtaPes$ = $item("IN_LOG_MOV_CTAPES", $xlplemp$)
	if ($inLogMovCtaPes$ = <TRUE>) & ((vTpProcesso = "") | (vTpProcesso = 0))
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Tipo de processo não informado!", "ADICIONAL=Operação->FCXSVCO002.supreCaixa")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	;Buscando a sequencia da liquidacao.
	vpiParams = ""
	putitem/id vpiParams, "NM_ENTIDADE", "FGR_LIQ"
	newinstance "GERSVCO031", "GERSVCO031X"
	activate "GERSVCO031X".getNumSeq(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxerro$)	
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=  Erro na rotina de busca do número de liquidação. => operation -> confirmaEndosso()")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)  
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=  Erro na rotina de busca do número de liquidação. => operation -> confirmaEndosso()")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1) 
	else
		deleteinstance "GERSVCO031X"
	endif  
	if ($item("NR_SEQUENCIA", vpoParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Não gerou sequência de liquidação", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	vNrSeqLiq    = $item("NR_SEQUENCIA", vpoParams)
	vDsFaturas   = $item("DS_FATURAS",   piParams)
	vNrSequencia = 1
	;Baixar as Faturas dos cheques.
	if (vDsFaturas != "")
		repeat
			getitem vDsLinha, vDsFaturas, 1
			
			clear/e "FCR_FATURAISVC"
			cd_empresa.fcr_faturaisvc/init = $item("CD_EMPRESA", vDsLinha)	
			cd_cliente.fcr_faturaisvc/init = $item("CD_CLIENTE", vDsLinha)
			nr_fat.fcr_faturaisvc/init     = $item("NR_FAT"    , vDsLinha)
			nr_parcela.fcr_faturaisvc/init = $item("NR_PARCELA", vDsLinha)
			retrieve/e "FCR_FATURAISVC"
			if ($status < 0)
				vCdCliente = $item("CD_CLIENTE", vDsLinha)
				vNrFat     = $item("NR_FAT"    , vDsLinha)
				vNrParcela = $item("NR_PARCELA", vDsLinha)
				$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Cheque não encontrado - Cliente= %%vCdCliente  Cheque Nr.= %%vNrFat  Parcela= %%vNrParcela", "")
			else
				message/hint "Baixando cheque  -> nr. %%nr_fat.fcr_faturaisvc / %%nr_parcela.fcr_faturaisvc"

				vNrPortador = NR_PORTADOR.FCR_FATURAISVC    ;Hugo   Projeto: 24   Tarefa: 40
				
				;MTF(07/04/2008) - Projeto 078, tarefa 1375.
				;tp_baixa.fcr_faturaisvc     = 2 ;Baixa p/ depósito.
				if (vTpCobranca = 2) ;Descontada.
					tp_baixa.fcr_faturaisvc = 18 ;Baixa titulo descontado.
				else
					tp_baixa.fcr_faturaisvc = 2 ;Baixa p/ depósito.
				endif
				;
				cd_operbaixa.fcr_faturaisvc = $item("CD_USUARIO",   piGlobal)
				nr_portador.fcr_faturaisvc  = $item("NR_PORTADOR",  piParams)
				cd_empliq.fcr_faturaisvc    = $item("CD_EMPPADRAO", piParams)
				;MTF(04/10/2007) - Projeto 079, tarefa 163.
				if (dt_liq.fcr_faturaisvc != "")
					$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fatura já liquidada por outro processo ou manutenção.%%^Empresa: %%cd_empresa.fcr_faturaisvc   Cliente: %%cd_cliente.fcr_faturaisvc  Fatura: %%nr_fat.fcr_faturaisvc  Parcela: %%nr_parcela.fcr_faturaisvc", "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
				;
				dt_liq.fcr_faturaisvc    = vDtBaixa
				;cd_emplocal.fcr_faturaisvc = 0 ;MTF(12/03/2008) - Projeto 078, tarefa 1286.
				nr_seqliq.fcr_faturaisvc = vNrSeqLiq
				vl_pago.fcr_faturaisvc   = $item("VL_FATURA",  vDsLinha)
				dt_baixa.fcr_faturaisvc  = $item("DT_SISTEMA", piGlobal) ;MTF(03/07/2006) - Projeto 074, tarefa 001.
				
				;MARTINEZ - PRJ/TAR 180/235 - 10/08/2011
				if (vDtBaixa <= $item("DT_SISTEMA", piGlobal) & (vDtBaixa >= DT_EMISSAO.FCR_FATURAISVC))
					DT_BAIXA.FCR_FATURAISVC = vDtBaixa
				endif
				;

				; MFGALEGO - 04/07/2007 ; Paulek / ADS
				;Efetuar a gravação da hora da baixa
				call gravaHoraDtBaixa()
				;

				cd_operador.fcr_faturaisvc = $item("CD_USUARIO", piGlobal)
				dt_cadastro.fcr_faturaisvc = $datim
				;MTF(06/09/2007) - Projeto 078, tarefa 793.
				if ($status = -11)
					$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fatura sendo utilizada em outro processo ou manutenção.%%^Empresa: %%cd_empresa.fcr_faturaisvc   Cliente: %%cd_cliente.fcr_faturaisvc  Fatura: %%nr_fat.fcr_faturaisvc  Parcela: %%nr_parcela.fcr_faturaisvc", "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
				;
				$collhandle("FCR_FATURAISVC")->salvar()
				if ($status < 0)
					$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=   / Erro gravação da baixa de cheques - FCRSVCO007 -> baixaCheque()")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
				;Projeto 078 - Tarefa 533 - Aloisio Gargantini - 24/05/2007
				clear/e "FCR_CHEQUESVC"
				CD_EMPRESA.FCR_CHEQUESVC/init = CD_EMPRESA.FCR_FATURAISVC      
				CD_CLIENTE.FCR_CHEQUESVC/init = CD_CLIENTE.FCR_FATURAISVC    
				NR_FAT.FCR_CHEQUESVC/init     = NR_FAT.FCR_FATURAISVC        
				NR_PARCELA.FCR_CHEQUESVC/init = NR_PARCELA.FCR_FATURAISVC    			
				retrieve/e "FCR_CHEQUESVC"
				if ($status >= 0)

					;-- MAD [Proj/Tar.078/3018] - 04/12/2009
					;if (DT_BAIXA1.FCR_CHEQUESVC = "")
					;	DT_BAIXA1.FCR_CHEQUESVC = $item("DT_SISTEMA", piGlobal)
					;	NR_CTAPESBX1.FCR_CHEQUESVC = $item("NR_CTACREDITO", piParams)
					;elseif (DT_BAIXA2.FCR_CHEQUESVC = "")
					;	DT_BAIXA2.FCR_CHEQUESVC = $item("DT_SISTEMA", piGlobal)
					;	NR_CTAPESBX2.FCR_CHEQUESVC = $item("NR_CTACREDITO", piParams)
					;endif
					if (DT_BAIXA1.FCR_CHEQUESVC = "")
						DT_BAIXA1.FCR_CHEQUESVC    = $item("DT_BAIXA",      piParams)
						NR_CTAPESBX1.FCR_CHEQUESVC = $item("NR_CTACREDITO", piParams)
					elseif (DT_BAIXA2.FCR_CHEQUESVC = "")
						DT_BAIXA2.FCR_CHEQUESVC    = $item("DT_BAIXA",      piParams)
						NR_CTAPESBX2.FCR_CHEQUESVC = $item("NR_CTACREDITO", piParams)
					endif

					if (DT_BAIXA2.FCR_CHEQUESVC != "") & (DT_BAIXA1.FCR_CHEQUESVC >= DT_BAIXA2.FCR_CHEQUESVC)
						$instancehandle->setStatus(<STS_AVISO>, "GEN001", "DESCRICAO=Baixa não permitida.%%^Data da segunda baixa do cheque (%%dt_baixa2.fcr_chequesvc) deve ser superior a %%^ data da primeira baixa (%%dt_baixa1.fcr_chequesvc).", "")
						poCdErro  = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					endif
					;;
					CD_OPERADOR.FCR_CHEQUESVC = $item("CD_USUARIO", piGlobal)
					DT_CADASTRO.FCR_CHEQUESVC = $datim
					$collhandle("FCR_CHEQUESVC")->salvar()
					if ($status < 0)
						$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=   / Erro gravação da baixa de cheques - FCRSVCO007 -> baixaCheque()")
						poCdErro  = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					endif
				endif							

			endif
			
			;Atualizar liquidacao - grava os cheques que foram baixados.
			vpiParams = ""
			putitem/id vpiParams, "CD_EMPLIQ", $item("CD_EMPPADRAO", piParams)
			putitem/id vpiParams, "DT_LIQ",    $item("DT_BAIXA",     piParams)			
			putitem/id vpiParams, "NR_SEQLIQ", vNrSeqLiq
			;MTF(07/04/2008) - Projeto 078, tarefa 1375.
			;putitem/id vpiParams, "TP_LIQUIDACAO", 7 ;Baixa de cheques.
			if (vTpCobranca = 2) ;Descontada.
				putitem/id vpiParams, "TP_LIQUIDACAO", 79 ;Baixa de titulo descontado.
			;Projeto 078 - Tarefa 3160 - Aloisio Gargantini - 11/02/2010
			elseif (vTpCobranca = 22) ;Custódia
				putitem/id vpiParams, "TP_LIQUIDACAO", 106 ;Baixa de título custódia cheque devolução
			;
			else
				;Projeto 078 - Tarefa 3539 - Aloisio Gargantini - 16/07/2010
				if ($item("IN_DEPOSITODINHEIRO", piParams) = <TRUE>)
					putitem/id vpiParams, "TP_LIQUIDACAO", 112 ;Deposito de dinheiro em conta.
				else
					putitem/id vpiParams, "TP_LIQUIDACAO", 7  ;Baixa de cheques.
				endif
				;putitem/id vpiParams, "TP_LIQUIDACAO", 7  ;Baixa de cheques.
				;
			endif
			;
			putitem/id vpiParams, "NR_SEQUENCIA",  vNrSequencia
			putitem/id vpiParams, "TP_TIPOREG",    1
			putitem/id vpiParams, "CD_EMPRESA",    cd_empresa.fcr_faturaisvc
			putitem/id vpiParams, "CD_CLIENTE",    cd_cliente.fcr_faturaisvc
			putitem/id vpiParams, "TP_DOCUMENTO",  tp_documento.fcr_faturaisvc
			putitem/id vpiParams, "NR_FAT",        nr_fat.fcr_faturaisvc
			putitem/id vpiParams, "NR_PARCELA",    nr_parcela.fcr_faturaisvc
			putitem/id vpiParams, "NR_CTACREDITO", $item("NR_CTACREDITO", piParams)
			putitem/id vpiParams, "VL_PAGO",       vl_pago.fcr_faturaisvc
			putitem/id vpiParams, "NR_PORTADOR",   vNrPortador ;Hugo   Projeto: 24    Tarefa: 40
			$instancehandle->gravaLiqFaturas(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
			if ($procerror)
				$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=   /  FCRSVCO007 -> gravaLiqFaturas()")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=   /  FCRSVCO007 -> gravaLiqFaturas()")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
			vNrSequencia = vNrSequencia + 1
			
			delitem vDsFaturas, 1
		until (vDsFaturas = "")	
		
		;Grava a conta credito na qual os cheques foram depositados.
		vpiParams = ""
		putitem/id vpiParams, "CD_EMPLIQ", $item("CD_EMPPADRAO", piParams)
		putitem/id vpiParams, "DT_LIQ",    $item("DT_BAIXA",     piParams)
		putitem/id vpiParams, "NR_SEQLIQ", vNrSeqLiq
		;MTF(07/04/2008) - Projeto 078, tarefa 1375.
		;putitem/id vpiParams, "TP_LIQUIDACAO", 7 ;Baixa de cheques.
		if (vTpCobranca = 2) ;Descontada.
			putitem/id vpiParams, "TP_LIQUIDACAO", 79 ;Baixa de titulo descontado.
		;Projeto 078 - Tarefa 3160 - Aloisio Gargantini - 11/02/2010
		elseif (vTpCobranca = 22) ;Custódia
			putitem/id vpiParams, "TP_LIQUIDACAO", 106 ;Baixa de título custódia cheque devolução
		;
		else
			;Projeto 078 - Tarefa 3539 - Aloisio Gargantini - 16/07/2010
			if ($item("IN_DEPOSITODINHEIRO", piParams) = <TRUE>)
				putitem/id vpiParams, "TP_LIQUIDACAO", 112 ;Deposito de dinheiro em conta.
			else
			;
				putitem/id vpiParams, "TP_LIQUIDACAO", 7  ;Baixa de cheques.
			endif
		endif
		;
		putitem/id vpiParams, "NR_SEQUENCIA",  vNrSequencia
		putitem/id vpiParams, "TP_TIPOREG",    2
		putitem/id vpiParams, "NR_CTACREDITO", $item("NR_CTACREDITO",  piParams)
		putitem/id vpiParams, "TP_DOCUMENTO",  2 ;Cheque.
		if (vInUtilizaCxFilial = <TRUE>) ;Utiliza conta caixa filial, grava numero da conta que foi debitado os cheques.
			putitem/id vpiParams, "NR_CTAPESFILIAL", $item("NR_CTADEBITO", piParams)
		endif
		putitem/id vpiParams, "VL_PAGO",       $item("VL_BAIXACHEQUE", piParams)
		putitem/id vpiParams, "IN_NAOSOMA",    <TRUE>
		putitem/id vpiParams, "IN_VALIDA",     <TRUE>
		$instancehandle->gravaLiqFaturas(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
		if ($procerror)
			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=   /  FCRSVCO007 -> gravaLiqFaturas()")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=   /  FCRSVCO007 -> gravaLiqFaturas()")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif
	; Projeto 24, Tarefa 31, Aloisio Gargantini, 20/12/2005
	clear/e "GER_GRUPOEMPRSVC"
	CD_GRUPOEMPRESA.GER_GRUPOEMPRSVC/init = $item("CD_GRUPOEMPRESA",piGlobal)
	retrieve/e "GER_GRUPOEMPRSVC"
		
	;Atualiza valor em dinheiro depositado.
	if ($item("VL_DINHEIRO", piParams) > 0)
		;Debito do dinheiro - conta caixa.
		;Projeto 078 - Tarefa 3602 - Aloisio Gargantini - 06/08/2010
		if ($inLogMovCtaPes$ = <TRUE>)
			;buscar saldo Cta.
			vpiParams = ""
			putitem/id vpiParams, "NR_CTAPES", $item("NR_CTADEBITO", piParams)
			putitem/id vpiParams, "DT_SALDO",  $item("DT_SISTEMA",   piGlobal)
			activate "FCCSVCO002".buscaSaldoConta(piGlobal, vpiParams, "", vpoParams, $xCdErro$, $xCtxerro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
			vVlSaldoAnt = $item("VL_SALDO", vpoParams)
			
			;buscar saldo Cta. por tipo de documento
			vpiParams = ""
			putitem/id vpiParams, "NR_CTAPES",        $item("NR_CTADEBITO", piParams)
			putitem/id vpiParams, "TP_DOCUMENTO",     3 ;dinheiro
			putitem/id vpiParams, "NR_SEQHISTRELSUB", 1 
			putitem/id vpiParams, "DT_SALDO",         $item("DT_SISTEMA",   piGlobal)
			activate "FCCSVCO002".buscaSaldoCtaTp(piGlobal, vpiParams, "", vpoParams, $xCdErro$, $xCtxerro$)
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
       			return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
			vVlSaldoAntDoc = $item("VL_SALDO", vpoParams)
		endif
		;
		
		vpiParams = ""
		putitem/id vpiParams, "CD_EMPRESA",       $item("CD_EMPRESA",   piGlobal)
		putitem/id vpiParams, "NR_CTAPES",        $item("NR_CTADEBITO", piParams)
		putitem/id vpiParams, "DT_MOVIMENTO",     $item("DT_BAIXA",     piParams)
		putitem/id vpiParams, "TP_DOCUMENTO",     3 ;Dinheiro.
		putitem/id vpiParams, "NR_SEQHISTRELSUB", 1
		putitem/id vpiParams, "CD_HISTORICO",     915
		putitem/id vpiParams, "VL_LANCTO",        $item("VL_DINHEIRO",  piParams)
		putitem/id vpiParams, "IN_ESTORNO",       "N"
		;putitem/id vpiParams, "DS_AUX",           "Saida p/ deposito em dinheiro"
		;Diogenes - 05/01/2009  - Proj.146 - Tar. 1 
		if (vDsAux != "")
			putitem/id vpiParams, "DS_AUX",	     "%%CD_GRUPOEMPRESA.GER_GRUPOEMPRSVC %%NM_GRUPOEMPRESA.GER_GRUPOEMPRSVC %%vDsAux"
		else
			putitem/id vpiParams, "DS_AUX",	     "%%CD_GRUPOEMPRESA.GER_GRUPOEMPRSVC %%NM_GRUPOEMPRESA.GER_GRUPOEMPRSVC"
		endif
		;
		putitem/id vpiParams, "CD_EMPLIQ",        $item("CD_EMPPADRAO",  piParams)
		putitem/id vpiParams, "DT_LIQ",           $item("DT_BAIXA",      piParams)
		putitem/id vpiParams, "NR_SEQLIQ",        vNrSeqLiq
		activate "FCCSVCO002".movimentaConta(piGlobal, vpiParams, vpiValores, vpoParams, $xCdErro$, $xCtxerro$)
		if ($procerror)       
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=  / FCRSVCO007 operation -> baixaCheque() chamando FCCSVCO002->movimentaConta()")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=  / FCRSVCO007 operation -> baixaCheque() chamando FCCSVCO002->movimentaConta()")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		
		;Projeto 078 - Tarefa 3602 - Aloisio Gargantini - 06/08/2010
		if ($inLogMovCtaPes$ = <TRUE>)
			vNrCtaPesFCC = $item("NR_CTAPES", vpoParams)
			vDtMovimFCC  = $item("DT_MOVIM",  vpoParams)
			vNrSeqMovFCC = $item("NR_SEQMOV", vpoParams)

			;buscar saldo Cta.
			vpiParams = ""
			putitem/id vpiParams, "NR_CTAPES", $item("NR_CTADEBITO", piParams)
			putitem/id vpiParams, "DT_SALDO",  $item("DT_SISTEMA",   piGlobal)
			activate "FCCSVCO002".buscaSaldoConta(piGlobal, vpiParams, "", vpoParams, $xCdErro$, $xCtxerro$)
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
			vVlSaldoAtual = $item("VL_SALDO", vpoParams)
			
			;buscar saldo Cta. por tipo de documento
			vpiParams = ""
			putitem/id vpiParams, "NR_CTAPES",        $item("NR_CTADEBITO", piParams)
			putitem/id vpiParams, "TP_DOCUMENTO",     3 ;dinheiro
			putitem/id vpiParams, "NR_SEQHISTRELSUB", 1 
			putitem/id vpiParams, "DT_SALDO",         $item("DT_SISTEMA",   piGlobal)
			activate "FCCSVCO002".buscaSaldoCtaTp(piGlobal, vpiParams, "", vpoParams, $xCdErro$, $xCtxerro$)
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
			vVlSaldoAtualDoc = $item("VL_SALDO", vpoParams)
			
			;gravação do log
			vpiParams = ""
			putitem/id vpiParams, "TP_PROCESSO",    vTpProcesso
			putitem/id vpiParams, "TP_DOCUMENTO",   3 ;dinheiro
			putitem/id vpiParams, "NR_CTAPES",      $item("NR_CTADEBITO", piParams)
			putitem/id vpiParams, "VL_LANCAMENTO",  $item("VL_DINHEIRO",  piParams)
			putitem/id vpiParams, "VL_SALDODOC",    vVlSaldoAtualDoc
			putitem/id vpiParams, "VL_SALDOCTA",    vVlSaldoAtual
			putitem/id vpiParams, "VL_SALDOANTDOC", vVlSaldoAntDoc
			putitem/id vpiParams, "VL_SALDOANTCTA", vVlSaldoAnt
			putitem/id vpiParams, "NR_CTAPESFCC",   vNrCtaPesFCC
			putitem/id vpiParams, "DT_MOVIMFCC",    vDtMovimFCC
			putitem/id vpiParams, "NR_SEQMOVFCC",   vNrSeqMovFCC
			activate "FCCSVCO018".gravarLogMovtoCtaPes(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
			if ($procerror)
				$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		endif
		;
		;Credito do dinheiro - conta informada no filtro FCRFP011.
		;Projeto 078 - Tarefa 3602 - Aloisio Gargantini - 06/08/2010
		if ($inLogMovCtaPes$ = <TRUE>)
			;buscar saldo Cta.
			vpiParams = ""
			putitem/id vpiParams, "NR_CTAPES", $item("NR_CTACREDITO", piParams)
			putitem/id vpiParams, "DT_SALDO",  $item("DT_SISTEMA",    piGlobal)
			activate "FCCSVCO002".buscaSaldoConta(piGlobal, vpiParams, "", vpoParams, $xCdErro$, $xCtxerro$)
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
       			return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
			vVlSaldoAnt = $item("VL_SALDO", vpoParams)
			
			;buscar saldo Cta. por tipo de documento
			vpiParams = ""
			putitem/id vpiParams, "NR_CTAPES",        $item("NR_CTACREDITO", piParams)
			putitem/id vpiParams, "TP_DOCUMENTO",     3 ;dinheiro
			putitem/id vpiParams, "NR_SEQHISTRELSUB", 1 
			putitem/id vpiParams, "DT_SALDO",         $item("DT_SISTEMA",    piGlobal)
			activate "FCCSVCO002".buscaSaldoCtaTp(piGlobal, vpiParams, "", vpoParams, $xCdErro$, $xCtxerro$)
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
			vVlSaldoAntDoc = $item("VL_SALDO", vpoParams)
		endif
		;
		vpiParams = ""
		putitem/id vpiParams, "CD_EMPRESA",       $item("CD_EMPPADRAO",  piParams)
		putitem/id vpiParams, "NR_CTAPES",        $item("NR_CTACREDITO", piParams)
		putitem/id vpiParams, "DT_MOVIMENTO",     $item("DT_BAIXA",      piParams)
		putitem/id vpiParams, "TP_DOCUMENTO",     3 ;Dinheiro.
		putitem/id vpiParams, "NR_SEQHISTRELSUB", 1
		putitem/id vpiParams, "CD_HISTORICO",     916
		putitem/id vpiParams, "VL_LANCTO",        $item("VL_DINHEIRO",   piParams)
		putitem/id vpiParams, "IN_ESTORNO",       "N"
		;putitem/id vpiParams, "DS_AUX",           "Entrada por deposito em dinheiro"
		putitem/id vpiParams, "DS_AUX",           "%%CD_GRUPOEMPRESA.GER_GRUPOEMPRSVC %%NM_GRUPOEMPRESA.GER_GRUPOEMPRSVC"
		putitem/id vpiParams, "CD_EMPLIQ",        $item("CD_EMPPADRAO", piParams)
		putitem/id vpiParams, "DT_LIQ",           $item("DT_BAIXA",     piParams)
		putitem/id vpiParams, "NR_SEQLIQ",        vNrSeqLiq
		activate "FCCSVCO002".movimentaConta(piGlobal, vpiParams, vpiValores, vpoParams, $xCdErro$, $xCtxerro$)
		if ($procerror)       
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=  / FCRSVCO007 operation -> baixaCheque() chamando FCCSVCO002->movimentaConta()")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=  / FCRSVCO007 operation -> baixaCheque() chamando FCCSVCO002->movimentaConta()")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		
		;Projeto 078 - Tarefa 3602 - Aloisio Gargantini - 06/08/2010
		if ($inLogMovCtaPes$ = <TRUE>)
			vNrCtaPesFCC = $item("NR_CTAPES", vpoParams)
			vDtMovimFCC  = $item("DT_MOVIM",  vpoParams)
			vNrSeqMovFCC = $item("NR_SEQMOV", vpoParams)
			
			;buscar saldo Cta.
			vpiParams = ""
			putitem/id vpiParams, "NR_CTAPES", $item("NR_CTACREDITO", piParams)
			putitem/id vpiParams, "DT_SALDO",  $item("DT_SISTEMA",    piGlobal)
			activate "FCCSVCO002".buscaSaldoConta(piGlobal, vpiParams, "", vpoParams, $xCdErro$, $xCtxerro$)
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
			vVlSaldoAtual = $item("VL_SALDO", vpoParams)
			
			;buscar saldo Cta. por tipo de documento
			vpiParams = ""
			putitem/id vpiParams, "NR_CTAPES",        $item("NR_CTACREDITO", piParams)
			putitem/id vpiParams, "TP_DOCUMENTO",     3 ;dinheiro
			putitem/id vpiParams, "NR_SEQHISTRELSUB", 1 
			putitem/id vpiParams, "DT_SALDO",         $item("DT_SISTEMA",    piGlobal)
			activate "FCCSVCO002".buscaSaldoCtaTp(piGlobal, vpiParams, "", vpoParams, $xCdErro$, $xCtxerro$)
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
       			return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
			vVlSaldoAtualDoc = $item("VL_SALDO", vpoParams)
			
			;gravação do log
			vpiParams = ""
			putitem/id vpiParams, "TP_PROCESSO",    vTpProcesso
			putitem/id vpiParams, "TP_DOCUMENTO",   3 ;dinheiro
			putitem/id vpiParams, "NR_CTAPES",      $item("NR_CTACREDITO", piParams)
			putitem/id vpiParams, "VL_LANCAMENTO",  $item("VL_DINHEIRO",   piParams)
			putitem/id vpiParams, "VL_SALDODOC",    vVlSaldoAtualDoc
			putitem/id vpiParams, "VL_SALDOCTA",    vVlSaldoAtual
			putitem/id vpiParams, "VL_SALDOANTDOC", vVlSaldoAntDoc
			putitem/id vpiParams, "VL_SALDOANTCTA", vVlSaldoAnt
			putitem/id vpiParams, "NR_CTAPESFCC",   vNrCtaPesFCC
			putitem/id vpiParams, "DT_MOVIMFCC",    vDtMovimFCC
			putitem/id vpiParams, "NR_SEQMOVFCC",   vNrSeqMovFCC
			activate "FCCSVCO018".gravarLogMovtoCtaPes(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
			if ($procerror)
				$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		endif
		;
		vpiParams = ""
		vNrSequencia = vNrSequencia + 1
		putitem/id vpiParams, "CD_EMPLIQ", $item("CD_EMPPADRAO", piParams)
		putitem/id vpiParams, "DT_LIQ",    $item("DT_BAIXA",     piParams)
		putitem/id vpiParams, "NR_SEQLIQ", vNrSeqLiq
		;MTF(07/04/2008) - Projeto 078, tarefa 1375.
		;putitem/id vpiParams, "TP_LIQUIDACAO", 7 ;Baixa de cheques.
		if (vTpCobranca = 2) ;Descontada.
			putitem/id vpiParams, "TP_LIQUIDACAO", 79 ;Baixa de titulo descontado.
			;Projeto 078 - Tarefa 3160 - Aloisio Gargantini - 11/02/2010
		elseif (vTpCobranca = 22) ;Custódia
			putitem/id vpiParams, "TP_LIQUIDACAO", 106 ;Baixa de título custódia cheque devolução
		;
		else
			;Projeto 078 - Tarefa 3539 - Aloisio Gargantini - 16/07/2010
			if ($item("IN_DEPOSITODINHEIRO", piParams) = <TRUE>)
				putitem/id vpiParams, "TP_LIQUIDACAO", 112 ;Deposito de dinheiro em conta.
			else
			;
				putitem/id vpiParams, "TP_LIQUIDACAO", 7  ;Baixa de cheques.
			endif
		endif
		;
		putitem/id vpiParams, "NR_SEQUENCIA",  vNrSequencia
		putitem/id vpiParams, "TP_TIPOREG",    2
		putitem/id vpiParams, "TP_DOCUMENTO",  3 ;Dinheiro.
		putitem/id vpiParams, "NR_CTADEBITO",  $item("NR_CTADEBITO",  piParams)
		putitem/id vpiParams, "NR_CTACREDITO", $item("NR_CTACREDITO", piParams)
		putitem/id vpiParams, "VL_PAGO",       $item("VL_DINHEIRO",   piParams)
		putitem/id vpiParams, "IN_VALIDA",     <TRUE>
		$instancehandle->gravaLiqFaturas(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
		if ($procerror)
			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=   /  FCRSVCO007 -> gravaLiqFaturas()")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=   /  FCRSVCO007 -> gravaLiqFaturas()")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif
	
	;Faz os lancamentos dos cheques na conta deposito.
	vDsFaturas = ""
	vDsFaturas = $item("DS_FATURAS", piParams)
	if (vDsFaturas != "")
		repeat
			getitem vDsLinha, vDsFaturas, 1
			;if ($item("TP_COBRANCA", vDsLinha) != 2) & ($item("TP_COBRANCA", vDsLinha) != 13) ;2 - Cheque descontado / 13 - Cheque endossado.
			if ($item("TP_COBRANCA", vDsLinha) != 2) & ($item("TP_COBRANCA", vDsLinha) != 6) ;2 - Cheque descontado 6 - Vendor Fshimakawa 
				
				vNrFat       = $item("NR_FAT",     vDsLinha)
				vNrParcela   = $item("NR_PARCELA", vDsLinha)
				message/hint "Lançando cheque(s) na conta depósito - nr. %%vNrFat / %%vNrParcela"
				
				vVlaCreditar = vVlaCreditar + $item("VL_FATURA", vDsLinha)
				if ($item("TP_DEPOSITO", piParams) = "I") ;Deposito individual dos cheques.
					;Projeto 078 - Tarefa 3602 - Aloisio Gargantini - 06/08/2010
					if ($inLogMovCtaPes$ = <TRUE>)
						;buscar saldo Cta.
						vpiParams = ""
						putitem/id vpiParams, "NR_CTAPES", $item("NR_CTACREDITO", piParams)
						putitem/id vpiParams, "DT_SALDO",  $item("DT_SISTEMA",    piGlobal)
						activate "FCCSVCO002".buscaSaldoConta(piGlobal, vpiParams, "", vpoParams, $xCdErro$, $xCtxerro$)
						if ($procerror)
							$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
							poCdErro  = $xCdErro$
							poCtxErro = $xCtxErro$
							return(-1)
						elseif ($status < 0)
							$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
							poCdErro  = $xCdErro$
							poCtxErro = $xCtxErro$
							return(-1)
						endif
						vVlSaldoAnt = $item("VL_SALDO", vpoParams)
						
						;buscar saldo Cta. por tipo de documento
						vpiParams = ""
						putitem/id vpiParams, "NR_CTAPES",        $item("NR_CTACREDITO", piParams)
						if ($item("TP_CXFILIAL_CXMATRIZ", piParams) = <TRUE>)
							putitem/id vpiParams, "TP_DOCUMENTO", 3 ;Dinheiro.
						else
							putitem/id vpiParams, "TP_DOCUMENTO", 2 ;Cheque.
						endif
						putitem/id vpiParams, "NR_SEQHISTRELSUB", 1 
						putitem/id vpiParams, "DT_SALDO",         $item("DT_SISTEMA",    piGlobal)
						activate "FCCSVCO002".buscaSaldoCtaTp(piGlobal, vpiParams, "", vpoParams, $xCdErro$, $xCtxerro$)
						if ($procerror)
							$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
							poCdErro  = $xCdErro$
							poCtxErro = $xCtxErro$
							return(-1)
						elseif ($status < 0)
							$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
							poCdErro  = $xCdErro$
							poCtxErro = $xCtxErro$
							return(-1)
						endif
						vVlSaldoAntDoc = $item("VL_SALDO", vpoParams)
					endif
					;
					vpiParams = ""
					putitem/id vpiParams, "CD_EMPRESA",       $item("CD_EMPPADRAO",  piParams)
					putitem/id vpiParams, "NR_CTAPES",        $item("NR_CTACREDITO", piParams)
					putitem/id vpiParams, "DT_MOVIMENTO",     $item("DT_BAIXA",      piParams)
					if ($item("TP_CXFILIAL_CXMATRIZ", piParams) = <TRUE>)
						putitem/id vpiParams, "TP_DOCUMENTO", 3 ;Dinheiro.
						;putitem/id vpiParams, "DS_AUX",       "Deposito em dinheiro"
						putitem/id vpiParams, "DS_AUX",           "%%CD_GRUPOEMPRESA.GER_GRUPOEMPRSVC %%NM_GRUPOEMPRESA.GER_GRUPOEMPRSVC"
					else
						putitem/id vpiParams, "TP_DOCUMENTO", 2 ;Cheque.
						putitem/id vpiParams, "DS_AUX",           "%%CD_GRUPOEMPRESA.GER_GRUPOEMPRSVC %%NM_GRUPOEMPRESA.GER_GRUPOEMPRSVC"
						;putitem/id vpiParams, "DS_AUX",       "Deposito em cheque"
					endif
					putitem/id vpiParams, "NR_SEQHISTRELSUB", 1
					
					;MTF(26/05/2006) - Projeto 069, tarefa 007.
					if (vTpDocumento = 1) ;Fatura.
						putitem/id vpiParams, "CD_HISTORICO", 978
					else
						putitem/id vpiParams, "CD_HISTORICO", 917
					endif
					;
					putitem/id vpiParams, "VL_LANCTO",        $item("VL_FATURA",    vDsLinha)
					putitem/id vpiParams, "IN_ESTORNO",       "N"
					putitem/id vpiParams, "CD_EMPLIQ",        $item("CD_EMPPADRAO", piParams)
					putitem/id vpiParams, "DT_LIQ",           $item("DT_BAIXA",     piParams)
					putitem/id vpiParams, "NR_SEQLIQ",        vNrSeqLiq
					activate "FCCSVCO002".movimentaConta(piGlobal, vpiParams, vpiValores, vpoParams, $xCdErro$, $xCtxerro$)
					if ($procerror)       
						$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=  / FCRSVCO007 operation -> baixaCheque() chamando FCCSVCO002->movimentaConta()")
						poCdErro  = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					elseif ($status < 0)
						$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=  / FCRSVCO007 operation -> baixaCheque() chamando FCCSVCO002->movimentaConta()")
						poCdErro  = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					endif
					
					;Projeto 078 - Tarefa 3602 - Aloisio Gargantini - 06/08/2010
					if ($inLogMovCtaPes$ = <TRUE>)
						vNrCtaPesFCC = $item("NR_CTAPES", vpoParams)
						vDtMovimFCC  = $item("DT_MOVIM",  vpoParams)
						vNrSeqMovFCC = $item("NR_SEQMOV", vpoParams)
						
						;buscar saldo Cta.
						vpiParams = ""
						putitem/id vpiParams, "NR_CTAPES", $item("NR_CTACREDITO", piParams)
						putitem/id vpiParams, "DT_SALDO",  $item("DT_SISTEMA",    piGlobal)
						activate "FCCSVCO002".buscaSaldoConta(piGlobal, vpiParams, "", vpoParams, $xCdErro$, $xCtxerro$)
						if ($procerror)
							$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
							poCdErro  = $xCdErro$
							poCtxErro = $xCtxErro$
							return(-1)
						elseif ($status < 0)
							$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
							poCdErro  = $xCdErro$
							poCtxErro = $xCtxErro$
							return(-1)
						endif
						vVlSaldoAtual = $item("VL_SALDO", vpoParams)
						
						;buscar saldo Cta. por tipo de documento
						vpiParams = ""
						putitem/id vpiParams, "NR_CTAPES",        $item("NR_CTACREDITO", piParams)
						if ($item("TP_CXFILIAL_CXMATRIZ", piParams) = <TRUE>)
							putitem/id vpiParams, "TP_DOCUMENTO", 3 ;Dinheiro.
						else
							putitem/id vpiParams, "TP_DOCUMENTO", 2 ;Cheque.
						endif
						putitem/id vpiParams, "NR_SEQHISTRELSUB", 1 
						putitem/id vpiParams, "DT_SALDO",         $item("DT_SISTEMA",    piGlobal)
						activate "FCCSVCO002".buscaSaldoCtaTp(piGlobal, vpiParams, "", vpoParams, $xCdErro$, $xCtxerro$)
						if ($procerror)
							$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
							poCdErro  = $xCdErro$
							poCtxErro = $xCtxErro$
							return(-1)
						elseif ($status < 0)
							$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
							poCdErro  = $xCdErro$
							poCtxErro = $xCtxErro$
							return(-1)
						endif
						vVlSaldoAtualDoc = $item("VL_SALDO", vpoParams)
						
						;gravação do log
						vpiParams = ""
						putitem/id vpiParams, "TP_PROCESSO",     vTpProcesso
						if ($item("TP_CXFILIAL_CXMATRIZ", piParams) = <TRUE>)
							putitem/id vpiParams, "TP_DOCUMENTO", 3 ;Dinheiro.
						else
							putitem/id vpiParams, "TP_DOCUMENTO", 2 ;Cheque.
						endif
						putitem/id vpiParams, "NR_CTAPES",       $item("NR_CTACREDITO", piParams)
						putitem/id vpiParams, "VL_LANCAMENTO",   $item("VL_FATURA",     vDsLinha)
						putitem/id vpiParams, "VL_SALDODOC",     vVlSaldoAtualDoc
						putitem/id vpiParams, "VL_SALDOCTA",     vVlSaldoAtual
						putitem/id vpiParams, "VL_SALDOANTDOC",  vVlSaldoAntDoc
						putitem/id vpiParams, "VL_SALDOANTCTA",  vVlSaldoAnt
						putitem/id vpiParams, "NR_CTAPESFCC",    vNrCtaPesFCC
						putitem/id vpiParams, "DT_MOVIMFCC",     vDtMovimFCC
						putitem/id vpiParams, "NR_SEQMOVFCC",    vNrSeqMovFCC
						activate "FCCSVCO018".gravarLogMovtoCtaPes(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
						if ($procerror)
							$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
							poCdErro  = $xCdErro$
							poCtxErro = $xCtxErro$
							return(-1)
						elseif ($status < 0)
							$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
							poCdErro  = $xCdErro$
							poCtxErro = $xCtxErro$
							return(-1)
						endif
					endif
					;
				endif
			endif
			
			delitem vDsFaturas, 1
		until(vDsFaturas = "")
		
		;Se o tipo deposito for agrupado lancar o total de vVlaCreditar(todos os cheques menos o tipo cobranca = 0 - descontado) na conta deposito.
		if ($item("TP_DEPOSITO", piParams) = "A") & (vVlaCreditar > 0)
			;Creditando valor em cheque na conta banco.
			;Projeto 078 - Tarefa 3602 - Aloisio Gargantini - 06/08/2010
			if ($inLogMovCtaPes$ = <TRUE>)
				;buscar saldo Cta.
				vpiParams = ""
				putitem/id vpiParams, "NR_CTAPES", $item("NR_CTACREDITO", piParams)
				putitem/id vpiParams, "DT_SALDO",  $item("DT_SISTEMA",    piGlobal)
				activate "FCCSVCO002".buscaSaldoConta(piGlobal, vpiParams, "", vpoParams, $xCdErro$, $xCtxerro$)
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
       				return(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
				vVlSaldoAnt = $item("VL_SALDO", vpoParams)
				
				;buscar saldo Cta. por tipo de documento
				vpiParams = ""
				putitem/id vpiParams, "NR_CTAPES",        $item("NR_CTACREDITO", piParams)
				if ($item("TP_CXFILIAL_CXMATRIZ", piParams) = <TRUE>)
					putitem/id vpiParams, "TP_DOCUMENTO", 3 ;Dinheiro.
				else
					putitem/id vpiParams, "TP_DOCUMENTO", 2 ;Cheque.
				endif
				putitem/id vpiParams, "NR_SEQHISTRELSUB", 1 
				putitem/id vpiParams, "DT_SALDO",         $item("DT_SISTEMA",    piGlobal)
				activate "FCCSVCO002".buscaSaldoCtaTp(piGlobal, vpiParams, "", vpoParams, $xCdErro$, $xCtxerro$)
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
				vVlSaldoAntDoc = $item("VL_SALDO", vpoParams)
			endif
			;
			vpiParams = ""
			putitem/id vpiParams, "CD_EMPRESA",       $item("CD_EMPPADRAO",  piParams)
			putitem/id vpiParams, "NR_CTAPES",        $item("NR_CTACREDITO", piParams)
			if ($item("TP_CXFILIAL_CXMATRIZ", piParams) = <TRUE>)
				putitem/id vpiParams, "TP_DOCUMENTO", 3 ;Dinheiro.
				putitem/id vpiParams, "DS_AUX",           "%%CD_GRUPOEMPRESA.GER_GRUPOEMPRSVC %%NM_GRUPOEMPRESA.GER_GRUPOEMPRSVC"
				;putitem/id vpiParams, "DS_AUX",       "Deposito em dinheiro"
			else
				putitem/id vpiParams, "TP_DOCUMENTO", 2 ;Cheque.
				putitem/id vpiParams, "DS_AUX",           "%%CD_GRUPOEMPRESA.GER_GRUPOEMPRSVC %%NM_GRUPOEMPRESA.GER_GRUPOEMPRSVC"
				;putitem/id vpiParams, "DS_AUX",       "Deposito em cheque"
			endif
			putitem/id vpiParams, "NR_SEQHISTRELSUB", 1
			putitem/id vpiParams, "DT_MOVIMENTO",     $item("DT_BAIXA", piParams)
			;MTF(26/05/2006) - Projeto 069, tarefa 007.
			if (vTpDocumento = 1) ;Fatura.
				putitem/id vpiParams, "CD_HISTORICO", 978
			else
				putitem/id vpiParams, "CD_HISTORICO", 917
			endif
			;
			putitem/id vpiParams, "VL_LANCTO",        vVlaCreditar
			putitem/id vpiParams, "IN_ESTORNO",       "N"
			putitem/id vpiParams, "DS_AUX",           "%%CD_GRUPOEMPRESA.GER_GRUPOEMPRSVC %%NM_GRUPOEMPRESA.GER_GRUPOEMPRSVC"
			;putitem/id vpiParams, "DS_AUX",           "Deposito em cheque"
			putitem/id vpiParams, "CD_EMPLIQ",        $item("CD_EMPPADRAO", piParams)
			putitem/id vpiParams, "DT_LIQ",           $item("DT_BAIXA",     piParams)
			putitem/id vpiParams, "NR_SEQLIQ",        vNrSeqLiq
			activate "FCCSVCO002".movimentaConta(piGlobal, vpiParams, vpiValores, vpoParams, $xCdErro$, $xCtxerro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=  / FCRSVCO007 operation -> baixaCheque() chamando FCCSVCO002->movimentaConta()")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=  / FCRSVCO007 operation -> baixaCheque() chamando FCCSVCO002->movimentaConta()")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
			
			;Projeto 078 - Tarefa 3602 - Aloisio Gargantini - 06/08/2010
			if ($inLogMovCtaPes$ = <TRUE>)
				vNrCtaPesFCC = $item("NR_CTAPES", vpoParams)
				vDtMovimFCC  = $item("DT_MOVIM",  vpoParams)
				vNrSeqMovFCC = $item("NR_SEQMOV", vpoParams)
				
				;buscar saldo Cta.
				vpiParams = ""
				putitem/id vpiParams, "NR_CTAPES", $item("NR_CTACREDITO", piParams)
				putitem/id vpiParams, "DT_SALDO",  $item("DT_SISTEMA",    piGlobal)
				activate "FCCSVCO002".buscaSaldoConta(piGlobal, vpiParams, "", vpoParams, $xCdErro$, $xCtxerro$)
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
       				return(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
				vVlSaldoAtual = $item("VL_SALDO", vpoParams)
				
				;buscar saldo Cta. por tipo de documento
				vpiParams = ""
				putitem/id vpiParams, "NR_CTAPES",        $item("NR_CTACREDITO", piParams)
				if ($item("TP_CXFILIAL_CXMATRIZ", piParams) = <TRUE>)
					putitem/id vpiParams, "TP_DOCUMENTO", 3 ;Dinheiro.
				else
					putitem/id vpiParams, "TP_DOCUMENTO", 2 ;Cheque.
				endif
				putitem/id vpiParams, "NR_SEQHISTRELSUB", 1 
				putitem/id vpiParams, "DT_SALDO",         $item("DT_SISTEMA",    piGlobal)
				activate "FCCSVCO002".buscaSaldoCtaTp(piGlobal, vpiParams, "", vpoParams, $xCdErro$, $xCtxerro$)
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
				vVlSaldoAtualDoc = $item("VL_SALDO", vpoParams)
				
				;gravação do log
				vpiParams = ""
				putitem/id vpiParams, "TP_PROCESSO",     vTpProcesso
				if ($item("TP_CXFILIAL_CXMATRIZ", piParams) = <TRUE>)
					putitem/id vpiParams, "TP_DOCUMENTO", 3 ;Dinheiro.
				else
					putitem/id vpiParams, "TP_DOCUMENTO", 2 ;Cheque.
				endif
				putitem/id vpiParams, "NR_CTAPES",       $item("NR_CTACREDITO", piParams)
				putitem/id vpiParams, "VL_LANCAMENTO",   vVlaCreditar
				putitem/id vpiParams, "VL_SALDODOC",     vVlSaldoAtualDoc
				putitem/id vpiParams, "VL_SALDOCTA",     vVlSaldoAtual
				putitem/id vpiParams, "VL_SALDOANTDOC",  vVlSaldoAntDoc
				putitem/id vpiParams, "VL_SALDOANTCTA",  vVlSaldoAnt
				putitem/id vpiParams, "NR_CTAPESFCC",    vNrCtaPesFCC
				putitem/id vpiParams, "DT_MOVIMFCC",     vDtMovimFCC
				putitem/id vpiParams, "NR_SEQMOVFCC",    vNrSeqMovFCC
				activate "FCCSVCO018".gravarLogMovtoCtaPes(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
				if ($procerror)
					$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				elseif ($status < 0)
					$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
			endif
			;
		endif
		
		; implementar chamada de debito.... na conta caixa quando o parametro do hugo nao estiver setado....
		; socorro urgente.. Fshimakawa.
		;Se a empresa utiliza caixa filial, entao debita valor em cheques na conta.
		if (vInUtilizaCxFilial = <TRUE>) & (vVlaCreditar > 0) 
			;Projeto 078 - Tarefa 3602 - Aloisio Gargantini - 06/08/2010
			if ($inLogMovCtaPes$ = <TRUE>)
				;buscar saldo Cta.
				vpiParams = ""
				putitem/id vpiParams, "NR_CTAPES", $item("NR_CTADEBITO", piParams)
				putitem/id vpiParams, "DT_SALDO",  $item("DT_SISTEMA",   piGlobal)
				activate "FCCSVCO002".buscaSaldoConta(piGlobal, vpiParams, "", vpoParams, $xCdErro$, $xCtxerro$)
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
				vVlSaldoAnt = $item("VL_SALDO", vpoParams)
				
				;buscar saldo Cta. por tipo de documento
				vpiParams = ""
				putitem/id vpiParams, "NR_CTAPES",        $item("NR_CTADEBITO", piParams)
				putitem/id vpiParams, "TP_DOCUMENTO",     3 ;dinheiro
				putitem/id vpiParams, "NR_SEQHISTRELSUB", 1 
				putitem/id vpiParams, "DT_SALDO",         $item("DT_SISTEMA",   piGlobal)
				activate "FCCSVCO002".buscaSaldoCtaTp(piGlobal, vpiParams, "", vpoParams, $xCdErro$, $xCtxerro$)
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
       				return(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
				vVlSaldoAntDoc = $item("VL_SALDO", vpoParams)
			endif
			;
			vpiParams = ""
			putitem/id vpiParams, "CD_EMPRESA",       $item("CD_EMPPADRAO", piParams)
			putitem/id vpiParams, "NR_CTAPES",        $item("NR_CTADEBITO", piParams)
			putitem/id vpiParams, "TP_DOCUMENTO",     2 ;Cheque.
			putitem/id vpiParams, "NR_SEQHISTRELSUB", 1
			putitem/id vpiParams, "DT_MOVIMENTO",     $item("DT_BAIXA",     piParams)
			putitem/id vpiParams, "CD_HISTORICO",     919
			putitem/id vpiParams, "VL_LANCTO",        vVlaCreditar
			putitem/id vpiParams, "IN_ESTORNO",       "N"
			;putitem/id vpiParams, "DS_AUX",           "Debito em cheque"

			;Diogenes - 05/01/2009  - Proj.146 - Tar. 1 
			if (vDsAux != "")
				putitem/id vpiParams, "DS_AUX",	  "%%CD_GRUPOEMPRESA.GER_GRUPOEMPRSVC %%NM_GRUPOEMPRESA.GER_GRUPOEMPRSVC %%vDsAux"
			else
				putitem/id vpiParams, "DS_AUX",	  "%%CD_GRUPOEMPRESA.GER_GRUPOEMPRSVC %%NM_GRUPOEMPRESA.GER_GRUPOEMPRSVC"
			endif
			;
			putitem/id vpiParams, "CD_EMPLIQ",        $item("CD_EMPPADRAO", piParams)
			putitem/id vpiParams, "DT_LIQ",           $item("DT_BAIXA",     piParams)
			putitem/id vpiParams, "NR_SEQLIQ",        vNrSeqLiq
			activate "FCCSVCO002".movimentaConta(piGlobal, vpiParams, vpiValores, vpoParams, $xCdErro$, $xCtxerro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=  / FCRSVCO007 operation -> baixaCheque() chamando FCCSVCO002->movimentaConta()")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=  / FCRSVCO007 operation -> baixaCheque() chamando FCCSVCO002->movimentaConta()")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
			
			;Projeto 078 - Tarefa 3602 - Aloisio Gargantini - 06/08/2010
			if ($inLogMovCtaPes$ = <TRUE>)
				vNrCtaPesFCC = $item("NR_CTAPES", vpoParams)
				vDtMovimFCC  = $item("DT_MOVIM",  vpoParams)
				vNrSeqMovFCC = $item("NR_SEQMOV", vpoParams)
				
				;buscar saldo Cta.
				vpiParams = ""
				putitem/id vpiParams, "NR_CTAPES", $item("NR_CTADEBITO", piParams)
				putitem/id vpiParams, "DT_SALDO",  $item("DT_SISTEMA",   piGlobal)
				activate "FCCSVCO002".buscaSaldoConta(piGlobal, vpiParams, "", vpoParams, $xCdErro$, $xCtxerro$)
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
       				return(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
				vVlSaldoAtual = $item("VL_SALDO", vpoParams)
				
				;buscar saldo Cta. por tipo de documento
				vpiParams = ""
				putitem/id vpiParams, "NR_CTAPES",        $item("NR_CTADEBITO", piParams)
				putitem/id vpiParams, "TP_DOCUMENTO",     2 ;Cheque.
				putitem/id vpiParams, "NR_SEQHISTRELSUB", 1 
				putitem/id vpiParams, "DT_SALDO",         $item("DT_SISTEMA",   piGlobal)
				activate "FCCSVCO002".buscaSaldoCtaTp(piGlobal, vpiParams, "", vpoParams, $xCdErro$, $xCtxerro$)
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
				vVlSaldoAtualDoc = $item("VL_SALDO", vpoParams)
				
				;gravação do log
				vpiParams = ""
				putitem/id vpiParams, "TP_PROCESSO",    vTpProcesso
				putitem/id vpiParams, "TP_DOCUMENTO",   2 ;Cheque.
				putitem/id vpiParams, "NR_CTAPES",      $item("NR_CTADEBITO", piParams)
				putitem/id vpiParams, "VL_LANCAMENTO",  vVlaCreditar
				putitem/id vpiParams, "VL_SALDODOC",    vVlSaldoAtualDoc
				putitem/id vpiParams, "VL_SALDOCTA",    vVlSaldoAtual
				putitem/id vpiParams, "VL_SALDOANTDOC", vVlSaldoAntDoc
				putitem/id vpiParams, "VL_SALDOANTCTA", vVlSaldoAnt
				putitem/id vpiParams, "NR_CTAPESFCC",   vNrCtaPesFCC
				putitem/id vpiParams, "DT_MOVIMFCC",    vDtMovimFCC
				putitem/id vpiParams, "NR_SEQMOVFCC",   vNrSeqMovFCC
				activate "FCCSVCO018".gravarLogMovtoCtaPes(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
				if ($procerror)
					$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				elseif ($status < 0)
					$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
			endif
			;
		endif
		;Projeto 078 - Tarefa 3539 - Aloisio Gargantini - 16/07/2010 - lógica abaixo incluída no final da operation
		;poParams = ""
		;putitem/id poParams, "CD_EMPLIQ", $item("CD_EMPPADRAO", piParams)
		;putitem/id poParams, "DT_LIQ",    $item("DT_BAIXA", piParams)
		;putitem/id poParams, "NR_SEQLIQ", vNrSeqLiq
		;
	endif

	;Projeto 078 - Tarefa 3539 - Aloisio Gargantini - 16/07/2010
	poParams = ""
	putitem/id poParams, "CD_EMPLIQ", $item("CD_EMPPADRAO", piParams)
	putitem/id poParams, "DT_LIQ",    $item("DT_BAIXA",     piParams)
	putitem/id poParams, "NR_SEQLIQ", vNrSeqLiq
	;
	return(0)
End ;operation baixaCheque.


;----------------------------------------------------------;
public operation estornarLancamentosEndosso                ;
;----------------------------------------------------------;
; MTF - 18/03/2005                                         ;
; Funcao : Estornar os valores de dinheiro, adiantamento e ;
;          sobras de adiantamento do endosso.              ;
; Chamada: FCPFP014 - cancelaEndosso()                     ;
;----------------------------------------------------------;
;
	params
		string  piGlobal  :IN
		string  piParams  :IN
		string  poParams  :OUT
		numeric poCdErro  :OUT
		string  poCtxErro :OUT
	endparams
	variables
		string  vpiParams, vpoParams, vpiValores
		numeric vTpEndosso
	endvariables
	
	if ($item("CD_EMPENDOSSO", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Empresa do endosso não informada!", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($item("NR_ANO", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Ano do endosso não informado!", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($item("NR_ENDOSSO", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Número do endosso não informado!", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($item("NR_SEQFOR", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fornecedor do endosso não informado!", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($item("TP_ENDOSSO", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Tipo do endosso não informado.", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	vTpEndosso = $item("TP_ENDOSSO", piParams)
	
	clear/e "GER_GRUPOEMPRSVC"
	cd_grupoempresa.ger_grupoemprsvc/init = $item("CD_GRUPOEMPRESA",piGlobal)
	retrieve/e "GER_GRUPOEMPRSVC"
	
	clear/e "F_FGR_LIQCPSVC"
	cd_empendosso.f_fgr_liqcpsvc/init = $item("CD_EMPENDOSSO", piParams)
	nr_ano.f_fgr_liqcpsvc/init        = $item("NR_ANO",        piParams)
	nr_endosso.f_fgr_liqcpsvc/init    = $item("NR_ENDOSSO",    piParams)
	if (vTpEndosso = 2) | (vTpEndosso = 4) ;Automatico. 2-Versao antiga / 4-Versao nova.
		nr_seqfor.f_fgr_liqcpsvc/init  = $item("NR_SEQFOR",     piParams)
	endif
	retrieve/e "F_FGR_LIQCPSVC"
	if ($status < 0)
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Não há movimentação para este endosso!", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	setocc "F_FGR_LIQCPSVC", 1
	repeat
		
		message/hint "Estornando lançamento do endosso: %%nr_endosso.f_fgr_liqcpsvc / %%nr_seqfor.f_fgr_liqcpsvc"
		vpiParams = ""
		if (tp_liqitemcp.f_fgr_liqcpsvc = 1) ;Estornar pagto em dinheiro.
			putitem/id vpiParams, "CD_EMPRESA",       cd_empendosso.f_fgr_liqcpsvc
			putitem/id vpiParams, "NR_CTAPES",        nr_ctapes.f_fgr_liqcpsvc
			putitem/id vpiParams, "DT_MOVIMENTO",     $item("DT_SISTEMA", piGlobal)
			putitem/id vpiParams, "TP_DOCUMENTO",     3 ;Dinheiro.
			putitem/id vpiParams, "NR_SEQHISTRELSUB", 1
			putitem/id vpiParams, "CD_HISTORICO",     905 ;Cancela pagto endosso com dinheiro.
			putitem/id vpiParams, "VL_LANCTO",        vl_pago.f_fgr_liqcpsvc
			putitem/id vpiParams, "IN_ESTORNO",       "N"
			putitem/id vpiParams, "DS_AUX",           "%%CD_GRUPOEMPRESA.GER_GRUPOEMPRSVC %%NM_GRUPOEMPRESA.GER_GRUPOEMPRSVC"
		endif
		
		if (tp_liqitemcp.f_fgr_liqcpsvc = 4) ;Estornar o adiantamento utilizado p/ pagamento do endosso.
			putitem/id vpiParams, "CD_EMPRESA",       cd_empendosso.f_fgr_liqcpsvc
			putitem/id vpiParams, "NR_CTAPES",        nr_ctapes.f_fgr_liqcpsvc
			putitem/id vpiParams, "DT_MOVIMENTO",     $item("DT_SISTEMA", piGlobal)
			putitem/id vpiParams, "TP_DOCUMENTO",     10 ;Adiantamento.
			putitem/id vpiParams, "NR_SEQHISTRELSUB", 1
			putitem/id vpiParams, "CD_HISTORICO",     906 ;Cancela debito adiantamento utilizado p/ pagto do endosso.
			putitem/id vpiParams, "VL_LANCTO",        vl_pago.f_fgr_liqcpsvc
			putitem/id vpiParams, "IN_ESTORNO",       "N"
			putitem/id vpiParams, "DS_AUX",           "%%CD_GRUPOEMPRESA.GER_GRUPOEMPRSVC %%NM_GRUPOEMPRESA.GER_GRUPOEMPRSVC"
		endif
		
		if (tp_liqitemcp.f_fgr_liqcpsvc = 5) ;Estornar a sobra de cheques que geraram adiantamento.
			putitem/id vpiParams, "CD_EMPRESA",       cd_empendosso.f_fgr_liqcpsvc
			putitem/id vpiParams, "NR_CTAPES",        nr_ctapes.f_fgr_liqcpsvc
			putitem/id vpiParams, "DT_MOVIMENTO",     $item("DT_SISTEMA", piGlobal)
			putitem/id vpiParams, "TP_DOCUMENTO",     10 ;Dinheiro.
			putitem/id vpiParams, "NR_SEQHISTRELSUB", 1
			putitem/id vpiParams, "CD_HISTORICO",     907 ;Cancela credito de sobra de cheques ao fornecedor.
			putitem/id vpiParams, "VL_LANCTO",        vl_pago.f_fgr_liqcpsvc
			putitem/id vpiParams, "IN_ESTORNO",       "N"
			putitem/id vpiParams, "DS_AUX",           "%%CD_GRUPOEMPRESA.GER_GRUPOEMPRSVC %%NM_GRUPOEMPRESA.GER_GRUPOEMPRSVC"
		endif
		
		if (vpiParams != "")
			activate "FCCSVCO002".movimentaConta(piGlobal, vpiParams, vpiValores, vpoParams, $xCdErro$, $xCtxerro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=  FCRSVCO007 operation -> estornarLancamentosEndosso() chamando  FCCSVCO002->movimentaConta()")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=  FCRSVCO007 operation -> estornarLancamentosEndosso()  chamando  FCCSVCO002->movimentaConta(")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		endif
		
		if (tp_liqitemcp.f_fgr_liqcpsvc = 2) ;Estornar a autorizacao do cheque proprio.
			vpiParams = ""
			putitem/id vpiParams, "DT_AUTORIZACAO", dt_autorizacao.f_fgr_liqcpsvc
			putitem/id vpiParams, "NR_SEQAUTO",     nr_seqauto.f_fgr_liqcpsvc
			putitem/id vpiParams, "NR_SEQCHEQUE",   nr_seqcheque.f_fgr_liqcpsvc
			activate "FCCSVCO008".cancelarAutorizacao(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
			if ($procerror)
				$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=  / FCRSVCO007 -> estornarLancamentosEndosso()  chamanda FCCSVCO008 -> cancelarAutorizacao()")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		endif
		
		setocc "F_FGR_LIQCPSVC", $curocc(F_FGR_LIQCPSVC) + 1
	until($status < 0)
	$status = 0
	message/hint ""
	
	;Cancelar a liquidacao do endosso.
	clear/e "F_FGR_LIQSVC"
	cd_empliq.f_fgr_liqsvc/init = cd_empliq.f_fgr_liqcpsvc
	dt_liq.f_fgr_liqsvc/init    = dt_liq.f_fgr_liqcpsvc
	nr_seqliq.f_fgr_liqsvc/init = nr_seqliq.f_fgr_liqcpsvc
	retrieve/e "F_FGR_LIQSVC"
	if ($status < 0)
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Cabeça da liquidação do endosso não encontrada!", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	dt_cancelamento.f_fgr_liqsvc = $item("DT_SISTEMA", piGlobal)
	cd_opercancel.f_fgr_liqsvc   = $item("CD_USUARIO", piGlobal)
	
	$collhandle("F_FGR_LIQSVC")->salvar()
	if ($procerror)
		$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	return(0)
End ;operation estornarLancamentosEndosso.


;------------------------------------------------;
public operation calculaJurosDescontos           ;
;------------------------------------------------;
; MTF - 01/02/2005                               ;
; Funcao : Calcula juros / multas sobre faturas. ;
; Chamada: operation - baixaFatura               ;
;------------------------------------------------;
;
	params
		string  piGlobal  :IN
		string  piParams  :IN
		string  poParams  :OUT
		numeric poCdErro  :OUT
		string  poCtxErro :OUT
	endparams
	variables
		string  vpiParams, vpoParams
	endvariables
	
	putitem/id vpiParams, "IN_SABADOUTIL",         $insabadoutil$
	putitem/id vpiParams, "NR_DIASCARENCIAATRASO", $nrdiascarenciaatraso$
	putitem/id vpiParams, "NR_DIASCARENCIAMULTA",  $nrdiascarenciamulta$
	putitem/id vpiParams, "NR_DIASDESCPONT",       $nrdiasdescpont$
	putitem/id vpiParams, "TP_APLICACAOJUROS",     $tpaplicacaojuros$
	putitem/id vpiParams, "DT_VENCIMENTO",         dt_vencimento.fcr_faturaisvc
	putitem/id vpiParams, "DT_PAGAMENTO",          $dtpagamento$
	putitem/id vpiParams, "VL_FATURA",             $item("VL_APAGAR", piParams)
	putitem/id vpiParams, "VL_ACRESCIMO",          vl_acrescimo.fcr_faturaisvc
	putitem/id vpiParams, "VL_ABATIMENTO",         vl_abatimento.fcr_faturaisvc
	putitem/id vpiParams, "VL_OUTACRES",           vl_outacres.fcr_faturaisvc
	putitem/id vpiParams, "VL_OUTDESC",            vl_outdesc.fcr_faturaisvc
	putitem/id vpiParams, "VL_DESPFIN",            vl_despfin.fcr_faturaisvc
	putitem/id vpiParams, "PR_JUROMES",            pr_juromes.fcr_faturaisvc
	putitem/id vpiParams, "PR_MULTA",              pr_multa.fcr_faturaisvc
	putitem/id vpiParams, "PR_DESCPGPRAZO",        pr_descpgprazo.fcr_faturaisvc
	putitem/id vpiParams, "PR_DESCANTECIP1",       pr_descantecip1.fcr_faturaisvc
	putitem/id vpiParams, "PR_DESCANTECIP2",       pr_descantecip2.fcr_faturaisvc
	putitem/id vpiParams, "DT_DESCANTECIP1",       dt_descantecip1.fcr_faturaisvc
	putitem/id vpiParams, "DT_DESCANTECIP2",       dt_descantecip2.fcr_faturaisvc
	
	activate "FCRSVCO002".CalcVlFat(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif
	
	poParams = ""
	putitem/id poParams, "VL_ACRESCIMO",  $item("VL_ACRESCIMO", vpoParams)
	putitem/id poParams, "VL_ABATIMENTO", $item("VL_DEDUCAO",   vpoParams)
	putitem/id poParams, "VL_JUROS",      $item("VL_JUROS",     vpoParams)
	
	return(0)
End ;operation calculaJurosMultas.


;------------------------------------------------------;
public operation baixarFatCartao
;------------------------------------------------------;
;	BAM - 04/04/05                                     ;
; 	Funcao : Baixa de fatura de cartao de credito.     ;
; 	Chamada: FCRFP026 - operation -> BaixarFatura().   ;
;------------------------------------------------------;
	params
		string  piGlobal  :IN
		string  piParams  :IN
		string  poParams  :OUT
		numeric poCdErro  :OUT
		string  poCtxErro :OUT
	endparams
	variables
		string  vpiParams, vpoParams
		numeric vVlOriginal, vVlFatura, vVlPago
		date    vDtLiq
	endvariables
	
	vVlOriginal = $item("VL_ORIGINAL", piParams)
	vVlFatura   = $item("VL_FATURA",   piparams)
	vVlPago     = $item("VL_PAGO",     piParams)
	if ($item("CD_EMPRESA", piParams) = "")
		$instancehandle->setStatus(<STS_AVISO>, "GEN001", "DESCRICAO=Código de empresa não informada", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($item("CD_CLIENTE", piParams) = "")
		$instancehandle->setStatus(<STS_AVISO>, "GEN001", "DESCRICAO=Código de cliente não informado", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($item("NR_FAT", piParams) = "")
		$instancehandle->setStatus(<STS_AVISO>, "GEN001", "DESCRICAO=Número da fatura nco informado", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($item("NR_PARCELA", piParams) = "")
		$instancehandle->setStatus(<STS_AVISO>, "GEN001", "DESCRICAO=Número da parcela da fatura não informado", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($item("VL_PAGO", piParams) = "")
		$instancehandle->setStatus(<STS_AVISO>, "GEN001", "DESCRICAO=Valor da fatura não informado", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	clear/e "FCR_FATURAISVC"
	creocc  "FCR_FATURAISVC", -1
	cd_empresa.fcr_faturaisvc = $item("CD_EMPRESA", piParams)
	cd_cliente.fcr_faturaisvc = $item("CD_CLIENTE", piParams)
	nr_fat.fcr_faturaisvc     = $item("NR_FAT",     piParams)
	nr_parcela.fcr_faturaisvc = $item("NR_PARCELA", piParams)
	retrieve/o "FCR_FATURAISVC"
	if ($status = -7) | ($status = 4)
		retrieve/x "FCR_FATURAISVC"
		;==BY BIANCHINI[PRJ/TAREFA 180/0283] 17/10/2011==;
		vl_liquido.fcr_faturaisvc   = $item("VL_LIQUIDO", piParams)
		;==
		vl_desconto.fcr_faturaisvc  = $item("VL_DESCONTO", piParams)
		vl_juros.fcr_faturaisvc     = $item("VL_JUROS",    piParams)
		tp_baixa.fcr_faturaisvc     = 1
		cd_operbaixa.fcr_faturaisvc = $item("CD_USUARIO",  piGlobal)
		vl_pago.fcr_faturaisvc      = $item("VL_PAGO",     piParams)
		cd_empliq.fcr_faturaisvc    = $item("CD_EMPLIQ",   piParams)
		;MTF(04/10/2007) - Projeto 079, tarefa 163.
		if (dt_liq.fcr_faturaisvc != "")
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fatura já liquidada por outro processo ou manutenção.%%^Empresa: %%cd_empresa.fcr_faturaisvc   Cliente: %%cd_cliente.fcr_faturaisvc  Fatura: %%nr_fat.fcr_faturaisvc  Parcela: %%nr_parcela.fcr_faturaisvc", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		;
		;==BY BIANCHINI[PRJ/TAREFA 180/0134] 01/04/2011==;
		if ($item("DT_BAIXA", piParams) != "")
			DT_BAIXA.FCR_FATURAISVC = $datim ;bianchini 21/07/2011 $item("DT_SISTEMA", $$gParamGlb)
		endif
		if ($item("TP_BAIXA", piParams) != "")
			TP_BAIXA.FCR_FATURAISVC = $item("TP_BAIXA", piParams)
		endif
		;==
		dt_liq.fcr_faturaisvc       = $item("DT_LIQ",     piParams)
		nr_seqliq.fcr_faturaisvc    = $item("NR_SEQLIQ",  piParams)
		cd_operador.fcr_faturaisvc  = $item("CD_USUARIO", piGlobal)
		dt_cadastro.fcr_faturaisvc  = $datim ;item("DT_SISTEMA", piGlobal)
		TP_COBRANCA.FCR_FATURAISVC  = 14 
		;MTF(06/09/2007) - Projeto 078, tarefa 793.
		if ($status = -11)
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fatura sendo utilizada em outro processo ou manutenção.%%^Empresa: %%cd_empresa.fcr_faturaisvc   Cliente: %%cd_cliente.fcr_faturaisvc  Fatura: %%nr_fat.fcr_faturaisvc  Parcela: %%nr_parcela.fcr_faturaisvc", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		;
		$collhandle ("FCR_FATURAISVC")->salvar()
		if ($status < 0)
			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	else
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fatura não encontrada %%CD_EMPRESA.FCR_FATURAISVC %%CD_CLIENTE.FCR_FATURAISVC %%NR_FAT.FCR_FATURAISVC %%NR_PARCELA.FCR_FATURAISVC", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	return(0)
End ;operation baixaFatCartao.


;-----------------------------------------------------------------;
public operation gravaLiqMov                                      ;
;-----------------------------------------------------------------;
; MTF - 10/05/2005                                                ;
; Funcao : Grava o valor de adiantamento gerado pelo recebimento. ;
; Chamada: FCRFP010 - gravaRecebimento()                          ;
;-----------------------------------------------------------------;
;
	params
		string  piGlobal  :IN
		string  piParams  :IN
		string  poParams  :OUT
		numeric poCdErro  :OUT
		string  poCtxErro :OUT
	endparams
	variables
		date    vDtMovim, vDtLiq; , vDtLiqFat
		string  vDsLstMovCc, vDsRegistro, vCdEmpLiq, vNrSeqLiq, vNrSeqItem, viParams, voParams
		numeric vNrSeqMov, vNrCtaPesMov, vVlPago
	endvariables
	
	if ($item("CD_EMPRESA", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Código de empresa não informada", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($item("CD_CLIENTE", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Código de cliente não informado", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($item("NR_FAT", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Número da fatura nco informado", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($item("NR_PARCELA", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Número da parcela da fatura não informado", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($item("TP_DOCUMENTO", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Número da parcela da fatura não informado", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($item("CD_EMPLIQ", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Falta informar a empresa da liquidação", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if ($item("DT_LIQ", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Falta informar a data da liquidação", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if ($item("NR_SEQLIQ", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Falta informar a sequencia da liquidação", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if ($item("TP_LIQUIDACAO", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Falta informar o tipo da sequencia da liquidação", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if ($item("VL_PAGO", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Falta informar o valor a liquidação", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	vCdEmpLiq   = $item("CD_EMPLIQ",   piParams)
	vDtLiq      = $item("DT_LIQ",      piParams)
	vNrSeqLiq   = $item("NR_SEQLIQ",   piParams)
	vDsLstMovCC = $item("DS_LSTMOVCC", piParams)
	
	if (vDsLstMovCC != "")
		repeat
			getitem vDsRegistro, vDsLstMovCC, 1			
			vNrCtaPesMov = $item("NR_CTAPES", vDsRegistro)
			vDtMovim     = $item("DT_MOVIM",  vDsRegistro)
			vNrSeqMov    = $item("NR_SEQMOV", vDsRegistro)
			
			if (vNrCtaPesMov = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Conta da movimentação não informada!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
			if (vDtMovim = "")
				$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Data da movimentação não informada!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
			if (vNrSeqMov = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Sequência da movimentação não informada!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
			
			creocc "FCC_MOVSVC", -1
			nr_ctapes.fcc_movsvc/init = vNrCtaPesMov
			dt_movim.fcc_movsvc/init  = vDtMovim
			nr_seqmov.fcc_movsvc/init = vNrSeqMov
			retrieve/o "FCC_MOVSVC"
			if ($status = -7)
				retrieve/x "FCC_MOVSVC"
			elseif ($status = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Movimentação %%NR_CTAPES.FCC_MOVSVC / %%DT_MOVIM.FCC_MOVSVC / %%NR_SEQMOV.FCC_MOVSVC não cadastrada!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1) 
			endif
			
			delitem vDsLstMovCC, 1
		until (vDsLstMovCC = "")
		
		setocc "FCC_MOVSVC", 1
	endif
	
	vNrSeqItem  = $item("NR_SEQUENCIA", piParams)
	vVlPago     = $item("VL_PAGO", piParams)
	clear/e "FGR_LIQSVC"
	cd_empliq.fgr_liqsvc/init = $item("CD_EMPLIQ", piParams)
	dt_liq.fgr_liqsvc/init    = $item("DT_LIQ",    piParams)
	nr_seqliq.fgr_liqsvc/init = $item("NR_SEQLIQ", piParams)
	retrieve/e "FGR_LIQSVC"
	if ($status < 0)
		creocc "FGR_LIQSVC", -1
		cd_empliq.fgr_liqsvc       = $item("CD_EMPLIQ",       piParams)
		dt_liq.fgr_liqsvc          = $item("DT_LIQ",          piParams)
		nr_seqliq.fgr_liqsvc       = $item("NR_SEQLIQ",       piParams)
		tp_liquidacao.fgr_liqsvc   = $item("TP_LIQUIDACAO",   piParams)
		cd_grupoempresa.fgr_liqsvc = $item("CD_GRUPOEMPRESA", piGlobal)
		cd_pessoa.fgr_liqsvc       = $item("CD_PESSOA",       piParams)
	endif
	
	creocc "FGR_LIQITEMCRSVC", -1
	cd_empliq.fgr_liqitemcrsvc     = vCdEmpLiq
	dt_liq.fgr_liqitemcrsvc        = vDtLiq
	nr_seqliq.fgr_liqitemcrsvc     = vNrSeqLiq
	nr_seqitem.fgr_liqitemcrsvc    = vNrSeqItem
	tp_tiporeg.fgr_liqitemcrsvc    = 1  ;Titulos a receber.
	cd_empfat.fgr_liqitemcrsvc     = $item("CD_EMPRESA",   piParams)
	cd_cliente.fgr_liqitemcrsvc    = $item("CD_CLIENTE",   piParams)
	nr_fat.fgr_liqitemcrsvc        = $item("NR_FAT",       piParams)
	nr_parcela.fgr_liqitemcrsvc    = $item("NR_PARCELA",   piParams)
	tp_documento.fgr_liqitemcrsvc  = $item("TP_DOCUMENTO", piParams)
	nr_ctapesfcc.fgr_liqitemcrsvc  = nr_ctapes.fcc_movsvc
	dt_movimfcc.fgr_liqitemcrsvc   = dt_movim.fcc_movsvc
	nr_seqmovfcc.fgr_liqitemcrsvc  = nr_seqmov.fcc_movsvc
	cd_operador.fgr_liqitemcrsvc   = $item("CD_USUARIO",   piGlobal)
	dt_cadastro.fgr_liqitemcrsvc   = $datim
	vl_lancamento.fgr_liqitemcrsvc = vVlPago
	cd_operador.fgr_liqsvc         = $item("CD_USUARIO",   piGlobal)
	dt_cadastro.fgr_liqsvc         = $datim
	$collhandle("FGR_LIQSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	;Projeto 078 - Tarefa 3422 - Aloisio Gargantini - 25/05/2010
	viParams = ""
	putitem/id viParams, "CD_EMPLIQ",  CD_EMPLIQ.FGR_LIQSVC
	putitem/id viParams, "DT_LIQ",     DT_LIQ.FGR_LIQSVC
	putitem/id viParams, "NR_SEQLIQ",  NR_SEQLIQ.FGR_LIQSVC
	putitem/id viParams, "CD_EMPRESA", $item("CD_EMPRESA", piParams)
	putitem/id viParams, "CD_CLIENTE", $item("CD_CLIENTE", piParams)
	putitem/id viParams, "NR_FAT",     $item("NR_FAT",     piParams)
	putitem/id viParams, "NR_PARCELA", $item("NR_PARCELA", piParams)
	activate "FCRSVCO112".gravarLiqFaturaVenda($xLpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
	if ($procerror)
		$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	;		
	return(0)
End ;operation gravaLiqMov.

;----------------------------------------------------------------------;
public operation baixaReservaChq                                       ;
;----------------------------------------------------------------------;
; MTF - 24/06/2005                                                     ;
; Funcao : Faz a baixa dos cheques selecionados na reserva de cheques. ;
; Chamada: FCRFP011 - efetuarBaixa()                                   ;
;----------------------------------------------------------------------;
;
	params
		string  piGlobal  :IN
		string  piParams  :IN
		string  poParams  :OUT
		numeric poCdErro  :OUT
		string  poCtxErro :OUT
	endparams
	variables
		string vDsLinha, vDsFaturas, vCdEmpReserva, vNrReserva
	endvariables
	
	vDsFaturas    = $item("DS_FATURAS",    piParams)
	vCdEmpReserva = $item("CD_EMPRESERVA", piParams)
	vNrReserva    = $item("NR_RESERVA",    piParams)
	
	if (vCdEmpReserva = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Falta informar a empresa da reserva de cheque!", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if (vNrReserva = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Falta informar o número da reserva de cheque!", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if (vDsFaturas = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Falta informar os cheques a serem baixados!", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	clear/e "FCR_RESERVACSVC"
	cd_empreserva.fcr_reservacsvc/init = vCdEmpReserva
	nr_reserva.fcr_reservacsvc/init    = vNrReserva
	retrieve/e "FCR_RESERVACSVC"
	if ($status < 0)
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Reserva de cheque para baixa não encontrada !", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	repeat
		vDsLinha = ""
		getitem vDsLinha, vDsFaturas, 1
		
		clear/e "FCR_RESERVAISVC"
		cd_empreserva.fcr_reservaisvc/init = vCdEmpReserva
		nr_reserva.fcr_reservaisvc/init    = vNrReserva
		cd_empfat.fcr_reservaisvc/init     = $item("CD_EMPRESA", vDsLinha)
		cd_cliente.fcr_reservaisvc/init    = $item("CD_CLIENTE", vDsLinha)
		nr_fat.fcr_reservaisvc/init        = $item("NR_FAT",     vDsLinha)
		nr_parcela.fcr_reservaisvc/init    = $item("NR_PARCELA", vDsLinha)
		retrieve/e "FCR_RESERVAISVC"
		if ($status < 0)
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Cheque selecionado para baixa não localizado na reserva informada!", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		
		dt_baixa.fcr_reservaisvc     = $item("DT_SISTEMA", piGlobal)
		cd_operbaixa.fcr_reservaisvc = $item("CD_USUARIO", piGlobal)
		tp_baixa.fcr_reservaisvc     = 1 ;Baixa normal.
		cd_operador.fcr_reservaisvc  = $item("CD_USUARIO", piGlobal)
		dt_cadastro.fcr_reservaisvc  = $datim
		
		$collhandle("FCR_RESERVAISVC")->salvar()
		if ($procerror)
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Problema na gravação dos itens da reserva!", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Problema na gravação dos itens da reserva!", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		
		;MTF(16/03/2009) - Projeto 078, tarefa 2148.
		clear/e "FCR_FATURAISVC"
		cd_empresa.fcr_faturaisvc/init = cd_empfat.fcr_reservaisvc
		cd_cliente.fcr_faturaisvc/init = cd_cliente.fcr_reservaisvc
		nr_fat.fcr_faturaisvc/init     = nr_fat.fcr_reservaisvc
		nr_parcela.fcr_faturaisvc/init = nr_parcela.fcr_reservaisvc
		retrieve/e "FCR_FATURAISVC"
		if ($status < 0)
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Cheque selecionado para baixa não localizado no cadastro.%%^Emp.: %%cd_empfat.fcr_reservaisvc  Cliente: %%cd_cliente.fcr_reservaisvc  Cheque: %%nr_fat.fcr_reservaisvc  Parcela: %%nr_parcela.fcr_reservaisvc", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		
		tp_cobranca.fcr_faturaisvc = 0
		cd_operador.fcr_faturaisvc = $item("CD_USUARIO", piGlobal)
		dt_cadastro.fcr_faturaisvc = $datim
		
		$collhandle("FCR_FATURAISVC")->salvar()
		if ($procerror)
			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=  FCRSVCO007.baixaReservaChq")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=  FCRSVCO007.baixaReservaChq")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		;
		
		delitem vDsFaturas, 1
	until(vDsFaturas = "")
	
	dt_baixa.fcr_reservacsvc     = $item("DT_SISTEMA", piGlobal)
	cd_operbaixa.fcr_reservacsvc = $item("CD_USUARIO", piGlobal)
	tp_baixa.fcr_reservacsvc     = 1 ;Baixa normal.
	
	$collhandle("FCR_RESERVACSVC")->salvar()
	if ($procerror)
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Problema na gravação da cabeça da reserva de cheque!", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Problema na gravação da cabeça da reserva de cheque!", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	return(0)
End ;operation baixaReservaChq.


;---------------------------------------------------;
public operation cancelLiqFaturas                   ;
;---------------------------------------------------;
; MTF - 25/07/2005                                  ;
; Funcao : Faz o cancelamento das faturas que foram ;
;          selecionadas p/ troca de documento.      ;
; Chamada: FCRFL016 - operation -> trocaDocumento() ;
;---------------------------------------------------;
;
	params
		string  piGlobal  :IN    
		string  piParams  :IN
		string  poParams  :OUT
		string  poCdErro  :OUT
		string  poCtxErro :OUT
	endparams
	variables
		string  vDsLinha, vDsFaturas, vpiParams, vpoParams, vDsBanda
	endvariables
	
	if ($item("CD_EMPLIQ", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Falta informar a empresa da liquidação", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($item("DT_LIQ", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Falta informar a data da liquidação", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($item("NR_SEQLIQ", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Falta informar a sequencia da liquidação", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($item("DS_FATURAS", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Falta informar as faturas a serem canceladas.", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	else
		vDsFaturas = ""
		vDsFaturas = $item("DS_FATURAS", piParams)
	endif
	
	clear/e "FGR_LIQSVC"
	cd_empliq.fgr_liqsvc/init = $item("CD_EMPLIQ", piParams)
	dt_liq.fgr_liqsvc/init    = $item("DT_LIQ",    piParams)
	nr_seqliq.fgr_liqsvc/init = $item("NR_SEQLIQ", piParams)
	retrieve/e "FGR_LIQSVC"
	if ($status < 0)
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Número de liquidação não encontrado para efetuar estornos.", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	;Cancelar as faturas que foram selecionadas no FCRFL014 p/ serem trocadas por outros documentos.
	repeat
		getitem vDsLinha, vDsFaturas, 1
		clear/e "FCR_FATURAISVC"
		cd_empresa.fcr_faturaisvc/init = $item("CD_EMPFAT",  vDsLinha)
		cd_cliente.fcr_faturaisvc/init = $item("CD_CLIENTE", vDsLinha)
		nr_fat.fcr_faturaisvc/init     = $item("NR_FAT",     vDsLinha)
		nr_parcela.fcr_faturaisvc/init = $item("NR_PARCELA", vDsLinha)
		retrieve/e "FCR_FATURAISVC"
		if ($status < 0)
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fatura não encontrada para cancelamento.", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		
		tp_situacao.fcr_faturaisvc     = 3
		cd_opercancel.fcr_faturaisvc   = $item("CD_USUARIO", piGlobal)
		cd_operador.fcr_faturaisvc     = $item("CD_USUARIO", piGlobal)
		dt_cancelamento.fcr_faturaisvc = $item("DT_SISTEMA", piGlobal)
		dt_cadastro.fcr_faturaisvc     = $datim; $item("DT_SISTEMA", piGlobal)
		;MTF(06/09/2007) - Projeto 078, tarefa 793.
		if ($status = -11)
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fatura sendo utilizada em outro processo ou manutenção.%%^Empresa: %%cd_empresa.fcr_faturaisvc   Cliente: %%cd_cliente.fcr_faturaisvc  Fatura: %%nr_fat.fcr_faturaisvc  Parcela: %%nr_parcela.fcr_faturaisvc", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		;
		if ($empty("FCR_CHEQUESVC") = 0)
			; MFGALEGO - 02/09/2008 SM 10230
			;ds_banda.fcr_chequesvc  = "C%%ds_banda.fcr_chequesvc"
			vDsBanda = "C%%ds_banda.fcr_chequesvc"
			ds_banda.fcr_chequesvc  = vDsBanda[1:30]
			;
		endif
		;MTF(06/09/2007) - Projeto 078, tarefa 793.
		if ($status = -11)
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fatura sendo utilizada em outro processo ou manutenção.%%^Empresa: %%cd_empresa.fcr_faturaisvc   Cliente: %%cd_cliente.fcr_faturaisvc  Fatura: %%nr_fat.fcr_faturaisvc  Parcela: %%nr_parcela.fcr_faturaisvc", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		;
		$collhandle("FCR_FATURAISVC")->salvar()
		if ($procerror)
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Erro na gravação do cancelamento da fatura.", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Erro na gravação do cancelamento da fatura.", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		
		vl_total.fgr_liqsvc = vl_total.fgr_liqsvc - vl_fatura.fcr_faturaisvc
		
		;Excluir o fgr_liqitemcr.
		clear/e "F_FGR_LIQITEMSVC"
		cd_empliq.f_fgr_liqitemsvc/init  = cd_empliq.fgr_liqsvc
		dt_liq.f_fgr_liqitemsvc/init     = dt_liq.fgr_liqsvc
		nr_seqliq.f_fgr_liqitemsvc/init  = nr_seqliq.fgr_liqsvc
		cd_empfat.f_fgr_liqitemsvc/init  = cd_empresa.fcr_faturaisvc
		cd_cliente.f_fgr_liqitemsvc/init = cd_cliente.fcr_faturaisvc
		nr_fat.f_fgr_liqitemsvc/init     = nr_fat.fcr_faturaisvc
		nr_parcela.f_fgr_liqitemsvc/init = nr_parcela.fcr_faturaisvc
		retrieve/e "F_FGR_LIQITEMSVC"
		if ($status < 0)
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fatura não encontrada no FGR_LIQITEMCR para troca de documento.", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		
		$collhandle("F_FGR_LIQITEMSVC")->excluir()
		if ($procerror)
			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL= Erro na exclusão da fatura no FGR_LIQITEMCR na troca de documento.", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL= Erro na exclusão da fatura no FGR_LIQITEMCR na troca de documento.", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		
		;Cancelar comissao das faturas.
		;MTF(02/10/2006) - Projeto 079, tarefa 009.
		;if ($item("IN_TRANSFERE_COMIS_CHQ", piParams) = <TRUE>)
			vpiParams = ""
			putitem/id vpiParams, "CD_EMPRESA", cd_empresa.fcr_faturaisvc
			putitem/id vpiParams, "CD_CLIENTE", cd_cliente.fcr_faturaisvc
			putitem/id vpiParams, "NR_FAT",     nr_fat.fcr_faturaisvc
			putitem/id vpiParams, "NR_PARCELA", nr_parcela.fcr_faturaisvc
			activate "FCRSVCO013".atualizaTransfComissao(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
			if ($procerror)
				$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO= Problema no estorno da comissão.", "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO= Problema no estorno da comissco.", "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		;endif
		;
		
		delitem vDsFaturas, 1
	until(vDsFaturas = "")
	
	$collhandle("FGR_LIQSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	return(0)
End ;cancelLiqFaturas.


;-------------------------------------------------;
public operation gravaLiqMovNegociacao            ;
;-------------------------------------------------;
; MTF - 07/10/2005                                ;
; Funcao : Grava o valor de credito da negociacao ;
;          e as duplicatas de juros e iof.        ;
; Chamada: FCRFP027 - processaDados()             ;
;-------------------------------------------------;

	params
		string  piGlobal  :IN
		string  piParams  :IN
		string  poParams  :OUT
		numeric poCdErro  :OUT
		string  poCtxErro :OUT
	endparams
	variables
		date    vDtMovim, vDtLiq
		string  vDsLstMovCc, vDsRegistro, vCdEmpLiq, vNrSeqLiq, vNrSeqItem, vDsDuplicata, vDsLstDuplicata
		numeric vNrSeqMov, vNrCtaPesMov, vVlPago, vNrSeqCheque, vNrSeqDuplicata, vTpProcesso
	endvariables
	
	if ($item("CD_PESSOA", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Código de pessoa da liquidação não informado.", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($item("CD_EMPLIQ", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Falta informar a empresa da liquidação", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if ($item("DT_LIQ", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Falta informar a data da liquidação", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if ($item("NR_SEQLIQ", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Falta informar a sequencia da liquidação", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if ($item("TP_LIQUIDACAO", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Falta informar o tipo da sequencia da liquidação", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if ($item("TP_TIPOREG", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Falta informar o tipo de registro a gravar na liquidação.", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if ($item("TP_PROCESSO", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Falta informar o tipo de processo.", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	vTpProcesso = $item("TP_PROCESSO", piParams)
	if ($item("VL_PAGO", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Falta informar o valor a liquidação", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	vCdEmpLiq       = $item("CD_EMPLIQ",       piParams)
	vDtLiq          = $item("DT_LIQ",          piParams)
	vNrSeqLiq       = $item("NR_SEQLIQ",       piParams)
	vDsLstMovCC     = $item("DS_LSTMOVCC",     piParams)
	vDsLstDuplicata = $item("DS_LSTDUPLICATA", piParams)
	if (vDsLstMovCC != "")
		repeat
			getitem vDsRegistro, vDsLstMovCC, 1			
			vNrCtaPesMov = $item("NR_CTAPES", vDsRegistro)
			vDtMovim     = $item("DT_MOVIM",  vDsRegistro)
			vNrSeqMov    = $item("NR_SEQMOV", vDsRegistro)
			
			if (vNrCtaPesMov = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Conta da movimentação não informada!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
			if (vDtMovim = "")
				$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Data da movimentação não informada!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
			if (vNrSeqMov = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Sequência da movimentação não informada!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
			
			creocc "FCC_MOVSVC", -1
			nr_ctapes.fcc_movsvc/init = vNrCtaPesMov
			dt_movim.fcc_movsvc/init  = vDtMovim
			nr_seqmov.fcc_movsvc/init = vNrSeqMov
			retrieve/o "FCC_MOVSVC"
			if ($status = -7)
				retrieve/x "FCC_MOVSVC"
			elseif ($status = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Movimentação %%NR_CTAPES.FCC_MOVSVC / %%DT_MOVIM.FCC_MOVSVC / %%NR_SEQMOV.FCC_MOVSVC não cadastrada!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1) 
			endif
			
			delitem vDsLstMovCC, 1
		until (vDsLstMovCC = "")
		
		setocc "FCC_MOVSVC", 1
	endif
	
	vNrSeqCheque    = $item("NR_SEQCHEQUE",    piParams)
	vNrSeqDuplicata = $item("NR_SEQDUPLICATA", piParams)
	vVlPago         = $item("VL_PAGO",         piParams)
	
	clear/e "FGR_LIQSVC"
	cd_empliq.fgr_liqsvc/init = $item("CD_EMPLIQ", piParams)
	dt_liq.fgr_liqsvc/init    = $item("DT_LIQ",    piParams)
	nr_seqliq.fgr_liqsvc/init = $item("NR_SEQLIQ", piParams)
	retrieve/e "FGR_LIQSVC"
	if ($status < 0)
		creocc "FGR_LIQSVC", -1
		cd_empliq.fgr_liqsvc       = $item("CD_EMPLIQ",       piParams)
		dt_liq.fgr_liqsvc          = $item("DT_LIQ",          piParams)
		nr_seqliq.fgr_liqsvc       = $item("NR_SEQLIQ",       piParams)
		tp_liquidacao.fgr_liqsvc   = $item("TP_LIQUIDACAO",   piParams)
		cd_grupoempresa.fgr_liqsvc = $item("CD_GRUPOEMPRESA", piGlobal)
		cd_pessoa.fgr_liqsvc       = $item("CD_PESSOA",       piParams)
	endif
	
	creocc "FGR_LIQITEMCRSVC", -1
	cd_empliq.fgr_liqitemcrsvc     = vCdEmpLiq
	dt_liq.fgr_liqitemcrsvc        = vDtLiq
	nr_seqliq.fgr_liqitemcrsvc     = vNrSeqLiq
	nr_seqitem.fgr_liqitemcrsvc    = vNrSeqCheque
	tp_tiporeg.fgr_liqitemcrsvc    = $item("TP_TIPOREG", piParams)
	nr_ctapesfcc.fgr_liqitemcrsvc  = nr_ctapes.fcc_movsvc
	nr_ctapes.fgr_liqitemcrsvc     = nr_ctapes.fcc_movsvc
	dt_movimfcc.fgr_liqitemcrsvc   = dt_movim.fcc_movsvc
	nr_seqmovfcc.fgr_liqitemcrsvc  = nr_seqmov.fcc_movsvc
	cd_operador.fgr_liqitemcrsvc   = $item("CD_USUARIO", piGlobal)
	dt_cadastro.fgr_liqitemcrsvc   = $datim
	vl_lancamento.fgr_liqitemcrsvc = vVlPago
	if (vTpProcesso = 2) & ($item("TP_TIPOREG", piParams) = 1)
		vVlPago                    = 0
	endif
	cd_operador.fgr_liqsvc         = $item("CD_USUARIO", piGlobal)
	dt_cadastro.fgr_liqsvc         = $datim
	
	;Aqui gravar a duplicatas de juro/iof.
	if (vDsLstDuplicata != "")
		repeat
			getitem  vDsDuplicata, vDsLstDuplicata, 1
			vNrSeqDuplicata = vNrSeqDuplicata + 1
			
			creocc "FGR_LIQITEMCCSVC", -1
			nr_seqitem.fgr_liqitemccsvc      = vNrSeqDuplicata
			cd_empresadup.fgr_liqitemccsvc   = $item("CD_EMPRESA",    vDsDuplicata)
			cd_fornecdup.fgr_liqitemccsvc    = $item("CD_FORNECEDOR", vDsDuplicata)
			nr_duplicatadup.fgr_liqitemccsvc = $item("NR_DUPLICATA",  vDsDuplicata)
			nr_parceladup.fgr_liqitemccsvc   = $item("NR_PARCELA",    vDsDuplicata)
			cd_operador.fgr_liqitemccsvc     = $item("CD_USUARIO",    piGlobal)
			dt_cadastro.fgr_liqitemccsvc     = $datim
			
			delitem vDsLstDuplicata, 1
		until (vDsLstDuplicata = "")
	endif
	
	$collhandle("FGR_LIQSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	putitem/id poParams, "NR_SEQCHEQUE",    vNrSeqCheque
	putitem/id poParams, "NR_SEQDUPLICATA", vNrSeqDuplicata
	
	return(0)
End ;operation gravaLiqMovNegociacao.


;-------------------------------------------------;
public operation gravarComissaoRecebimento        ;
;-------------------------------------------------;
; MTF    : 11/04/2007     Projeto 078, tarefa 356 ;
; Funcao : Grava comissao da fatura original paga ;
;          parcial na fatura restante.            ;
; Chamada: operation - baixarFatura()             ;
;                      baixarFaturaParcial()      ;
;-------------------------------------------------;
;
	params
		string  piGlobal  :IN
		string  piParams  :IN
		string  poParams  :OUT
		numeric poCdErro  :OUT
		string  poCtxErro :OUT
	endparams
	variables
		string  vRegComissao, vpiParams, vpoParams
		numeric vCdEmpFatOrig, vCdClienteOrig, vNrFatOrig, vNrParcelaOrig, vCdEmpFat, vCdCliente, vNrFat, vNrParcela
	endvariables
	
	vCdEmpFatOrig = $item("CD_EMPFATORIG", piParams)
	if (vCdEmpFatOrig = "") | (vCdEmpFatOrig = 0)
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Empresa da fatura origem não informada para gravar comissão.", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	vCdClienteOrig = $item("CD_CLIENTEORIG", piParams)
	if (vCdClienteOrig = "") | (vCdClienteOrig = 0)
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Cliente da fatura origem não informado para gravar comissão.", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	vNrFatOrig = $item("NR_FATORIG", piParams)
	if (vNrFatOrig = "") | (vNrFatOrig = 0)
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Número da fatura origem não informado para gravar comissão.", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	vNrParcelaOrig = $item("NR_PARCELAORIG", piParams)
	if (vNrParcelaOrig = "") | (vNrParcelaOrig = 0)
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Parcela da fatura origem não informada para gravar comissão.", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	vCdEmpFat = $item("CD_EMPRESA", piParams)
	if (vCdEmpFat = "") | (vCdEmpFat = 0)
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Empresa da nova fatura não informada para gravar comissão.", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	vCdCliente = $item("CD_CLIENTE", piParams)
	if (vCdCliente = "") | (vCdCliente = 0)
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Cliente da nova fatura não informado para gravar comissão.", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	vNrFat = $item("NR_FAT", piParams)
	if (vNrFat = "") | (vNrFat = 0)
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Número da nova fatura não informado para gravar comissão.", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	vNrParcela = $item("NR_PARCELA", piParams)
	if (vNrParcela = "") | (vNrParcela = 0)
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Parcela da nova fatura não informada para gravar comissão.", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	;Se fatura original contem comissao, gerar comissao para nova fatura.
	clear/e "F_FCR_COMISSASVC"
	cd_empresa.f_fcr_comissasvc/init = vCdEmpFatOrig
	cd_cliente.f_fcr_comissasvc/init = vCdClienteOrig
	nr_fatura.f_fcr_comissasvc/init  = vNrFatOrig
	nr_parcela.f_fcr_comissasvc/init = vNrParcelaOrig
	retrieve/e "F_FCR_COMISSASVC"
	if ($status >= 0)
		setocc "F_FCR_COMISSASVC", -1
		setocc "F_FCR_COMISSASVC",  1
		repeat
			
			vl_comissaorec.f_fcr_comissasvc = 0
			vl_comissaofat.f_fcr_comissasvc = 0
			
			;MTF(01/08/2007) - Projeto 078, tarefa 688.
			vpiParams = ""
			putlistitems/occ vpiParams, "F_FCR_COMISSASVC"
			activate "FCRSVCO001".gravaComissaoFatura(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
			if ($procerror)
				$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=  /  FCRSVCO007.gravarComissaoRecebimento()")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=  /  FCRSVCO007.gravarComissaoRecebimento()")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
			;$collhandle ("F_FCR_COMISSASVC")->salvar()
			;if ($procerror)
			;	$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=  /  FCRSVCO007.gravarComissaoRecebimento()")
			;	poCdErro  = $xCdErro$
			;	poCtxErro = $xCtxErro$
			;	return(-1)
			;elseif ($status < 0)
			;	$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=  /  FCRSVCO007.gravarComissaoRecebimento()")
			;	poCdErro  = $xCdErro$
			;	poCtxErro = $xCtxErro$
			;	return(-1)
			;endif
			;
			vRegComissao = ""
			putlistitems/occ vRegComissao, "F_FCR_COMISSASVC"
			clear/e "FCR_COMISSAOSVC"
			creocc  "FCR_COMISSAOSVC", -1
			getlistitems/occ vRegComissao, "FCR_COMISSAOSVC"
			
			cd_empresa.fcr_comissaosvc  = vCdEmpFat
			cd_cliente.fcr_comissaosvc  = vCdCliente
			nr_fatura.fcr_comissaosvc   = vNrFat
			nr_parcela.fcr_comissaosvc  = vNrParcela
			tp_situacao.fcr_comissaosvc = 0 ; MFGALEGO - 25/05/2007 ; Edvaldo / KRINDGES
			cd_operador.fcr_comissaosvc = $item("CD_USUARIO", piGlobal)
			dt_cadastro.fcr_comissaosvc = $datim
			
			;MTF(01/08/2007) - Projeto 078, tarefa 688.
			vpiParams = ""
			putlistitems/occ vpiParams, "FCR_COMISSAOSVC"
			activate "FCRSVCO001".gravaComissaoFatura($$gParamGlb, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
			if ($procerror)
				$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=  /  FCRSVCO007.gravarComissaoRecebimento()")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=  /  FCRSVCO007.gravarComissaoRecebimento()")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
			;$collhandle ("FCR_COMISSAOSVC")->salvar()
			;if ($procerror)
			;	$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=  /  FCRSVCO007.gravarComissaoRecebimento()")
			;	poCdErro  = $xCdErro$
			;	poCtxErro = $xCtxErro$
			;	return(-1)
			;elseif ($status < 0)
			;	$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=  /  FCRSVCO007.gravarComissaoRecebimento()")
			;	poCdErro  = $xCdErro$
			;	poCtxErro = $xCtxErro$
			;	return(-1)
			;endif
			;
			setocc "F_FCR_COMISSASVC", $curocc(F_FCR_COMISSASVC) + 1
		until($status < 0)
		$status = 0
	endif
	
	return(0)
End ;operation gravarComissaoRecebimento.

;---------------------------------------;
public operation gravaLiqICRAdic        ;
;---------------------------------------;
;MARTINEZ - PRJ/TAR 180/173 - 05/05/2011;
;---------------------------------------;
	params
		string  piGlobal  : IN
		string  piParams  : IN
		numeric poCdErro  : OUT
		string  poCtxErro : OUT
	endparams
	
	variables
		numeric vCdEmpLiq, vNrSeqLiq, vNrSeqItem
		date    vDtLiq
		numeric vCdEmpFat, vCdCliente, vNrFat, vNrParcela
	endvariables
	
	vCdEmpLiq = $item("CD_EMPLIQ", piParams)
	if (vCdEmpLiq = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Empresa da liquidação não informada!", "ADICIONAL=Operação->FCRSVCO007.gravaLiqICRAdic")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	vDtLiq = $item("DT_LIQ", piParams)
	if (vDtLiq = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Data da liquidação não informada!", "ADICIONAL=Operação->FCRSVCO007.gravaLiqICRAdic")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	vNrSeqLiq = $item("NR_SEQLIQ", piParams)
	if (vNrSeqLiq = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Número da liquidação não informado!", "ADICIONAL=Operação->FCRSVCO007.gravaLiqICRAdic")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	vNrSeqItem = $item("NR_SEQITEM", piParams)
	if (vNrSeqItem = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Item da liquidação não informado!", "ADICIONAL=Operação->FCRSVCO007.gravaLiqICRAdic")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	vCdEmpFat = $item("CD_EMPFAT", piParams)
	if (vCdEmpFat = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Empresa da fatura não informada!", "ADICIONAL=Operação->FCRSVCO007.gravaLiqICRAdic")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	vCdCliente = $item("CD_CLIENTE", piParams)
	if (vCdCliente = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Cliente da fatura não informado!", "ADICIONAL=Operação->FCRSVCO007.gravaLiqICRAdic")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	vNrFat = $item("NR_FAT", piParams)
	if (vNrFat = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Número da fatura não informado!", "ADICIONAL=Operação->FCRSVCO007.gravaLiqICRAdic")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	vNrParcela = $item("NR_PARCELA", piParams)
	if (vNrParcela = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Parcela da fatura não informada!", "ADICIONAL=Operação->FCRSVCO007.gravaLiqICRAdic")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	clear/e "FGR_LIQITEMCRSVC"
	CD_EMPLIQ.FGR_LIQITEMCRSVC/init  = vCdEmpLiq
	DT_LIQ.FGR_LIQITEMCRSVC/init     = vDtLiq
	NR_SEQLIQ.FGR_LIQITEMCRSVC/init  = vNrSeqLiq
	NR_SEQITEM.FGR_LIQITEMCRSVC/init = vNrSeqItem
	retrieve/e "FGR_LIQITEMCRSVC"
	if ($status >= 0)
		clear/e "FCR_FATURAISVC"
		CD_EMPRESA.FCR_FATURAISVC/init = vCdEmpFat
		CD_CLIENTE.FCR_FATURAISVC/init = vCdCliente
		NR_FAT.FCR_FATURAISVC/init     = vNrFat
		NR_PARCELA.FCR_FATURAISVC/init = vNrParcela
		retrieve/e "FCR_FATURAISVC"
		if ($status >= 0)
			creocc "FGR_LIQICRADISVC", -1
			CD_EMPLIQ.FGR_LIQICRADISVC         = vCdEmpLiq
			DT_LIQ.FGR_LIQICRADISVC            = vDtLiq
			NR_SEQLIQ.FGR_LIQICRADISVC         = vNrSeqLIq
			NR_SEQITEM.FGR_LIQICRADISVC        = vNrSeqItem
			;Projeto 180 - Tarefa 0227 - Aloisio Gargantini - 29/07/2011
			retrieve/o "FGR_LIQICRADISVC"
			if ($status = -7)
				retrieve/x "FGR_LIQICRADISVC"
			endif
			;
			CD_OPERADOR.FGR_LIQICRADISVC       = $item("CD_USUARIO", piGlobal)
			DT_CADASTRO.FGR_LIQICRADISVC       = $datim
			TP_FATURAMENTO.FGR_LIQICRADISVC    = TP_FATURAMENTO.FCR_FATURAISVC
			TP_COBRANCA.FGR_LIQICRADISVC       = TP_COBRANCA.FCR_FATURAISVC
			TP_BAIXA.FGR_LIQICRADISVC          = TP_BAIXA.FCR_FATURAISVC
			CD_MOEDA.FGR_LIQICRADISVC          = CD_MOEDA.FCR_FATURAISVC
			NR_PORTADOR.FGR_LIQICRADISVC       = NR_PORTADOR.FCR_FATURAISVC
			DT_EMISSAO.FGR_LIQICRADISVC        = DT_EMISSAO.FCR_FATURAISVC
			DT_VENCIMENTO.FGR_LIQICRADISVC     = DT_VENCIMENTO.FCR_FATURAISVC
			VL_FATURA.FGR_LIQICRADISVC         = VL_FATURA.FCR_FATURAISVC
			VL_ORIGINAL.FGR_LIQICRADISVC       = VL_ORIGINAL.FCR_FATURAISVC
			VL_PAGO.FGR_LIQICRADISVC           = VL_PAGO.FCR_FATURAISVC
			VL_JUROS.FGR_LIQICRADISVC          = VL_JUROS.FCR_FATURAISVC
			VL_DESCONTO.FGR_LIQICRADISVC       = VL_DESCONTO.FCR_FATURAISVC
			VL_OUTACRES.FGR_LIQICRADISVC       = VL_OUTACRES.FCR_FATURAISVC
			VL_OUTDESC.FGR_LIQICRADISVC        = VL_OUTDESC.FCR_FATURAISVC
			VL_ABATIMENTO.FGR_LIQICRADISVC     = VL_ABATIMENTO.FCR_FATURAISVC
			VL_DESPFIN.FGR_LIQICRADISVC        = VL_DESPFIN.FCR_FATURAISVC
			VL_IMPOSTO.FGR_LIQICRADISVC        = VL_IMPOSTO.FCR_FATURAISVC
			VL_LIQUIDO.FGR_LIQICRADISVC        = VL_LIQUIDO.FCR_FATURAISVC
			VL_ACRESCIMO.FGR_LIQICRADISVC      = VL_ACRESCIMO.FCR_FATURAISVC
			VL_RENEGOCIACAO.FGR_LIQICRADISVC   = VL_RENEGOCIACAO.FCR_FATURAISVC
			PR_DESCPGPRAZO.FGR_LIQICRADISVC    = PR_DESCPGPRAZO.FCR_FATURAISVC
			PR_JUROMES.FGR_LIQICRADISVC        = PR_JUROMES.FCR_FATURAISVC
			PR_MULTA.FGR_LIQICRADISVC          = PR_MULTA.FCR_FATURAISVC
			PR_DESCANTECIP1.FGR_LIQICRADISVC   = PR_DESCANTECIP1.FCR_FATURAISVC
			PR_DESCANTECIP2.FGR_LIQICRADISVC   = PR_DESCANTECIP2.FCR_FATURAISVC
			DT_DESCANTECIP1.FGR_LIQICRADISVC   = DT_DESCANTECIP1.FCR_FATURAISVC
			DT_DESCANTECIP2.FGR_LIQICRADISVC   = DT_DESCANTECIP2.FCR_FATURAISVC
			NR_CARENCIAATRASO.FGR_LIQICRADISVC = NR_CARENCIAATRASO.FCR_FATURAISVC
			NR_CARENCIAMULTA.FGR_LIQICRADISVC  = NR_CARENCIAMULTA.FCR_FATURAISVC
			NR_DESCPONT.FGR_LIQICRADISVC       = NR_DESCPONT.FCR_FATURAISVC
	
			$collhandle("FGR_LIQICRADISVC")->Salvar()
			if ($procerror)
				$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=  /  FCRSVCO007.gravarComissaoRecebimento()")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=  /  FCRSVCO007.gravarComissaoRecebimento()")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		endif
	endif
	
	return(0)
end ; gravaLiqICRAdic
