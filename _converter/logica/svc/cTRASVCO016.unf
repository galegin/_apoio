entry getParam
	params
		numeric piCdEmpresa : IN
		string piDsOperacao : IN
	endparams

	variables
		string viParams, voParams
	endvariables

	if (piCdEmpresa = 0)
		piCdEmpresa = $item("CD_EMPRESA", $xlpg$)
	endif

	viParams = ""
	putitem viParams, -1, "CD_TPMANUT_REPRE"
	putitem viParams, -1, "IN_USA_COND_PGTO_ESPECIAL"
	activate "ADMSVCO001".GetLstParametro(viParams, voParams, $xcderro$, $xctxerro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		return(-1)
	elseif ($xCdErro$)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%$item("DESCRICAO", $xCtxErro$)", "ADICIONAL=Operação->TRASVCO015.%%piDsOperacao")
		return(-1)
	endif
	$cdTpManutRepre$ = $item("CD_TPMANUT_REPRE", voParams)
	$UsaCondPgtoEspecial$ = $item("IN_USA_COND_PGTO_ESPECIAL",voParams)
	
	viParams = ""
	putitem viParams, -1, "VL_MINIMO_PARCELA"
	putitem viParams, -1, "NR_DIA_CANC_TRANS_BLOQ"
	putitem viParams, -1, "CD_TIPOCLAS_PED"
	putitem viParams, -1, "TP_VALIDA_FAMILIAR_VD"
	activate "ADMSVCO001".GetParamEmpresa(piCdEmpresa, viParams, voParams, $xCdErro$, $xCtxerro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		return(-1)
	elseif ($xCdErro$)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%$item("DESCRICAO", $xCtxErro$)", "ADICIONAL=Operação->PEDSVCO001.%%piDsOperacao")
		return(-1)
	endif
	$vlMinimoParcela$ = $item("VL_MINIMO_PARCELA", voParams)
	$NrDiaCancTransBloqueada$ = $item("NR_DIA_CANC_TRANS_BLOQ", voParams)
	$cdTipoClasPed$ = $item("CD_TIPOCLAS_PED", voParams)
	$tpValidaFamiliar$ = $item("TP_VALIDA_FAMILIAR_VD", voParams)
	
	return(0)
end

;-----------------
entry validaString
;Hugo Tarefa 22/918 13/03/09
;-----------------
	params 
		string strIN :IN
		string strOUT : OUT
	endparams
	
	length strIN
	while ($result > 0)
		if ((strIN[1:1] > " ") & (strIN[1:1] < "{")) 
			strOUT = "%%strOUT%%strIN[1:1]"
		else
			strOUT = "%%strOUT%%% "
		endif
		strIN = strIN[2]
		length strIN
	endwhile
	
	return(0)
end

;---------------------------------------
public operation gravaLiberacaoTransacao
;---------------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		string viParams, voParams
		numeric vCdEmpresa, vNrTransacao, vTpLiberacao, vVlDisponivel, vNrDiaAtraso, vCdLiberador
		date vDtTransacao
	endvariables
	
	vCdEmpresa = $item("CD_EMPRESA", piParams)
	vNrTransacao = $item("NR_TRANSACAO", piParams)
	vDtTransacao = $item("DT_TRANSACAO", piParams)
	vCdLiberador = $item("CD_LIBERADOR", piParams)
	vTpLiberacao = $item("TP_LIBERACAO", piParams)
	vVlDisponivel = $item("VL_DISPONIVEL", piParams)
	vNrDiaAtraso = $item("NR_DIAATRASO", piParams)
	
	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->TRASVCO016.gravaLiberacaoTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vNrTransacao = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número transação não informado!", "ADICIONAL=Operação->TRASVCO016.gravaLiberacaoTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vDtTransacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data transação não informada!", "ADICIONAL=Operação->TRASVCO016.gravaLiberacaoTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vTpLiberacao = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Tipo de liberação não informada!", "ADICIONAL=Operação->TRASVCO016.gravaLiberacaoTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (vCdLiberador = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Usuário liberação não informada!", "ADICIONAL=Operação->TRASVCO016.gravaLiberacaoTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (vTpLiberacao = 02)
		if (vNrDiaAtraso = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Números de dias em atraso não informado!", "ADICIONAL=Operação->TRASVCO016.gravaLiberacaoTransacao")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif
	
	clear/e "TRA_TRANSACAOSVC"
	CD_EMPRESA.TRA_TRANSACAOSVC/init = vCdEmpresa
	NR_TRANSACAO.TRA_TRANSACAOSVC/init = vNrTransacao
	DT_TRANSACAO.TRA_TRANSACAOSVC/init = vDtTransacao
	retrieve/e "TRA_TRANSACAOSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->TRASVCO016.gravaLiberacaoTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif  
	
	clear/e "TRA_LIBERACAOSVC"
	retrieve/e "TRA_LIBERACAOSVC"
	if ($status >= 0)
		if (TP_LIBERACAO.TRA_LIBERACAOSVC != vTpLiberacao)
			vTpLiberacao = 3 ;Limite e atraso
		endif
	else
		clear/e "TRA_LIBERACAOSVC"
	endif    
	
	TP_LIBERACAO.TRA_LIBERACAOSVC = vTpLiberacao
	DT_LIBERACAO.TRA_LIBERACAOSVC = $item("DT_SISTEMA", $xlpg$)
	CD_LIBERADOR.TRA_LIBERACAOSVC = vCdLiberador
	if (vVlDisponivel != "")
		VL_LIMITE.TRA_LIBERACAOSVC = vVlDisponivel
	endif
	if (vNrDiaAtraso != "")
		NR_DIAATRASO.TRA_LIBERACAOSVC = vNrDiaAtraso
	endif
	CD_EMPFAT.TRA_LIBERACAOSVC = CD_EMPFAT.TRA_TRANSACAOSVC
	CD_GRUPOEMPRESA.TRA_LIBERACAOSVC = CD_GRUPOEMPRESA.TRA_TRANSACAOSVC
	CD_OPERADOR.TRA_LIBERACAOSVC = $item("CD_USUARIO", $xlpg$)
	DT_CADASTRO.TRA_LIBERACAOSVC = $datim    
	
	$collhandle("TRA_LIBERACAOSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	return(0)
end

;---------------------------------------
public operation geraParcelaTransacaoContrato
;---------------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	variables
		string viParams, voParams
		numeric vCdEmpresa, vNrTransacao, vNrCont
		date vDtTransacao, vDtSistema, vData
		numeric vNrParcela, vVlCalc, vVlParcela, vNrTotalDia, vNrAno, vNrDia, vNrAnoAux
		numeric vVlResto, vVlTotal, vTpArredondamento, vNrDiaFixo, vlAuxiliar
	endvariables

	vCdEmpresa = $item("CD_EMPRESA", piParams)
	vNrTransacao = $item("NR_TRANSACAO", piParams)
	vDtTransacao = $item("DT_TRANSACAO", piParams)
	vTpArredondamento = $item("TP_ARREDONDAMENTO", piParams)
	vDtSistema = $item("DT_SISTEMA", $$gParamGlb)

	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->TRASVCO016.geraParcelaTransacaoContrato")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vNrTransacao = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número transação não informado!", "ADICIONAL=Operação->TRASVCO016.geraParcelaTransacaoContrato")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vDtTransacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data transação não informada!", "ADICIONAL=Operação->TRASVCO016.geraParcelaTransacaoContrato")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	clear/e "TRA_TRANSACAOSVC"
	CD_EMPRESA.TRA_TRANSACAOSVC/init = vCdEmpresa
	NR_TRANSACAO.TRA_TRANSACAOSVC/init = vNrTransacao
	DT_TRANSACAO.TRA_TRANSACAOSVC/init = vDtTransacao
	retrieve/e "TRA_TRANSACAOSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->TRASVCO016.geraParcelaTransacaoContrato")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif  

	if ($empty("IMB_CONTRATOTSVC") != 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação não possui um contrato vinculado!", "ADICIONAL=Operação->TRASVCO016.geraParcelaTransacaoContrato")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (NR_PARCELA.IMB_CONTRATOSVC = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número de parcelas não informado no contrato!", "ADICIONAL=Operação->TRASVCO016.geraParcelaTransacaoContrato")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (NR_DIABASEVCTO.IMB_CONTRATOSVC = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Dia base de vencimento não informado no contrato!", "ADICIONAL=Operação->TRASVCO016.geraParcelaTransacaoContrato")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if ($empty("TRA_VENCIMENTSVC") = 0)
		$collhandle("TRA_VENCIMENTSVC")->Excluir()
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif

	if (DT_INIVCTO.IMB_CONTRATOSVC != "")
		vDtSistema = DT_INIVCTO.IMB_CONTRATOSVC
	endif

	vVlTotal = VL_TOTAL.TRA_TRANSACAOSVC
	vNrParcela = NR_PARCELA.IMB_CONTRATOSVC
	vNrDiaFixo = NR_DIABASEVCTO.IMB_CONTRATOSVC
	
	vVlResto = vVlTotal
	vVlCalc = vVlTotal / vNrParcela

	vVlParcela = vVlCalc[round, 2]
	if (vTpArredondamento = 1)
		vVlParcela = $int(vVlCalc);vVlCalc[round, 0]
		if (vVlParcela < 1)
			vVlParcela = vVlCalc[round, 2]
		endif
	endif

	clear/e "TRA_VENCIMENTSVC"

	$NrMes$ = vDtSistema[M]
	vNrAno = vDtSistema[Y]
	vNrAnoAux = vDtSistema[Y]

	vNrCont = 0
	repeat
		;controla o ultimo dia do mês
		$NrMesAux$ = $NrMes$ + 1
		if ($NrMesAux$ = 13)
			$NrMesAux$ = 1
			vNrAnoAux = vNrAnoAux + 1
		endif
		vData = "01/%%$NrMesAux$/%%vNrAnoAux"
		vData = vData - 1
		vNrDia = vData[D]
		if ($NrDia$ > vNrDia)
			$NrDia$ = vNrDia	
		else
			$NrDia$ = vNrDiaFixo
		endif

		creocc "TRA_VENCIMENTSVC", 1
		NR_PARCELA.TRA_VENCIMENTSVC = vNrCont + 1
		DT_VENCIMENTO.TRA_VENCIMENTSVC = "%%$NrDia$%%$NrMes$%%vNrAno"
		VL_PARCELA.TRA_VENCIMENTSVC = vVlParcela
		CD_EMPFAT.TRA_VENCIMENTSVC = CD_EMPFAT.TRA_TRANSACAOSVC
		CD_GRUPOEMPRESA.TRA_VENCIMENTSVC = CD_GRUPOEMPRESA.TRA_TRANSACAOSVC
		CD_OPERADOR.TRA_VENCIMENTSVC = $item("CD_USUARIO", $$gParamGlb)		
		DT_CADASTRO.TRA_VENCIMENTSVC =  $datim

		vVlResto = vVlResto - vVlParcela	

		$NrMes$ = $NrMes$ + 1
		if ($NrMes$ = 13)
			$NrMes$ = 1
			vNrAno = vNrAno + 1
		endif

		vNrCont = vNrCont + 1
	until (vNrCont = vNrParcela)

	if (vVlResto != 0)
		vlAuxiliar = vVlResto / vNrParcela
		if (vlAuxiliar > 1)
			setocc "TRA_VENCIMENTSVC", 1
			while ($status >= 0)
				VL_PARCELA.TRA_VENCIMENTSVC = VL_PARCELA.TRA_VENCIMENTSVC + vlAuxiliar
				vVlResto = vVlResto - vlAuxiliar
				setocc "TRA_VENCIMENTSVC", $curocc("TRA_VENCIMENTSVC") + 1
			endwhile
			if (vVlResto != 0)
				setocc "TRA_VENCIMENTSVC", 1
				VL_PARCELA.TRA_VENCIMENTSVC = VL_PARCELA.TRA_VENCIMENTSVC + vVlResto
			endif
		else
			setocc "TRA_VENCIMENTSVC", 1
			VL_PARCELA.TRA_VENCIMENTSVC = VL_PARCELA.TRA_VENCIMENTSVC + vVlResto
		endif
	endif

	$collhandle("TRA_VENCIMENTSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	return(0)
end

;---------------------------------------
public operation alteraVctoParcContratoSimulador
;---------------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	variables
		string viParams, voParams
		numeric vCdEmpresa, vNrTransacao
		date vDtTransacao, vDtSistema, vData
		numeric vNrDiaFixo, vNrParcela, vNrAno, vNrDia, vNrCont 
		string vDsLstVencimento, vDsRegistro
		boolean vInEntrada
	endvariables

	vCdEmpresa = $item("CD_EMPRESA", piParams)
	vNrTransacao = $item("NR_TRANSACAO", piParams)
	vDtTransacao = $item("DT_TRANSACAO", piParams)
	vNrDiaFixo = $item("NR_DIAFIXO", piParams)

	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->TRASVCO016.geraParcTransContratoSimulador")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vNrTransacao = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número transação não informado!", "ADICIONAL=Operação->TRASVCO016.geraParcTransContratoSimulador")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vDtTransacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data transação não informada!", "ADICIONAL=Operação->TRASVCO016.geraParcTransContratoSimulador")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (vNrDiaFixo = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Dia fixo de vencimento não informado!", "ADICIONAL=Operação->TRASVCO016.geraParcTransContratoSimulador")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	clear/e "TRA_TRANSACAOSVC"
	CD_EMPRESA.TRA_TRANSACAOSVC/init = vCdEmpresa
	NR_TRANSACAO.TRA_TRANSACAOSVC/init = vNrTransacao
	DT_TRANSACAO.TRA_TRANSACAOSVC/init = vDtTransacao
	retrieve/e "TRA_TRANSACAOSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->TRASVCO016.geraParcTransContratoSimulador")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif 

	if ($empty("IMB_CONTRATOTSVC") != 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação não possui um contrato vinculado!", "ADICIONAL=Operação->TRASVCO016.geraParcelaTransacaoContrato")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (NR_DIABASEVCTO.IMB_CONTRATOSVC = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Dia base de vencimento não informado no contrato!", "ADICIONAL=Operação->TRASVCO016.geraParcelaTransacaoContrato")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (DT_INIVCTO.IMB_CONTRATOSVC != "")
		vDtSistema = DT_INIVCTO.IMB_CONTRATOSVC
	else
		vDtSistema = $item("DT_SISTEMA", $$gParamGlb)
	endif
	vInEntrada = <FALSE>

	if ($empty("TRA_VENCIMENTSVC") = 0)
		setocc "TRA_VENCIMENTSVC", 1
		while ($status >= 0)
			if ($curocc("TRA_VENCIMENTSVC") = 1)
				if (DT_VENCIMENTO.TRA_VENCIMENTSVC = $item("DT_SISTEMA", $$gParamGlb) & VL_PARCELA.TRA_VENCIMENTSVC != $next("VL_PARCELA.TRA_VENCIMENTSVC"))
					vInEntrada = <TRUE>
				endif
			endif
			vDsRegistro = ""
			putlistitems/occ vDsRegistro, "TRA_VENCIMENTSVC"
			putitem vDsLstVencimento, -1, vDsRegistro
			setocc "TRA_VENCIMENTSVC", $curocc("TRA_VENCIMENTSVC") + 1
		endwhile
		$collhandle("TRA_VENCIMENTSVC")->Excluir()
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif
	
	if (vDsLstVencimento != "")

		$NrMes$ = vDtSistema[M]
		vNrAno = vDtSistema[Y]

		clear/e "TRA_VENCIMENTSVC"

		vNrCont = 1
		repeat
			getitem vDsRegistro, vDsLstVencimento, 1

			if (vInEntrada = <TRUE> & vNrCont = 1)
				vCdEmpresa = $item("CD_EMPRESA", vDsRegistro)
				vNrTransacao = $item("NR_TRANSACAO", vDsRegistro)
				vDtTransacao = $item("DT_TRANSACAO", vDsRegistro)
				vNrParcela = $item("NR_PARCELA", vDsRegistro)

				creocc "TRA_VENCIMENTSVC", -1
				CD_EMPRESA.TRA_VENCIMENTSVC = vCdEmpresa
				NR_TRANSACAO.TRA_VENCIMENTSVC = vNrTransacao
				DT_TRANSACAO.TRA_VENCIMENTSVC = vDtTransacao
				NR_PARCELA.TRA_VENCIMENTSVC = vNrParcela

				delitem/id vDsRegistro, "CD_EMPRESA"
				delitem/id vDsRegistro, "NR_TRANSACAO"
				delitem/id vDsRegistro, "DT_TRANSACAO"
				delitem/id vDsRegistro, "NR_PARCELA"
			
				getlistitems/occ vDsRegistro, "TRA_VENCIMENTSVC"
				DT_VENCIMENTO.TRA_VENCIMENTSVC = vDtSistema
				if (vNrDiaFixo <= vDtSistema[D])
					$NrMes$ = $NrMes$ + 1
					if ($NrMes$ = 13)
						$NrMes$ = 1
						vNrAno = vNrAno + 1
					endif
				endif
			else	
				;controla o ultimo dia do mês
				$NrMesAux$ = $NrMes$ + 1
				if ($NrMesAux$ = 13)
					$NrMesAux$ = 1
				endif
				vData = "01/%%$NrMesAux$/%%vNrAno"
				vData = vData - 1
				vNrDia = vData[D]
				if ($NrDia$ > vNrDia)
					$NrDia$ = vNrDia	
				else
					$NrDia$ = vNrDiaFixo
				endif
	
				vData = "%%$NrDia$%%$NrMes$%%vNrAno"

				vCdEmpresa = $item("CD_EMPRESA", vDsRegistro)
				vNrTransacao = $item("NR_TRANSACAO", vDsRegistro)
				vDtTransacao = $item("DT_TRANSACAO", vDsRegistro)
				vNrParcela = $item("NR_PARCELA", vDsRegistro)

				creocc "TRA_VENCIMENTSVC", -1
				CD_EMPRESA.TRA_VENCIMENTSVC = vCdEmpresa
				NR_TRANSACAO.TRA_VENCIMENTSVC = vNrTransacao
				DT_TRANSACAO.TRA_VENCIMENTSVC = vDtTransacao
				NR_PARCELA.TRA_VENCIMENTSVC = vNrParcela

				delitem/id vDsRegistro, "CD_EMPRESA"
				delitem/id vDsRegistro, "NR_TRANSACAO"
				delitem/id vDsRegistro, "DT_TRANSACAO"
				delitem/id vDsRegistro, "NR_PARCELA"
			
				getlistitems/occ vDsRegistro, "TRA_VENCIMENTSVC"

				DT_VENCIMENTO.TRA_VENCIMENTSVC = vData		
				if (TP_FORMAPGTO.TRA_VENCIMENTSVC != 1)
					TP_FORMAPGTO.TRA_VENCIMENTSVC = 1
				endif		
				$NrMes$ = $NrMes$ + 1
				if ($NrMes$ = 13)
					$NrMes$ = 1
					vNrAno = vNrAno + 1
				endif
			endif

			vNrCont = vNrCont + 1

			delitem vDsLstVencimento, 1
		until (vDsLstVencimento = "")
	endif

	$collhandle("TRA_VENCIMENTSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	return(0)
end; geraParcTransContratoSimulador

;---------------------------------------
public operation cancelaTransacaoBloqueada
;---------------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	variables
		string viParams, voParams, vDsLstEmpresa
		numeric vCdEmpresa, vNrTransacao, vNrDiaTransacao, vCdGrupoEmpresa
		date vDtTransacao, vDtSistema, vDataBase
	endvariables

	vDtSistema = $item("DT_SISTEMA",$$gParamGlb)
	vCdEmpresa = $item("CD_EMPRESA",$$gParamGlb)
	call getParam(vCdEmpresa, "cancelaTransacaoBloqueada")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($status < 0)
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	vCdGrupoEmpresa = $item("CD_GRUPOEMPRESA", $$gParamGlb)
	viParams = ""
	voParams = ""
	putitem/id viParams "CD_GRUPOEMPRESA", vCdGrupoEmpresa
	activate "GERSVCO032".buscaLstGrupoEmpresa($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	vDsLstEmpresa = $item("CD_EMPRESA", voParams)

	vDataBase = vDtSistema - $NrDiaCancTransBloqueada$
	clear/e "F_TRA_TRANSACSVC"
	CD_EMPRESA.F_TRA_TRANSACSVC = vDsLstEmpresa
	DT_TRANSACAO.F_TRA_TRANSACSVC = "·<·=%%vDataBase"
	TP_SITUACAO.F_TRA_TRANSACSVC = 8 ;Bloqueada
	retrieve/e "F_TRA_TRANSACSVC"
	if ($status >= 0)
		setocc "F_TRA_TRANSACSVC", -1
		setocc "F_TRA_TRANSACSVC", 1
		while ($status >= 0)

			viParams = ""
			putitem/id viParams, "CD_EMPRESA", CD_EMPRESA.F_TRA_TRANSACSVC
			putitem/id viParams, "NR_TRANSACAO", NR_TRANSACAO.F_TRA_TRANSACSVC
			putitem/id viParams, "DT_TRANSACAO", DT_TRANSACAO.F_TRA_TRANSACSVC
			putitem/id viParams, "DS_MOTIVO", "Cancelamento de transacoes bloqueadas no encerramento diario. Parametro NR_DIA_CANC_TRANS_BLOQ"
			putitem/id viParams, "TP_SITUACAONF", "C"
			putitem/id viParams, "TP_QUANTIDADEPED", ""
			putitem/id viParams, "IN_SOFINANCEIRO", ""
			putitem/id viParams, "IN_PEDIDO", <FALSE>
			putitem/id viParams, "CD_CONFERENTE", $item("CD_USUARIO",$$gParamGlb)
			putitem/id viParams, "CD_COMPONENTE", $componentname    
			activate "TRASVCO013".cancelaTransacao($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif

			setocc "F_TRA_TRANSACSVC", $curocc("F_TRA_TRANSACSVC") + 1				
		endwhile
	endif

	return(0)
end; operation cancelaTransacaoBloqueada

;----------------------------------
public operation gravaObsTransacao
	;----------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		string vDsLinhaObs, vDsLstTransacao, vDsRegistro, vCdComponente
		numeric vCdEmpresa, vNrTransacao, vNrLinha
		date vDtTransacao
		boolean vInObsNF, vInManutencao, vInObsFisco
	endvariables
	
	vInManutencao = $item("IN_MANUTENCAO", piParams)

	vDsLstTransacao = $item("DS_LSTTRANSACAO", piParams)
	if (vDsLstTransacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Lista de transação não informada!", "ADICIONAL=Operação->TRASVCO016.gravaObsTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	vDsLinhaObs = $item("DS_OBSERVACAO", piParams) 
	if (vDsLinhaObs = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Observação não informada!", "ADICIONAL=Operação->TRASVCO016.gravaObsTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1) 
	endif

	vCdComponente = $item("CD_COMPONENTE", piParams)
	if (vCdComponente = "")
		vCdComponente = $componentname
	endif

	vInObsNF = $item("IN_OBSNF", piParams)	
	;---Elia Proj. 61/410 13/08/08
	vInObsFisco = $item("IN_OBSFISCO", piParams)

	if (vInObsNF = <TRUE>) & (vInObsFisco = <TRUE>)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Não é possível gravar observação de fisco e de nota fiscal ao mesmo tempo!", "ADICIONAL=Operação->TRASVCO016.gravaObsTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1) 
	endif
	;
	
	;---Hugo Tarefa. 22/918 13/03/09
	call validaString(vDsLinhaObs, vDsLinhaObs)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	;
	
	clear/e "TRA_TRANSACAOSVC"
	
	repeat
		getitem vDsRegistro, vDsLstTransacao, 1
		vCdEmpresa = $item("CD_EMPRESA", vDsRegistro)
		vNrTransacao = $item("NR_TRANSACAO", vDsRegistro)
		vDtTransacao = $item("DT_TRANSACAO", vDsRegistro)		
		
		if (vDtTransacao = "")
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data da transação não informada!", "ADICIONAL=Operação->TRASVCO016.gravaObsTransacao")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1) 
		endif
		
		if (vNrTransacao = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número da transação não informada!", "ADICIONAL=Operação->TRASVCO016.gravaObsTransacao")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1) 
		endif
		
		if (vCdEmpresa = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa da transação não informada!", "ADICIONAL=Operação->TRASVCO016.gravaObsTransacao")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1) 
		endif
		
		creocc "TRA_TRANSACAOSVC", -1
		CD_EMPRESA.TRA_TRANSACAOSVC/init = vCdEmpresa
		NR_TRANSACAO.TRA_TRANSACAOSVC/init = vNrTransacao
		DT_TRANSACAO.TRA_TRANSACAOSVC/init = vDtTransacao
		retrieve/o "TRA_TRANSACAOSVC"
		if ($status = -7)
			retrieve/x "TRA_TRANSACAOSVC"
		elseif ($status = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->TRASVCO016.gravaObsTransacao")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1) 
		endif  
		
		if (vInObsNF = <TRUE>)
			setocc "OBS_TRANSACNFSVC", -1
			vNrLinha = NR_LINHA.OBS_TRANSACNFSVC + 1
			creocc "OBS_TRANSACNFSVC", -1
			NR_LINHA.OBS_TRANSACNFSVC = vNrLinha
			DS_OBSERVACAO.OBS_TRANSACNFSVC = vDsLinhaObs[1 : 80]
			CD_COMPONENTE.OBS_TRANSACNFSVC = vCdComponente
			CD_OPERADOR.OBS_TRANSACNFSVC = $item("CD_USUARIO", $xlpg$)
			DT_CADASTRO.OBS_TRANSACNFSVC = $datim
		else
			;---Elia Proj. 61/410
			if (vInObsFisco = <TRUE>)
				setocc "OBS_TRANSFISCSVC", -1
				vNrLinha = NR_LINHA.OBS_TRANSFISCSVC + 1
				creocc "OBS_TRANSFISCSVC", -1
				NR_LINHA.OBS_TRANSFISCSVC = vNrLinha
				DS_OBSERVACAO.OBS_TRANSFISCSVC = vDsLinhaObs[1 : 80]
				CD_COMPONENTE.OBS_TRANSFISCSVC = vCdComponente
				CD_OPERADOR.OBS_TRANSFISCSVC = $item("CD_USUARIO", $xlpg$)
				DT_CADASTRO.OBS_TRANSFISCSVC = $datim
			else
			;
				setocc "OBS_TRANSACAOSVC", -1
				vNrLinha = NR_LINHA.OBS_TRANSACAOSVC + 1
				creocc "OBS_TRANSACAOSVC", -1
				NR_LINHA.OBS_TRANSACAOSVC = vNrLinha
				DS_OBSERVACAO.OBS_TRANSACAOSVC = vDsLinhaObs[1 : 80]
				CD_COMPONENTE.OBS_TRANSACAOSVC = vCdComponente
				IN_MANUTENCAO.OBS_TRANSACAOSVC = vInManutencao
				CD_OPERADOR.OBS_TRANSACAOSVC = $item("CD_USUARIO", $xlpg$)
				DT_CADASTRO.OBS_TRANSACAOSVC = $datim 
			endif
		endif
		
		delitem vDsLstTransacao, 1
	until (vDsLstTransacao = "")    
	
	$collhandle("TRA_TRANSACAOSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif      
	
	return(0)
end;

;----------------------------------
public operation gravaUnidadeCompra
;----------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		numeric vCdEmpresa, vNrTransacao, vNrItem
		date vDtTransacao
	endvariables
	
	vCdEmpresa = $item("CD_EMPRESA", piParams)
	vNrTransacao = $item("NR_TRANSACAO", piParams)
	vDtTransacao = $item("DT_TRANSACAO", piParams)
	vNrItem = $item("NR_ITEM", piParams)
	
	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->TRASVCO016.gravaUnidadeCompra")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vNrTransacao = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número transação não informado!", "ADICIONAL=Operação->TRASVCO016.gravaUnidadeCompra")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vDtTransacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data transação não informada!", "ADICIONAL=Operação->TRASVCO016.gravaUnidadeCompra")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vNrItem = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Item da transação não informada!", "ADICIONAL=Operação->TRASVCO016.gravaUnidadeCompra")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	clear/e "TRA_TRANSACAOSVC"
	CD_EMPRESA.TRA_TRANSACAOSVC/init = vCdEmpresa
	NR_TRANSACAO.TRA_TRANSACAOSVC/init = vNrTransacao
	DT_TRANSACAO.TRA_TRANSACAOSVC/init = vDtTransacao
	retrieve/e "TRA_TRANSACAOSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->TRASVCO016.gravaUnidadeCompra")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif  
	
	clear/e "TRA_TRANSITEMSVC"
	NR_ITEM.TRA_TRANSITEMSVC/init = vNrItem
	retrieve/e "TRA_TRANSITEMSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Item %%vNrItem da transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->TRASVCO016.gravaUnidadeCompra")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif  
	
	if ($empty("TRA_ITEMUNSVC") != 0)
		creocc "TRA_ITEMUNSVC", -1
	endif
	
	CD_EMPFAT.TRA_ITEMUNSVC = CD_EMPFAT.TRA_TRANSACAOSVC
	CD_GRUPOEMPRESA.TRA_ITEMUNSVC = CD_GRUPOEMPRESA.TRA_TRANSACAOSVC
	CD_ESPECIE.TRA_ITEMUNSVC = $item("CD_ESPECIE", piParams)
	TP_OPERACAO.TRA_ITEMUNSVC = $item("TP_OPERACAO", piParams)
	QT_CONVERSAO.TRA_ITEMUNSVC = $item("QT_CONVERSAO", piParams)
	CD_OPERADOR.TRA_ITEMUNSVC = $item("CD_USUARIO", $xlpg$)
	DT_CADASTRO.TRA_ITEMUNSVC = $datim

	if (QT_CONVERSAO.TRA_ITEMUNSVC <= 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Item %%vNrItem da transação %%vNrTransacao possui quantidade de conversão inválida!", "ADICIONAL=Operação->TRASVCO016.gravaUnidadeCompra")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	$collhandle("TRA_ITEMUNSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	return(0)
end

;-----------------------------
public operation gravaItemLote
;-----------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		string vDsRegistro, vDsLstItemLote, vDsLstIlote, viParams, voParams, vCdBarraLote
		numeric vCdEmpresa, vNrTransacao, vNrItem, vQtLote, vQtTotalLote, vQtPendente, vQtRelacionada
		numeric vCdEmpLote, vNrLote, vNrItemLote, vQtCone, vTpContrInspSaldoLote, vCdOperSaldo
		date vDtTransacao
		boolean vInSemMovimento
	endvariables
	
	vCdEmpresa = $item("CD_EMPRESA", piParams)
	vNrTransacao = $item("NR_TRANSACAO", piParams)
	vDtTransacao = $item("DT_TRANSACAO", piParams)
	vNrItem = $item("NR_ITEM", piParams)
	vDsLstItemLote = $item("DS_LSTITEMLOTE", piParams)
	vInSemMovimento = $item("IN_SEMMOVIMENTO", piParams)

	vTpContrInspSaldoLote = $item("TP_CONTR_INSP_SALDO_LOTE", $$gParamGlb) ;-- ALX - 130/1328 - 22/11/2010 --;
	
	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->TRASVCO016.gravaItemLote")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vNrTransacao = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número transação não informado!", "ADICIONAL=Operação->TRASVCO016.gravaItemLote")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vDtTransacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data transação não informada!", "ADICIONAL=Operação->TRASVCO016.gravaItemLote")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vNrItem = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Item da transação não informada!", "ADICIONAL=Operação->TRASVCO016.gravaItemLote")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	clear/e "TRA_TRANSACAOSVC"
	CD_EMPRESA.TRA_TRANSACAOSVC/init = vCdEmpresa
	NR_TRANSACAO.TRA_TRANSACAOSVC/init = vNrTransacao
	DT_TRANSACAO.TRA_TRANSACAOSVC/init = vDtTransacao
	retrieve/e "TRA_TRANSACAOSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->TRASVCO016.gravaItemLote")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif  
	
	clear/e "TRA_TRANSITEMSVC"
	NR_ITEM.TRA_TRANSITEMSVC/init = vNrItem
	retrieve/e "TRA_TRANSITEMSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Item %%vNrItem da transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->TRASVCO016.gravaItemLote")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if(QT_SOLICITADA.TRA_TRANSITEMSVC = 0) ; MRT | PRJ 66/506 | 08/07/2011 -->>
		return(0)
	endif ; <<--

	vQtTotalLote = 0
	vDsLstILote = vDsLstItemLote
	if (vDsLstILote != "")
		repeat
			getitem vDsRegistro, vDsLstILote, 1
			vCdEmpLote = $item("CD_EMPRESA", vDsRegistro)
			vNrLote = $item("NR_LOTE", vDsRegistro)
			vNrItemLote = $item("NR_ITEM", vDsRegistro)
			;vQtLote = $item("QT_LOTE", vDsRegistro)
			vQtLote = $item("QT_MOVIMENTO", vDsRegistro)

			if (vCdEmpLote = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa do item de lote não informada!", "ADICIONAL=Operação->TRASVCO016.gravaItemLote")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif

			if (vNrLote = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Nr. do lote não informada!", "ADICIONAL=Operação->TRASVCO016.gravaItemLote")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif

			if (vNrItemLote = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Nr. do item de lote não informada!", "ADICIONAL=Operação->TRASVCO016.gravaItemLote")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif

			if (vQtLote = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Qt. do item de lote %%vCdEmpLote / %%vNrLote / %%vNrItemLote não informada!", "ADICIONAL=Operação->TRASVCO016.gravaItemLote")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif

			vQtTotalLote = vQtTotalLote + vQtLote

			;-->> ALX - 130/1328 - 22/11/2010 --;
			if (vTpContrInspSaldoLote = 1)
				vQtPendente = 0
				vQtRelacionada = 0
		
				clear/e "PRD_LOTEISVC"
				CD_EMPRESA.PRD_LOTEISVC/init = vCdEmpLote
				NR_LOTE.PRD_LOTEISVC/init = vNrLote
				NR_ITEM.PRD_LOTEISVC/init = vNrItemLote
				retrieve/e "PRD_LOTEISVC"
				if ($status >= 0)
					vQtPendente = QT_LOTE.PRD_LOTEISVC - (QT_BAIXADA.PRD_LOTEISVC + QT_CANCELADA.PRD_LOTEISVC)
				endif
		
				clear/e "F_TRA_ITEMLOTSVC"
				CD_EMPLOTE.F_TRA_ITEMLOTSVC/init = vCdEmpLote
				NR_LOTE.F_TRA_ITEMLOTSVC/init = vNrLote
				NR_ITEMLOTE.F_TRA_ITEMLOTSVC/init = vNrItemLote
				retrieve/e "F_TRA_ITEMLOTSVC"
				if ($status >= 0)
					while ($status >= 0)
						clear/e "F_TRA_TRANSACSVC"
						CD_EMPRESA.F_TRA_TRANSACSVC = CD_EMPRESA.F_TRA_ITEMLOTSVC
						NR_TRANSACAO.F_TRA_TRANSACSVC = NR_TRANSACAO.F_TRA_ITEMLOTSVC
						DT_TRANSACAO.F_TRA_TRANSACSVC = DT_TRANSACAO.F_TRA_ITEMLOTSVC
						;TP_SITUACAO.F_TRA_TRANSACSVC = 1 ;Em andamento
						retrieve/e "F_TRA_TRANSACSVC"
						if ($status >= 0)
							if(TP_SITUACAO.F_TRA_TRANSACSVC = 1 & TP_OPERACAO.F_TRA_TRANSACSVC = "S") ;-- ALX - 130/1416 - 09/02/2011 --;
								vQtRelacionada = vQtRelacionada + QT_LOTE.F_TRA_ITEMLOTSVC
							endif
						endif

						setocc "F_TRA_ITEMLOTSVC", $curocc("F_TRA_ITEMLOTSVC") + 1
					endwhile
				endif
		
				if ((vQtLote + vQtRelacionada) > vQtPendente)
					$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Não é possível relacionar a quantidade (%%vQtLote) do item de lote %%vCdEmpLote / %%vNrLote / %%vNrItemLote na transação %%vCdEmpresa / %%vNrTransacao / %%vDtTransacao, já que esta quantidade + quantidades relacionadas a outras transações (%%vQtRelacionada), é maior que a quantidade pendente (%%vQtPendente)!", "ADICIONAL=Operação->TRASVCO016.gravaItemLote")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
			endif
			;--<<

			delitem vDsLstILote, 1
		until (vDsLstILote = "")
	endif

	if (vQtTotalLote <> QT_SOLICITADA.TRA_TRANSITEMSVC)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Qt. soma dos itens de lote %%vQtTotalLote diferente da quantidade do produto %%CD_PRODUTO.TRA_TRANSITEMSVC da trasação %%NR_TRANSACAO.TRA_TRANSITEMSVC%%%!", "ADICIONAL=Operação->TRASVCO016.gravaItemLote")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	clear/e "TRA_ITEMLOTESVC"
	retrieve/e "TRA_ITEMLOTESVC"
	if ($status >= 0)
		$collhandle("TRA_ITEMLOTESVC")->Excluir()
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	else
		clear/e "TRA_ITEMLOTESVC"
	endif

	;Hugo em 10/02/11 Tarefa 130-1418
	clear/e "GER_OPERSALDOSVC"
	CD_OPERACAO.GER_OPERSALDOSVC/init = CD_OPERACAO.TRA_TRANSACAOSVC
	IN_PADRAO.GER_OPERSALDOSVC/init = <TRUE>
	retrieve/e "GER_OPERSALDOSVC"
	if ($status >= 0)
		vCdOperSaldo = CD_SALDO.GER_OPERSALDOSVC
	endif
	;
	
	if (vDsLstItemLote != "")
		repeat
			getitem vDsRegistro, vDsLstItemLote, 1
			vCdEmpLote = $item("CD_EMPRESA", vDsRegistro)
			vNrLote = $item("NR_LOTE", vDsRegistro)
			vNrItemLote = $item("NR_ITEM", vDsRegistro)
			vQtLote = $item("QT_MOVIMENTO", vDsRegistro)
			vQtCone = $item("QT_CONE", vDsRegistro);thamati 29/07/2009 [Proj. 0148 - Tar. 0275]
			vCdBarraLote = $item("CD_BARRALOTE", vDsRegistro)
			creocc "TRA_ITEMLOTESVC", -1
			NR_SEQUENCIA.TRA_ITEMLOTESVC = $curocc("TRA_ITEMLOTESVC")
			CD_EMPLOTE.TRA_ITEMLOTESVC = vCdEmpLote
			NR_LOTE.TRA_ITEMLOTESVC = vNrLote
			NR_ITEMLOTE.TRA_ITEMLOTESVC = vNrItemLote
			QT_LOTE.TRA_ITEMLOTESVC = vQtLote
			QT_CONE.TRA_ITEMLOTESVC = vQtCone ;thamati 29/07/2009 [Proj. 0148 - Tar. 0275]
			CD_BARRALOTE.TRA_ITEMLOTESVC = vCdBarraLote
			CD_EMPFAT.TRA_ITEMLOTESVC = CD_EMPFAT.TRA_TRANSACAOSVC
			CD_GRUPOEMPRESA.TRA_ITEMLOTESVC = CD_GRUPOEMPRESA.TRA_TRANSACAOSVC
			CD_OPERADOR.TRA_ITEMLOTESVC = $item("CD_USUARIO", $xlpg$)
			DT_CADASTRO.TRA_ITEMLOTESVC = $datim

			;---Elia Proj. 22/353 30/08/07
			;Baixa do Item de Lote
			;-----------------------------
			if (vTpContrInspSaldoLote != 1) ;-- ALX - 130/1328 - 22/11/2010 --;
				if (vInSemMovimento != <TRUE>) & (IN_KARDEX.GER_OPERACAOSVC) & (TP_OPERACAO.TRA_TRANSACAOSVC = "S")
					;Hugo em 10/02/11 Tarefa 130-1418
					clear/e "PRD_LOTEISVC"
					CD_EMPRESA.PRD_LOTEISVC/init = vCdEmpLote
					NR_LOTE.PRD_LOTEISVC/init = vNrLote
					NR_ITEM.PRD_LOTEISVC/init = vNrItemLote
					retrieve/e "PRD_LOTEISVC"
					if ($status >= 0)
						if (vCdOperSaldo != 0) & (vCdOperSaldo != CD_SALDO.PRD_LOTEISVC)
							$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Saldo %%CD_SALDO.PRD_LOTEISVC do item de lote %%vCdEmpLote / %%vNrLote / %%vNrItemLote diferente do saldo %%vCdOperSaldo que é padrão da operação %%CD_OPERACAO.TRA_TRANSACAOSVC%%%!", "ADICIONAL=Operação->TRASVCO016.gravaItemLote")
							poCdErro = $xCdErro$
							poCtxErro = $xCtxErro$
							return(-1)
						endif
					endif
					;
					
					viParams = ""
					putitem/id viParams, "CD_EMPRESA", vCdEmpLote 
					putitem/id viParams, "NR_LOTE", vNrLote 
					putitem/id viParams, "NR_ITEM", vNrItemLote 
					putitem/id viParams, "QT_MOVIMENTO", vQtLote 
					putitem/id viParams, "TP_MOVIMENTO", "B" ; B - Baixa
					if (TP_MODALIDADE.GER_OPERACAOSVC = 3) ;Devolução
						putitem/id viParams, "IN_VALIDASITUACAO", <FALSE> 
					endif
					activate "PRDSVCO020".movimentaQtLoteI($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
					if ($procerror)
						$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					elseif ($status < 0)
						$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					endif
				endif
			endif
			;
			delitem vDsLstItemLote, 1
		until (vDsLstItemLote = "")

		$collhandle("TRA_ITEMLOTESVC")->Salvar()
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif
	
	return(0)
end

;-------------------------------
public operation gravaItemSerial
;-------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		string vDsSerial, vDsLstSerial
		numeric vCdEmpresa, vNrTransacao, vNrItem
		date vDtTransacao
	endvariables
	
	vCdEmpresa = $item("CD_EMPRESA", piParams)
	vNrTransacao = $item("NR_TRANSACAO", piParams)
	vDtTransacao = $item("DT_TRANSACAO", piParams)
	vNrItem = $item("NR_ITEM", piParams)
	vDsLstSerial = $item("DS_LSTSERIAL", piParams)
	
	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->TRASVCO016.gravaItemSerial")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vNrTransacao = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número transação não informado!", "ADICIONAL=Operação->TRASVCO016.gravaItemSerial")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vDtTransacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data transação não informada!", "ADICIONAL=Operação->TRASVCO016.gravaItemSerial")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vNrItem = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Item da transação não informada!", "ADICIONAL=Operação->TRASVCO016.gravaItemSerial")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	clear/e "TRA_TRANSACAOSVC"
	CD_EMPRESA.TRA_TRANSACAOSVC/init = vCdEmpresa
	NR_TRANSACAO.TRA_TRANSACAOSVC/init = vNrTransacao
	DT_TRANSACAO.TRA_TRANSACAOSVC/init = vDtTransacao
	retrieve/e "TRA_TRANSACAOSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->TRASVCO016.gravaItemSerial")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif  
	
	clear/e "TRA_TRANSITEMSVC"
	NR_ITEM.TRA_TRANSITEMSVC/init = vNrItem
	retrieve/e "TRA_TRANSITEMSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Item %%vNrItem da transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->TRASVCO016.gravaItemSerial")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	clear/e "TRA_ITEMSERIASVC"
	retrieve/e "TRA_ITEMSERIASVC"
	if ($status >= 0)
		$collhandle("TRA_ITEMSERIASVC")->Excluir()
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	else
		clear/e "TRA_ITEMSERIASVC"
	endif
	
	if (vDsLstSerial != "")
		repeat
			getitem vDsSerial, vDsLstSerial, 1
			
			creocc "TRA_ITEMSERIASVC", -1
			NR_SEQUENCIA.TRA_ITEMSERIASVC = $curocc("TRA_ITEMSERIASVC")
			DS_SERIAL.TRA_ITEMSERIASVC = vDsSerial
			CD_EMPFAT.TRA_ITEMSERIASVC = CD_EMPFAT.TRA_TRANSACAOSVC
			CD_GRUPOEMPRESA.TRA_ITEMSERIASVC = CD_GRUPOEMPRESA.TRA_TRANSACAOSVC
			CD_OPERADOR.TRA_ITEMSERIASVC = $item("CD_USUARIO", $xlpg$)
			DT_CADASTRO.TRA_ITEMSERIASVC = $datim
			
			delitem vDsLstSerial, 1
		until (vDsLstSerial= "")

		$collhandle("TRA_ITEMSERIASVC")->Salvar()
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif
	
	return(0)
end

;------------------------------------
;Hugo em 06/11/2007 Tarefa? 1-1186
;Item: 1.3 Gravar relacao de Op com Transacao
;------------------------------------
public operation relacionaOpTransacao
;------------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		string vDsLstOP, vDsRegistro
		numeric vCdEmpresa, vNrTransacao
		date vDtTransacao
	endvariables
	
	vCdEmpresa = $item("CD_EMPRESA", piParams)
	vNrTransacao = $item("NR_TRANSACAO", piParams)
	vDtTransacao = $item("DT_TRANSACAO", piParams)
	vDsLstOp = $item("DS_LSTOP", piParams)
	
	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->TRASVCO016.relacionaOpTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vNrTransacao = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número transação não informado!", "ADICIONAL=Operação->TRASVCO016.relacionaOpTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vDtTransacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data transação não informada!", "ADICIONAL=Operação->TRASVCO016.relacionaOpTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vDsLstOp = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Tipo de liberação não informada!", "ADICIONAL=Operação->TRASVCO016.relacionaOpTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	clear/e "TRA_TRANSACAOSVC"
	CD_EMPRESA.TRA_TRANSACAOSVC/init = vCdEmpresa
	NR_TRANSACAO.TRA_TRANSACAOSVC/init = vNrTransacao
	DT_TRANSACAO.TRA_TRANSACAOSVC/init = vDtTransacao
	retrieve/e "TRA_TRANSACAOSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->TRASVCO016.relacionaOpTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif  
	
	repeat
		getitem vDsRegistro, vDsLstOp, 1
		
		creocc "CDF_RETNFSVC", -1
		getlistitems/occ vDsRegistro, "CDF_RETNFSVC"
		CD_EMPTRANSACAO.CDF_RETNFSVC = vCdEmpresa
		NR_TRANSACAO.CDF_RETNFSVC = vNrTransacao
		DT_TRANSACAO.CDF_RETNFSVC = vDtTransacao
		retrieve/o "CDF_RETNFSVC"
		if ($status = -7)
			retrieve/x "CDF_RETNFSVC"
		endif
		
		TP_NFRET.CDF_RETNFSVC = $item("TP_NFRET", vDsRegistro)
		CD_OPERADOR.CDF_RETNFSVC = $item("CD_USUARIO", $xlpg$)
		DT_CADASTRO.CDF_RETNFSVC = $datim
		
		delitem vDsLstOp, 1
	until (vDsLstOp = "")
	
	$collhandle("CDF_RETNFSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	return(0)
end

;---Elia Proj. 22/446 11/12/07---------
public operation gravaClassificacaoCapa
;--------------------------------------

	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		string  vDsLstClassificacao, vDsRegistro, vCdComponente, vDsLstClass, vDsReg, vDsLstClas
		string vCdClassificacao, vCdTipoClas
		Numeric vCdEmpresa, vNrTransacao
		date vDtTransacao
		Boolean vInExcluir
	endvariables
	
	vCdEmpresa = $item("CD_EMPRESA", piParams)
	vNrTransacao = $item("NR_TRANSACAO", piParams)
	vDtTransacao = $item("DT_TRANSACAO", piParams)
	;vInExcluir = $item("IN_EXCLUIR", piParams)
	vDsLstClassificacao = $item("DS_LSTCLASSIFICACAO", piParams)

	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa da transação não informada!", "ADICIONAL=Operação->TRASVCO016.gravaClassificacaoCapa")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (vNrTransacao = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número da transação não informado!", "ADICIONAL=Operação->TRASVCO016.gravaClassificacaoCapa")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vDtTransacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data da transação não informada!", "ADICIONAL=Operação->TRASVCO016.gravaClassificacaoCapa")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	;if (vDsLstClassificacao = "") & (vInExcluir != <TRUE>)
	;	$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Classificação não informada!", "ADICIONAL=Operação->TRASVCO016.gravaClassificacaoCapa")
	;	poCdErro = $xCdErro$
	;	poCtxErro = $xCtxErro$
	;	return(-1)
	;endif

	clear/e "TRA_TRANSACAOSVC"
	CD_EMPRESA.TRA_TRANSACAOSVC/init = vCdEmpresa
	NR_TRANSACAO.TRA_TRANSACAOSVC/init = vNrTransacao
	DT_TRANSACAO.TRA_TRANSACAOSVC/init = vDtTransacao
	retrieve/e "TRA_TRANSACAOSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->TRASVCO016.gravaClassificacaoCapa")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif  
	
	if (vDsLstClassificacao != "")
		vDsLstClas = vDsLstClassificacao
		clear/e "TRA_TIPOCLASSVC"
		repeat
			getitem vDsRegistro, vDsLstClas, 1                
			vCdTipoClas = $item("CD_TIPOCLAS", vDsRegistro)
			if (vCdTipoClas > 0)
				creocc "TRA_TIPOCLASSVC", -1
				CD_TIPOCLAS.TRA_TIPOCLASSVC/init = vCdTipoClas
				retrieve/o "TRA_TIPOCLASSVC"
				if ($status = -7)
					retrieve/x "TRA_TIPOCLASSVC"
				elseif ($status = 4)
					if (IN_TRAMULTCLAS.TRA_TIPOCLASSVC != <TRUE>)
						$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Tipo de classificação %%vCdTipoclas da transação %%vCdEmpresa / %%vNrTransacao / %%vDTTransacao não permite mais de uma classificação por transação!", "ADICIONAL=Operação->TRASVCO016.gravaClassificacaoCapa")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					endif
				endif
			endif
			delitem vDsLstClas, 1
		until (vDsLstClas = "")
		clear/e "TRA_TIPOCLASSVC"
	endif
	
	if ($empty("TRA_TRANSCLASSVC") = 0)
		$collhandle("TRA_TRANSCLASSVC")->Excluir()
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif 			   
	endif		
	
	if (vDsLstClassificacao != "")			
		repeat
			getitem vDsRegistro, vDsLstClassificacao, 1

			vCdTipoClas	= $item("CD_TIPOCLAS", vDsRegistro)
			if (vCdTipoClas = "")
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Tipo de classificação inválido!", "ADICIONAL=Operação->TRASVCO016.gravaClassificacaoCapa")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif

			vCdClassificacao = $item("CD_CLASSIFICACAO", vDsRegistro)
			if (vCdClassificacao = "")
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Classificação inválida!", "ADICIONAL=Operação->TRASVCO016.gravaClassificacaoCapa")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif

			creocc "TRA_TRANSCLASSVC", -1
			CD_EMPRESA.TRA_TRANSCLASSVC = vCdEmpresa
			NR_TRANSACAO.TRA_TRANSCLASSVC = vNrTransacao
			DT_TRANSACAO.TRA_TRANSCLASSVC = vDtTransacao
			CD_TIPOCLAS.TRA_TRANSCLASSVC = $item("CD_TIPOCLAS", vDsRegistro)
			CD_CLASSIFICACAO.TRA_TRANSCLASSVC = $item("CD_CLASSIFICACAO", vDsRegistro)
			retrieve/o "TRA_TRANSCLASSVC"
			if ($status = -7)
				retrieve/x "TRA_TRANSCLASSVC"
				delitem vDsLstClassificacao, 1
			else 
				CD_OPERADOR.TRA_TRANSCLASSVC = $item("CD_USUARIO", $$gParamGlb)
				DT_CADASTRO.TRA_TRANSCLASSVC = $datim
				delitem vDsLstClassificacao, 1
			endif
		until (vDsLstClassificacao = "")    

		$collhandle("TRA_TRANSCLASSVC")->Salvar()
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif    
	endif 

	return(0)

End ; operation gravaClassificacaoCapa

;---Elia Proj. 22/446 11/12/07---------
public operation gravaClassificacaoItem
;--------------------------------------

	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		string  vDsLstClassificacao, vDsRegistro, vCdComponente, vDsLstClass, vDsReg, vDsLstClas
		string vCdClassificacao, vCdTipoClas
		numeric vCdEmpresa, vNrTransacao, vNrItem
		date vDtTransacao
		Boolean vInExcluir
	endvariables
	
	vCdEmpresa = $item("CD_EMPRESA", piParams)
	vNrTransacao = $item("NR_TRANSACAO", piParams)
	vDtTransacao = $item("DT_TRANSACAO", piParams)
	vNrItem = $item("NR_ITEM", piParams)
	;vInExcluir = $item("IN_EXCLUIR", piParams)
	vDsLstClassificacao = $item("DS_LSTCLASSIFICACAO", piParams)

	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa da transação não informada!", "ADICIONAL=Operação->TRASVCO016.gravaClassificacaoItem")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (vNrTransacao = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número da transação não informado!", "ADICIONAL=Operação->TRASVCO016.gravaClassificacaoItem")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vDtTransacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data da transação não informada!", "ADICIONAL=Operação->TRASVCO016.gravaClassificacaoItem")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (vNrItem = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Item da transação não informado!", "ADICIONAL=Operação->TRASVCO016.gravaClassificacaoItem")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	;if (vDsLstClassificacao = "") & (vInExcluir != <TRUE>)
	;	$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Classificação não informada!", "ADICIONAL=Operação->TRASVCO016.gravaClassificacaoItem")
	;	poCdErro = $xCdErro$
	;	poCtxErro = $xCtxErro$
	;	return(-1)
	;endif

	clear/e "TRA_TRANSACAOSVC"
	CD_EMPRESA.TRA_TRANSACAOSVC/init = vCdEmpresa
	NR_TRANSACAO.TRA_TRANSACAOSVC/init = vNrTransacao
	DT_TRANSACAO.TRA_TRANSACAOSVC/init = vDtTransacao
	retrieve/e "TRA_TRANSACAOSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->TRASVCO016.gravaClassificacaoItem")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	else
		clear/e "TRA_TRANSITEMSVC"
		NR_ITEM.TRA_TRANSITEMSVC/init = vNrItem
		retrieve/e "TRA_TRANSITEMSVC"
		if ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Item %%vNrItem da Transação %%vNrTransacao não cadastrado!", "ADICIONAL=Operação->TRASVCO016.gravaClassificacaoItem")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif

	endif  
	
	if (vDsLstClassificacao != "")
		vDsLstClas = vDsLstClassificacao
		clear/e "TRA_TIPOCLASSVC"
		repeat
			getitem vDsRegistro, vDsLstClas, 1                
			vCdTipoClas = $item("CD_TIPOCLAS", vDsRegistro)
			if (vCdTipoClas > 0)
				creocc "TRA_TIPOCLASSVC", -1
				CD_TIPOCLAS.TRA_TIPOCLASSVC/init = vCdTipoClas
				retrieve/o "TRA_TIPOCLASSVC"
				if ($status = -7)
					retrieve/x "TRA_TIPOCLASSVC"
				elseif ($status = 4)
					if (IN_TRAMULTCLAS.TRA_TIPOCLASSVC != <TRUE>)
						$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Tipo de classificação %%vCdTipoclas da transação %%vCdEmpresa / %%vNrTransacao / %%vDTTransacao não permite mais de uma classificação por transação!", "ADICIONAL=Operação->TRASVCO016.gravaClassificacaoItem")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					endif
				endif
			endif
			delitem vDsLstClas, 1
		until (vDsLstClas = "")
		clear/e "TRA_TIPOCLASSVC"
	endif
	
	if ($empty("TRA_ITEMCLASSVC") = 0)
		$collhandle("TRA_ITEMCLASSVC")->Excluir()
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif 			   
	endif		
	
	if (vDsLstClassificacao != "")			
		repeat
			getitem vDsRegistro, vDsLstClassificacao, 1

			vCdTipoClas	= $item("CD_TIPOCLAS", vDsRegistro)
			if (vCdTipoClas = "")
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Tipo de classificação inválido!", "ADICIONAL=Operação->TRASVCO016.gravaClassificacaoItem")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif

			vCdClassificacao = $item("CD_CLASSIFICACAO", vDsRegistro)
			if (vCdClassificacao = "")
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Classificação inválida!", "ADICIONAL=Operação->TRASVCO016.gravaClassificacaoItem")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif

			creocc "TRA_ITEMCLASSVC", -1
			CD_EMPRESA.TRA_ITEMCLASSVC = vCdEmpresa
			NR_TRANSACAO.TRA_ITEMCLASSVC = vNrTransacao
			DT_TRANSACAO.TRA_ITEMCLASSVC = vDtTransacao
			NR_ITEM.TRA_ITEMCLASSVC = vNrItem
			CD_TIPOCLAS.TRA_ITEMCLASSVC = $item("CD_TIPOCLAS", vDsRegistro)
			CD_CLASSIFICACAO.TRA_ITEMCLASSVC = $item("CD_CLASSIFICACAO", vDsRegistro)
			retrieve/o "TRA_ITEMCLASSVC"
			if ($status = -7)
				retrieve/x "TRA_ITEMCLASSVC"
				delitem vDsLstClassificacao, 1
			else 
				CD_OPERADOR.TRA_ITEMCLASSVC = $item("CD_USUARIO", $$gParamGlb)
				DT_CADASTRO.TRA_ITEMCLASSVC = $datim
				delitem vDsLstClassificacao, 1
			endif
		until (vDsLstClassificacao = "")    

		$collhandle("TRA_ITEMCLASSVC")->Salvar()
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif    
	endif 

	return(0)

End ; operation gravaClassificacaoItem

;------------------------------
public operation gravaItemValor
;------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		string vDsLstValor, viParams, voParams, viListas
		numeric vPosInicio, vPosFim, vTamParam, vCdEmpresa, vNrTransacao
		numeric vCdEmpFat, vNrItem, vCdGrupoEmpresa, vVlValor, vCdProduto
		date vDtTransacao
		string vDsLstValorVendaGeral, vDsLstValorVenda
	endvariables
	
	vDsLstValor = $item("DS_LSTVALOR", piParams)
	vCdEmpresa = $item("CD_EMPRESA", piParams)
	vNrTransacao = $item("NR_TRANSACAO", piParams)
	vDtTransacao = $item("DT_TRANSACAO", piParams)
	vNrItem = $item("NR_ITEM", piParams)
	vCdEmpFat = $item("CD_EMPFAT", piParams)
	vCdGrupoEmpresa = $item("CD_GRUPOEMPRESA", piParams)
	vCdProduto = $item("CD_PRODUTO", piParams)
	
	if (vDsLstValor = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Lista de valores não informado!", "ADICIONAL=Operação->TRASVCO016.gravaItemValor")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa da transação não informada!", "ADICIONAL=Operação->TRASVCO016.gravaItemValor")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vNrTransacao = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número da transação não informada!", "ADICIONAL=Operação->TRASVCO016.gravaItemValor")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vDtTransacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data da transação não informada!", "ADICIONAL=Operação->TRASVCO016.gravaItemValor")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vNrItem = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Item da transação não informada!", "ADICIONAL=Operação->TRASVCO016.gravaItemValor")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vCdProduto = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Produto da transação não informado!", "ADICIONAL=Operação->TRASVCO016.gravaItemValor")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vCdEmpFat = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa de faturamento da transação não informada!", "ADICIONAL=Operação->TRASVCO016.gravaItemValor")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vCdGrupoEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Grupo empresa da transação não informada!", "ADICIONAL=Operação->TRASVCO016.gravaItemValor")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	clear/e "TRA_ITEMVLSVC"
	
	vDsLstValorVendaGeral = ""
	vPosInicio = 1
	vPosFim = 1
	length vDsLstValor
	vTamParam = $result
	while (vPosInicio < vTamParam)
		scan vDsLstValor[vPosInicio,vTamParam], ";" 
		if ($result > 0) 
			vPosFim = vPosInicio + $result - 2 
			clear/e "PRD_TIPOVALORSVC"
			TP_VALOR.PRD_TIPOVALORSVC/init = vDsLstValor[vPosInicio,vPosFim]
			vPosInicio = vPosFim + 2
			scan vDsLstValor[vPosInicio,vTamParam], ";" 
			if ($result > 0) 
				vPosFim = vPosInicio + $result - 2
				CD_VALOR.PRD_TIPOVALORSVC/init = vDsLstValor[vPosInicio,vPosFim]
				retrieve/e "PRD_TIPOVALORSVC"
				if ($status >= 0)
					viParams = ""
					putitem/id viParams, "CD_EMPRESA", vCdEmpFat
					putitem/id viParams, "CD_PRODUTO", vCdProduto
					putitem/id viParams, "TP_VALOR", TP_VALOR.PRD_TIPOVALORSVC
					putitem/id viParams, "CD_VALOR", CD_VALOR.PRD_TIPOVALORSVC
					viListas = ""    
					activate "PRDSVCO007".buscaValorData($xlpg$, viParams, viListas, voParams, $xCdErro$, $xCtxErro$)
					if ($procerror)       
						$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					elseif ($xCdErro$)
						$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%$item("DESCRICAO", $xCtxErro$)", "ADICIONAL=Operação->TRASVCO016.gravaItemValor")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					endif
					
					vVlValor = $item("VL_VALOR", voParams)
					
					creocc "TRA_ITEMVLSVC", -1
					CD_EMPRESA.TRA_ITEMVLSVC = vCdEmpresa
					NR_TRANSACAO.TRA_ITEMVLSVC = vNrTransacao
					DT_TRANSACAO.TRA_ITEMVLSVC = vDtTransacao
					NR_ITEM.TRA_ITEMVLSVC = vNrItem
					TP_VALOR.TRA_ITEMVLSVC = TP_VALOR.PRD_TIPOVALORSVC
					CD_VALOR.TRA_ITEMVLSVC = CD_VALOR.PRD_TIPOVALORSVC
					retrieve/o "TRA_ITEMVLSVC"
					if ($status = -7)
						retrieve/x "TRA_ITEMVLSVC"
					endif
					
					CD_EMPFAT.TRA_ITEMVLSVC = vCdEmpFat
					CD_GRUPOEMPRESA.TRA_ITEMVLSVC = vCdGrupoEmpresa
					CD_OPERADOR.TRA_ITEMVLSVC = $item("CD_USUARIO", $xlpg$)
					DT_CADASTRO.TRA_ITEMVLSVC = $datim
					TP_ATUALIZACAO.TRA_ITEMVLSVC = 3
					VL_UNITARIO.TRA_ITEMVLSVC = vVlValor
					
					viParams = ""
					putlistitems/occ viParams, "TRA_ITEMVLSVC"
					putitem/id viParams, "CD_PRODUTO", vCdProduto
					activate "SICSVCO006".arredondaValor($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
					if ($procerror)       
						$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					elseif ($xCdErro$)
						$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%$item("DESCRICAO", $xCtxErro$)", "ADICIONAL=Operação->TRASVCO016.gravaItemValor")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					endif
					
					vVlValor = $item("VL_VALOR", voParams)
					VL_UNITARIO.TRA_ITEMVLSVC = vVlValor

					;>-- MAC - PRJ 102/871 - 10/05/2010 ---
					vDsLstValorVenda = ""
					putlistitems/occ vDsLstValorVenda, "TRA_ITEMVLSVC"
					putitem vDsLstValorVendaGeral, -1, vDsLstValorVenda
					;--<
				endif
				vPosInicio = vPosFim + 2
			else
				break
			endif
		endif
	endwhile
	
	$collhandle("TRA_ITEMVLSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	;>-- MAC - PRJ 102/871 - 10/05/2010 ---
	poParams = ""
	putitem/id poParams, "DS_LSTVALORVENDA", vDsLstValorVendaGeral
	;--<
	return(0)
end

;-----------------------------------
public operation removeTrocaTransacao
	;-----------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		numeric vCdEmpresa, vNrTransacao
		date vDtTransacao
	endvariables
	
	vCdEmpresa = $item("CD_EMPRESA", piParams)
	vNrTransacao = $item("NR_TRANSACAO", piParams)
	vDtTransacao = $item("DT_TRANSACAO", piParams)
	
	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa da transação de devolução não informada!", "ADICIONAL=Operação->TRASVCO004.removeTrocaTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vNrTransacao = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número da transação de devolução não informado!", "ADICIONAL=Operação->TRASVCO004.removeTrocaTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vDtTransacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data da transação de devolução não informada!", "ADICIONAL=Operação->TRASVCO004.removeTrocaTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	clear/e "TRA_TRANSACAOSVC"
	CD_EMPRESA.TRA_TRANSACAOSVC/init = vCdEmpresa
	NR_TRANSACAO.TRA_TRANSACAOSVC/init = vNrTransacao
	DT_TRANSACAO.TRA_TRANSACAOSVC/init = vDtTransacao
	retrieve/e "TRA_TRANSACAOSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->TRASVCO004.removeTrocaTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1) 
	endif
	
	if (TP_OPERACAO.TRA_TRANSACAOSVC = "E") ;Entrada
		clear/e "TRA_TROCASVC"
		CD_EMPDEV.TRA_TROCASVC/init = vCdEmpresa
		NR_TRADEV.TRA_TROCASVC/init = vNrTransacao
		DT_TRADEV.TRA_TROCASVC/init = vDtTransacao
		retrieve/e "TRA_TROCASVC"
		if ($status >= 0)
			$collhandle("TRA_TROCASVC")->Excluir()
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif        
		endif
	else    
		clear/e "TRA_TROCASVC"
		CD_EMPVEN.TRA_TROCASVC/init = vCdEmpresa
		NR_TRAVEN.TRA_TROCASVC/init = vNrTransacao
		DT_TRAVEN.TRA_TROCASVC/init = vDtTransacao
		retrieve/e "TRA_TROCASVC"
		if ($status >= 0)
			$collhandle("TRA_TROCASVC")->Excluir()
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif        
		endif
	endif
	
	return(0)
end


;-----------------------------------
public operation gravaTrocaTransacao
	;-----------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		numeric vCdEmpresaDev, vCdEmpresaVen, vNrTransacaoDev, vNrTransacaoVen
		numeric vCdGrupoEmpresaDev, vCdGrupoEmpresaVen, vCdEmpFatDev, vCdEmpFatVen
		date vDtTransacaoDev, vDtTransacaoVen
	endvariables
	
	vCdEmpresaDev = $item("CD_EMPDEV", piParams)
	vNrTransacaoDev = $item("NR_TRADEV", piParams)
	vDtTransacaoDev = $item("DT_TRADEV", piParams)
	vCdEmpresaVen = $item("CD_EMPVEN", piParams)
	vNrTransacaoVen = $item("NR_TRAVEN", piParams)
	vDtTransacaoVen = $item("DT_TRAVEN", piParams)
	
	if (vCdEmpresaDev = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa da transação de devolução não informada!", "ADICIONAL=Operação->TRASVCO004.gravaTrocaTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vNrTransacaoDev = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número da transação de devolução não informado!", "ADICIONAL=Operação->TRASVCO004.gravaTrocaTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vDtTransacaoDev = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data da transação de devolução não informada!", "ADICIONAL=Operação->TRASVCO004.gravaTrocaTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vCdEmpresaVen = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa da transação de venda não informada!", "ADICIONAL=Operação->TRASVCO004.gravaTrocaTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vNrTransacaoVen = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número da transação de venda não informado!", "ADICIONAL=Operação->TRASVCO004.gravaTrocaTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vDtTransacaoVen = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data da transação de venda não informada!", "ADICIONAL=Operação->TRASVCO004.gravaTrocaTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	vCdGrupoEmpresaDev = 0
	vCdGrupoEmpresaVen = 0
	
	clear/e "GER_EMPRESASVC"
	CD_EMPRESA.GER_EMPRESASVC/init = vCdEmpresaDev
	retrieve/e "GER_EMPRESASVC"
	if ($status >= 0)
		vCdGrupoEmpresaDev = CD_GRUPOEMPRESA.GER_EMPRESASVC
	endif
	
	clear/e "GER_EMPRESASVC"
	CD_EMPRESA.GER_EMPRESASVC/init = vCdEmpresaVen
	retrieve/e "GER_EMPRESASVC"
	if ($status >= 0)
		vCdGrupoEmpresaVen = CD_GRUPOEMPRESA.GER_EMPRESASVC
	endif
	
	clear/e "TRA_TRANSACAOSVC"
	CD_EMPRESA.TRA_TRANSACAOSVC/init = vCdEmpresaDev
	NR_TRANSACAO.TRA_TRANSACAOSVC/init = vNrTransacaoDev
	DT_TRANSACAO.TRA_TRANSACAOSVC/init = vDtTransacaoDev
	retrieve/e "TRA_TRANSACAOSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%vNrTransacaoDev de devolução não cadastrada!", "ADICIONAL=Operação->TRASVCO004.gravaTrocaTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1) 
	endif

	vCdEmpFatDev = CD_EMPFAT.TRA_TRANSACAOSVC
	
	clear/e "TRA_TRANSACAOSVC"
	CD_EMPRESA.TRA_TRANSACAOSVC/init = vCdEmpresaVen
	NR_TRANSACAO.TRA_TRANSACAOSVC/init = vNrTransacaoVen
	DT_TRANSACAO.TRA_TRANSACAOSVC/init = vDtTransacaoVen
	retrieve/e "TRA_TRANSACAOSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%vNrTransacaoVen de venda não cadastrada!", "ADICIONAL=Operação->TRASVCO004.gravaTrocaTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1) 
	endif

	vCdEmpFatVen = CD_EMPFAT.TRA_TRANSACAOSVC
	
	clear/e "TRA_TRANSACAOSVC"
	
	clear/e "TRA_TROCASVC"
	CD_EMPDEV.TRA_TROCASVC/init = vCdEmpresaDev
	NR_TRADEV.TRA_TROCASVC/init = vNrTransacaoDev
	DT_TRADEV.TRA_TROCASVC/init = vDtTransacaoDev
	retrieve/e "TRA_TROCASVC"
	if ($status >= 0)
		$collhandle("TRA_TROCASVC")->Excluir()
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif        
	endif
	
	clear/e "TRA_TROCASVC"
	CD_EMPVEN.TRA_TROCASVC/init = vCdEmpresaVen
	NR_TRAVEN.TRA_TROCASVC/init = vNrTransacaoVen
	DT_TRAVEN.TRA_TROCASVC/init = vDtTransacaoVen
	retrieve/e "TRA_TROCASVC"
	if ($status >= 0)
		$collhandle("TRA_TROCASVC")->Excluir()
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif        
	endif
	
	clear/e "TRA_TROCASVC"
	creocc "TRA_TROCASVC", -1
	CD_EMPDEV.TRA_TROCASVC = vCdEmpresaDev
	NR_TRADEV.TRA_TROCASVC = vNrTransacaoDev
	DT_TRADEV.TRA_TROCASVC = vDtTransacaoDev
	CD_EMPVEN.TRA_TROCASVC = vCdEmpresaVen
	NR_TRAVEN.TRA_TROCASVC = vNrTransacaoVen
	DT_TRAVEN.TRA_TROCASVC = vDtTransacaoVen    
	CD_EMPFATDEV.TRA_TROCASVC = vCdEmpFatDev
	CD_GRUPOEMPDEV.TRA_TROCASVC = vCdGrupoEmpresaDev
	CD_EMPFATVEN.TRA_TROCASVC = vCdEmpFatVen
	CD_GRUPOEMPVEN.TRA_TROCASVC = vCdGrupoEmpresaVen
	CD_OPERADOR.TRA_TROCASVC = $item("CD_USUARIO", $xlpg$)
	DT_CADASTRO.TRA_TROCASVC = $datim    
	
	$collhandle("TRA_TROCASVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif    
	
	return(0)
end

;------------------------------------
public operation gravaDadosAdicionais
;------------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		string viParams, voParams, vDsParaUltEmail, vNmCheckout, vCdAgrupador
		numeric vCdEmpresa, vNrTransacao, vNrPrazoMedio, vCdTabPreco, vCdCCusto, vCdEmpAgrup, vCdDespesa
		numeric vTpBonus, vVlBonus, vVlBase, vCdFamiliar, vCdPropriedade, vCdPessoaProp, vPrSimulador, vVlSimulador
		date vDtTransacao, vDtBaseParcela
		boolean vInEmail, vInPrazoMedio, vInBaseParcela, vInCheckout, vInTabPreco, vInCCusto
		boolean vInTabPrecoZero, vInBonus, vInFamiliar
	endvariables
	
	vCdEmpresa      = $item("CD_EMPRESA"      , piParams)
	vNrTransacao    = $item("NR_TRANSACAO"    , piParams)
	vDtTransacao    = $item("DT_TRANSACAO"    , piParams)
	vInCheckOut     = $item("IN_CHECKOUT"     , piParams)
	vInPrazoMedio   = $item("IN_PRAZOMEDIO"   , piParams)
	vInBaseParcela  = $item("IN_BASEPARCELA"  , piParams)
	vInEmail        = $item("IN_EMAIL"        , piParams)
	vDsParaUltEmail = $item("DS_PARAULTEMAIL" , piParams)
	vNrPrazoMedio   = $item("NR_PRAZOMEDIO"   , piParams)
	vDtBaseParcela  = $item("DT_BASEPARCELA"  , piParams)
	vNmCheckout     = $item("NM_CHECKOUT"     , piParams)
	vInTabPreco     = $item("IN_TABPRECO"     , piParams)
	vCdTabPreco     = $item("CD_TABPRECO"     , piParams)
	vInTabPrecoZero = $item("IN_TABPRECOZERO" , piParams)
	vInCCusto       = $item("IN_CCUSTO"       , piParams)
	vCdCCusto       = $item("CD_CCUSTO"       , piParams)
	vCdDespesa      = $item("CD_DESPESA"      , piParams)
	vCdEmpAgrup     = $item("CD_EMPAGRUP"     , piParams)
	vCdAgrupador    = $item("CD_AGRUPADOR"    , piParams)
	vCdPropriedade  = $item("CD_PROPRIEDADE"  , piParams)
	vCdPessoaProp   = $item("CD_PESSOAPROP"   , piParams)
	vInBonus        = $item("IN_BONUS"        , piParams)
	vTpBonus        = $item("TP_BONUSDESC"    , piParams)
	vVlBonus        = $item("VL_BONUSDESC"    , piParams)
	vVlBase         = $item("VL_BASEBONUSDESC", piParams)
	vCdFamiliar     = $item("CD_FAMILIAR"     , piParams)
	vInFamiliar     = $item("IN_FAMILIAR"     , piParams)
	;==BY BIANCHINI[PRJ/TAREFA 180/224] 22/07/2011==;	
	vVlSimulador    = $item("VL_SIMULADOR"    , piParams)
	vPrSimulador    = $item("PR_SIMULADOR"    , piParams)
	;==
	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->TRASVCO016.gravaDadosAdicionais")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vNrTransacao = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número transação não informado!", "ADICIONAL=Operação->TRASVCO016.gravaDadosAdicionais")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vDtTransacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data transação não informada!", "ADICIONAL=Operação->TRASVCO016.gravaDadosAdicionais")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	clear/e "TRA_TRANSACAOSVC"
	CD_EMPRESA.TRA_TRANSACAOSVC/init   = vCdEmpresa
	NR_TRANSACAO.TRA_TRANSACAOSVC/init = vNrTransacao
	DT_TRANSACAO.TRA_TRANSACAOSVC/init = vDtTransacao
	retrieve/e "TRA_TRANSACAOSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->TRASVCO016.gravaDadosAdicionais")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif  
	
	clear/e "TRA_TRANSACADSVC"
	creocc "TRA_TRANSACADSVC", -1
	CD_EMPRESA.TRA_TRANSACADSVC   = vCdEmpresa
	NR_TRANSACAO.TRA_TRANSACADSVC = vNrTransacao
	DT_TRANSACAO.TRA_TRANSACADSVC = vDtTransacao
	retrieve/o "TRA_TRANSACADSVC"
	if ($status = -7)
		retrieve/x "TRA_TRANSACADSVC"
	else
		DT_INCLUSAO.TRA_TRANSACADSVC = $datim
	endif
	
	if (vInEmail = <TRUE>)
		CD_USUEMAIL.TRA_TRANSACADSVC     = $item("CD_USUARIO", $xlpg$)
		DT_ULTEMAIL.TRA_TRANSACADSVC     = $item("DT_SISTEMA", $xlpg$)
		DS_PARAULTEMAIL.TRA_TRANSACADSVC = vDsParaUltEmail
		NR_ENVIOEMAIL.TRA_TRANSACADSVC   = NR_ENVIOEMAIL.TRA_TRANSACADSVC + 1
	endif
	
	if (vInPrazoMedio = <TRUE>)	
		NR_PRAZOMEDIO.TRA_TRANSACADSVC = vNrPrazoMedio
	endif
	
	if (vInBaseParcela = <TRUE>)	
		DT_BASEPARCELA.TRA_TRANSACADSVC = vDtBaseParcela
	endif
	
	if (vInCheckOut = <TRUE>)	
		NM_CHECKOUT.TRA_TRANSACADSVC = vNmCheckout
	endif
	
	if (vInTabPreco = <TRUE>)
		if (CD_TABPRECO.TRA_TRANSACADSVC = 0 | vInTabPrecoZero != <TRUE>)
			CD_TABPRECO.TRA_TRANSACADSVC = vCdTabPreco
		endif
	endif
	
	if (vInBonus = <TRUE>)
		TP_BONUSDESC.TRA_TRANSACADSVC = vTpBonus
		VL_BONUSDESC.TRA_TRANSACADSVC = vVlBonus
		VL_BASEBONUSDESC.TRA_TRANSACADSVC = vVlBase
	endif
	
	if (vInCCusto = <TRUE>)
		CD_CCUSTO.TRA_TRANSACADSVC = vCdCCusto
	endif
	
	if (vCdAgrupador = "")
		CD_EMPAGRUP.TRA_TRANSACADSVC = ""
		CD_AGRUPADOR.TRA_TRANSACADSVC = ""
	else
		CD_EMPAGRUP.TRA_TRANSACADSVC = vCdEmpAgrup
		CD_AGRUPADOR.TRA_TRANSACADSVC = vCdAgrupador
	endif

	if (vCdDespesa > 0)
		CD_DESPESA.TRA_TRANSACADSVC = vCdDespesa
	endif
	
	; --- DIONE |PRJ 156/0334| 14/06/10
	if (vCdPropriedade > 0)
		CD_PROPRIEDADE.TRA_TRANSACADSVC = vCdPropriedade
	endif
	if (vCdPessoaProp > 0)
		CD_PESSOAPROP.TRA_TRANSACADSVC = vCdPessoaProp
	endif
	; ---
	
	if (vInFamiliar = <TRUE>)
		CD_FAMILIAR.TRA_TRANSACADSVC = vCdFamiliar
	endif
	
	CD_OPERADOR.TRA_TRANSACADSVC = $item("CD_USUARIO", $xlpg$)
	DT_CADASTRO.TRA_TRANSACADSVC = $datim
	;==BY BIANCHINI[PRJ/TAREFA 180/224] 22/07/2011==;
	if (vVlSimulador != "")
		VL_SIMULADOR.TRA_TRANSACADSVC = vVlSimulador
	endif
	
	if (vPrSimulador != "")
		PR_SIMULADOR.TRA_TRANSACADSVC = vPrSimulador
	endif
	;==
	$collhandle("TRA_TRANSACADSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	return(0)
end

;------------------------------------
public operation buscaDadosAdicionais
;------------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		string viParams, voParams
		numeric vCdEmpresa, vNrTransacao
		date vDtTransacao
	endvariables
	
	vCdEmpresa = $item("CD_EMPRESA", piParams)
	vNrTransacao = $item("NR_TRANSACAO", piParams)
	vDtTransacao = $item("DT_TRANSACAO", piParams)
	
	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->TRASVCO016.buscaDadosAdicionais")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vNrTransacao = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número transação não informado!", "ADICIONAL=Operação->TRASVCO016.buscaDadosAdicionais")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vDtTransacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data transação não informada!", "ADICIONAL=Operação->TRASVCO016.buscaDadosAdicionais")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	poParams = ""
	
	clear/e "TRA_TRANSACADSVC"
	CD_EMPRESA.TRA_TRANSACADSVC/init = vCdEmpresa
	NR_TRANSACAO.TRA_TRANSACADSVC/init = vNrTransacao
	DT_TRANSACAO.TRA_TRANSACADSVC/init = vDtTransacao
	retrieve/e "TRA_TRANSACADSVC"
	if ($status >= 0)
		putlistitems/occ poParams, "TRA_TRANSACADSVC"
	endif
	
	return(0)
end

;------------------------------------------
public operation buscaRelacClasPedidoFatura
;------------------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		string viParams, voParams, vDsLstClassificacao, vDsRegistro
		numeric vCdEmpresa, vCdPedido
	endvariables
	
	vCdEmpresa = $item("CD_EMPRESA", piParams)
	vCdPedido = $item("CD_PEDIDO", piParams)
	poParams = ""
	
	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->TRASVCO016.buscaRelacClasPedidoFatura")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vCdPedido = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número do pedido não informado!", "ADICIONAL=Operação->TRASVCO016.buscaRelacClasPedidoFatura")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	call getParam(vCdEmpresa, "buscaRelacClasPedidoFatura")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($status < 0)
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	vDsLstClassificacao = ""
	
	if ($cdTipoClasPed$ > 0)
		clear/e "PED_PEDIDOCLASVC"
		CD_EMPRESA.PED_PEDIDOCLASVC/init = vCdEmpresa
		CD_PEDIDO.PED_PEDIDOCLASVC/init = vCdPedido
		CD_TIPOCLAS.PED_PEDIDOCLASVC/init = $cdTipoClasPed$
		retrieve/e "PED_PEDIDOCLASVC"
		if ($status >= 0)
			clear/e "PED_CLASPEDFCSVC"
			CD_TIPOCLASPED.PED_CLASPEDFCSVC = CD_TIPOCLAS.PED_PEDIDOCLASVC
			CD_CLASSIFICACAOPED.PED_CLASPEDFCSVC = CD_CLASSIFICACAO.PED_PEDIDOCLASVC
			retrieve/e "PED_CLASPEDFCSVC"
			if ($status >= 0)
				setocc "PED_CLASPEDFCSVC", 1
				while ($status >= 0)
					vDsRegistro = ""
					putitem/id vDsRegistro, "CD_TIPOCLAS", CD_TIPOCLASFCR.PED_CLASPEDFCSVC
					putitem/id vDsRegistro, "CD_CLASSIFICACAO", CD_CLASSIFICACAOFCR.PED_CLASPEDFCSVC
					putitem vDsLstClassificacao, -1, vDsRegistro
					
					setocc "PED_CLASPEDFCSVC", $curocc("PED_CLASPEDFCSVC") + 1
				endwhile
			endif
			
			putlistitems/occ poParams, "TRA_TRANSACADSVC"
		endif
	endif
	
	putitem/id poParams, "DS_LSTCLASSIFICACAO", vDsLstClassificacao
	
	return(0)
end

;---------------------------------
public operation gravaECFTransacao
;---------------------------------

	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		string	viParams, voParams
		numeric	vCdEmpresa, vNrTransacao, vCdEmpECF, vNrECF, vNrCupom
		date 		vDtTransacao
		Boolean	vInGravaRelacao
	endvariables
	
	vCdEmpresa			= $item("CD_EMPRESA", piParams)
	vNrTransacao		= $item("NR_TRANSACAO", piParams)
	vDtTransacao		= $item("DT_TRANSACAO", piParams)
	vCdEmpECF			= $item("CD_EMPECF", piParams)
	vNrECF				= $item("NR_ECF", piParams)
	vNrCupom				= $item("NR_CUPOM", piParams)
	vInGravaRelacao	= $item("IN_GRAVARELACAO", piParams) ;* Claudemir - Prj/Tarefa: 111/1989 - 20/11/2011
	
	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->TRASVCO004.gravaECFTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vNrTransacao = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número transação não informado!", "ADICIONAL=Operação->TRASVCO004.gravaECFTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vDtTransacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data transação não informada!", "ADICIONAL=Operação->TRASVCO004.gravaECFTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vCdEmpECF = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa da ECF não informada!", "ADICIONAL=Operação->TRASVCO004.gravaECFTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vNrECF = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número da ECF não informada!", "ADICIONAL=Operação->TRASVCO004.gravaECFTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vNrCupom = 0)
		vNrCupom = vNrTransacao
	endif
	
	clear/e "TRA_TRANSACAOSVC"
	CD_EMPRESA.TRA_TRANSACAOSVC/init = vCdEmpresa
	NR_TRANSACAO.TRA_TRANSACAOSVC/init = vNrTransacao
	DT_TRANSACAO.TRA_TRANSACAOSVC/init = vDtTransacao
	retrieve/e "TRA_TRANSACAOSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->TRASVCO004.gravaECFTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif  
	
	clear/e "TRA_TRANSACECSVC"
	retrieve/e "TRA_TRANSACECSVC"
	if ($status >= 0)
		$collhandle("TRA_TRANSACECSVC")->Excluir()
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	else
		clear/e "TRA_TRANSACECSVC"
	endif    

	CD_EMPECF.TRA_TRANSACECSVC			= vCdEmpECF
	NR_ECF.TRA_TRANSACECSVC			= vNrECF
	CD_EMPFAT.TRA_TRANSACECSVC			= CD_EMPFAT.TRA_TRANSACAOSVC
	CD_GRUPOEMPRESA.TRA_TRANSACECSVC	= CD_GRUPOEMPRESA.TRA_TRANSACAOSVC
	TP_SITUACAO.TRA_TRANSACECSVC		= "N" ;Normal
	NR_CUPOM.TRA_TRANSACECSVC			= vNrCupom
	CD_OPERADOR.TRA_TRANSACECSVC		= $item("CD_USUARIO", $xlpg$)
	DT_CADASTRO.TRA_TRANSACECSVC		= $datim    
	
	$collhandle("TRA_TRANSACECSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	;* Claudemir - Prj/Tarefa: 191/2 - 06/09/2011
	;commit ;*
	;* Claudemir - Prj/Tarefa: 111/1989 - 20/10/2011
	if (vInGravaRelacao = <TRUE>)
		commit
	endif  ;*
	
	return(0)
end

;-------------------------------------------
public operation gravaDevolucaoItemTransacao
	;---------------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		string viParams, voParams, viListas, vDsRegistro, vDsLstDev
		numeric vCdEmpresa, vNrTransacao, vNrItem
		date vDtTransacao
		boolean vInInclusao
	endvariables
	
	vCdEmpresa = $item("CD_EMPRESA", piParams)
	vNrTransacao = $item("NR_TRANSACAO", piParams)
	vDtTransacao = $item("DT_TRANSACAO", piParams)
	vNrItem = $item("NR_ITEM", piParams)
	vDsLstDev = $item("DS_LSTDEV", piParams)
	
	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->TRASVCO004.gravaDevolucaoItemTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vNrTransacao = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número transação não informado!", "ADICIONAL=Operação->TRASVCO004.gravaDevolucaoItemTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vDtTransacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data transação não informada!", "ADICIONAL=Operação->TRASVCO004.gravaDevolucaoItemTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vNrItem = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Item da transação não informado!", "ADICIONAL=Operação->TRASVCO004.gravaDevolucaoItemTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif    
	
	clear/e "TRA_TRANSACAOSVC"
	CD_EMPRESA.TRA_TRANSACAOSVC/init = vCdEmpresa
	NR_TRANSACAO.TRA_TRANSACAOSVC/init = vNrTransacao
	DT_TRANSACAO.TRA_TRANSACAOSVC/init = vDtTransacao
	retrieve/e "TRA_TRANSACAOSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->TRASVCO004.gravaDevolucaoItemTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1) 
	endif    
	clear/e "TRA_TRANSITEMSVC"
	NR_ITEM.TRA_TRANSITEMSVC/init = vNrItem
	retrieve/e "TRA_TRANSITEMSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Item %%vNrItem da transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->TRASVCO004.gravaDevolucaoItemTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1) 
	endif 

	vInInclusao = <TRUE>

	clear/e "TRA_ITEMDEVSVC"
	retrieve/e "TRA_ITEMDEVSVC"
	if ($status >= 0)		
		$collhandle("TRA_ITEMDEVSVC")->Excluir()
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		vInInclusao = <FALSE>
	endif
	
	if (vDsLstDev != "")
		repeat
			getitem vDsRegistro, vDsLstDev, 1
			creocc "TRA_ITEMDEVSVC", -1
			getlistitems/occ vDsRegistro, "TRA_ITEMDEVSVC"
			NR_SEQUENCIA.TRA_ITEMDEVSVC = $curocc("TRA_ITEMDEVSVC")
			CD_EMPFAT.TRA_ITEMDEVSVC = CD_EMPFAT.TRA_TRANSITEMSVC
			CD_GRUPOEMPRESA.TRA_ITEMDEVSVC = CD_GRUPOEMPRESA.TRA_TRANSITEMSVC
			CD_OPERADOR.TRA_ITEMDEVSVC = $item("CD_USUARIO", $xlpg$)
			DT_CADASTRO.TRA_ITEMDEVSVC = $datim

			if (vInInclusao = <TRUE>)
				if (NR_TRANSACAOORI.TRA_ITEMDEVSVC > 0)
					clear/e "PED_PEDIDOTRASVC"
					CD_EMPTRANSACAO.PED_PEDIDOTRASVC/init = CD_EMPRESAORI.TRA_ITEMDEVSVC
					NR_TRANSACAO.PED_PEDIDOTRASVC/init = NR_TRANSACAOORI.TRA_ITEMDEVSVC
					DT_TRANSACAO.PED_PEDIDOTRASVC/init = DT_TRANSACAOORI.TRA_ITEMDEVSVC
					retrieve/e "PED_PEDIDOTRASVC"
					if ($status >= 0)
						CD_REPRESENTANT.TRA_ITEMDEVSVC = CD_REPRESENTANT.PED_PEDIDOCSVC
						PR_COMISSAOFAT.TRA_ITEMDEVSVC = PR_COMISSAOFAT.PED_PEDIDOCSVC
						PR_COMISSAOREC.TRA_ITEMDEVSVC = PR_COMISSAOREC.PED_PEDIDOCSVC
					endif
				endif
			endif
			
			delitem vDsLstDev, 1
		until (vDsLstDev = "")

		$collhandle("TRA_ITEMDEVSVC")->Salvar()
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif 
	
	return(0)
end

;---Elia Proj. 22/557 07/05/08-------------
public operation consultaLiberacaoTransacao
;------------------------------------------

	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		string viParams, voParams
		numeric vCdGrupoEmpresa, vNrTransacao, vTpLiberacao
		date vDtTransacao
	endvariables
	
	vCdGrupoEmpresa = $item("CD_GRUPOEMPRESA", piParams)
	vNrTransacao = $item("NR_TRANSACAO", piParams)
	vDtTransacao = $item("DT_TRANSACAO", piParams)
	
	if (vCdGrupoEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Grupo empresa não informado!", "ADICIONAL=Operação->TRASVCO016.consultaLiberacaoTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vNrTransacao = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número transação não informado!", "ADICIONAL=Operação->TRASVCO016.consultaLiberacaoTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vDtTransacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data transação não informada!", "ADICIONAL=Operação->TRASVCO016.consultaLiberacaoTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	clear/e "TRA_TRANSACAOSVC"
	CD_GRUPOEMPRESA.TRA_TRANSACAOSVC/init = vCdGrupoEmpresa
	NR_TRANSACAO.TRA_TRANSACAOSVC/init = vNrTransacao
	DT_TRANSACAO.TRA_TRANSACAOSVC/init = vDtTransacao
	retrieve/e "TRA_TRANSACAOSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->TRASVCO016.consultaLiberacaoTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif  
	
	clear/e "TRA_LIBERACAOSVC"
	retrieve/e "TRA_LIBERACAOSVC"
	if ($status >= 0)
		putitem/id poParams, "TP_LIBERACAO", TP_LIBERACAO.TRA_LIBERACAOSVC
	endif    
	
	return(0)

End ; operation consultaLiberacaoTransacao

;------------------------------------
public operation gravaSerialTransacao
;------------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		numeric vCdEmpresa, vNrTransacao, vNrItem, vNrSequencia, vNrSeqSerial
		date vDtTransacao
		string vDsLstSerial, vDsSerial
	endvariables
	
	vCdEmpresa = $item("CD_EMPRESA", piParams)
	vNrTransacao = $item("NR_TRANSACAO", piParams)
	vDtTransacao = $item("DT_TRANSACAO", piParams)
	vNrItem = $item("NR_ITEM", piParams)
	vDsLstSerial = $item("DS_LSTSERIAL", piParams)
	
	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->TRASVCO016.gravaSerialTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vNrTransacao = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número transação não informado!", "ADICIONAL=Operação->TRASVCO016.gravaSerialTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vDtTransacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data transação não informada!", "ADICIONAL=Operação->TRASVCO016.gravaSerialTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vNrItem = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Item da transação não informada!", "ADICIONAL=Operação->TRASVCO016.gravaSerialTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vDsLstSerial = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Lista de serial não informada!", "ADICIONAL=Operação->TRASVCO016.gravaSerialTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	clear/e "TRA_TRANSACAOSVC"
	CD_EMPRESA.TRA_TRANSACAOSVC/init = vCdEmpresa
	NR_TRANSACAO.TRA_TRANSACAOSVC/init = vNrTransacao
	DT_TRANSACAO.TRA_TRANSACAOSVC/init = vDtTransacao
	retrieve/e "TRA_TRANSACAOSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->TRASVCO016.gravaSerialTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif  
	
	clear/e "TRA_TRANSITEMSVC"
	NR_ITEM.TRA_TRANSITEMSVC/init = vNrItem
	retrieve/e "TRA_TRANSITEMSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Item %%vNrItem da transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->TRASVCO016.gravaSerialTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif  
	
	if ($empty("TRA_ITEMSERIASVC") != 0)
		setocc "TRA_ITEMSERIASVC", -1
		vNrSequencia = NR_SEQUENCIA.TRA_ITEMSERIASVC + 1
	else
		vNrSequencia = 1
	endif
	
	repeat
		getitem vDsSerial, vDsLstSerial, 1
		
		creocc "TRA_ITEMSERIASVC", -1
		NR_SEQUENCIA.TRA_ITEMSERIASVC = vNrSequencia
		CD_OPERADOR.TRA_ITEMSERIASVC = $item("CD_USUARIO", $xlpg$)
		DT_CADASTRO.TRA_ITEMSERIASVC = $datim
		CD_EMPFAT.TRA_ITEMSERIASVC = CD_EMPFAT.TRA_TRANSACAOSVC
		CD_GRUPOEMPRESA.TRA_ITEMSERIASVC = CD_GRUPOEMPRESA.TRA_TRANSACAOSVC
		DS_SERIAL.TRA_ITEMSERIASVC = vDsSerial
		
		clear/e "PRD_PRDSERIALSVC"
		CD_PRODUTO.PRD_PRDSERIALSVC/init = CD_PRODUTO.TRA_TRANSITEMSVC
		DS_SERIAL.PRD_PRDSERIALSVC/init = vDsSerial
		if (TP_OPERACAO.TRA_TRANSACAOSVC = "S")
			TP_SITUACAO.PRD_PRDSERIALSVC/init = 1 ;Aberto
		else
			TP_SITUACAO.PRD_PRDSERIALSVC/init = 2 ;Baixado
		endif
		retrieve/e "PRD_PRDSERIALSVC"
		if ($status >= 0)
			setocc "PRD_PRDSERIALSVC", 1
			if (TP_OPERACAO.TRA_TRANSACAOSVC = "S")
				TP_SITUACAO.PRD_PRDSERIALSVC = 2 ;Baixado
			else
				TP_SITUACAO.PRD_PRDSERIALSVC = 1 ;Aberto
			endif
			
			$collhandle("PRD_PRDSERIALSVC")->Salvar()
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		endif
		
		vNrSequencia = vNrSequencia + 1 ;* Claudemir - Prj/Tarefa: 182/38 - 04/04/2011
		delitem vDsLstSerial, 1
	until (vDsLstSerial = "")
	
	$collhandle("TRA_ITEMSERIASVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	return(0)
end

;-------------------------------------
public operation removeSerialTransacao
;-------------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		numeric vCdEmpresa, vNrTransacao, vNrItem
		date vDtTransacao
	endvariables
	
	vCdEmpresa = $item("CD_EMPRESA", piParams)
	vNrTransacao = $item("NR_TRANSACAO", piParams)
	vDtTransacao = $item("DT_TRANSACAO", piParams)
	vNrItem = $item("NR_ITEM", piParams)
	
	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->TRASVCO016.removeSerialTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vNrTransacao = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número transação não informado!", "ADICIONAL=Operação->TRASVCO016.removeSerialTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vDtTransacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data transação não informada!", "ADICIONAL=Operação->TRASVCO016.removeSerialTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vNrItem = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Item da transação não informada!", "ADICIONAL=Operação->TRASVCO016.removeSerialTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	clear/e "TRA_TRANSACAOSVC"
	CD_EMPRESA.TRA_TRANSACAOSVC/init = vCdEmpresa
	NR_TRANSACAO.TRA_TRANSACAOSVC/init = vNrTransacao
	DT_TRANSACAO.TRA_TRANSACAOSVC/init = vDtTransacao
	retrieve/e "TRA_TRANSACAOSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->TRASVCO016.removeSerialTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif  
	
	clear/e "TRA_TRANSITEMSVC"
	NR_ITEM.TRA_TRANSITEMSVC/init = vNrItem
	retrieve/e "TRA_TRANSITEMSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Item %%vNrItem da transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->TRASVCO016.removeSerialTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif  
	
	if ($empty("TRA_ITEMSERIASVC") = 0)
		setocc "TRA_ITEMSERIASVC", 1
		while ($status >= 0)
			clear/e "PRD_PRDSERIALSVC"
			CD_PRODUTO.PRD_PRDSERIALSVC/init = CD_PRODUTO.TRA_TRANSITEMSVC
			DS_SERIAL.PRD_PRDSERIALSVC/init = DS_SERIAL.TRA_ITEMSERIASVC
			if (TP_OPERACAO.TRA_TRANSACAOSVC = "S")
				TP_SITUACAO.PRD_PRDSERIALSVC/init = 2 ;Baixado
			else
				TP_SITUACAO.PRD_PRDSERIALSVC/init = 1 ;Aberto
			endif
			retrieve/e "PRD_PRDSERIALSVC"
			if ($status >= 0)
				setocc "PRD_PRDSERIALSVC", 1
				if (TP_OPERACAO.TRA_TRANSACAOSVC = "S")
					TP_SITUACAO.PRD_PRDSERIALSVC = 1 ;Aberto
				else
					TP_SITUACAO.PRD_PRDSERIALSVC = 2 ;Baixado
				endif
				
				$collhandle("PRD_PRDSERIALSVC")->Salvar()
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
			endif
			
			setocc "TRA_ITEMSERIASVC", $curocc("TRA_ITEMSERIASVC") + 1
		endwhile
	endif
	
	$collhandle("TRA_ITEMSERIASVC")->Excluir()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	return(0)
end

;---Elia Proj. 22/464 15/01/09---
public operation gravaDespesaItem
;--------------------------------

	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		string  vDsLstDespesa, vDsRegistro, vCdComponente
		numeric vCdEmpresa, vNrTransacao, vNrItem, vCdDespesaItem, vCdCCusto, vPrRateio
		date vDtTransacao
	endvariables
	
	vCdEmpresa = $item("CD_EMPRESA", piParams)
	vNrTransacao = $item("NR_TRANSACAO", piParams)
	vDtTransacao = $item("DT_TRANSACAO", piParams)
	vNrItem = $item("NR_ITEM", piParams)
	vDsLstDespesa = $item("DS_LSTDESPESA", piParams)
	vCdDespesaItem = ""
	vCdCCusto = ""

	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa da transação não informada!", "ADICIONAL=Operação->TRASVCO016.gravaDespesaItem")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (vNrTransacao = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número da transação não informado!", "ADICIONAL=Operação->TRASVCO016.gravaDespesaItem")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vDtTransacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data da transação não informada!", "ADICIONAL=Operação->TRASVCO016.gravaDespesaItem")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (vNrItem = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Item da transação não informado!", "ADICIONAL=Operação->TRASVCO016.gravaDespesaItem")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	clear/e "TRA_TRANSACAOSVC"
	CD_EMPRESA.TRA_TRANSACAOSVC/init = vCdEmpresa
	NR_TRANSACAO.TRA_TRANSACAOSVC/init = vNrTransacao
	DT_TRANSACAO.TRA_TRANSACAOSVC/init = vDtTransacao
	retrieve/e "TRA_TRANSACAOSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->TRASVCO016.gravaDespesaItem")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	clear/e "TRA_TRANSITEMSVC"
	NR_ITEM.TRA_TRANSITEMSVC/init = vNrItem
	retrieve/e "TRA_TRANSITEMSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Item %%vNrItem da Transação %%vNrTransacao não cadastrado!", "ADICIONAL=Operação->TRASVCO016.gravaDespesaItem")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (!$empty("TRA_ITEMDESPSVC"))
		$collhandle("TRA_ITEMDESPSVC")->Excluir()
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif 			   
	endif		
	
	if (vDsLstDespesa != "")			
		repeat
			getitem vDsRegistro, vDsLstDespesa, 1

			vCdDespesaItem	= $item("CD_DESPESAITEM", vDsRegistro)
			if (vCdDespesaItem = "")
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Despesa inválida!", "ADICIONAL=Operação->TRASVCO016.gravaDespesaItem")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif

			vCdCCusto = $item("CD_CCUSTO", vDsRegistro)
			if (vCdCCusto = "")
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Centro de custo inválido!", "ADICIONAL=Operação->TRASVCO016.gravaDespesaItem")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif

			vPrRateio = $item("PR_RATEIO", vDsRegistro)
			if (vPrRateio > 0)
				creocc "TRA_ITEMDESPSVC", -1
				CD_EMPRESA.TRA_ITEMDESPSVC = vCdEmpresa
				NR_TRANSACAO.TRA_ITEMDESPSVC = vNrTransacao
				DT_TRANSACAO.TRA_ITEMDESPSVC = vDtTransacao
				NR_ITEM.TRA_ITEMDESPSVC = vNrItem
				CD_DESPESAITEM.TRA_ITEMDESPSVC = vCdDespesaItem
				CD_CCUSTO.TRA_ITEMDESPSVC = vCdCCusto
				retrieve/o "TRA_ITEMDESPSVC"
				if ($status = -7)
					retrieve/x "TRA_ITEMDESPSVC"
				endif 

				CD_OPERADOR.TRA_ITEMDESPSVC = $item("CD_USUARIO", $xlpg$)
				DT_CADASTRO.TRA_ITEMDESPSVC = $datim
				PR_RATEIO.TRA_ITEMDESPSVC   = PR_RATEIO.TRA_ITEMDESPSVC + vPrRateio	
			endif
			delitem vDsLstDespesa, 1
		until (vDsLstDespesa = "")    

		$collhandle("TRA_ITEMDESPSVC")->Salvar()
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif    
	endif 

	return(0)

End ; operation gravaDespesaItem

;---Elia Proj. 22/464 15/01/09---
public operation buscaDespesaItem
;--------------------------------

	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		string  vDsLstDespesa, vDsRegistro, vCdComponente
		numeric vCdEmpresa, vNrTransacao, vNrItem
		date vDtTransacao
	endvariables
	
	vCdEmpresa = $item("CD_EMPRESA", piParams)
	vNrTransacao = $item("NR_TRANSACAO", piParams)
	vDtTransacao = $item("DT_TRANSACAO", piParams)
	vNrItem = $item("NR_ITEM", piParams)
	vDsLstDespesa = ""

	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa da transação não informada!", "ADICIONAL=Operação->TRASVCO016.buscaDespesaItem")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (vNrTransacao = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número da transação não informado!", "ADICIONAL=Operação->TRASVCO016.buscaDespesaItem")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vDtTransacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data da transação não informada!", "ADICIONAL=Operação->TRASVCO016.buscaDespesaItem")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (vNrItem = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Item da transação não informado!", "ADICIONAL=Operação->TRASVCO016.buscaDespesaItem")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	clear/e "TRA_TRANSACAOSVC"
	CD_EMPRESA.TRA_TRANSACAOSVC/init = vCdEmpresa
	NR_TRANSACAO.TRA_TRANSACAOSVC/init = vNrTransacao
	DT_TRANSACAO.TRA_TRANSACAOSVC/init = vDtTransacao
	retrieve/e "TRA_TRANSACAOSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->TRASVCO016.buscaDespesaItem")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	clear/e "TRA_TRANSITEMSVC"
	NR_ITEM.TRA_TRANSITEMSVC/init = vNrItem
	retrieve/e "TRA_TRANSITEMSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Item %%vNrItem da Transação %%vNrTransacao não cadastrado!", "ADICIONAL=Operação->TRASVCO016.buscaDespesaItem")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (!$empty("TRA_ITEMDESPSVC"))
		setocc "TRA_ITEMDESPSVC", 1
		while ($status >= 0)
			vDsRegistro = ""
			putlistitems/occ vDsRegistro, "TRA_ITEMDESPSVC"
			putitem vDsLstDespesa, -1, vDsRegistro
			setocc "TRA_ITEMDESPSVC", $curocc("TRA_ITEMDESPSVC") + 1
		endwhile
	endif

	putitem/id poParams, "DS_LSTDESPESA", vDsLstDespesa

	return (0)

End ; operation buscaDespesaItem

;----------------------------------
public operation gravaDevolucaoItem
;----------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		string  vDsLstDevolucao, vDsRegistro
		numeric vCdEmpresa, vNrTransacao, vNrSequencia
		date vDtTransacao
	endvariables
	
	vCdEmpresa = $item("CD_EMPRESA", piParams)
	vNrTransacao = $item("NR_TRANSACAO", piParams)
	vDtTransacao = $item("DT_TRANSACAO", piParams)
	vDsLstDevolucao = $item("DS_LSTDEVOLUCAO", piParams)

	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa da transação não informada!", "ADICIONAL=Operação->TRASVCO016.gravaDevolucaoItem")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (vNrTransacao = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número da transação não informado!", "ADICIONAL=Operação->TRASVCO016.gravaDevolucaoItem")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vDtTransacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data da transação não informada!", "ADICIONAL=Operação->TRASVCO016.gravaDevolucaoItem")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vDsLstDevolucao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Item de devolução não informado!", "ADICIONAL=Operação->TRASVCO016.gravaDevolucaoItem")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	clear/e "TRA_TRANSACAOSVC"
	CD_EMPRESA.TRA_TRANSACAOSVC/init = vCdEmpresa
	NR_TRANSACAO.TRA_TRANSACAOSVC/init = vNrTransacao
	DT_TRANSACAO.TRA_TRANSACAOSVC/init = vDtTransacao
	retrieve/e "TRA_TRANSACAOSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->TRASVCO016.gravaDevolucaoItem")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif  
	
	vNrSequencia = 1
	
	if (vDsLstDevolucao != "")			
		repeat
			getitem vDsRegistro, vDsLstDevolucao, 1

			creocc "TRA_DEVNFITEMSVC", -1
			CD_EMPRESA.TRA_DEVNFITEMSVC = vCdEmpresa
			NR_TRANSACAO.TRA_DEVNFITEMSVC = vNrTransacao
			DT_TRANSACAO.TRA_DEVNFITEMSVC = vDtTransacao
			NR_SEQUENCIA.TRA_DEVNFITEMSVC = vNrSequencia
			retrieve/o "TRA_DEVNFITEMSVC"
			if ($status = -7)
				retrieve/x "TRA_DEVNFITEMSVC"
			endif
			
			CD_OPERADOR.TRA_DEVNFITEMSVC = $item("CD_USUARIO", $$gParamGlb)
			DT_CADASTRO.TRA_DEVNFITEMSVC = $datim
			
			CD_EMPFAT.TRA_DEVNFITEMSVC = $item("CD_EMPFAT", vDsRegistro)
			NR_FATURA.TRA_DEVNFITEMSVC = $item("NR_FATURA", vDsRegistro)
			DT_FATURA.TRA_DEVNFITEMSVC = $item("DT_FATURA", vDsRegistro)
			NR_ITEM.TRA_DEVNFITEMSVC = $item("NR_ITEM", vDsRegistro)
			CD_PRODUTO.TRA_DEVNFITEMSVC = $item("CD_PRODUTO", vDsRegistro)
			QT_DEVOLUCAO.TRA_DEVNFITEMSVC = $item("QT_DEVOLUCAO", vDsRegistro)
			
			vNrSequencia = vNrSequencia + 1
			
			delitem vDsLstDevolucao, 1
		until (vDsLstDevolucao = "")    

		$collhandle("TRA_DEVNFITEMSVC")->Salvar()
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif    
	endif 

	return(0)
end

;-----------------------------------
public operation validaCapaTransacao
;-----------------------------------
	params
		string  $xlpg$      :IN
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		numeric vCdPessoa
	endvariables
	
	vCdPessoa = $item("CD_PESSOA", piParams)
	
	if (vCdPessoa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Pessoa não informada!", "ADICIONAL=Operação->TRASVCO016.validaCapaTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	call getParam($item("CD_EMPRESA", $xlpg$), "buscaRelacClasPedidoFatura")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($status < 0)
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if ($tpValidaFamiliar$ = 1)
		clear/e "PES_FAMILIARSVC"
		CD_PARENTE.PES_FAMILIARSVC/init = vCdPessoa
		retrieve/e "PES_FAMILIARSVC"
		if ($status >= 0)
			clear/e "PES_PESSOASVC"
			CD_PESSOA.PES_PESSOASVC/init = CD_PESSOA.PES_FAMILIARSVC
			retrieve/e "PES_PESSOASVC"
			if ($status >= 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Pessoa %%vCdPessoa da transação é familiar de %%CD_PESSOA.PES_FAMILIARSVC - %%NM_PESSOA.PES_PESSOASVC%%%!", "ADICIONAL=Operação->TRASVCO016.validaCapaTransacao")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		endif
	endif
	
	return(0)
end