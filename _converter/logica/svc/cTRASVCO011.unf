;---------------------------------
public operation gravaLiqTransacao
;---------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		string vDsRegistro, vDsLstTransacao, vDsLstFatura, vDsLstMovCC, vDsLstDuplicata
		string viParams, voParams
		numeric vCdEmpresa, vNrTransacao, vNrSeqLiq, vNrCtaPesCx, vNrSeqHistRelSub
		numeric vCdCliente, vNrFat, vNrParcela, vNrSeq, vNrCtaPesMov, vNrSeqMov
		numeric vCdFornecedor, vNrDuplicata, vCdPessoa, vTpChequePresente
		numeric vNrCtaPes, vCdEmpresaChe, vCdClienteChe, vNrCheque, vVlCheque
		date vDtTransacao, vDtSistema, vDtMovim
		boolean vInCompra
	endvariables
	
	vCdPessoa = $item("CD_PESSOA", piParams)
	vDsLstTransacao = $item("DS_LSTTRANSACAO", piParams)
	vDsLstFatura = $item("DS_LSTFATURA", piParams)
	vDsLstDuplicata = $item("DS_LSTDUPLICATA", piParams)
	vDsLstMovCC = $item("DS_LSTMOVCC", piParams)
	vDtSistema = $item("DT_SISTEMA" , $xlpg$)
	;---Elia Proj. 130/16 21/07/08
	;$vlReceber$ = 0	
	$vlReceber$ = $item("VL_RECEBER", piParams)
	;
	vTpChequePresente = $item("TP_CHEQUEPRESENTE", piParams)
	$vlRecebido$ = 0

	if (vDsLstTransacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Lista de transação não informada!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	if (vCdPessoa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Pessoa não informada!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	clear/e "TRA_TRANSACAOSVC"
	clear/e "FCR_FATURAISVC"
	clear/e "FCC_MOVSVC"

	vInCompra = <FALSE>
	
	repeat
		getitem vDsRegistro, vDsLstTransacao, 1
		vCdEmpresa = $item("CD_EMPRESA", vDsRegistro)
		vNrTransacao = $item("NR_TRANSACAO", vDsRegistro)
		vDtTransacao = $item("DT_TRANSACAO", vDsRegistro)
		
		if (vCdEmpresa = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa da transação não informada!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		
		if (vNrTransacao = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número da transação não informado!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1) 
		endif
		
		if (vDtTransacao = "")
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data da transação não informada!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		
		creocc "TRA_TRANSACAOSVC", -1
		CD_EMPRESA.TRA_TRANSACAOSVC/init = vCdEmpresa
		NR_TRANSACAO.TRA_TRANSACAOSVC/init = vNrTransacao
		DT_TRANSACAO.TRA_TRANSACAOSVC/init = vDtTransacao
		retrieve/o "TRA_TRANSACAOSVC"
		if ($status = -7)
			retrieve/x "TRA_TRANSACAOSVC"
			if (TP_OPERACAO.TRA_TRANSACAOSVC = "E") & (TP_MODALIDADE.GER_OPERACAOSVC = 1 | TP_MODALIDADE.GER_OPERACAOSVC = 2 | TP_MODALIDADE.GER_OPERACAOSVC = 4 | TP_MODALIDADE.GER_OPERACAOSVC = 5 | TP_MODALIDADE.GER_OPERACAOSVC = "E") ;Serviço / Compra / Transferência entrada / Outras entradas / Conhecimento frete
				vInCompra = <TRUE>
			endif
		elseif ($status = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1) 
		endif  
		
		delitem vDsLstTransacao, 1
	until (vDsLstTransacao = "")

	if (vInCompra = <TRUE>) & ($totocc("TRA_TRANSACAOSVC") > 1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Não é permitido liquidação mais de uma transação de compra ao mesmo tempo!", "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1) 
	endif

	setocc "TRA_TRANSACAOSVC", 1

	if (TP_MODALIDADE.GER_OPERACAOSVC = 3) ;Devolução
		if (vDsLstMovCC = "")
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Lista de movimentação não informada!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
	elseif (vInCompra = <TRUE>)
		if (vDsLstDuplicata = "")
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Lista de duplicata não informada!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
	else
		if (vDsLstFatura = "")
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Lista de fatura não informada!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
	endif
		
	if (vDsLstFatura != "")
		repeat
			getitem vDsRegistro, vDsLstFatura, 1
			vCdEmpresa = $item("CD_EMPRESA", vDsRegistro)
			vCdCliente = $item("CD_CLIENTE", vDsRegistro)
			vNrFat = $item("NR_FAT", vDsRegistro)
			vNrParcela = $item("NR_PARCELA", vDsRegistro)
			vNrCtaPesCx = $item("NR_CTAPESCX", vDsRegistro)
			vNrSeqHistRelSub = $item("NR_SEQHISTRELSUB", vDsRegistro)
			;Projeto 180 - Tarefa 0227 - Aloisio Gargantini - 27/07/2011
			vNrCtaPes     = $item("NR_CTAPES", vDsRegistro)
			vCdEmpresaChe = $item("CD_EMPRESACHE", vDsRegistro)
			vCdClienteChe = $item("CD_CLIENTECHE", vDsRegistro)
			vNrCheque     = $item("NR_CHEQUE", vDsRegistro)
			vVlCheque     = $item("VL_CHEQUE", vDsRegistro)
			;
			if (vCdEmpresa = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa da fatura não informada!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
		
			if (vCdCliente = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Cliente da faturada não informado!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1) 
			endif
			
			if (vNrFat = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número da fatura não informado!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif

			if (vNrParcela = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Parcela da fatura não informado!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
	
			if (vNrCtaPesCx = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Conta corrente do usuário não informada!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
			
			creocc "FCR_FATURAISVC", -1
			CD_EMPRESA.FCR_FATURAISVC/init = vCdEmpresa
			CD_CLIENTE.FCR_FATURAISVC/init = vCdCliente
			NR_FAT.FCR_FATURAISVC/init = vNrFat
			NR_PARCELA.FCR_FATURAISVC/init = vNrParcela
			retrieve/o "FCR_FATURAISVC"
			if ($status = -7)
				retrieve/x "FCR_FATURAISVC"
				if (TP_DOCUMENTO.FCR_FATURAISVC = 4 | TP_DOCUMENTO.FCR_FATURAISVC = 5)
					if (vNrSeqHistRelSub = 0)
						$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Histórico auxiliar de parcelamento não informado!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						exit(-1)
					endif
				endif
				NR_CTAPESCX.FCR_FATURAISVC/init = vNrCtaPesCx
				NR_SEQHISTRELSUB.FCR_FATURAISVC/init = vNrSeqHistRelSub
				;Projeto 180 - Tarefa 0227 - Aloisio Gargantini - 27/07/2011
				NR_CTAPES.FCR_FATURAISVC/init     = vNrCtaPes
				CD_EMPRESACHE.FCR_FATURAISVC/init = vCdEmpresaChe
				CD_CLIENTECHE.FCR_FATURAISVC/init = vCdClienteChe
				NR_CHEQUE.FCR_FATURAISVC/init     = vNrCheque
				VL_CHEQUE.FCR_FATURAISVC/init     = vVlCheque
				;
			elseif ($status = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Fatura %%vNrFat não cadastrada!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1) 
			endif  
			
			delitem vDsLstFatura, 1
		until (vDsLstFatura = "")

		setocc "FCR_FATURAISVC", 1
	endif	

	if (vDsLstMovCC != "")
		repeat
			getitem vDsRegistro, vDsLstMovCC, 1			
			vNrCtaPesMov = $item("NR_CTAPES", vDsRegistro)
			vDtMovim = $item("DT_MOVIM", vDsRegistro)
			vNrSeqMov = $item("NR_SEQMOV", vDsRegistro)

			if (vNrCtaPesMov = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Conta da movimentação não informada!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif

			if (vDtMovim = "")
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data da movimentação não informada!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif

			if (vNrSeqMov = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Sequência da movimentação não informada!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif

			creocc "FCC_MOVSVC", -1
			NR_CTAPES.FCC_MOVSVC/init = vNrCtaPesMov
			DT_MOVIM.FCC_MOVSVC/init = vDtMovim
			NR_SEQMOV.FCC_MOVSVC/init = vNrSeqMov
			retrieve/o "FCC_MOVSVC"
			if ($status = -7)
				retrieve/x "FCC_MOVSVC"
			elseif ($status = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Movimentação %%NR_CTAPES.FCC_MOVSVC / %%DT_MOVIM.FCC_MOVSVC / %%NR_SEQMOV.FCC_MOVSVC não cadastrada!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1) 
			endif

			delitem vDsLstMovCC, 1
		until (vDsLstMovCC = "")

		setocc "FCC_MOVSVC", 1
	endif

	if (vDsLstDuplicata != "")
		repeat
			getitem vDsRegistro, vDsLstDuplicata, 1
			vCdEmpresa = $item("CD_EMPRESA", vDsRegistro)
			vCdFornecedor = $item("CD_FORNECEDOR", vDsRegistro)
			vNrDuplicata = $item("NR_DUPLICATA", vDsRegistro)
			vNrParcela = $item("NR_PARCELA", vDsRegistro)
		
			if (vCdEmpresa = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa da duplicata não informada!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
		
			if (vCdFornecedor = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Fornecedor da duplicata não informado!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1) 
			endif
			
			if (vNrDuplicata = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número da duplicata não informado!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif

			if (vNrParcela = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Parcela da duplicata não informado!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
	
			creocc "FCP_DUPLICATISVC", -1
			CD_EMPRESA.FCP_DUPLICATISVC/init = vCdEmpresa
			CD_FORNECEDOR.FCP_DUPLICATISVC/init = vCdFornecedor
			NR_DUPLICATA.FCP_DUPLICATISVC/init = vNrDuplicata
			NR_PARCELA.FCP_DUPLICATISVC/init = vNrParcela
			retrieve/o "FCP_DUPLICATISVC"
			if ($status = -7)
				retrieve/x "FCP_DUPLICATISVC"
			elseif ($status = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Duplicata %%vNrDuplicata não cadastrada!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1) 
			endif  
			
			delitem vDsLstDuplicata, 1
		until (vDsLstDuplicata = "")
	endif

	viParams = ""
	putitem/id viParams, "NM_ENTIDADE", "FGR_LIQ"
	activate "GERSVCO031".getNumSeq($xlpg$, viParams, voParams, $xCdErro$, $xCtxerro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)  
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)  
	endif

	vNrSeqLiq = $item("NR_SEQUENCIA", voParams)

	clear/e "FGR_LIQSVC"
	creocc "FGR_LIQSVC", -1
	CD_EMPLIQ.FGR_LIQSVC = CD_EMPFAT.TRA_TRANSACAOSVC
	CD_GRUPOEMPRESA.FGR_LIQSVC = CD_GRUPOEMPRESA.TRA_TRANSACAOSVC
	CD_PESSOA.FGR_LIQSVC = vCdPessoa
	DT_LIQ.FGR_LIQSVC = vDtSistema
	NR_SEQLIQ.FGR_LIQSVC = vNrSeqLiq
	if (vInCompra = <TRUE>)
		TP_LIQUIDACAO.FGR_LIQSVC = 19 ;Baixa de entrada de mercadorias
	else
		if (TP_MODALIDADE.GER_OPERACAOSVC = 3) ;Devolução
			TP_LIQUIDACAO.FGR_LIQSVC = 17 ;Devolução de mercadorias
		else
			TP_LIQUIDACAO.FGR_LIQSVC = 5 ;Faturamento	
		endif
	endif

	vNrSeq =  0

	if (vInCompra = <TRUE>)
		;---Elia Proj. 130/16 21/07/08
		if ($vlReceber$ = 0)
			$vlReceber$ = VL_TOTAL.TRA_TRANSACAOSVC
		endif
		;
		if ($empty("FCP_DUPLICATISVC") = 0)
			setocc "FCP_DUPLICATISVC", 1
			while ($status >= 0)    
				vNrSeq = vNrSeq + 1
				creocc "FGR_LIQITEMCCSVC", -1
				NR_SEQITEM.FGR_LIQITEMCCSVC = vNrSeq
				CD_EMPRESADUP.FGR_LIQITEMCCSVC = CD_EMPRESA.FCP_DUPLICATISVC
				CD_FORNECDUP.FGR_LIQITEMCCSVC = CD_FORNECEDOR.FCP_DUPLICATISVC
				NR_DUPLICATADUP.FGR_LIQITEMCCSVC = NR_DUPLICATA.FCP_DUPLICATISVC
				NR_PARCELADUP.FGR_LIQITEMCCSVC = NR_PARCELA.FCP_DUPLICATISVC
				$vlRecebido$ = $vlRecebido$ + VL_DUPLICATA.FCP_DUPLICATISVC
				CD_EMPTRANSACAO.FGR_LIQITEMCCSVC = CD_EMPRESA.TRA_TRANSACAOSVC
				NR_TRANSACAO.FGR_LIQITEMCCSVC = NR_TRANSACAO.TRA_TRANSACAOSVC
				DT_TRANSACAO.FGR_LIQITEMCCSVC = DT_TRANSACAO.TRA_TRANSACAOSVC
				CD_OPERADOR.FGR_LIQITEMCCSVC = $item("CD_USUARIO", $xlpg$)
				DT_CADASTRO.FGR_LIQITEMCCSVC = $datim
				setocc "FCP_DUPLICATISVC", $curocc("FCP_DUPLICATISVC") + 1
			endwhile
		endif
	else
		setocc "TRA_TRANSACAOSVC", 1
		while ($status >= 0)    
			;Projeto 180 - Tarefa 0063 - Aloisio Gargantini - 25/01/2011
			;verifica se já existe a transação gravada para a tabela FGR_LIQITEMCRSVC
			clear/e "F_FGR_LIQITEMSVC"
			TP_TIPOREG.F_FGR_LIQITEMSVC           = 1
			CD_EMPTRANSACAO.F_FGR_LIQITEMSVC/init = CD_EMPRESA.TRA_TRANSACAOSVC
			NR_TRANSACAO.F_FGR_LIQITEMSVC/init    = NR_TRANSACAO.TRA_TRANSACAOSVC
			DT_TRANSACAO.F_FGR_LIQITEMSVC/init    = DT_TRANSACAO.TRA_TRANSACAOSVC
			retrieve/e "F_FGR_LIQITEMSVC"
			if ($status >=0)
				clear/e "F_FGR_LIQSVC"
				CD_EMPLIQ.F_FGR_LIQSVC/init = CD_EMPLIQ.F_FGR_LIQITEMSVC
				DT_LIQ.F_FGR_LIQSVC/init    = DT_LIQ.F_FGR_LIQITEMSVC
				NR_SEQLIQ.F_FGR_LIQSVC/init = NR_SEQLIQ.F_FGR_LIQITEMSVC
				retrieve/e "F_FGR_LIQSVC"
				if ($status >=0) & (DT_CANCELAMENTO.F_FGR_LIQSVC = "")
					$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Já existe uma liquidação gravada para esta transação: %%NR_TRANSACAO.TRA_TRANSACAOSVC !", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif
			endif
			;
			vNrSeq = vNrSeq + 1
			creocc "FGR_LIQITEMCRSVC", -1
			NR_SEQITEM.FGR_LIQITEMCRSVC = vNrSeq
			TP_TIPOREG.FGR_LIQITEMCRSVC = 1 ;Titulos a receber
			CD_EMPTRANSACAO.FGR_LIQITEMCRSVC = CD_EMPRESA.TRA_TRANSACAOSVC
			NR_TRANSACAO.FGR_LIQITEMCRSVC = NR_TRANSACAO.TRA_TRANSACAOSVC
			DT_TRANSACAO.FGR_LIQITEMCRSVC = DT_TRANSACAO.TRA_TRANSACAOSVC
			CD_OPERADOR.FGR_LIQITEMCRSVC = $item("CD_USUARIO", $xlpg$)
			DT_CADASTRO.FGR_LIQITEMCRSVC = $datim
			VL_TOTAL.FGR_LIQSVC = VL_TOTAL.FGR_LIQSVC + VL_TOTAL.TRA_TRANSACAOSVC
			
			viParams = ""
			putitem/id viParams, "CD_EMPRESA", CD_EMPRESA.TRA_TRANSACAOSVC
			putitem/id viParams, "NR_TRANSACAO", NR_TRANSACAO.TRA_TRANSACAOSVC
			putitem/id viParams, "DT_TRANSACAO", DT_TRANSACAO.TRA_TRANSACAOSVC
			activate "GERSVCO058".buscaValorFinanceiroTransacao($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif    
			
			VL_TOTAL.TRA_TRANSACAOSVC = $item("VL_FINANCEIRO", voParams)
			$vlReceber$ = $vlReceber$ + VL_TOTAL.TRA_TRANSACAOSVC
			
			setocc "TRA_TRANSACAOSVC", $curocc("TRA_TRANSACAOSVC") + 1
		endwhile

		if ($empty("FCC_MOVSVC") = 0)
			setocc "FCC_MOVSVC", 1
			while ($status >= 0)    
				vNrSeq = vNrSeq + 1
				creocc "FGR_LIQITEMCRSVC", -1
				NR_SEQITEM.FGR_LIQITEMCRSVC = vNrSeq
				if (TP_MODALIDADE.GER_OPERACAOSVC = 3) ;Devolução
					TP_TIPOREG.FGR_LIQITEMCRSVC = 2 ;Valores recebidos
					$vlRecebido$ = $vlRecebido$ + VL_LANCTO.FCC_MOVSVC
				else
					TP_TIPOREG.FGR_LIQITEMCRSVC = 1 ;Titulos a receber
					VL_TOTAL.FGR_LIQSVC = VL_TOTAL.FGR_LIQSVC + VL_LANCTO.FCC_MOVSVC
					$vlReceber$ = $vlReceber$ + VL_LANCTO.FCC_MOVSVC
				endif
				NR_CTAPESFCC.FGR_LIQITEMCRSVC = NR_CTAPES.FCC_MOVSVC
				DT_MOVIMFCC.FGR_LIQITEMCRSVC = DT_MOVIM.FCC_MOVSVC
				NR_SEQMOVFCC.FGR_LIQITEMCRSVC = NR_SEQMOV.FCC_MOVSVC
				CD_OPERADOR.FGR_LIQITEMCRSVC = $item("CD_USUARIO", $xlpg$)
				DT_CADASTRO.FGR_LIQITEMCRSVC = $datim

				setocc "FCC_MOVSVC", $curocc("FCC_MOVSVC") + 1
			endwhile
		endif

		if ($empty("FCR_FATURAISVC") = 0)
			setocc "FCR_FATURAISVC", 1
			while ($status >= 0)    
				vNrSeq = vNrSeq + 1

				creocc "FGR_LIQITEMCRSVC", -1
				NR_SEQITEM.FGR_LIQITEMCRSVC = vNrSeq
				TP_TIPOREG.FGR_LIQITEMCRSVC = 2 ;Valores recebidos				
				CD_EMPFAT.FGR_LIQITEMCRSVC = CD_EMPRESA.FCR_FATURAISVC
				CD_CLIENTE.FGR_LIQITEMCRSVC = CD_CLIENTE.FCR_FATURAISVC
				NR_FAT.FGR_LIQITEMCRSVC = NR_FAT.FCR_FATURAISVC
				NR_PARCELA.FGR_LIQITEMCRSVC = NR_PARCELA.FCR_FATURAISVC
				NR_CTAPESCX.FGR_LIQITEMCRSVC = NR_CTAPESCX.FCR_FATURAISVC	
				TP_DOCUMENTO.FGR_LIQITEMCRSVC = TP_DOCUMENTO.FCR_FATURAISVC				
				NR_SEQHISTRELSUB.FGR_LIQITEMCRSVC = NR_SEQHISTRELSUB.FCR_FATURAISVC
				if (TP_DOCUMENTO.FCR_FATURAISVC = 9) ;Troco
					$vlRecebido$ = $vlRecebido$ - VL_FATURA.FCR_FATURAISVC
				else
					$vlRecebido$ = $vlRecebido$ + VL_FATURA.FCR_FATURAISVC
				endif
				CD_OPERADOR.FGR_LIQITEMCRSVC = $item("CD_USUARIO", $xlpg$)
				DT_CADASTRO.FGR_LIQITEMCRSVC = $datim

				;Projeto 078 - Tarefa 3422 - Aloisio Gargantini - 25/05/2010
				viParams = ""
				putitem/id viParams, "CD_EMPLIQ",  CD_EMPLIQ.FGR_LIQSVC
				putitem/id viParams, "DT_LIQ",     DT_LIQ.FGR_LIQSVC
				putitem/id viParams, "NR_SEQLIQ",  NR_SEQLIQ.FGR_LIQSVC
				putitem/id viParams, "CD_EMPRESA", CD_EMPRESA.FCR_FATURAISVC
				putitem/id viParams, "CD_CLIENTE", CD_CLIENTE.FCR_FATURAISVC
				putitem/id viParams, "NR_FAT",     NR_FAT.FCR_FATURAISVC
				putitem/id viParams, "NR_PARCELA", NR_PARCELA.FCR_FATURAISVC
				activate "FCRSVCO112".gravarLiqFaturaVenda($xLpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
				if ($procerror)
					$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				elseif ($status < 0)
					$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
;==BY BIANCHINI[PRJ/TAREFA 180/0277] 31/10/2011 ==;
;########### comentado				
;				;Projeto 180 - Tarefa 0227 - Aloisio Gargantini - 27/07/2011
;
;				if (vTpChequePresente = 1) ;1=Cheque presente com controle por conta corrente.
;					if (TP_DOCUMENTO.FGR_LIQITEMCRSVC = 18) ;Cheque presente
;						viParams = ""
;						putitem/id viParams, "CD_EMPRESA", CD_EMPRESACHE.FCR_FATURAISVC
;						putitem/id viParams, "CD_CLIENTE", CD_CLIENTECHE.FCR_FATURAISVC
;						putitem/id viParams, "NR_CHEQUE" , NR_CHEQUE.FCR_FATURAISVC
;						putitem/id viParams, "VL_CHEQUE" , VL_CHEQUE.FCR_FATURAISVC
;						putitem/id viParams, "CD_EMPLIQ" , CD_EMPLIQ.FGR_LIQSVC
;						putitem/id viParams, "DT_LIQ"    , DT_LIQ.FGR_LIQSVC
;						putitem/id viParams, "NR_SEQLIQ" , NR_SEQLIQ.FGR_LIQSVC
;						putitem/id viParams, "NR_SEQITEM", vNrSeq
;						putitem/id viParams, "TP_LIQ"    , 3 ;Recebimento
;						putitem/id viParams, "NR_CTAPES" , NR_CTAPES.FCR_FATURAISVC
;						activate "FCRSVCO068".gravarMovimentacaoCartaoPresente($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
;						if ($procerror)
;							$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
;							return(-1)
;						elseif ($status)
;							$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
;							return(-1)
;						endif
;					endif
;				endif
;				;
;==
				setocc "FCR_FATURAISVC", $curocc("FCR_FATURAISVC") + 1
			endwhile
		endif
	endif

	if ($vlRecebido$ != $vlReceber$)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Valor recebido %%$vlRecebido$ da liquidação diferente do valor a receber %%$vlReceber$%%%!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	CD_OPERADOR.FGR_LIQSVC = $item("CD_USUARIO", $xlpg$)
	DT_CADASTRO.FGR_LIQSVC = $datim
	
	$collhandle("FGR_LIQSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	;MARTINEZ - PRJ/TAR 180/173 - 05/05/2011
	setocc "FCR_FATURAISVC", 1
	if (CD_EMPRESA.FCR_FATURAISVC != "") & (CD_CLIENTE.FCR_FATURAISVC != "") & (NR_FAT.FCR_FATURAISVC != "") & (NR_PARCELA.FCR_FATURAISVC != "")
		while ($status >= 0)
			clear/e "FGR_LIQITEMCRSVC"
			CD_EMPFAT.FGR_LIQITEMCRSVC/init  = CD_EMPRESA.FCR_FATURAISVC
			CD_CLIENTE.FGR_LIQITEMCRSVC/init = CD_CLIENTE.FCR_FATURAISVC
			NR_FAT.FGR_LIQITEMCRSVC/init     = NR_FAT.FCR_FATURAISVC
			NR_PARCELA.FGR_LIQITEMCRSVC/init = NR_PARCELA.FCR_FATURAISVC
			retrieve/e "FGR_LIQITEMCRSVC"
			if ($status >= 0)
				;==BY BIANCHINI[PRJ/TAREFA 180/0277] 31/10/2011 ==;
				;########################### incluido código
				;Projeto 180 - Tarefa 0227 - Aloisio Gargantini - 27/07/2011
				if (vTpChequePresente = 1) ;1=Cheque presente com controle por conta corrente.
					if (TP_DOCUMENTO.FGR_LIQITEMCRSVC = 18) ;Cheque presente
						vNrSeq = vNrSeq + 1
						viParams = ""
						putitem/id viParams, "CD_EMPRESA",   CD_EMPRESACHE.FCR_FATURAISVC
						putitem/id viParams, "CD_CLIENTE",   CD_CLIENTECHE.FCR_FATURAISVC
						putitem/id viParams, "NR_CHEQUE" ,   NR_CHEQUE.FCR_FATURAISVC
						putitem/id viParams, "VL_CHEQUE" ,   VL_CHEQUE.FCR_FATURAISVC
						putitem/id viParams, "CD_EMPLIQ" ,   CD_EMPLIQ.FGR_LIQSVC
						putitem/id viParams, "DT_LIQ"    ,   DT_LIQ.FGR_LIQSVC
						putitem/id viParams, "NR_SEQLIQ" ,   NR_SEQLIQ.FGR_LIQSVC
						;putitem/id viParams, "NR_SEQITEM",  vNrSeq
						putitem/id viParams, "NR_SEQITEM",   NR_SEQITEM.FGR_LIQITEMCRSVC
						putitem/id viParams, "NR_SEQATUAL",  vNrSeq	
						putitem/id viParams, "TP_LIQ"    ,   3 ;Recebimento
						putitem/id viParams, "NR_CTAPES" ,   NR_CTAPES.FCR_FATURAISVC
						activate "FCRSVCO068".gravarMovimentacaoCartaoPresente($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
						if ($procerror)
							$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
							return(-1)
						elseif ($status)
							$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
							return(-1)
						endif
						$collhandle("FGR_LIQSVC")->Salvar()
						if ($procerror)
							$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
							poCdErro = $xCdErro$
							poCtxErro = $xCtxErro$
							exit(-1)
						elseif ($status < 0)
							$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
							poCdErro = $xCdErro$
							poCtxErro = $xCtxErro$
							exit(-1)
						endif
					endif
				endif
				;#####################
				;==
				viParams = ""
				if (vTpChequePresente != 1) | (TP_DOCUMENTO.FGR_LIQITEMCRSVC != 18) ;1=Cheque presente com controle por conta corrente. / 18-Cheque presente
					putitem/id viParams, "CD_EMPLIQ",  CD_EMPLIQ.FGR_LIQITEMCRSVC
					putitem/id viParams, "DT_LIQ",     DT_LIQ.FGR_LIQITEMCRSVC
					putitem/id viParams, "NR_SEQLIQ",  NR_SEQLIQ.FGR_LIQITEMCRSVC
					putitem/id viParams, "NR_SEQITEM", NR_SEQITEM.FGR_LIQITEMCRSVC
					putitem/id viParams, "CD_EMPFAT",  CD_EMPFAT.FGR_LIQITEMCRSVC
					putitem/id viParams, "CD_CLIENTE", CD_CLIENTE.FGR_LIQITEMCRSVC
					putitem/id viParams, "NR_FAT",     NR_FAT.FGR_LIQITEMCRSVC
					putitem/id viParams, "NR_PARCELA", NR_PARCELA.FGR_LIQITEMCRSVC
					activate "FCRSVCO007".gravaLiqICRAdic($$gParamGlb, viParams, poCdErro, poCtxErro)
					if ($procerror)
						$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						exit(-1)
					elseif ($status < 0)
						$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						exit(-1)
					endif
				endif
			endif

			setocc "FCR_FATURAISVC", $curocc("FCR_FATURAISVC") + 1
		endwhile
	endif
	;

	;--Douglas Ferreira - [Prj/Tarefa 186/0036] - 20/05/2011
	vDsLstDuplicata = $item("DS_LSTDUPLICATA", piParams)
	if (vDsLstDuplicata != "")
		repeat
			vDsRegistro   = ""
			getitem vDsRegistro, vDsLstDuplicata, 1 
			vCdEmpresa    = $item("CD_EMPRESA",    vDsRegistro)
			vCdFornecedor = $item("CD_FORNECEDOR", vDsRegistro)
			vNrDuplicata  = $item("NR_DUPLICATA",  vDsRegistro)
			vNrParcela    = $item("NR_PARCELA",    vDsRegistro)
		
			if (vCdEmpresa = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Empresa da duplicata não informada!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
			if (vCdFornecedor = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fornecedor da duplicata não informado!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1) 
			endif
			if (vNrDuplicata = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Número da duplicata não informado!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
			if (vNrParcela = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Parcela da duplicata não informada!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif

			clear/e "FCP_DUPIMPOSTSVC"
			CD_EMPRESA.FCP_DUPIMPOSTSVC/init    = vCdEmpresa
			CD_FORNECEDOR.FCP_DUPIMPOSTSVC/init = vCdFornecedor
			NR_DUPLICATA.FCP_DUPIMPOSTSVC/init  = vNrDuplicata
			NR_PARCELA.FCP_DUPIMPOSTSVC/init    = vNrParcela
			TP_SITUACAO.FCP_DUPIMPOSTSVC/init   = 1 ;Retido na própria duplicata
			retrieve/e "FCP_DUPIMPOSTSVC"
			if ($status >= 0)
				setocc "FCP_DUPIMPOSTSVC", 1
				while ($status >= 0)
					CD_EMPLIQ.FCP_DUPIMPOSTSVC = CD_EMPLIQ.FGR_LIQSVC
					DT_LIQ.FCP_DUPIMPOSTSVC    = DT_LIQ.FGR_LIQSVC
					NR_SEQLIQ.FCP_DUPIMPOSTSVC = NR_SEQLIQ.FGR_LIQSVC

					setocc "FCP_DUPIMPOSTSVC", $curocc(FCP_DUPIMPOSTSVC) + 1
				endwhile
			endif

			$collhandle("FCP_DUPIMPOSTSVC")->Salvar()
			if ($procerror)
				$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Erro ao atualizar a duplicata de imposto!", "ADICIONAL=Operação->TRASVCO011.gravaLiqTransacao")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif

			delitem vDsLstDuplicata, 1
		until (vDsLstDuplicata = "")
	endif
	;

	;Projeto 133 - Tarefa 011 - Aloisio Gargantini - 14/08/2008
	viParams = ""
	putitem/id viParams, "CD_EMPLIQ", CD_EMPLIQ.FGR_LIQSVC
	putitem/id viParams, "DT_LIQ"   , DT_LIQ.FGR_LIQSVC
	putitem/id viParams, "NR_SEQLIQ", NR_SEQLIQ.FGR_LIQSVC
	activate "CTCSVCO005".gravarBonusLiqFat($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif
	;
	poParams = ""
	putitem/id poParams, "CD_EMPLIQ", CD_EMPLIQ.FGR_LIQSVC
	putitem/id poParams, "DT_LIQ", DT_LIQ.FGR_LIQSVC
	putitem/id poParams, "NR_SEQLIQ", NR_SEQLIQ.FGR_LIQSVC
	
	exit(0)
end

;-----------------------------------
public operation cancelaLiqTransacao
;-----------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	variables
		date    vDtLiq
		numeric vCdEmpLiq, vNrSeqLiq
	endvariables
	
	vCdEmpLiq = $item("CD_EMPLIQ", piParams)
	vDtLiq = $item("DT_LIQ", piParams)
	vNrSeqLiq = $item("NR_SEQLIQ", piParams)

	if (vCdEmpLiq = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->TRASVCO011.cancelaLiqTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	if (vDtLiq = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Dt. liquidação não informada!", "ADICIONAL=Operação->TRASVCO011.cancelaLiqTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	if (vNrSeqLiq = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Nr. liquidação não informado!", "ADICIONAL=Operação->TRASVCO011.cancelaLiqTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	clear/e "FGR_LIQSVC"
	CD_EMPLIQ.FGR_LIQSVC/init = vCdEmpLiq
	DT_LIQ.FGR_LIQSVC/init = vDtLiq
	NR_SEQLIQ.FGR_LIQSVC/init = vNrSeqLiq
	retrieve/e "FGR_LIQSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Liquidação %%vNrSeqLiq não cadastrada!", "ADICIONAL=Operação->TRASVCO011.cancelaLiqTransacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1) 
	endif

	DT_CANCELAMENTO.FGR_LIQSVC = $date
	CD_OPERCANCEL.FGR_LIQSVC = $item("CD_USUARIO", $xlpg$)

	$collhandle("FGR_LIQSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	exit(0)
end