;-------------------------------
entry espacoDireita
;-------------------------------	
	params
		string vDsEntrada : IN
		numeric vTam      : IN
		string vDsSaida   : OUT
	endparams
	variables
		numeric vCont, vTamDsEntrada
	endvariables
	length vDsEntrada
	vTamDsEntrada = $result 
	vCont = 0
	repeat
		vCont = vCont + 1
		if (vCont <= vTamDsEntrada)
			vDsSaida = "%%vDsSaida%%vDsEntrada[vCont,vCont]"	
		else
			vDsSaida = "%%vDsSaida%%% "
		endif
	until(vCont = vTam)
	return(0)
end;

;----------------------------
entry preencheZero
;----------------------------
	params        
		numeric piNumero : IN
		numeric piTamanho : IN 
		string poNumero : OUT
	endparams
	
	poNumero = piNumero
	length(poNumero)
	while ($result < piTamanho)
		poNumero = "0%%poNumero"
		length(poNumero)
	endwhile
	
	if ($result > piTamanho)
		poNumero = poNumero[$result - piTamanho + 1]
	endif
	
	return(0)
end ;preencheZero

;----------------------------
entry achaNumero
;----------------------------
	params        
		string piNumero : IN
		string poNumero : OUT
	endparams
	
	variables
		string vNumero
	endvariables
	
	length(piNumero)
	while ($result > 0)
		if (piNumero[1 : 1] >= 0 & piNumero[1 : 1] <= 9 & piNumero[1 : 1] != " ")
			vNumero = "%%vNumero%%piNumero[1 : 1]"
		endif
		piNumero = piNumero[2]
		length(piNumero)
	endwhile
	
	poNumero = vNumero      
	
	return(0)
end; achaNumero

;-------------------------
entry  extraiValor
;------------------------
	params
		string piNmCampo : IN
		string piDsDados : IN
		string poDsDados : OUT
	endparams

	variables
		numeric vNrPosInicio, vNrPosFim, vNrTamanho, vResultado	
	endvariables

	poDsDados = ""

	length(piNmCampo)
	vNrTamanho = $result

	vNrPosInicio = 0
	vNrPosFim = 0
	vResultado = 0

	vResultado = $scan(piDsDados, "%%piNmCampo%%%")
	if (vResultado > 0)
		vNrPosInicio = vResultado + vNrTamanho
		vNrPosFim = vNrPosInicio + 6	
	endif

	if (vNrPosFim >= vNrPosInicio) & (vNrPosInicio > 0)
		poDsDados = piDsDados[vNrPosInicio, vNrPosFim]
	endif	

	if (piNmCampo= "COO:") & (vResultado > 0)
		if ($vDtEmissao$ = "") ; primeira vez que acha e o COO inicial
			$vDtInicial$ = piDsDados[1:10]
			$vCOOINI$ = poDsDados		
		endif
		$vDtEmissao$ = piDsDados[1:10]
		$vHrEmissao$ = piDsDados[13:8]	
		$vCOOFIM$ = poDsDados ;quando acha sempre será o último
	endif
	
	return(0)

End ; entry extraiValor

;-----------------------------
entry  verificaConteudo
;-----------------------------
	params
		string piChave : IN
		string piParam : IN
		string poParam : OUT
	endparams
	variables
		String vDsConteudo
	endvariables

	fileload piParam, vDsConteudo ;Lê o arquivo 
	
	call extraiValor(piChave, vDsConteudo, poParam) ;Aqui efetua a extração
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		return(-1)
	endif
	
	return(0)
End;operation verificaConteudo.

;--------------------
public operation INIT
	;--------------------
	variables
		string viParams, voParams, vDsLista, vDsPath, vUFOrigem  
		numeric vCdEmpresa, vTam, vCdTerminal,vCdTotalizadorEcfRec, vCTotalizadorEcfCanc, nrViasEcfTermica
		boolean vFlag, vInComunicacaoEcf
		string vMapeamento, vUnidade, vDiretorio
	endvariables

	;vInComunicacaoECF (0) Usa JTI (1) Uniface local
	if ($item("DS_UNIDTERMINAL",$$gParamGlb) != "")
		vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
		vDsPath = "%%vDsPath%%%:\ECF\"
		vFlag = <FALSE>
		activate "vbfileman".arqexiste(vFlag,"%%vDsPath%%%RETORNOECF.TXT")
		if (vFlag)
			activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		endif
		vFlag = <FALSE>
		activate "vbfileman".arqexiste(vFlag,"%%vDsPath%%%ECF.TMP")
		if (vFlag)
			activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TMP")
		endif
		return(0)
	endif

	if ($item("TEF_COMUNICACAO_GP", $$gParamGlb) = "") | ($item("TP_TOTALIZADOR_ECF_REC", $$gParamGlb) = "") | ($item("TP_TOTALIZADOR_ECF_CANC", $$gParamGlb) = "") | %\
	   ($item("UF_ORIGEM", $$gParamGlb) = "") | ($item("NR_VIAS_ECF_TERMICA", $$gParamGlb) = "")
		viParams = ""
		voParams = ""
		vCdEmpresa = $item("CD_EMPRESA",$$gParamGlb)
		putitem viParams, -1, "TEF_COMUNICACAO_GP"
		putitem viParams, -1, "TP_TOTALIZADOR_ECF_REC"
		putitem viParams, -1, "TP_TOTALIZADOR_ECF_CANC"
		putitem viParams, -1, "UF_ORIGEM"	;-=CANONICO=- Prj 562/61
		putitem viParams, -1, "NR_VIAS_ECF_TERMICA" ;-=CANONICO=- Prj 102/516
		activate "ADMSVCO001".GetParamEmpresa(vCdEmpresa, viParams, voParams, $xCdErro$, $xCtxerro$)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			return(-1)
		elseif ($xCdErro$)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%$item("DESCRICAO", $xCtxErro$)", "")
			return(-1)
		endif
		vInComunicacaoECF = $item("TEF_COMUNICACAO_GP", voParams)

		vCdTotalizadorEcfRec	= $item("TP_TOTALIZADOR_ECF_REC", voParams)
		vCTotalizadorEcfCanc	= $item("TP_TOTALIZADOR_ECF_CANC", voParams)
		vUFOrigem = $item("UF_ORIGEM", voParams) ;-=CANONICO=- Prj 562/61 =-
		nrViasEcfTermica = $item("NR_VIAS_ECF_TERMICA",voParams)  ;-=CANONICO=- Prj 102/516

		putitem/id $$gParamGlb, "TEF_COMUNICACAO_GP", vInComunicacaoECF
		putitem/id $$gParamGlb, "TP_TOTALIZADOR_ECF_REC", vCdTotalizadorEcfRec
		putitem/id $$gParamGlb, "TP_TOTALIZADOR_ECF_CANC", vCTotalizadorEcfCanc
		putitem/id $$gParamGlb, "UF_ORIGEM", vUFOrigem ;-=CANONICO=- Prj 562/61
		putitem/id $$gparamGlb, "NR_VIAS_ECF_TERMICA", nrViasEcfTermica ;-=CANONICO=- Prj 562/61
		
	else
		vInComunicacaoECF = $item("TEF_COMUNICACAO_GP", $$gParamGlb)
	endif

	;vDsLista = $item("MAPA_TERMINAL",voParams)
	;clear/e "GER_TERMINALSVC"

	;length vDsLista
	;while ($result > 0)
	;	scan vDsLista, ","
	;	if ($result > 0)
	;		creocc "GER_TERMINALSVC", -1
	;		CD_EMPRESA.GER_TERMINALSVC = $item("CD_EMPRESA",$$gParamGlb)
	;		CD_TERMINAL.GER_TERMINALSVC = vDsLista[1 : ($result - 1)]
	;		retrieve/o "GER_TERMINALSVC"
	;		if ($status = -7)
	;			retrieve/x "GER_TERMINALSVC"
	;		endif
	;		vTam = $result	
	;		scan vDsLista, ";"
	;		if ($result > 0)
	;			DS_UNIDADE.GER_TERMINALSVC = vDsLista[vTam + 1 , vTam + 1] 
	;		endif
	;		vDsLista = vDsLista[($result + 1)]
	;	else
	;		vDsLista = ""
	;	endif
	;	length vDsLista
	;endwhile
	if (vInComunicacaoECF = 1)
		vMapeamento = "C·;D·;"
	else
		vMapeamento = "E·;F·;G·;H·;I·;J·;K·;L·;M·;N·;O·;P·;Q·;R·;S·;T·;U·;V·;X·;Z·;"
	endif

	repeat
		getitem vUnidade, vMapeamento, 1
		vDiretorio = "%%vUnidade:\WINDOWS\SYSTEM32"
		activate "vbfileman".direxiste(vFlag,vDiretorio)
		if ($procerror)       
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			return(-1)
		endif
		;se diretorio existe
		if (vFlag = <FALSE>)
			vDiretorio = "%%vUnidade:\WINNT\SYSTEM32"
			activate "vbfileman".direxiste(vFlag,vDiretorio)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				return(-1)
			endif			
		endif
		if (vFlag = <TRUE>)
			putitem/id $$gParamGlb, "DS_UNIDTERMINAL", vUnidade
			break
		endif
		delitem vMapeamento, 1
	until (vMapeamento = "")
	return(0)

	;vCdTerminal = $item("CD_TERMINAL",$$gParamGlb)

	;creocc "GER_TERMINALSVC"
	;CD_EMPRESA.GER_TERMINALSVC = $item("CD_EMPRESA",$$gParamGlb)
	;CD_TERMINAL.GER_TERMINALSVC = vCdTerminal
	;retrieve/o "GER_TERMINALSVC"
	;if ($status != 4)
	;	$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Unidade de mapeamento para o terminal %%vCdTerminal não encontrada!", "ADICIONAL=Operação->ECFSVC0011.INIT")
	;	return(-1)
	;endif
	;putitem/id $$gParamGlb, "DS_UNIDTERMINAL", DS_UNIDADE.GER_TERMINALSVC
	;return(0)
	;#include <LIB_PADRAO>:PRC_INIT
end ;INIT

;-----------------------
public operation CLEANUP
	;-----------------------
	#include <LIB_PADRAO>:PRC_CLEANUP
end ; CLEANUP

;-----------------------
public operation aberturaDoDia
	;-----------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsPath, vDsConteudo
		numeric vQtTentativa, Status
	endvariables

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0

	$vl14DIG$ = $item("VL_ABERTURADIA",piParams)

	filedump "020%%$vl14DIG$%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.aberturaDoDia")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 5)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.aberturaDoDia")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.aberturaDoDia")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	return(0)
end ;aberturaDoDia

;-----------------------
public operation abreCupom
	;-----------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsPath, vDsConteudo, vDsLinha, vDsRetorno, vCPF_CNPJ
		numeric vQtTentativa, Status
		boolean vInConcomitante
	endvariables

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: abreCupom - Inicio abreCupom: %%$hrFim$"
	endif 

	vInConcomitante = $item("IN_CONCOMITANTE",piParams)
	if (vInConcomitante = "")
		vInConcomitante = <FALSE>
	endif	
	
	vCPF_CNPJ = $item("NR_CPFCNPJ",piParams) 

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0
	if (vInConcomitante = <FALSE>)
		if ($item("PADRAO_ECF",$$gParamGlb) = <PADRAO_LOCALIMPFINAL> | $item("PADRAO_ECF",$$gParamGlb) = <PADRAO_LOCAL>)
			putitem/id poParams, "DS_CUPOM", "031%%^%%%001%%vCPF_CNPJ%%^"
			return(0)
		endif
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: abreCupom - Inicio filedump ECF.TMP: %%$hrFim$"
	endif ;

	;filedump "001%%vCPF_CNPJ%%^016%%^","%%vDsPath%%%ECF.TMP" ;-=CANONICO-= (22-11-2011)
	filedump "001%%vCPF_CNPJ%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.abreCupom")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: abreCupom - Termino filedump ECF.TMP: %%$hrFim$"
	endif ;

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: abreCupom - Efetuando leitura RETORNOECF.TXT: %%$hrFim$"
	endif 

	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 8)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Arquivo de RETORNOECF.TXT não encontrado!", "ADICIONAL=Operação->ECFSVC0011.abreCupom")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: abreCupom - Leitura concluída RETORNOECF.TXT: %%$hrFim$"
	endif 

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: abreCupom - Inicio apaga RETORNOECF.TXT: %%$hrFim$"
	endif 

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.abreCupom")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	if (vInConcomitante = <TRUE>)

		activate "vbfileman".filename("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		repeat

			activate "vbfileman".learquivo(vDsLinha)
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
			endif

			if ($idpart(vDsLinha) = "NR_CUPOM")
				putitem/id poParams, "NR_CUPOM", $item("NR_CUPOM",vDsLinha)
			elseif ($idpart(vDsLinha) = "NR_SERIE")
				putitem/id poParams, "NR_SERIE", $item("NR_SERIE",vDsLinha)
				putitem/id $$gParamGlb, "CD_SERIEECF", $item("NR_SERIE",vDsLinha)
			endif
			
			activate "vbfileman".eof(vEOF)
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
			endif

		until (vEOF = -1)

	endif

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif
	
	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: abreCupom - Fim apaga RETORNOECF.TXT: %%$hrFim$"
	endif 

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: abreCupom - Fim abreCupom: %%$hrFim$"
	endif ;

	return(0)
end ;abreCupom

;-----------------------
public operation vendeItem
	;-----------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams

	variables
		string vEOF, vDsPath, vDsConteudo, vDsRetorno, vDsLinha
		boolean vInImprimeaoFinal
		string vDsProduto, vPrAliquota, vlUnit, Status, vDsCupom, vCdEspecie
		numeric vQtTentativa, vVlDesconto, vVlCalc, vVlInteiro, 	vVlFracionado
		boolean vInConcomitante, vInTEF
	endvariables

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: vendeItem - Inicio vendeItem: %%$hrFim$"
	endif 

	putitem/id piParams,"IN_OPT_SIMPLES",$item("IN_OPT_SIMPLES",$$gParamGLB)
	vInConcomitante = $item("IN_CONCOMITANTE",piParams)
	if (vInConcomitante = "")
		vInConcomitante = <FALSE>
	endif
	vInTEF = $item("IN_TEF",piParams)
	if (vInTEF = "")
		vInTEF = <FALSE>
	endif
	vDsCupom = ""
	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"

	vInImprimeaoFinal = <FALSE>
	vInImprimeaoFinal = $item("IN_IMPRIMEAOFINAL",piParams)
	$CodItem$ = $item("CD_PRODUTO",piParams)
	vDsProduto = $item("DS_PRODUTO",piParams)
	call espacoDireita(vDsProduto,29,vDsProduto)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	;$PrAliquota$ = $number($item("PR_ALIQICMS",piParams)) * 100

	if ($item("TP_REGIMESUB",piParams) = <CST_ISENTO>)
		vPrAliquota = "II  "
	elseif ($item("TP_REGIMESUB",piParams) = <CST_ISENTO_SUBSTITUICAO>) ;-=CANONICO=- (15/10/2008) TAR 488 PRJ 61 (Foi colocado para verificar primeiro do que o Não tributado)
		vPrAliquota = "FF  "
	elseif ($item("TP_REGIMESUB",piParams) = <CST_NAO_TRIBUTADO>) | (($item("IN_OPT_SIMPLES",piParams) = "S") & $item("UF_ORIGEM",$$gParamGLB) = "PR");-=CANONICO=- TAR 562 PRJ 61 (17/03/2009)
		vPrAliquota = "NN  "
	elseif ($item("TP_REGIMESUB",piParams) = <CST_SUBSTITUICAO>)
		if ($number($item("PR_ALIQICMS",piParams)) <= 0)
    		$instancehandle->SetErroApl("ID=PAR0001·;ADICIONAL=Aliquota de ICMS",poCdErro,poCtxErro)
	    	return (-1)
		endif
	elseif ($item("TP_REGIMESUB",piParams) = <CST_INTEGRAL>) | ($item("TP_REGIMESUB",piParams) = <CST_OUTRO>)
		if ($number($item("PR_ALIQICMS",piParams)) <= 0)
    		$instancehandle->SetErroApl("ID=PAR0001·;ADICIONAL=Aliquota de ICMS",poCdErro,poCtxErro)
	   		return (-1)
		else
			$PrAliquota$ = $number($item("PR_ALIQICMS",piParams)) * 100
			vPrAliquota = "%%$PrAliquota$"
		endif
	elseif ($item("TP_REGIMESUB",piParams) = "") 
		if ($number($item("PR_ALIQICMS",piParams)) <= 0)
			vPrAliquota = "NN  "
		else
			$PrAliquota$ = $number($item("PR_ALIQICMS",piParams)) * 100
			vPrAliquota = "%%$PrAliquota$"
		endif
	endif

	vCdEspecie= $item("CD_ESPECIE",piParams)[1:2]	

	$vQtd$ = $item("QT_SOLICITADA",piParams)
	$VlUnit$ = $number($item("VL_UNITARIO",piParams)) * 100
	$VlUnit$ = $VlUnit$[trunc]
	;* Claudemir - Prj/Tarefa: 102/684
	;* Foi alterado para mandar o valor do desconto já formatado para o virtual monitor
	;* $VlDescontoUnit$ está formatado na component variable como: 99999.99

	$VlDescontoUnit$ = $number($item("VL_DESCONTO",piParams)) 
	;* Claudemir 30/09/2009 - Prj/Tarefa: 102/694
	;o valor do desconto é por unidade, então para pegar o desconto geral do item, multiplico o valor do desconto pela quantidade

	;$VlDescontoUnit$ = ($VlDescontoUnit$ * $vQtd$) ;*

	;* Claudemir - Prj/Tarefa: 130/1020 - 09/04/2010
	;if ($item("TP_ARREDOND_VL_UNIT_VD", $$gParamGlb) = 1) ; arredonda o total de desconto unitário
	;	$VlDescontoUnit$ = $VlDescontoUnit$[round, 2]
	;elseif ($item("TP_ARREDOND_VL_UNIT_VD", $$gParamGlb) = 2); trunta o total de desconto unitário
	;	vVlCalc          = $VlDescontoUnit$
	;	vVlInteiro       = vVlCalc[trunc]
	;	vVlFracionado    = vVlCalc[fraction]
	;	vVlFracionado    = vVlFracionado[1:4]
	;	vVlCalc          = vVlInteiro + vVlFracionado
	;	$VlDescontoUnit$ = vVlCalc
	;endif ;*

	;* Claudemir - Prj/Tarefa: 26/31 - 25/11/2009
	; Se for concomitante, o desconto será aplicado no final
;;;	if (vInConcomitante = <TRUE>)
;;;	   $VlDescontoUnit$ = 0
;;;	endif ;*

	;-=CANONICO=- PRJ 182 TAR 212 (13/12/2011) - Descomentado observe acima, necessário porque quando utilizar desconto com ECF concomitante não pode ver os descontos do item ao utilizar o TRAFP005
	if (vInConcomitante = <TRUE>)
	  $VlDescontoUnit$ = 0
	endif 

	;vPrAliquota = "0000" ;teste com a impressora yanco
	if (vInConcomitante = <FALSE>)
		if ($item("PADRAO_ECF",$$gParamGlb) = <PADRAO_LOCALIMPFINAL>)
			if (vInImprimeaoFinal = <TRUE> & vInTEF = <TRUE>)
				vDsCupom = $item("DS_CUPOM",piParams)
			else
				;-=CANONICO=- 30/04/2008 TAR 159 PRJ 102 (No monitor incluir a impressao da unidade de medida(Especie) do item)
				;* Claudemir - 18/08/2009 - Prj/Tarefa: 102/656 - atribuido o valor por item
				;putitem/id poParams, "DS_CUPOM", "002%%$CodItem$%%vDsProduto%%vPrAliquota%%%I%%$vQtd$%%%2%%$VlUnit$%%%%00000000%%vCdEspecie%%^"
				putitem/id poParams, "DS_CUPOM", "002%%$CodItem$%%vDsProduto%%vPrAliquota%%%I%%$vQtd$%%%2%%$VlUnit$%%%V%%$VlDescontoUnit$%%vCdEspecie%%^"
				;;putitem/id poParams, "DS_CUPOM", "002%%$CodItem$%%vDsProduto%%vPrAliquota%%%I%%$vQtd$%%%2%%$VlUnit$%%$VlDescontoUnit$%%vCdEspecie%%^"
				;*
				;putitem/id poParams, "DS_CUPOM", "002%%$CodItem$%%vDsProduto%%vPrAliquota%%%I%%$vQtd$%%%2%%$VlUnit$%%%%0000%%^"
				return(0)
			endif
		endif
	endif

	$status = 0
	;-=CANONICO=- 30/04/2008 TAR 159 PRJ 102 (No monitor incluir a impressao da unidade de medida(Especie) do item)

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: vendeItem - filedump vendeItem: %%$hrFim$"
	endif 
	;* Claudemir - 18/08/2009 - Prj/Tarefa: 102/656 - Atribuido o valor por Item
   ;filedump/append "%%vDsCupom%%%002%%$CodItem$%%vDsProduto%%vPrAliquota%%%I%%$vQtd$%%%2%%$VlUnit$%%%%00000000%%vCdEspecie%%^","%%vDsPath%%%ECF.TMP"
	filedump "%%vDsCupom%%%002%%$CodItem$%%vDsProduto%%vPrAliquota%%%I%%$vQtd$%%%2%%$VlUnit$%%%V%%$VlDescontoUnit$%%vCdEspecie%%^","%%vDsPath%%%ECF.TMP" 
	;*

	;filedump/append "%%vDsCupom%%%002%%$CodItem$%%vDsProduto%%vPrAliquota%%%I%%$vQtd$%%%2%%$VlUnit$%%%%0000%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.vendeItem")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if (vInConcomitante = <FALSE>)
		if (vInImprimeaoFinal = <FALSE>)
			return(0)
		endif
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: vendeItem - Termino filedump ECF.TMP: %%$hrFim$"
	endif ;

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: abreCupom - Efetuando leitura RETORNOECF.TXT: %%$hrFim$"
	endif 

	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 60)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.vendeItem")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.vendeItem")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: vendeItem - Leitura concluída RETORNOECF.TXT: %%$hrFim$"
	endif 

	if (vInTEF = <TRUE>)
		
		if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
			$hrFim$ = $clock
			putmess "ECFSVCO011: vendeItem - vInTEF efetuando leitura RETORNOECF.TXT: %%$hrFim$"
		endif 

		activate "vbfileman".filename("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		repeat
			activate "vbfileman".learquivo(vDsLinha)
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
			endif
			
			;-=CANONICO=- (21-11-2011) Teste de performace
			;vDsRetorno = $item("NR_CUPOM",vDsLinha)
			;length(vDsRetorno)
			;if ($result > 0)
			;	putitem/id poParams, "NR_CUPOM", vDsRetorno
			;endif
			if ($idpart(vDsLinha) = "NR_CUPOM")
				putitem/id poParams, "NR_CUPOM", $item("NR_CUPOM",vDsLinha)
			elseif ($idpart(vDsLinha) = "NR_SERIE")
				putitem/id poParams, "NR_SERIE", $item("NR_SERIE",vDsLinha)
				putitem/id $$gParamGlb, "CD_SERIEECF", $item("NR_SERIE",vDsLinha)
			endif

			activate "vbfileman".eof(vEOF)
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
			endif

		until (vEOF = -1)

		if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
			$hrFim$ = $clock
			putmess "ECFSVCO011: vendeItem - vInTEF leitura  concluída RETORNOECF.TXT: %%$hrFim$"
		endif 
	endif

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: vendeItem - Fim vendeItem: %%$hrFim$"
	endif ;

	return(0)
end ;vendeItem

;* Claudemir - Prj/Tarefa: 191/1 - 27/09/2011
;-------------------------------------
public operation acrescimoDescontoItem
;-------------------------------------
	params
		string piParams	:IN
		string poParams	:OUT
		string poCdErro	:OUT
		string poCtxErro	:OUT
	endparams

	variables
		string vNrItem, vlDesconto
		string vEOF, vDsAcresDesc, vDsAux, vlValor, vDsPath, vDsConteudo, vTpAcresDesc
		numeric vQtTentativa, Status
		boolean vInConcomitante
	endvariables

	;if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
	;	$hrFim$ = $clock
	;	putmess "ECFSVCO011: acrescimoDescontoItem - Inicio acrescimoDescontoItem: %%$hrFim$"
	;endif 

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0

	vNrItem	=	$item("NR_ITEM",piParams)
	call preencheZero(vNrItem,3,vNrItem)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif	
	
	; A - Acrescimo,  D - Desconto
	vDsAcresDesc = $item("DS_ACRESDESC",piParams)	
	if (vDsAcresDesc = "") 		
    	vDsAcresDesc = "D"		
	endif

	; $ - Valor,  % - Percentual
	vTpAcresDesc = $item("TP_ACRESDESC",piParams)
	if (vTpAcresDesc = "")
		vTpAcresDesc	= "$"
	endif

	vlValor = $number($item("VL_DESCONTO",piParams)) * 100
	call preencheZero(vlValor,14,vlValor)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	;if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
	;	$hrFim$ = $clock
	;	putmess "ECFSVCO011: acrescimoDescontoItem - Inicio filedump: %%$hrFim$"
	;endif 

	filedump "003%%vNrItem%%vDsAcresDesc%%vTpAcresDesc%%vlValor%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.acrescimoDescontoCupom")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	;if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
	;	$hrFim$ = $clock
	;	putmess "ECFSVCO011: acrescimoDescontoItem  - Termino acrescimoDescontoItem : %%$hrFim$"
	;endif 

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%\ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	;if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
	;	$hrFim$ = $clock
	;	putmess "ECFSVCO011: acrescimoDescontoItem - Aguardando RETORNOECF.TXT acrescimoDescontoItem: %%$hrFim$"
	;endif 

	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 8)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.acrescimoDescontoItem")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.acrescimoDescontoItem")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	;if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
	;	$hrFim$ = $clock
	;	putmess "ECFSVCO011: acrescimoDescontoItem - Leitura concluída RETORNOECF.TXT acrescimoDescontoItem: %%$hrFim$"
	;endif 

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	;if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
	;	$hrFim$ = $clock
	;	putmess "ECFSVCO011: acrescimoDescontoItem - Fim acrescimoDescontoItem: %%$hrFim$"
	;endif

	return(0)

end;  ;*

;-----------------------
public operation acrescimoDescontoCupom
;-----------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams

	variables
		string vEOF, vDsAcresDesc, vDsAux, vlValor, vDsPath, vDsConteudo
		numeric vQtTentativa, Status
		boolean vInConcomitante
	endvariables
	
	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: acrescimoDescontoCupom - Inicio acrescimoDescontoCupom: %%$hrFim$"
	endif 

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0

	vInConcomitante = $item("IN_CONCOMITANTE",piParams) ;* Claudemir - Prj/Tarefa: 26/31 - 25/11/2009

	vDsAcresDesc = ""
	if ($item("IN_ACRESDESC",piParams) = "") 		
    	vDsAcresDesc = "D"
	else
		vDsAcresDesc = $item("IN_ACRESDESC",piParams)
	endif

	; se for concomitante, o desconto tem que ser dado no final
	if (vInConcomitante = <TRUE>) ;* Claudemir - Prj/Tarefa: 26/31 - 25/11/2009
		vlValor = $number($item("VL_ACRESDESC",piParams)) * 100
	else
		;* Claudemir - 18/08/2009 - Prj/Tarefa: 102/656
		;* Se for desconto, não será aplicado, pois o desconto será tratato somente no item
		if (vDsAcresDesc = "D") 
			vlValor = $number(0) * 100
		else
			vlValor = $number($item("VL_ACRESDESC",piParams)) * 100
		endif ;*
	endif 

	if ($item("TP_ACRESDESC",piParams) = "")
    	vDsAcresDesc = "%%vDsAcresDesc%%%$"
	else
		vDsAux = $item("TP_ACRESDESC",piParams)
		vDsAcresDesc = "%%vDsAcresDesc%%vDsAux"
	endif
	;$vl14DIG$ = $item("VL_ACRESDESC",piParams)


	if ($item("PADRAO_ECF",$$gParamGlb) = <PADRAO_LOCALIMPFINAL>)
		putitem/id poParams, "DS_CUPOM", "004%%vDsAcresDesc%%vlValor%%^"
		return(0)
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: acrescimoDescontoCupom - Inicio filedump: %%$hrFim$"
	endif 

	filedump "004%%vDsAcresDesc%%vlValor%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.acrescimoDescontoCupom")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: acrescimoDescontoCupom - Termino acrescimoDescontoCupom: %%$hrFim$"
	endif 

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%\ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: acrescimoDescontoCupom - Aguardando RETORNOECF.TXT acrescimoDescontoCupom: %%$hrFim$"
	endif 

	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 8)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.acrescimoDescontoCupom")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.acrescimoDescontoCupom")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: acrescimoDescontoCupom - Leitura concluída RETORNOECF.TXT acrescimoDescontoCupom: %%$hrFim$"
	endif 

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: acrescimoDescontoCupom - Fim acrescimoDescontoCupom: %%$hrFim$"
	endif 

	return(0)
end;acrescimoDescontoCupom

;-----------------------
public operation formaPagamento
	;-----------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsPgto, vDsPgtoAux, vDsPath, vDsConteudo
		numeric vQtTentativa, Status
	endvariables	

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: formaPagamento - Inicio formaPagamento: %%$hrFim$"
	endif 

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	
	$vl14DIG$ = $item("VL_FORMAPGTO",piParams)
	vDsPgto   = $item("DS_FORMAPGTO",piParams)
	call espacoDireita(vDsPgto,16,vDsPgto)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	if ($item("PADRAO_ECF",$$gParamGlb) = <PADRAO_LOCALIMPFINAL>)
		putitem/id poParams, "DS_CUPOM", "005%%vDsPgto%%$vl14DIG$%%^"
		return(0)
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: formaPagamento - Inicio filedump formaPagamento: %%$hrFim$"
	endif 

	$status = 0
	filedump "005%%vDsPgto%%$vl14DIG$%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.formaPagamento")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: formaPagamento - Fim filedump formaPagamento: %%$hrFim$"
	endif 

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: formaPagamento - Aguardando leitura RETORNOECF.TXT formaPagamento: %%$hrFim$"
	endif 

	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 8)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.formaPagamento")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: formaPagamento - Fim leitura RETORNOECF.TXT formaPagamento: %%$hrFim$"
	endif 

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.formaPagamento")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: formaPagamento - Fim formaPagamento: %%$hrFim$"
	endif 

	return(0)
end;formaPagamento

;-----------------------
public operation fechaCupom
	;-----------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsPath, vDsConteudo, vDsCupom
		numeric vQtTentativa, Status, vQtContador 
		string vDsLinha, vDsLinhaObs, vDsRetorno, viParams, voParams, vDsMensagem
		boolean vFlag
	endvariables

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: fechaCupom - Inicio fechaCupom: %%$hrFim$"
	endif 

	vDsMensagem = $item("DS_MENSAGEM",piParams)		

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"	
	
	vDsCupom = $item("DS_CUPOM",piParams)	
	$status = 0	

	if (vDsMensagem!="")
		repeat
			scan vDsMensagem, "%%^"
			if ($result > 0)
				putitem vDsLinhaObs, -1, vDsMensagem[1 : $result - 1] 
				vDsCupom = "%%vDsCupom%%%066%%vDsMensagem[1 : $result - 1]%%^"
				vDsMensagem = vDsMensagem[$result + 1]            
			endif
		until ($result = 0)
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: fechaCupom - Inicio filedump fechaCupom: %%$hrFim$"
	endif 

	if ($item("PADRAO_ECF",$$gParamGlb) = <PADRAO_LOCALIMPFINAL>)
		;fecha o cupom retorna o nr do cupom 
		vDsCupom = "%%vDsCupom%%%006%%^%%%016%%^"
		filedump "%%vDsCupom","%%vDsPath%%%ECF.TMP"
;retirado o append pois deixava mais lento(oda)
;		filedump/append "%%vDsCupom","%%vDsPath%%%ECF.TMP"
	else
		filedump "006%%^","%%vDsPath%%%ECF.TMP"
;retirado o append pois deixava mais lento(oda)
;		filedump/append "006%%^","%%vDsPath%%%ECF.TMP"		
	endif

	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.fechaCupom")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: fechaCupom - Fim filedump fechaCupom: %%$hrFim$"
	endif 

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: fechaCupom - Aguardando leitura RETORNOECF.TXT fechaCupom: %%$hrFim$"
	endif 

	vDsConteudo = ""
	vQtTentativa = 0
	vQtContador = 200000;* Claudemir - Prj/Tarefa: 102/956 - 28/09/2010

	repeat
		activate "vbfileman".arqexiste(vFlag,"%%vDsPath%%%RETORNOECF.TXT")
		if (vFlag = <TRUE>)
			break
		endif
		;* Claudemir - Prj/Tarefa: 102/956 - 28/09/2010
		if ($item("TEF_COMUNICACAO_GP", $$gParamGlb) = <TRUE> ) ;utiliza uniface local
			activate "KERNEL32".SLEEP(1000) 
			vQtContador = 180 ;3 minutos
		endif ;*
		vQtTentativa = vQtTentativa + 1
		;* Claudemir - Prj/Tarefa: 102/956 - 28/09/2010
		;if (vQtTentativa > 200000)
		if (vQtTentativa > vQtContador)  ;*
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.fechaCupom")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
			endif
			exit(-1)
		endif

		;$instancehandle->setDisplay("%%vQtTentativa", "", "")
		;if ($procerror)
		;	$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		;endif
	until (vDsConteudo != "")

	;-=CANONICO=- (16-09-2008) PRJ 102 TAR 394
	fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.fechaCupom")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		if ($item("PADRAO_ECF",$$gParamGlb) = <PADRAO_LOCAL>)
		
			if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
				$hrFim$ = $clock
				putmess "ECFSVCO011: fechaCupom - Inicio gravaCupomINIFIM fechaCupom: %%$hrFim$"
			endif 

			putitem/id viParams, "NR_CUPOM", $item("NR_CUPOM",piParams)
			putitem/id viParams, "NR_SERIE", $item("CD_SERIEECF",$$gParamGlb)
			putitem/id viParams, "DT_EMISSAO", $item("DT_SISTEMA",$$gParamGlb)
			activate "FISSVCO008".gravaCupomINIFIM($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif

			if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
				$hrFim$ = $clock
				putmess "ECFSVCO011: fechaCupom - Fim gravaCupomINIFIM fechaCupom: %%$hrFim$"
			endif 
		else
			activate "vbfileman".filename("%%vDsPath%%%RETORNOECF.TXT")
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Problema ao ler arquivo de retorno do virtual monitor - tente novamente!", "ADICIONAL=Operação->ECFSVC0011.fechaCupom")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Problema ao ler arquivo de retorno do virtual monitor - tente novamente!", "ADICIONAL=Operação->ECFSVC0011.fechaCupom")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif

			repeat
				activate "vbfileman".learquivo(vDsLinha)
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Problema ao ler arquivo de retorno do virtual monitor - tente novamente!", "ADICIONAL=Operação->ECFSVC0011.fechaCupom")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Problema ao ler arquivo de retorno do virtual monitor - tente novamente!", "ADICIONAL=Operação->ECFSVC0011.fechaCupom")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif

				vDsRetorno = $item("NR_CUPOM",vDsLinha)
				length(vDsRetorno)
				if ($result > 0)
					putitem/id poParams, "NR_CUPOM", vDsRetorno
					;grava cupom inicial e final
					viParams = ""
					putitem/id viParams, "NR_CUPOM", vDsRetorno
					putitem/id viParams, "NR_SERIE", $item("CD_SERIEECF",$$gParamGlb)
					putitem/id viParams, "DT_EMISSAO", $item("DT_SISTEMA",$$gParamGlb)
					activate "FISSVCO008".gravaCupomINIFIM($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
					if ($procerror)       
						$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					elseif ($status < 0)
						$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					endif
				endif

				activate "vbfileman".eof(vEOF)
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Problema ao ler arquivo de retorno do virtual monitor - tente novamente!", "ADICIONAL=Operação->ECFSVC0011.fechaCupom")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Problema ao ler arquivo de retorno do virtual monitor - tente novamente!", "ADICIONAL=Operação->ECFSVC0011.fechaCupom")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif

			until (vEOF = -1)
		endif
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: fechaCupom - Fim leitura RETORNOECF.TXT fechaCupom: %%$hrFim$"
	endif 

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: fechaCupom - Fim fechaCupom: %%$hrFim$"
	endif 

	return(0)
end;fechaCupom

;-----------------------
public operation leituraX
	;-----------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsPath, vDsConteudo
		numeric vQtTentativa, Status 
		boolean vFlag
	endvariables

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0

	filedump "009%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.leituraX")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	vDsConteudo = ""
	vQtTentativa = 0
	repeat
		activate "vbfileman".arqexiste(vFlag,"%%vDsPath%%%RETORNOECF.TXT")
		if (vFlag = <TRUE>)
			break
		endif
		activate "KERNEL32".SLEEP(2000)        
		vQtTentativa = vQtTentativa + 1
		if (vQtTentativa > 50000)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.leituraX")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)		
			endif
			return(-1)
		endif
		;$instancehandle->setDisplay("%%vQtTentativa", "", "")
		;if ($procerror)
		;	$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		;endif
	until (vDsConteudo != "")


;	vDsConteudo = ""
;	vQtTentativa = 0
;	repeat
;
;		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
;		if ($procerror) | ($status = 0)
;			activate "KERNEL32".SLEEP(2000)        
;			vQtTentativa = vQtTentativa + 1
;			if (vQtTentativa > 30)
;				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.leituraX")
;				poCdErro = $xCdErro$
;				poCtxErro = $xCtxErro$
;				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
;				if ($procerror)
;					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
;					poCdErro = $xCdErro$
;					poCtxErro = $xCtxErro$
;				elseif ($status < 0)
;					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
;					poCdErro = $xCdErro$
;					poCtxErro = $xCtxErro$
;				endif
;				exit(-1)
;			endif
;		endif
;
;	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.leituraX")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		return(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	return(0)
end;leituraX

;-----------------------
public operation cancelaCupom
	;-----------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsPath, vDsConteudo
		numeric vQtTentativa, Status
	endvariables

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0

	filedump "008%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.cancelaCupom")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 8)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.cancelaCupom")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.cancelaCupom")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	return(0)
end;cancelaCupom

;-----------------------
public operation verificarEstado
	;-----------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vCdComponente, vDsRetorno, vEOF, vDsLinha, vDsPath, vDsConteudo
		numeric vQtTentativa, Status
		boolean vInConcomitante
	endvariables


	vInConcomitante = $item("IN_CONCOMITANTE",piParams)
	if (vInConcomitante = "")
		vInConcomitante = <FALSE>
	endif
	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0

	if (vInConcomitante = <FALSE>)
		if ($item("PADRAO_ECF",$$gParamGlb) = <PADRAO_LOCALIMPFINAL>)
			putitem/id poParams, "DS_CUPOM", "015%%^"
			return(0)
		endif
	endif

	filedump "015%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.verificarEstado")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	vDsConteudo = ""
	vQtTentativa = 0
	repeat
		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 8)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.verificarEstado")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.verificarEstado")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".filename("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	repeat

		activate "vbfileman".learquivo(vDsLinha)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		vDsRetorno = $item("INABERTO",vDsLinha) 
		length(vDsRetorno)
		if ($result > 0)
			putitem/id poParams, "INABERTO", vDsRetorno
			;putitem/id poParams, "PERMITECANCELAR", vDsRetorno
		endif

		activate "vbfileman".eof(vEOF)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

	until (vEOF = -1)

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	return(0)
end;verificarEstado

;-----------------------
public operation leInformacaoImpressora
	;-----------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsLinha, vDsRetorno, vDsPath, vDsConteudo, viParams, voParams, vDsLista, vDsRegistro
		numeric vQtTentativa, Status
		boolean vFlag 
	endvariables

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0
	
	if ($item("NM_FUNCAO",piParams) = "<ECF_NUMERO_CUPOM>")
		if ($item("IN_IMPCUPOMFISCAL",piParams) = <TRUE>)
			if ($item("PADRAO_ECF",$$gParamGlb) = <PADRAO_LOCAL>)
				filedump "016%%^","%%vDsPath%%%ECF.TMP"	
			else
				putitem/id poParams, "DS_CUPOM", "016%%^"
				return(0)
			endif
		else
			filedump "016%%^","%%vDsPath%%%ECF.TMP"
		endif
	elseif ($item("NM_FUNCAO",piParams) = "<ECF_NUMERO_SERIE>")
		filedump "017%%^","%%vDsPath%%%ECF.TMP"
	elseif ($item("NM_FUNCAO",piParams) = "<ECF_ALIQUOTA>")
		filedump "028%%^","%%vDsPath%%%ECF.TMP"
	elseif ($item("NM_FUNCAO",piParams) = "<ECF_FORMAPGTO>")
		filedump "027%%^","%%vDsPath%%%ECF.TMP"
	endif
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.leInformacaoImpressora")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
		
	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif
	
	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 8)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.leInformacaoImpressora")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				return(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.leInformacaoImpressora")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".filename("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	repeat

		activate "vbfileman".learquivo(vDsLinha)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		if ($item("NM_FUNCAO",piParams) = "<ECF_NUMERO_CUPOM>")
			vDsRetorno = $item("NR_CUPOM",vDsLinha)
		elseif ($item("NM_FUNCAO",piParams) = "<ECF_NUMERO_SERIE>")
			vDsRetorno = $item("NR_SERIE",vDsLinha)
		elseif ($item("NM_FUNCAO",piParams) = "<ECF_ALIQUOTA>")
			vDsRetorno = $item("DS_RETORNO",vDsLinha)
		elseif ($item("NM_FUNCAO",piParams) = "<ECF_FORMAPGTO>")
			vDsRetorno = $item("DS_RETORNO",vDsLinha)
		endif 
		length(vDsRetorno)
		if ($result > 0)
			if ($item("NM_FUNCAO",piParams) = "<ECF_NUMERO_CUPOM>")
				putitem/id poParams, "NR_CUPOM", vDsRetorno
			elseif ($item("NM_FUNCAO",piParams) = "<ECF_NUMERO_SERIE>")
				putitem/id poParams, "NR_SERIE", vDsRetorno   
				putitem/id $$gParamGlb, "CD_SERIEECF", vDsRetorno 
			elseif ($item("NM_FUNCAO",piParams) = "<ECF_ALIQUOTA>")
				putitem/id poParams, "DS_ALIQUOTA", vDsRetorno  
			elseif ($item("NM_FUNCAO",piParams) = "<ECF_FORMAPGTO>")
				vDsRegistro = vDsRetorno
				repeat
					scan vDsRegistro, ","
					if ($result > 0)
						putitem vDsLista, -1, vDsRegistro[1 : $result - 1] 
						vDsRegistro = vDsRegistro[$result + 1]            
					endif
				until ($result = 0)
				putitem/id poParams, "DS_FORMAPGTO", vDsLista  
			endif
		endif

		activate "vbfileman".eof(vEOF)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

	until (vEOF = -1)

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	return(0)
end;leInformacaoImpressora

;-----------------------
public operation reducaoZ
	;-----------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsPath, vDsConteudo
		numeric vQtTentativa, Status
		boolean vFlag
	endvariables

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0
	
	;* Canonico/Claudemir - 17/07/2009 - Prj/Tarefa: 26/25
	activate "vbfileman".arqexiste(vFlag,"%%vDsPath%%%RETORNOECF.TXT") 
	if (vFlag = <TRUE>) 
		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif
	endif ;*
	
	filedump "010%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.ReducaoZ")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	vDsConteudo = ""
	vQtTentativa = 0
	repeat
		activate "vbfileman".arqexiste(vFlag,"%%vDsPath%%%RETORNOECF.TXT")
		if (vFlag = <TRUE>)
			break
		endif
		activate "KERNEL32".SLEEP(1000) ; Canonico/Claudemir - 17/07/2009 Prj/Tarefa: 26/25
		vQtTentativa = vQtTentativa + 1 
		if (vQtTentativa > 10000) 
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.reducaoZ")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
			endif
			exit(-1)
		endif
	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.ReducaoZ")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	return(0)
end;reducaoZ

;-----------------------
public operation registroTipo60
	;-----------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsPath, vDsConteudo, vFlag, vNrSerie, viParams, voParams
		numeric vQtTentativa, Status
	endvariables

	vNrSerie = $item("CD_SERIEECF",$$gParamGlb) 
	if (vNrSerie = "")
		viParams = ""
		voParams = ""
		putitem/id viParams, "NM_FUNCAO", <ECF_NUMERO_SERIE>
		putitem/id viParams, "IN_IMPCUPOMFISCAL", <FALSE>
		$instancehandle->leinformacaoImpressora(viParams,voParams,$xcderro$,$xctxerro$)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		vNrSerie = $item("NR_SERIE", voParams)
		if (vNrSerie = "")
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Erro ao obter número de série da impressora!", "ADICIONAL=Operaçco->ECFSVC0011.registroTipo60")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)			
		endif
	endif
	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0

	$instancehandle->RelatorioTipo60Mestre(viParams,voParams,$xcderro$,$xctxerro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Erro na geração do arquivo mestre!", "ADICIONAL=Operação->ECFSVC0011.registroTipo60")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	else	
		activate "vbfileman".copiaarquivo(vFlag,"%%vDsPath%%%\RETORNO.TXT","%%vDsPath%%%\%%vNrSerie%%%.TXT")
		if ($procerror)      
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		viParams = ""
		putitem/id viParams, "NR_SERIE", vNrSerie
		putitem/id viParams, "DS_PATHREDZ", "%%vDsPath%%%\%%vNrSerie%%%.TXT"
		activate "FISSVCO008".geraMapaFiscal($$gParamGlb,viParams,voParams,$xcderro$,$xctxerro$)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		else
;			geracao do arquivo de relatorio da reducao Z - Analitico 
;			-------------------------------------------------------
			$instancehandle->RelatorioTipo60Analitico(viParams,voParams,$xcderro$,$xctxerro$)
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return (-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Erro na geração do arquivo analítico!", "ADICIONAL=Operação->ECFSVC0011.registroTipo60")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			else
				activate "vbfileman".copiaarquivo(vFlag,"%%vDsPath%%%\RETORNO.TXT","%%vDsPath%%%\%%vNrSerie%%%.TXT")
				if ($procerror)      
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					return (-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
				viParams = ""
				putitem/id viParams, "NR_SERIE", vNrSerie
				putitem/id viParams, "DS_PATHREDZ", "%%vDsPath%%%\%%vNrSerie%%%.TXT"
				activate "FISSVCO008".geraMapaFiscal($$gParamGlb,viParams,voParams,$xcderro$,$xctxerro$)
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					return (-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
			endif
		endif
	endif

	return(0)
end;registroTipo60

;-----------------------
public operation relatorioTipo60Mestre
	;-----------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsPath, vDsConteudo
		numeric vQtTentativa, Status
	endvariables

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0

	filedump "013%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.registroTipo60Mestre")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(4000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 20)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.registroTipo60Mestre")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.registroTipo60Mestre")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	return(0)
end;relatorioTipo60Mestre

;-----------------------
public operation relatorioTipo60Analitico
	;-----------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsPath, vDsConteudo
		numeric vQtTentativa, Status
	endvariables

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0

	filedump "014%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.registroTipo60Analitico")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 8)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.registroTipo60Analitico")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.registroTipo60Analitico")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	return(0)
end;relatorioTipo60Analitico

;-----------------------
public operation leituraMemoriaFiscalData
	;-----------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsPath, vDsConteudo, vDataINI, vDataFIM
		numeric vQtTentativa, Status
	endvariables

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0
	vDataINI = $item("DT_INICIO",piParams)
	if (vDataINI = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data inicial não informada!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalData")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	vDataFIM = $item("DT_FIM",piParams)
	if (vDataFIM = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data final não informada!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalData")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	filedump "011%%vDataINI%%vDataFIM%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalData")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 60)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalData")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalData")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	putitem/id poParams, "DS_PATH", vDsPath

	return(0)
end ;leituraMemoriaFiscalData



;------------------------
public operation leituraMemoriaFiscalSerialData
;------------------------
params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsPath, vDsConteudo, vDataINI, vDataFIM
		numeric vQtTentativa, Status
	endvariables

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0
	vDataINI = $item("DT_INICIO",piParams)
	if (vDataINI = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data inicial não informada!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalSerialData")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	vDataFIM = $item("DT_FIM",piParams)
	if (vDataFIM = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data final não informada!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalSerialData")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	filedump "033%%vDataINI%%vDataFIM%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalSerialData")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 60)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalSerialData")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalSerialData")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	return(0)
	
	putitem/id poParams, "DS_PATH", vDsPath

end;operation leituraMemoriaFiscalSerialData



;------------------------
public operation leituraMemoriaFiscalReducao
	;------------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsPath, vDsConteudo, vRedINI, vRedFIM
		numeric vQtTentativa, Status
	endvariables

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0
	vRedINI = $item("NR_REDINI",piParams)
	if (vRedINI = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Redução inicial não informada!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalReducao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	call preencheZero(vRedINI,5,vRedINI)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif
	vRedFIM = $item("NR_REDFIM",piParams)
	if (vRedFIM = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Redução final não informada!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalReducao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	call preencheZero(vRedFIM,5,vRedFIM)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif
	filedump "012%%vRedINI%%vRedFIM%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalReducao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 60)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalReducao")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalReducao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	putitem/id poParams, "DS_PATH", vDsPath

	return(0)
end;operation leituraMemoriaFiscalReducao 


;------------------------
public operation leituraMemoriaFiscalSerialRed
	;------------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsPath, vDsConteudo, vRedINI, vRedFIM
		numeric vQtTentativa, Status
	endvariables

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0
	vRedINI = $item("NR_REDINI",piParams)
	if (vRedINI = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Redução inicial não informada!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalReducao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	call preencheZero(vRedINI,5,vRedINI)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif
	vRedFIM = $item("NR_REDFIM",piParams)
	if (vRedFIM = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Redução final não informada!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalReducao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	call preencheZero(vRedFIM,5,vRedFIM)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif
	filedump "032%%vRedINI%%vRedFIM%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalReducao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 60)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalReducao")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalReducao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	putitem/id poParams, "DS_PATH", vDsPath

	return(0)
end;operation leituraMemoriaFiscalSerialRed



;-----------------------
public operation suprimento
	;-----------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsPath, vDsConteudo, vCodTotNaoFiscal, vStringConv
		numeric vQtTentativa, Status, vlSuprimento, vNumericAux 
	endvariables

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0

	vCodTotNaoFiscal = "SU"	

	vNumericAux = $item("VL_SUPRIMENTO",piParams)
	$instancehandle->editarNr(12, 2, vNumericAux, vNumericAux)
	$instancehandle->convNumeric(vNumericAux, 14, vStringConv)

	
	filedump "050%%vCodTotNaoFiscal%%vStringConv%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.suprimento")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 8)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.suprimento")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.suprimento")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	return(0)
end ;suprimento

;-----------------------
public operation sangria
	;-----------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsPath, vDsConteudo, vCodTotNaoFiscal, vStringConv
		numeric vQtTentativa, Status, vNumericAux 
	endvariables

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0

	vCodTotNaoFiscal = "SA"	
	vNumericAux = $item("VL_SANGRIA",piParams)
	$instancehandle->editarNr(12, 2, vNumericAux, vNumericAux)
	$instancehandle->convNumeric(vNumericAux, 14, vStringConv)
	

	filedump "050%%vCodTotNaoFiscal%%vStringConv%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.sangria")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 8)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.sangria")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.sangria")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	return(0)
end ;sangria

;-----------------------
public operation abreComprovanteNFNV ;Comprovante Nao Fiscal Nao Vinculado - -=CANONICO=-
;-----------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams

	variables
		string vEOF, vDsPath, vDsConteudo, vDsPgto, vCodTotNaoFiscal, vDsLinha, vDsCupom, vNrSerie, viParams, voParams
		string vDsLinhaObs, vDsRetorno, vDsFatura, vDsRegistro, vDsLista, vDsFaturaVin, vStringConv, vNrCupom
		numeric vQtTentativa, Status, vVlTotal, vVlFatura, vNumericAux, vCondicao, vCdTerminal, vNrCopia, nrViasEcfTermica
		numeric vNrLinhasCorte, vTamanho, vResult, vContador
		boolean inLocalizou, vFlag, vInCorteVia  
	endvariables

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: abreComprovanteNFNV - Inicio abreComprovanteNFNV: %%$hrFim$"
	endif 

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0
	
	vDsPgto = $item("DS_FORMAPGTO",piParams)
	nrViasEcfTermica = $item("NR_VIAS_ECF_TERMICA",$$gParamGlb)
	;vDsPgto ="Receb. de fatura"		
	;-=CANONICO=- (22/01/2008) TAR 1069 prj 78
	;-------------------------
	;vCondicao 1 - vinculado
	;          2 - nao vinculado
	;		   9 - vinculado / nao vinculado
    ;-------------------------
	vCondicao =  $item("NR_CONDICAO",piParams)
	
	$vl14DIGITOS$ = $item("VL_VALOR",piParams)

	if (vDsPgto="Receb. de Fatura") | (vDsPgto="Receb. de fatura")
		vDsPgto="Receb. de Fatura"

		;-=CANONICO=- (25/08/2008) TAR 044 PRJ 133 Impressora MP 3000 - BENOLIEL apresenta particularidade na forma de pagamento 
		vCdTerminal = $item("CD_TERMINAL",$$gParamGlb)
		if (vCdTerminal != "")

			inLocalizou = <FALSE>

			clear/e "GLB_PERIFERICSVC"
			DS_PERIFERICO.GLB_PERIFERICSVC/init = "BEMATECH MP 3000"
			retrieve/e "GLB_PERIFERICSVC"
			if ($status >=0)
				clear/e "GER_TERMINALPSVC"
				CD_EMPRESA.GER_TERMINALPSVC/init = $item("CD_EMPRESA",$$gParamGlb) 
				CD_TERMINAL.GER_TERMINALPSVC/init = vCdTerminal 
				CD_PERIFERICO.GER_TERMINALPSVC/init = CD_PERIFERICO.GLB_PERIFERICSVC
				retrieve/e "GER_TERMINALPSVC"
				if ($status >= 0)
					inLocalizou = <TRUE>
				endif
			endif

			if (inLocalizou = <FALSE>)
				;-=CANONICO=- (04-12/2008) TAR 1974 PRJ 78 Impressora SWEDA ST 120
				clear/e "GLB_PERIFERICSVC"
				DS_PERIFERICO.GLB_PERIFERICSVC/init = "SWEDA ST120"
				retrieve/e "GLB_PERIFERICSVC"
				if ($status >=0)
					clear/e "GER_TERMINALPSVC"
					CD_EMPRESA.GER_TERMINALPSVC/init = $item("CD_EMPRESA",$$gParamGlb) 
					CD_TERMINAL.GER_TERMINALPSVC/init = vCdTerminal 
					CD_PERIFERICO.GER_TERMINALPSVC/init = CD_PERIFERICO.GLB_PERIFERICSVC
					retrieve/e "GER_TERMINALPSVC"
					if ($status >= 0)
						inLocalizou = <TRUE>
					endif
				endif
			endif

			if (inLocalizou = <FALSE>)
				;-=CANONICO=- (13/04/2009) TAR 516 PRJ 102 Impressora MP 4000 lojas Gaúcha
				clear/e "GLB_PERIFERICSVC"
				DS_PERIFERICO.GLB_PERIFERICSVC/init = "BEMATECH MP 4000"
				retrieve/e "GLB_PERIFERICSVC"
				if ($status >=0)
					clear/e "GER_TERMINALPSVC"
					CD_EMPRESA.GER_TERMINALPSVC/init = $item("CD_EMPRESA",$$gParamGlb) 
					CD_TERMINAL.GER_TERMINALPSVC/init = vCdTerminal 
					CD_PERIFERICO.GER_TERMINALPSVC/init = CD_PERIFERICO.GLB_PERIFERICSVC
					retrieve/e "GER_TERMINALPSVC"
					if ($status >= 0)
						inLocalizou = <TRUE>
					endif
				endif
			endif
		
			if (inLocalizou = <TRUE>)
				vDsPgto="Receb. de Fatur"
			endif
		endif
		;
	
		vCodTotNaoFiscal = $item("TP_TOTALIZADOR_ECF_REC", $$gParamGlb)

		;* Claudemir - Prj/Tarefa: 102/721 - 04/11/2009 
		; le a entidade, caso tenha valor pega da tabela, caso não tenha, mantem o parâmetro
		viParams = ""
		voParams = ""
		putitem/id viParams, "NM_FUNCAO", <ECF_NUMERO_SERIE>
		putitem/id viParams, "IN_IMPCUPOMFISCAL", <FALSE>
		$instancehandle->leinformacaoImpressora(viParams,voParams,$xcderro$,$xctxerro$)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		vNrSerie = $item("NR_SERIE", voParams)
		if (vNrSerie = "")
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Erro ao obter número de série da impressora!", "ADICIONAL=Operaçco->ECFSVC0011.registroTipo60")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)			
		endif

		clear/e "FIS_ECFSVC"
		CD_EMPRESA.FIS_ECFSVC/init   = $item("CD_EMPRESA",$$gParamGlb)
		CD_SERIEFAB.FIS_ECFSVC/init  = vNrSerie
		retrieve/e "FIS_ECFSVC"
		if ($status >= 0)
			clear/e "FIS_ECFADICSVC"
			CD_EMPRESA.FIS_ECFADICSVC/init = CD_EMPRESA.FIS_ECFSVC
			NR_ECF.FIS_ECFADICSVC/init     = NR_ECF.FIS_ECFSVC
			retrieve/e "FIS_ECFADICSVC"
			if ($status >= 0)
				if (NR_VIARECIBOTRA.FIS_ECFADICSVC > 0)
					nrViasEcfTermica = NR_VIARECIBOTRA.FIS_ECFADICSVC
				endif
				vInCorteVia = IN_CORTEVIA.FIS_ECFADICSVC
				;* Claudemir - Prj/Tarefa: 102/877 - 19/05/2010
				if (NR_TOTREC.FIS_ECFADICSVC > 0)
					vCodTotNaoFiscal = NR_TOTREC.FIS_ECFADICSVC
				endif ;*
	
				;* Claudemir - Prj/Tarefa: 156/662 - 18/11/2011
				if (NR_LINHACORTE.FIS_ECFADICSVC > 0)	
					vNrLinhasCorte	= NR_LINHACORTE.FIS_ECFADICSVC
				endif ;*
			endif 
		endif ;*

		;-=CANONICO=- (30/06/2009) TAR 609 PRJ 102 - Tentativa de solucionar o problema da Beloniel abertura da fatura
		call preencheZero(vCodTotNaoFiscal,2,vCodTotNaoFiscal)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		endif

		call espacoDireita(vDsPgto,16,vDsPgto)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		endif

		vDsFatura = $item("DS_FATURA",piParams)
		if (vDsFatura = "")
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Lista de fatura nao informada!", "ADICIONAL=Operação->ECFSVC0011.abreComprovanteNFNV")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif

		clear/e "F_TMP_NR09SVC"
		repeat
			getitem vDsRegistro, vDsFatura, 1

			creocc "F_TMP_NR09SVC", -1
			NR_GERAL.F_TMP_NR09SVC/init = 1;item("CD_CLIENTE",vDsRegistro)
			retrieve/o "F_TMP_NR09SVC"
			VL_FATURA.F_TMP_NR09SVC/init = VL_FATURA.F_TMP_NR09SVC + $item("VL_ARECEBER",vDsRegistro)

			vDsLista = DS_FATURA.F_TMP_NR09SVC
			putitem vDsLista, -1, vDsRegistro
			DS_FATURA.F_TMP_NR09SVC/init = vDsLista

			delitem vDsFatura, 1
		until (vDsFatura = "")

		if ($empty("F_TMP_NR09SVC")=1)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Lista de fatura nao informada!", "ADICIONAL=Operação->ECFSVC0011.abreComprovanteNFNV")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif

		setocc "F_TMP_NR09SVC", 1
		while ($status >= 0)

			vVlFatura = VL_FATURA.F_TMP_NR09SVC

			vNumericAux = VL_FATURA.F_TMP_NR09SVC
			$instancehandle->editarNr(12, 2, vNumericAux, vNumericAux)
			$instancehandle->convNumeric(vNumericAux, 14, vStringConv)	

			if (vCondicao = 1) | (vCondicao = 9)
				filedump "050%%vCodTotNaoFiscal%%vStringConv%%vDsPgto%%^016%%^","%%vDsPath%%%ECF.TMP"
				if ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.abreComprovanteNFNV")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif

				activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
			
				vDsConteudo = ""
				vQtTentativa = 0

				repeat
					activate "vbfileman".arqexiste(vFlag,"%%vDsPath%%%RETORNOECF.TXT")
					if (vFlag = <TRUE>)
						break
					endif
					activate "KERNEL32".SLEEP(2000)
					vQtTentativa = vQtTentativa + 1
					if (vQtTentativa > 1000)
						$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.fechaCupom")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
						if ($procerror)
							$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
							poCdErro = $xCdErro$
							poCtxErro = $xCtxErro$
							return(-1)
						elseif ($status < 0)
							$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
							poCdErro = $xCdErro$
							poCtxErro = $xCtxErro$
							return(-1)
						endif
						return(-1)
					endif
				until (vDsConteudo != "")	
				
				length vDsConteudo
				Status = vDsConteudo[1,4]
				if (Status = -1)
					$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.abreComprovanteNFNV")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$

					activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
					if ($procerror)
						$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					elseif ($status < 0)
						$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					endif
					return(-1)
				else
					$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
					if ($procerror)
						$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					endif
				endif

				activate "vbfileman".filename("%%vDsPath%%%RETORNOECF.TXT")
				if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif

				repeat
					activate "vbfileman".learquivo(vDsLinha)
					if ($procerror)
						$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					elseif ($status < 0)
						$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					endif

					vDsRetorno = $item("NR_CUPOM",vDsLinha)
					length(vDsRetorno)
					if ($result > 0)
						putitem/id poParams, "NR_CUPOM", vDsRetorno
						vNrCupom = vDsRetorno
					endif
					activate "vbfileman".eof(vEOF)
					if ($procerror)
						$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					elseif ($status < 0)
						$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					endif

				until (vEOF = -1)
			
				activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif

			endif

			if (vCondicao = 2) | (vCondicao = 9)
				putitem/id piParams, vDsLinha
				putitem/id piParams, "VL_VALOR", vVlFatura
				putitem/id piParams, "DS_FORMAPGTO", vDsPgto 
				putitem/id piParams, "NR_CUPOM", vNrCupom
				$instancehandle->abreComprovanteNFV(piParams,poParams,poCdErro,poCtxErro)
        		if ($procerror)
		   		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif

				vDsCupom = $item("DS_CUPOM", poParams)	
				;-=CANONICO=- (16/04/2009) TAR 516 PRJ 102 - Permite imprimir o espelho do vinculado de acordo com o parametro "NR_VIAS_ECF_TERMICA"
				vNrCopia = 1

				repeat
					vDsFaturaVin = $item("DS_CONTEUDO",piParams)
					if (vDsFaturaVin!="")
						repeat
							scan vDsFaturaVin, "%%^"
							if ($result > 0)
								vResult = $result ;* Claudemir - Prj/Tarefa: 156/662 - 11/11/2011

								putitem vDsLinhaObs, -1, vDsFaturaVin[1 : $result - 1] 

								;* Claudemir - Prj/Tarefa: 156/662 - 11/11/2011
								;vDsCupom = "%%vDsCupom%%%022%%vDsFaturaVin[1 : $result - 1]%%^"
								scan vDsLinhaObs, "[BARRA]"
								if ($result > 0)
									vTamanho = $length(vDsLinhaObs)
									vDsCupom = "%%vDsCupom%%%135%%vDsFaturaVin[8 , $result - 1]%%^"
								else
									scan vDsLinhaObs, "[CORTE]"
										if ($result > 0)
											vContador = 1
											while (vContador <= vNrLinhasCorte)
												vDsCupom = "%%vDsCupom%%%022%%^"
												vContador = vContador + 1
											endwhile
											vDsCupom = "%%vDsCupom%%%131%%^"
											vDsCupom = "%%vDsCupom%%%022%%^"
										else
											$result	= vResult
											vDsCupom = "%%vDsCupom%%%022%%vDsFaturaVin[1 : $result - 1]%%^"
										endif
								endif ;*

								vDsFaturaVin = vDsFaturaVin[$result + 1]
							endif
						until ($result = 0)
					endif
					if (vNrCopia >= nrViasEcfTermica)
					else
						vDsCupom = "%%vDsCupom%%%080%%^" ;Comando responsavel por um intervalo de 5 segundos entre um espelho do cupom e outro. Obs. Versao monitor 2.2.a
						;-=CANONICO=- (25/11/2009) TAR 743 PRJ 102
						if (vInCorteVia = <TRUE>)
							;* Claudemir - Prj/Tarefa: 102/826 - 15/03/2010
							; substituido a quantidade de linhas fixas para pular, pela configurada na tabela

							;vDsCupom  = "%%vDsCupom%%%022%%^" 
							;vDsCupom  = "%%vDsCupom%%%022%%^" 
							;vDsCupom  = "%%vDsCupom%%%022%%^" 
							if (NR_LINHACORTE.FIS_ECFADICSVC > 0)
								vNrLinhasCorte = NR_LINHACORTE.FIS_ECFADICSVC
								vContador = 1
								while (vContador <= vNrLinhasCorte)
									vDsCupom  = "%%vDsCupom%%%022%%^"
									vContador = vContador + 1
								endwhile
							endif
							;* 
							vDsCupom  = "%%vDsCupom%%%131%%^" 
						endif
 					endif
					vNrCopia = vNrCopia + 1

				until (vNrCopia > nrViasEcfTermica)
					
				putitem/id piParams, "DS_CUPOM", vDsCupom 

				$instancehandle->fechaVinculado(piParams,poParams,poCdErro,poCtxErro)
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				elseif($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
			endif	
			setocc "F_TMP_NR09SVC", $curocc("F_TMP_NR09SVC") + 1
		endwhile
		$status = 0

		
	elseif (vDsPgto="Cancel.Recebim.")
		vCodTotNaoFiscal = $item("TP_TOTALIZADOR_ECF_CANC", $$gParamGlb)

		;* ;* Claudemir - Prj/Tarefa: 102/877 - 19/05/2010
		; le a entidade, caso tenha valor pega da tabela, caso não tenha, mantem o parâmetro
		viParams = ""
		voParams = ""
		putitem/id viParams, "NM_FUNCAO", <ECF_NUMERO_SERIE>
		putitem/id viParams, "IN_IMPCUPOMFISCAL", <FALSE>
		$instancehandle->leinformacaoImpressora(viParams,voParams,$xcderro$,$xctxerro$)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		vNrSerie = $item("NR_SERIE", voParams)
		if (vNrSerie = "")
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Erro ao obter número de série da impressora!", "ADICIONAL=Operaçco->ECFSVC0011.registroTipo60")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)			
		endif

		clear/e "FIS_ECFSVC"
		CD_EMPRESA.FIS_ECFSVC/init   = $item("CD_EMPRESA",$$gParamGlb)
		CD_SERIEFAB.FIS_ECFSVC/init  = vNrSerie
		retrieve/e "FIS_ECFSVC"
		if ($status >= 0)
			clear/e "FIS_ECFADICSVC"
			CD_EMPRESA.FIS_ECFADICSVC/init = CD_EMPRESA.FIS_ECFSVC
			NR_ECF.FIS_ECFADICSVC/init     = NR_ECF.FIS_ECFSVC
			retrieve/e "FIS_ECFADICSVC"
			if ($status >= 0)
				;* Claudemir - Prj/Tarefa: 102/877 - 19/05/2010
				if (NR_TOTCANCEL.FIS_ECFADICSVC > 0)
					vCodTotNaoFiscal = NR_TOTCANCEL.FIS_ECFADICSVC
				endif ;*
			endif 
		endif ;*

		;-=CANONICO=- (30/06/2009) TAR 609 PRJ 102 - Tentativa de solucionar o problema da Beloniel Cancelamento
		call preencheZero(vCodTotNaoFiscal,2,vCodTotNaoFiscal)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		endif

		call espacoDireita(vDsPgto,16,vDsPgto)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		endif

		vNumericAux = $vl14DIGITOS$
		$instancehandle->editarNr(12, 2, vNumericAux, vNumericAux)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		endif

		$instancehandle->convNumeric(vNumericAux, 14, vStringConv)	
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		endif

		filedump "050%%vCodTotNaoFiscal%%vStringConv%%vDsPgto%%^016%%^","%%vDsPath%%%ECF.TMP"
		if ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.abreComprovanteNFNV")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif

		activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif

		repeat
			activate "vbfileman".arqexiste(vFlag,"%%vDsPath%%%RETORNOECF.TXT")
			if (vFlag = <TRUE>)
				break
			endif
			vQtTentativa = vQtTentativa + 1
			activate "KERNEL32".SLEEP(2000)
			if (vQtTentativa > 120)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.abreComprovanteNFNV")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
				return(-1)
			endif
		until (vDsConteudo != "")
	endif
	putitem/id poParams, "NR_CUPOM", vNrCupom
	putitem/id poParams, "DS_FORMAPGTO", vDsPgto

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: abreComprovanteNFNV - Fim abreComprovanteNFNV: %%$hrFim$"
	endif 

	$status = 0
	return(0)
end ;abreComprovanteNFNV


;-----------------------
public operation abreComprovanteNFV ;Comprovante Nao Fiscal Vinculado - -=CANONICO=-
	;-----------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsPath, vDsConteudo, vDsPgto
		numeric vQtTentativa, Status, vNrParcelas
	endvariables

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: abreComprovanteNFV - Inicio abreComprovanteNFV: %%$hrFim$"
	endif 

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0

	vDsPgto = $item("DS_FORMAPGTO",piParams)
	call espacoDireita(vDsPgto,16,vDsPgto)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	$vl14DIG$ = $item("VL_VALOR",piParams)
	$vl6DIG$ = $item("NR_CUPOM",piParams)
	vNrParcelas = $item("NR_PARCELAS",piParams) ;-=CANONICO=- (05/12/2008) TAR 415 PRJ 102

	if ($item("PADRAO_ECF",$$gParamGlb) = <PADRAO_LOCALIMPFINAL>)
		putitem/id poParams, "DS_CUPOM", "021%%vDsPgto%%$vl14DIG$%%$vl6DIG$%%vNrParcelas%%^"
		return(0)
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: abreComprovanteNFV - Inicio filedump abreComprovanteNFV: %%$hrFim$"
	endif 

	;filedump/append "021%%vDsPgto%%$vl14DIG$%%$vl6DIG$%%^","%%vDsPath%%%ECF.TMP"
	filedump "021%%vDsPgto%%$vl14DIG$%%$vl6DIG$%%vNrParcelas%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.abreComprovanteNFV")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: abreComprovanteNFV - Fim filedump abreComprovanteNFV: %%$hrFim$"
	endif 

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: abreComprovanteNFV - Aguardando RETORNOECF.TXT abreComprovanteNFV: %%$hrFim$"
	endif 

	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 8)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.abreComprovanteNFV")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.abreComprovanteNFV")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: abreComprovanteNFV - Fim leitura RETORNOECF.TXT abreComprovanteNFV: %%$hrFim$"
	endif 

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: abreComprovanteNFV - Fim abreComprovanteNFV: %%$hrFim$"
	endif 

	return(0)
end ;abreComprovanteNFV

;-----------------------
public operation imprimeVinculado
	;-----------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsPath, vDsConteudo, vDsTexto
		numeric vQtTentativa, Status
		boolean vInImprimeVia
	endvariables

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: imprimeVinculado - Inicio imprimeVinculado: %%$hrFim$"
	endif 

	vInImprimeVia = $item("IN_IMPRIMEVIA",piParams)
	if (vInImprimeVia = "")
		vInImprimeVia = <FALSE>
	endif	
	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0

	vDsTexto = $item("DS_TEXTO",piParams)

	if ($item("PADRAO_ECF",$$gParamGlb) = <PADRAO_LOCALIMPFINAL>)
		putitem/id poParams, "DS_CUPOM", "022%%vDsTexto%%^"
		if (vInImprimeVia = <FALSE>)
			return(0)
		endif
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: imprimeVinculado - Inicio filedump imprimeVinculado: %%$hrFim$"
	endif 
	filedump "%%vDsTexto","%%vDsPath%%%ECF.TMP"
;retirado o append pois deixava mais lento(oda)
;	filedump/append "%%vDsTexto","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravaçco de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.imprimeVinculado")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: imprimeVinculado - Fim filedump imprimeVinculado: %%$hrFim$"
	endif 

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: imprimeVinculado - Aguardando leitura RETORNOECF.TXT imprimeVinculado: %%$hrFim$"
	endif 

	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 60)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.imprimeVinculado")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.imprimeVinculado")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: imprimeVinculado - Fim leitura RETORNOECF.TXT imprimeVinculado: %%$hrFim$"
	endif 

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: imprimeVinculado - Fim imprimeVinculado: %%$hrFim$"
	endif 

	return(0)
end ;imprimeVinculado



;-----------------------
public operation fechaVinculado
	;-----------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsPath, vDsConteudo, vDsCupom
		numeric vQtTentativa, Status
		boolean vFlag 
	endvariables

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: fechaVinculado - Inicio fechaVinculado: %%$hrFim$"
	endif 

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: fechaVinculado - Inicio filedump fechaVinculado: %%$hrFim$"
	endif 

	if ($item("PADRAO_ECF",$$gParamGlb) = <PADRAO_LOCALIMPFINAL>)
		vDsCupom = $item("DS_CUPOM",piParams)
		vDsCupom = "%%vDsCupom%%%023%%^"
		filedump "%%vDsCupom","%%vDsPath%%%ECF.TMP"
	else
		filedump "023%%^","%%vDsPath%%%ECF.TMP"
	endif
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.fechaVinculado")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: fechaVinculado - Fim filedump fechaVinculado: %%$hrFim$"
	endif 

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: fechaVinculado - Aguardando leitura RETORNOECF.TXT fechaVinculado: %%$hrFim$"
	endif 

	vDsConteudo = ""
	vQtTentativa = 0
	repeat
		activate "vbfileman".arqexiste(vFlag,"%%vDsPath%%%RETORNOECF.TXT")
		if (vFlag = <TRUE>)
			break
		endif
		activate "KERNEL32".SLEEP(2000)    
		vQtTentativa = vQtTentativa + 1
		if (vQtTentativa > 120)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.fechaVinculado")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
			endif
			exit(-1)
		endif
	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.fechaVinculado")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: fechaVinculado - Fim leitura RETORNOECF.TXT fechaVinculado: %%$hrFim$"
	endif 

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: fechaVinculado - Fim fechaVinculado: %%$hrFim$"
	endif 

	return(0)
end ;fechaVinculado

;------------------------------------------
public operation imprimirRelatorioGerencial
;------------------------------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams

	variables
		string viParams, voParams, vEOF, vDsPath, vDsConteudo, vDsTexto, vDsLinha, vDsCupom
		string vDsArquivo, vNrSerie
		numeric vQtTentativa, Status, vTamanho, vNrLinhasCorte, vContador
		boolean vInImprimeVia
	endvariables

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: imprimirRelatorioGerencial - Inicio imprimirRelatorioGerencial: %%$hrFim$"
	endif 

	vInImprimeVia = $item("IN_IMPRIMEVIA",piParams)
	if (vInImprimeVia = "")
		vInImprimeVia = <FALSE>
	endif	
	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0

	vDsTexto = $item("DS_TEXTO", piParams)
	if ($item("PADRAO_ECF",$$gParamGlb) = <PADRAO_LOCALIMPFINAL>)
		putitem/id poParams, "DS_CUPOM", "025%%vDsTexto%%^"
		if (vInImprimeVia = <FALSE>)
			return(0)
		endif
	endif

	;* Claudemir - Prj/Tarefa: 156/662 - 14/11/2011
	viParams = ""
	voParams = ""
	putitem/id viParams, "NM_FUNCAO", <ECF_NUMERO_SERIE>
	putitem/id viParams, "IN_IMPCUPOMFISCAL", <FALSE>
	$instancehandle->leinformacaoImpressora(viParams,voParams,$xcderro$,$xctxerro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	vNrSerie = $item("NR_SERIE", voParams)
	if (vNrSerie = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Erro ao obter número de série da impressora!", "ADICIONAL=Operaçco->ECFSVC0011.registroTipo60")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)			
	endif
		
	clear/e "FIS_ECFSVC"
	CD_EMPRESA.FIS_ECFSVC/init   = $item("CD_EMPRESA",$$gParamGlb)
	CD_SERIEFAB.FIS_ECFSVC/init  = vNrSerie
	retrieve/e "FIS_ECFSVC"
	if ($status >= 0)
		clear/e "FIS_ECFADICSVC"
		CD_EMPRESA.FIS_ECFADICSVC/init = CD_EMPRESA.FIS_ECFSVC
		NR_ECF.FIS_ECFADICSVC/init     = NR_ECF.FIS_ECFSVC
		retrieve/e "FIS_ECFADICSVC"
		if ($status >= 0)
			if (NR_LINHACORTE.FIS_ECFADICSVC > 0)	
				vNrLinhasCorte 	= NR_LINHACORTE.FIS_ECFADICSVC
			endif
		endif 
	endif
	
	if ($item("IN_FORMATARTEXTO", piParams) = <TRUE>)

		vDsCupom		= ""
		vDsArquivo	= vDsTexto
		length vDsArquivo

		while($result > 0)
			scan vDsArquivo, "%%^"
			if ($result > 0)
				vDsLinha    = vDsArquivo[1, $result - 1]                            
				vDsArquivo = vDsArquivo[$result + 1]            
			else
				vDsLinha    = vDsArquivo
				vDsArquivo = ""
			endif									

			scan vDsLinha, "[BARRA]"
			if ($result > 0)
				vTamanho = $length(vDsLinha)
				vDsCupom = "%%vDsCupom%%%135%%vDsLinha[8, vTamanho]%%^"
			else
				scan vDsLinha, "[CORTE]"
				if ($result > 0)
					vContador = 0
					while (vContador <= vNrLinhasCorte)
						vDsCupom = "%%vDsCupom%%%025%%^"
						vContador = vContador + 1
					endwhile
					vDsCupom = "%%vDsCupom%%%131%%^"
					vDsCupom = "%%vDsCupom%%%025%%^"
				else
					vDsCupom = "%%vDsCupom%%%025%%vDsLinha%%^"
				endif
			endif

			length vDsArquivo
		endwhile

		vDsTexto	= vDsCupom
		;* Claudemir - Prj/Tarefa: 180/315 - 20/12/2011
		if ($item("IN_FORMATARTEXTO", piParams) = <TRUE>)
			vDsTexto	= "%%vDsTexto%%%026%%^"
		endif ;*
	endif  ;*

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: imprimirRelatorioGerencial - Inicio filedump imprimirRelatorioGerencial: %%$hrFim$"
	endif 

	filedump "%%vDsTexto%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.imprimirRelatorioGerencial")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: imprimirRelatorioGerencial - Fim filedump imprimirRelatorioGerencial: %%$hrFim$"
	endif 

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: imprimirRelatorioGerencial - Aguardando RETORNOECF.TXT imprimirRelatorioGerencial: %%$hrFim$"
	endif 

	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 60)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.imprimirRelatorioGerencial")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.imprimirRelatorioGerencial")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: imprimirRelatorioGerencial - Fim RETORNOECF.TXT imprimirRelatorioGerencial: %%$hrFim$"
	endif 

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: imprimirRelatorioGerencial - Fim imprimirRelatorioGerencial: %%$hrFim$"
	endif 

	return(0)
end ;imprimirRelatorioGerencial

;-----------------------
public operation fechaRelatorioGerencial
	;-----------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsPath, vDsConteudo, vDsCupom
		numeric vQtTentativa, Status
	endvariables

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: fechaRelatorioGerencial - Inicio fechaRelatorioGerencial: %%$hrFim$"
	endif 

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: fechaRelatorioGerencial - Inicio filedump fechaRelatorioGerencial: %%$hrFim$"
	endif 

	filedump "026%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.fechaRelatorioGerencial")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: fechaRelatorioGerencial - Fim filedump fechaRelatorioGerencial: %%$hrFim$"
	endif 

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: fechaRelatorioGerencial - Aguardando RETORNOECF.TXT fechaRelatorioGerencial: %%$hrFim$"
	endif 

	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 8)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.fechaRelatorioGerencial")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.fechaRelatorioGerencial")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: fechaRelatorioGerencial - Fim RETORNOECF.TXT fechaRelatorioGerencial: %%$hrFim$"
	endif 

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: fechaRelatorioGerencial - Fim fechaRelatorioGerencial: %%$hrFim$"
	endif 

	return(0)
end ;fechaRelatorioGerencial

;-----------------------
public operation cancelaItem
	;-----------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsPath, vDsConteudo
		numeric vQtTentativa, Status
	endvariables

	$vl03Dig$ = $item("NR_ITEM",piParams)
	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0

	filedump "007%%$vl03Dig$%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.cancelaItem")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 8)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.cancelaItem")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.cancelaItem")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	return(0)
end;cancelaItem


;-------------------------------------------------------------------------
;-=CANONICO=- (09/11/2006) - Tarefa: 11 - Projeto: 26 - Abrir Gaveta Impressora ECF
;-------------------------------------------------------------------------
public operation abreGaveta
	;-----------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsPath, vDsConteudo
		numeric vQtTentativa, Status
	endvariables

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0
	;-=CANONICO=- 16/09/2010 - TAR 942 / PRJ 102
	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: abreGaveta- Inicio abreGaveta: %%$hrFim$"
	endif 

	filedump "031%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.abreGaveta")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 8)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.abreGaveta")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.abreGaveta")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	;-=CANONICO=- 16/09/2010 - TAR 942 / PRJ 102
	if ($item("IN_LOG_TEMPO_VENDA", $$gParamGlb) = 1)
		$hrFim$ = $clock
		putmess "ECFSVCO011: abreGaveta- Fim abreGaveta: %%$hrFim$"
	endif ;

	return(0)
end;abreGaveta


;---------------------------------------------------------------------
;-=CANONICO=- (27/10/2006) - Projeto: 26 - Tarefa: 12 - IMPRESSAO CHEQUE/RECIBO
;---------------------------------------------------------------------
public operation imprimeCheque
;-----------------------
	params
		string piGlobal :IN
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsPath, vDsConteudo, Status,  vDsNominal, vDsCidade, vTpCheque, vDsData, vDsAux  
		numeric vQtTentativa, vCdEmpresa, vNrSeqEnd, vNrSeqAuto 
		numeric vVlCheque, vNrSeqCheque, vNrBanco
		date vDtEmissao, vDtAutorizacao, vDtVencimento
	endvariables

	vTpCheque = $item("TP_CHEQUE", piParams)
	vCdEmpresa = $item("CD_EMPRESA", piGlobal)

	$vl03Dig$ = $item("NR_BANCO",piParams)
	$vl14DIG$ = $item("VL_CHEQUE",piParams)
	vDsNominal = $item("DS_NOMINAL",piParams)
		
	clear/e "V_PES_ENDERECSVC" ; Carrega endereço da empresa de login
	clear/e "GER_EMPRESASVC"
	CD_EMPRESA.GER_EMPRESASVC = vCdEmpresa
	retrieve/e "GER_EMPRESASVC"
	if ($status >= 0)
		clear/e "PES_PESSOASVC"    
		CD_PESSOA.PES_PESSOASVC = CD_PESSOA.GER_EMPRESASVC
		retrieve/e "PES_PESSOASVC"        
		
		vNrSeqEnd = 1
		;piParams = ""
		putitem/id piParams, "CD_PESSOA", CD_PESSOA.GER_EMPRESASVC
		activate "PESSVCO005".buscaEnderecoFaturamento($$gParamGlb, piParams, poParams, $xCdErro$, $xCtxErro$)
		if ($procerror)       
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")    
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		else
			vNrSeqEnd = $item("NR_SEQENDERECO", poParams)
		endif    

		CD_PESSOA.V_PES_ENDERECSVC = CD_PESSOA.GER_EMPRESASVC
		NR_SEQUENCIA.V_PES_ENDERECSVC = vNrSeqEnd
		retrieve/e "V_PES_ENDERECSVC"
	endif

	vDsCidade = NM_MUNICIPIO.V_PES_ENDERECSVC
	call espacoDireita(vDsCidade,20,vDsCidade)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif


	if (vTpCheque = "CP")
		vDtAutorizacao = $item("DT_AUTORIZACAO", piParams)
		vNrSeqAuto = $item("NR_SEQAUTO", piParams)
		vNrSeqCheque = $item("NR_SEQCHEQUE", piParams)

		clear/e "FCC_AUTORIZACSVC"
		DT_AUTORIZACAO.FCC_AUTORIZACSVC = vDtAutorizacao
		NR_SEQAUTO.FCC_AUTORIZACSVC = vNrSeqAuto
		retrieve/e "FCC_AUTORIZACSVC"
		if ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Cheque não autorizado!", "ADICIONAL=Operação->ECFSVCO011.imprimeCheque")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif

		clear/e "FCC_AUTOCHEQSVC"
		DT_AUTORIZACAO.FCC_AUTOCHEQSVC = vDtAutorizacao
		NR_SEQAUTO.FCC_AUTOCHEQSVC = vNrSeqAuto
		NR_SEQCHEQUE.FCC_AUTOCHEQSVC = vNrSeqCheque
		retrieve/e "FCC_AUTOCHEQSVC"
		if ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Cheque não autorizado!", "ADICIONAL=Operação->ECFSVCO011.imprimeCheque")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		vDtEmissao = DT_EMISSAO.FCC_AUTOCHEQSVC
		;vDsNominal = DS_NOMINAL.FCC_AUTOCHEQSVC
		vDtVencimento = DT_VENCIMENTO.FCC_AUTOCHEQSVC
		vNrBanco = NR_BANCO.FCC_CTAPESSVC
		vVlCheque = VL_CHEQUE.FCC_AUTOCHEQSVC
	else
		vNrBanco = $item("NR_BANCO", piParams)
		vDsNominal = $item("DS_NOMINAL", piParams)
		vDtVencimento = $item("DT_VENCIMENTO", piParams)
		vVlCheque = $item("VL_CHEQUE", piParams)

		if (vVlCheque = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Valor do cheque não informado!", "ADICIONAL=Operação->ECFSVCO011.imprimeCheque")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif
	; -=CANONICO=- (27/12/2006) Projeto: 78 Tarefa: 131
	;if (vDsNominal = "")
	;	vDsNominal = "************************************************************"
	;endif
	;
	call espacoDireita(vDsNominal,49,vDsNominal)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	
	if (vDtEmissao = "")
		vDtEmissao = $item("DT_SISTEMA", $$gParamGlb)
	endif

	call preencheZero(vDtEmissao[D],2,vDsAux)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif
	vDsData = vDsAux

	call preencheZero(vDtEmissao[M],2,vDsAux)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	vDsData = "%%vDsData%%/%%vDsAux"
	vDsData = "%%vDsData%%/%%vDtEmissao[Y]"


	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0

	filedump "041%%$vl03Dig$%%$vl14DIG$%%vDsNominal%%vDsCidade%%vDsData%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operagão->ECFSVC0011.imprimeCheque")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 10)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.imprimeCheque")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.imprimeCheque")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	return(0)
end;imprimeCheque
;-----------------------------------------------------------------------------------

;-----------------------
public operation imprimeTextoViaMonitor
	;-----------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsPath, vDsConteudo
		numeric vQtTentativa, Status
	endvariables

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0

	vDsConteudo = $item("DS_TEXTO",piParams)

	;filedump/append "%%vDsConteudo","%%vDsPath%%%TEXTO.TMP" por enquanto vai ficar como TEF.TXT por causa da delfiori
	filedump "%%vDsConteudo","%%vDsPath%%%TEF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.imprimeTextoViaMonitor")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%TEF.TMP","%%vDsPath%%%TEF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 8)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.imprimeTextoViaMonitor")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%TEF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.imprimeTextoViaMonitor")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	return(0)
end ;imprimeTextoViaMonitor

;-----------------------
public operation trataFocoTEF
	;-----------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsPath, vDsConteudo, vDsQuebra1, vDsQuebra2
		numeric vQtTentativa, Status, vMod, vNrQuebra1, vNrQuebra2
		boolean vInMinimiza
	endvariables

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0

	vInMinimiza = $item("IN_MINIMIZA",piParams)
	if (vInMinimiza = "")
		vInMinimiza = <FALSE>
	endif

	;length $appltitle
	;vMod = $result % 2
	;if (vMod > 0)
	;	vNrQuebra1 = $result - 60
	;	vDsQuebra1 = $appltitle[1,$result - 60]
	;	vNrQuebra2 = 60
	;	vDsQuebra2 = $appltitle[61,$result]
	;else
	;	vNrQuebra1 = $result / 2
	;	vDsQuebra1 = $appltitle[1,vNrQuebra1]
	;	vNrQuebra2 = vNrQuebra1
	;	vDsQuebra2 = $appltitle[vNrQuebra1 + 1,$result]	
	;endif
	if (vInMinimiza = <TRUE>)
	;	$Vl03Dig$ = vNrQuebra1
	;	filedump/append "095%%$Vl03Dig$%%vDsQuebra1%%^","%%vDsPath%%%ECF.TMP"
	;	$Vl03Dig$ = vNrQuebra2
	;	filedump/append "095%%$Vl03Dig$%%vDsQuebra2%%^","%%vDsPath%%%ECF.TMP"
		filedump "095%%$appltitle%%^","%%vDsPath%%%ECF.TMP"
	else
	;	$Vl03Dig$ = vNrQuebra1
	;	filedump/append "096%%$Vl03Dig$%%vDsQuebra1%%^","%%vDsPath%%%ECF.TMP"
	;	$Vl03Dig$ = vNrQuebra2
	;	filedump/append "096%%$Vl03Dig$%%vDsQuebra2%%^","%%vDsPath%%%ECF.TMP"
		filedump "096%%$appltitle%%^","%%vDsPath%%%ECF.TMP"
	endif
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.trataFocoTEF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 5)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.trataFocoTEF")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.trataFocoTEF")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	return(0)
end ;trataFocoTEF


;----------------------------
public operation convNumeric
;----------------------------
	params
		string  NumericIn  : IN
		numeric Tamanho    : IN
		string  NumericOut : OUT
	endparams
	variables
		string  vChar, vString, vStringAux, v1
		numeric vAux, vPos, vCont
	endvariables
	
	vCont      = 0
	vStringAux = ""
	;1o. verificar quantos caracteres inválidos existem no meio da informação
	repeat
		vCont = vCont + 1
		vChar = NumericIn[vCont:1] 
		selectcase vChar
			case " "
				vChar = ""
			case "."
				vChar = ""
			case ","
				vChar = ""
			case "+"
				vChar = ""  
			case "-"
				vChar = ""  
			case "\"
				vChar = ""
			case "/"
				vChar = ""
			case "|"
				vChar = ""
			case "*"
				vChar = ""
				case "("
				vChar = ""
			case ")"
				vChar = ""  
			case "_"
				vChar = ""  
		endselectcase
		
		vString = "%%vString%%vChar"
	until (vCont > Tamanho)
	
	v1     = "0"
	vAux   = 1
	length vString
	vPos   = Tamanho - $result
	if (vPos < 0 )
		vPos = 1
	endif
	
	vCont  = 0
	;montar o numero, alinhado à direita com zeros à esquerda
	repeat
		if (vAux > vPos)
			vCont = vCont + 1
			vChar = vString[vCont:1] 
			vStringAux = "%%vStringAux%%vChar"
		else
			vStringAux = "%%vStringAux%%v1"
		endif
		vAux = vAux + 1
		
	until (vAux > Tamanho)
	NumericOut = vStringAux
	
	return(0)
End ;operation convNumeric.

;-------------------------
public operation editarNr
;-------------------------
	params
		numeric  TamInt   :IN
		numeric  TamDec   :IN
		string   ValorIN  :IN
		string   ValorOUT :OUT
	endparams
	variables
		numeric vTam, vInteiro, vDecimal, vCont, v1
		string  vDec, vInt, vAux
	endvariables
	
	v1       = "0"
	vAux     = ValorIn
	vInteiro = vAux[trunc] ;retira a parte inteira
	vDecimal = vAux[fraction] ;retira a parte decimal
	;para o caso do valor ser maior que a quantidade de bytes do arq.
	length vInteiro
	vTam = $result
	if (vTam > TamInt)
		vTam     = vTam - TamInt
		vInteiro = vInteiro[vTam:TamInt]
		vInt     = vInteiro
	else
		vInt = vInteiro
	endif
	vDec = vDecimal
	if (vDec  = 0)
		vDec  = "0"
		vCont = 1
		repeat
			vDec  = "%%vDec%%v1"
			vCont = vCont + 1
		until (vCont >= TamDec)
	else
		vDec = vDec[3:TamDec]
		length vDec
		vCont = $result
		if (vCont < TamDec )
			repeat
				vDec  = "%%vDec%%v1"
				vCont = vCont + 1
			until (vCont >= TamDec)
		elseif (vCont > TamDec )
				message/error "Erro na Decimal"
		endif  
	endif
	ValorOUT = "%%vInt%%vDec"
	
	return(0)
End ;operation editarNr.


;-------------------------------
public operation convValorString
;-------------------------------
	params
		string  piCampo :IN
		numeric piQtPosicoes :IN
		string  poCampo :OUT
	endparams
	variables
		string vStringAux
	endvariables
	
	if (piQtPosicoes = 14)
		vStringAux = piCampo[2:11]
		poCampo = vStringAux
		vStringAux = "."
		poCampo = "%%poCampo%%vStringAux"
		vStringAux = piCampo[13:2]
		poCampo = "%%poCampo%%vStringAux"
	elseif (piQtPosicoes = 5)
		vStringAux = piCampo[2:2]
		poCampo = vStringAux
		vStringAux = "."
		poCampo = "%%poCampo%%vStringAux"
		vStringAux = piCampo[4:2]
		poCampo = "%%poCampo%%vStringAux"
	elseif (piQtPosicoes = 3)
		vStringAux = piCampo[2:10]
		poCampo = vStringAux
		vStringAux = "."
		poCampo = "%%poCampo%%vStringAux"
		vStringAux = piCampo[12:3]
		poCampo = "%%poCampo%%vStringAux"
	endif
	
	return(0)
End ;operation convValorString.

;-------------------------------------------------------------------------
;-=CANONICO=- (13/12/2006) - Tarefa: 126 - Projeto: 41 - Programa horário verão
;-------------------------------------------------------------------------
public operation progHoraVerao 
	;-----------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsPath, vDsConteudo
		numeric vQtTentativa, Status
	endvariables

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0

	filedump "060%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.progHoraVerao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 8)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.abreGaveta")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.abreGaveta")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	return(0)
end;progHoraVerao 

;--------------------------------------
;-=CANONICO=- (02/08/2007) TAR 280 PRJ 22
public operation imprimeEtiqViaMonitor
	;----------------------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsPath, vDsConteudo, vDsMeio
		numeric vQtTentativa, Status
	endvariables

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0

	vDsConteudo = $item("DS_TEXTO",piParams)
	vDsMeio     = $item("DS_MEIO",piParams)

;	filedump/append "001%%vDsMeio%%^%%vDsConteudo","%%vDsPath%%%ETIQ.TMP"
	filedump "001%%vDsMeio%%^%%vDsConteudo","%%vDsPath%%%ETIQ.TMP"

	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.imprimeEtiqViaMonitor")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ETIQ.TMP","%%vDsPath%%%ETIQ.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 8)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.imprimeEtiqViaMonitor")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ETIQ.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.imprimeEtiqViaMonitor")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	return(0)
end ;imprimeEtiqViaMonitor

;------------------------------------;
public operation relatorioSintegraMFD
	;---------------------------------;
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vDsArquivo, vNrMes, vNrAno, vDsRazaoSocial, vDsEndereco, vDsComplemento, vDsBairro, vDsCidade, viParams, voParams 
		string vDsCEP, vNrTelefone, vDsContato, vNrEndereco, vNrFax, vEOF, vDsPath, vDsConteudo, vDsAux, vNrSerie 
		numeric vTpRelatorio, vQtTentativa, Status
		boolean vFlag
	endvariables

	vNrSerie = $item("CD_SERIEECF",$$gParamGlb) 
	if (vNrSerie = "")
		viParams = ""
		voParams = ""
		putitem/id viParams, "NM_FUNCAO", <ECF_NUMERO_SERIE>
		putitem/id viParams, "IN_IMPCUPOMFISCAL", <FALSE>
		$instancehandle->leinformacaoImpressora(viParams,voParams,$xcderro$,$xctxerro$)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		vNrSerie = $item("NR_SERIE", voParams)
		if (vNrSerie = "")
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Erro ao obter número de série da impressora!", "ADICIONAL=Operação->ECFSVC0011.registroTipo60")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)			
		endif
	endif
	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0


	;funciona somente para impressoras fiscais térmicas
	vTpRelatorio = $item("TP_RELATORIO",piParams)
	vDsArquivo = $item("DS_ARQUIVO",piParams)
	vNrMes = $item("NR_MES",piParams)
	vNrAno = $item("NR_ANO",piParams)
	vDsRazaoSocial = $item("DS_RAZAOSOCIAL",piParams)
	vDsEndereco = $item("DS_ENDERECO",piParams)
	vNrEndereco = $item("NR_ENDERECO",piParams)
	vDsComplemento = $item("DS_COMPLEMENTO",piParams)
	vDsBairro = $item("DS_BAIRRO",piParams)
	vDsCidade = $item("DS_CIDADE",piParams)
	vDsCEP = $item("DS_CEP",piParams)
	vNrTelefone = $item("NR_TELEFONE",piParams)
	vNrFax = $item("NR_FAX",piParams)
	vDsContato = $item("DS_CONTATO",piParams)

	call espacoDireita(vDsArquivo,19,vDsArquivo)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	call preencheZero(vNrMes,2,vNrMes)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	call espacoDireita(vDsRazaoSocial,35,vDsRazaoSocial)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	call espacoDireita(vDsEndereco,35,vDsEndereco)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	call preencheZero(vNrEndereco,5,vNrEndereco)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	call espacoDireita(vDsComplemento,22,vDsComplemento)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	call espacoDireita(vDsBairro,15,vDsBairro)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	call espacoDireita(vDsCidade,30,vDsCidade)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	call espacoDireita(vDsCEP,8,vDsCEP)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	call espacoDireita(vNrTelefone,12,vNrTelefone)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	call espacoDireita(vNrFax,10,vNrFax)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	call espacoDireita(vDsContato,10,vDsContato)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	filedump "018%%vTpRelatorio%%vDsArquivo%%vNrMes%%vNrAno%%vDsRazaoSocial%%vDsEndereco%%vNrEndereco%%vDsComplemento%%vDsBairro%%vDsCidade%%vDsCEP%%vNrTelefone%%vNrFax%%vDsContato%%^","%%vDsPath%%%MFD.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.relatorioSintegraMFD")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%MFD.TMP","%%vDsPath%%%MFD.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	vDsConteudo = ""
	vQtTentativa = 0
	activate "KERNEL32".SLEEP(40000)  
	repeat
		if (vNrSerie[1,2] = 'EP') ;-=CANONICO=- (06/02/2008) Esta comparação é necessaria para identicar quando a ECF for EPSON
			activate "vbfileman".arqexiste(vFlag,"%%vDsPath%%%RETORNOECF.TXT")
			if (vFlag = <TRUE>)
				break
			endif
		elseif (vNrSerie[1,2] = 'ZP');-=CANONICO=- (23/05/2008) TAR 316 PRJ 102 Esta comparação é necessaria para identicar quando a ECF for ELGIN
			activate "vbfileman".arqexiste(vFlag,"%%vDsPath%%%SINTEGRA.TXT")
			if (vFlag = <TRUE>)
				break
			endif
		elseif (vNrSerie[1,2] = 'DR');-=CANONICO=- (12/07/2008) TAR 372 PRJ 102 Esta comparação é necessaria para identicar quando a ECF for DARUMA
			activate "vbfileman".arqexiste(vFlag,"%%vDsPath%%%RETORNOECF.TXT")
			if (vFlag = <TRUE>)
				break
			endif
		else
			activate "vbfileman".arqexiste(vFlag,"%%vDsPath%%%DOWNLOAD.MFD")
			if (vFlag = <FALSE>)
				break
			endif
			activate "vbfileman".arqexiste(vFlag,"%%vDsPath%%%RETORNOECF.TXT")
			if (vFlag = <TRUE>)
				activate "vbfileman".arqexiste(vFlag,"%%vDsPath%%%DOWNLOAD.MFD")
				if (vFlag = <TRUE>)
					activate "vbfileman".apagaarquivo("%%vDsPath%%%DOWNLOAD.MFD")
					if ($procerror)
						$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
					elseif ($status < 0)
						$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
					endif
				endif	
				break
			endif
		endif

		vQtTentativa = vQtTentativa + 1
		if (vQtTentativa > 50000)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.relatorioSintegraMFD")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			activate "vbfileman".apagaarquivo("%%vDsPath%%%MFD.TXT")
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
			endif
			exit(-1)
		endif

	until (vDsConteudo != "")

	activate "KERNEL32".SLEEP(10000)  

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.relatorioSintegraMFD")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	return(0)
End; operation relatorioSintegraMFD

;------------------------------------;
public operation downloadMFD
	;---------------------------------;	
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vDsArquivo, vTpDownload, vDadoINI, vDadoFIM, vNrUsuario, vDsPath, vEOF, vDsConteudo 
		numeric vTpFormato, status, vQtTentativa
		boolean vFlag
	endvariables

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0


	;funciona somente para impressoras fiscais térmicas
	vDsArquivo = $item("DS_ARQUIVO",piParams)
	vTpDownload = $item("TP_DOWNLOAD",piParams)
	vDadoINI = $item("DS_DADOINI",piParams)
	vDadoFIM = $item("DS_DADOFIM",piParams)
	vNrUsuario = $item("NR_USUARIO",piParams)
	vTpFormato = $item("TP_FORMATO",piParams)

	;vDsArquivo = "%%vDsPath%%vDsArquivo"

	call espacoDireita(vDsArquivo,19,vDsArquivo)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	call espacoDireita(vTpDownload,1,vTpDownload )
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif
	
	call espacoDireita(vDadoINI,6,vDadoINI)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	call espacoDireita(vDadoFIM,6,vDadoFIM)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	call espacoDireita(vNrUsuario,1,vNrUsuario)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	activate "vbfileman".arqexiste(vFlag,"%%vDsPath%%%RETORNOECF.TXT")
	if (vFlag = <TRUE>)
		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif
	endif


   filedump "019%%vDsArquivo%%vTpDownload%%vDadoINI%%vDadoFIM%%vNrUsuario%%^","%%vDsPath%%%MFD.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.downloadMFD")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%MFD.TMP","%%vDsPath%%%MFD.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	activate "KERNEL32".SLEEP(40000)  
	vDsConteudo = ""
	vQtTentativa = 0
	repeat
		activate "KERNEL32".SLEEP(1000)
		activate "vbfileman".arqexiste(vFlag,"%%vDsPath%%%DOWNLOAD.MFD")
		if (vFlag = <FALSE>)
			break
		endif

		activate "vbfileman".arqexiste(vFlag,"%%vDsPath%%%RETORNOECF.TXT")
		if (vFlag = <TRUE>)
			break
		endif

		vQtTentativa = vQtTentativa + 1
		if (vQtTentativa > 50000)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.downloadMFD")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			activate "vbfileman".apagaarquivo("%%vDsPath%%%MFD.TXT")
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
			endif
			exit(-1)
		endif
	until (vDsConteudo != "")
	
	activate "vbfileman".arqexiste(vFlag,"%%vDsPath%%%DOWNLOAD.MFD")
	if (vFlag = <TRUE>)
		if (vTpFormato != 3)
			$instancehandle->setDisplay("Gerando arquivo a partir do download...", "", "")
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			endif
			length vDsArquivo
			putitem/id piParams, "DS_ARQUIVOMFD", vDsArquivo
			vDsArquivo = vDsArquivo[1:$result - 4]
			if (vTpFormato = 0)
				vDsArquivo = "%%vDsArquivo%%%.TXT"
			elseif(vTpFormato = 1)
				vDsArquivo = "%%vDsArquivo%%%.RTF"
			else	
				vDsArquivo = "%%vDsArquivo%%%.MDB"
			endif
			putitem/id piParams, "DS_ARQUIVO", vDsArquivo
			$instancehandle->formatoDadosMFD(piParams,poParams,poCdErro,poCtxErro)
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return($status)
			endif
			$instancehandle->setDisplay("", "", "")
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			endif
		endif
	endif

	activate "KERNEL32".SLEEP(10000)  

	activate "vbfileman".arqexiste(vFlag,"%%vDsPath%%%RETORNOECF.TXT")
	if (vFlag = <TRUE>)
		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif
	endif

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.downloadMFD")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".arqexiste(vFlag,"%%vDsPath%%%RETORNOECF.TXT")
	if (vFlag)
		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif
	endif

	putitem/id poParams, "DS_PATH", vDsPath

	return(0)

End; operation downloadMFD


;-------------------------------
public operation formatoDadosMFD
;-------------------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vDsArquivoMFD, vDsArquivo, vTpFormato, vTpDownload, vDadoINI, vDadoFIM, vNrUsuario, vDsPath, vDsConteudo, vEOF
		numeric vQtTentativa, status 
		boolean vFlag
	endvariables

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0

	;funciona somente para impressoras fiscais térmicas
	vDsArquivoMFD = $item("DS_ARQUIVOMFD",piParams)
	vDsArquivo = $item("DS_ARQUIVO",piParams)
	vTpFormato = $item("TP_FORMATO",piParams)
	vTpDownload = $item("TP_DOWNLOAD",piParams)
	vDadoINI = $item("DS_DADOINI",piParams)
	vDadoFIM = $item("DS_DADOFIM",piParams)
	vNrUsuario = $item("NR_USUARIO",piParams)


	call espacoDireita(vDsArquivoMFD,19,vDsArquivoMFD)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	call espacoDireita(vDsArquivo,19,vDsArquivo)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif
	
	call espacoDireita(vTpDownload,1,vTpDownload )
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif
	
	call espacoDireita(vDadoINI,6,vDadoINI)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	call espacoDireita(vDadoFIM,6,vDadoFIM)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	call espacoDireita(vNrUsuario,1,vNrUsuario)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif


	filedump "020%%vDsArquivoMFD%%vDsArquivo%%vTpFormato%%vTpDownload%%vDadoINI%%vDadoFIM%%vNrUsuario%%^","%%vDsPath%%%MFD.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.formatoDadosMFD")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%MFD.TMP","%%vDsPath%%%MFD.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	activate "KERNEL32".SLEEP(1000)  
	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 8)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.formatoDadosMFD")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%MFD.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.formatoDadosMFD")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	return(0)
End; operation formatoDadosMFD

;-----------------------------------
;C (15/01/2008) TAR 180 PRJ 102
public operation dataHoraImpressora 
	;-------------------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsLinha, vDsRetorno, vDsPath, vDsConteudo, viParams, voParams, vDsLista, vDsRegistro
		numeric vQtTentativa, Status
	endvariables

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0
	
	filedump "034%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.datahoraImpressora")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 8)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.datahoraImpressora")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				return(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.datahoraImpressora")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".filename("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	repeat

		activate "vbfileman".learquivo(vDsLinha)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif


		vDsRetorno = $item("DS_DATAHORA", vDsLinha)	
		length(vDsRetorno)
		if ($result > 0)
			putitem/id poParams, "DS_DATAHORA", vDsRetorno   
		endif

		activate "vbfileman".eof(vEOF)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

	until (vEOF = -1)

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	return(0)
end; operation datahoraImpressora



;-----------------------------------
;-=CANONICO=- (20/02/2008) TAR 181 PRJ 102
public operation modeloImpressora 
	;-------------------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsLinha, vDsRetorno, vDsPath, vDsConteudo, viParams, voParams, vDsLista, vDsRegistro
		numeric vQtTentativa, Status
	endvariables

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0
	
	filedump "099%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.modeloImpressora")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 8)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.modeloImpressora")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				return(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.modeloImpressora")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".filename("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	repeat

		activate "vbfileman".learquivo(vDsLinha)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif


		vDsRetorno = $item("DS_MODELOECF", vDsLinha)	
		length(vDsRetorno)
		if ($result > 0)
			putitem/id poParams, "DS_MODELOECF", vDsRetorno   
		endif

		activate "vbfileman".eof(vEOF)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

	until (vEOF = -1)

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	return(0)
end; operation modeloImpressora 

;-----------------------
public operation autentica
	;-----------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsPath, vDsConteudo
		numeric vQtTentativa, Status 
	endvariables

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0

	filedump "070%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.autentica")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 30)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.autentica")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.autentica")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	return(0)
end;autentica


;Comentando a operation geraRegistrosCAT52MFD, para concluir as tarefas relacionas apos puxar do PRO para continuar alteração tar 230
;------------------------------------;
;-=CANONICO=- (08/04/2008) TAR 230 PRJ 61
public operation geraRegistrosCAT52MFD
;---------------------------------;
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vDsArquivo, vData, vDataFim, viParams, voParams 
		string vEOF, vDsPath, vDsConteudo, vDsAux, vNrSerie 
		numeric vTpRelatorio, vQtTentativa, Status
		boolean vFlag
	endvariables

	vNrSerie = $item("CD_SERIEECF",$$gParamGlb) 
	if (vNrSerie = "")
		viParams = ""
		voParams = ""
		putitem/id viParams, "NM_FUNCAO", <ECF_NUMERO_SERIE>
		putitem/id viParams, "IN_IMPCUPOMFISCAL", <FALSE>
		$instancehandle->leinformacaoImpressora(viParams,voParams,$xcderro$,$xctxerro$)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		vNrSerie = $item("NR_SERIE", voParams)
		if (vNrSerie = "")
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Erro ao obter número de série da impressora!", "ADICIONAL=Operação->ECFSVC0011.geraRegistrosCAT52MFD")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)			
		endif
	endif
	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0

	vDsArquivo = $item("DS_ARQUIVO",piParams)
	vData      = $item("DS_DATA", piParams)
	vDataFim   = $item("DS_DATAFIM",piParams)

	call espacoDireita(vDsArquivo,20,vDsArquivo)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	;filedump/append "043%%vTpRelatorio%%vDsArquivo%%vData%%^","%%vDsPath%%%MFD.TMP"
	filedump "043%%vTpRelatorio%%vDsArquivo%%vData%%vDataFim%%^","%%vDsPath%%%MFD.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.geraRegistrosCAT52MFD")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%MFD.TMP","%%vDsPath%%%MFD.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	vDsConteudo = ""
	vQtTentativa = 0
	repeat
		activate "KERNEL32".SLEEP(1000)
		activate "vbfileman".arqexiste(vFlag,"%%vDsPath%%%RETORNOECF.TXT")
		if (vFlag = <TRUE>)
			break
		endif
		vQtTentativa = vQtTentativa + 1
		if (vQtTentativa > 300) ; aproximadamente 5 minutos
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.leituraX")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			
			activate "vbfileman".arqexiste(vFlag,"%%vDsPath%%%ECF.TXT")
			if (vFlag = <TRUE>)
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
			endif
			exit(-1)
		endif
		;$instancehandle->setDisplay("%%vQtTentativa", "", "")
		;if ($procerror)
		;	$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		;endif
	until (vDsConteudo != "")


;	vDsConteudo = ""
;	vQtTentativa = 0
;	repeat
;	fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
;		if ($procerror) | ($status = 0)
;			activate "KERNEL32".SLEEP(1000)        
;			vQtTentativa = vQtTentativa + 1
;			if (vQtTentativa > 30)
;				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.geraRegistrosCAT52MFD")
;				poCdErro = $xCdErro$
;				poCtxErro = $xCtxErro$
;			endif
;		endif
;	until (vDsConteudo != "")

	
	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.geraRegistrosCAT52MFD")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif
		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	return(0)
End; operation geraRegistrosCAT52MFD


;---------------------------------------
public operation abreRelatorioGerencial
	;------------------------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsPath, vDsConteudo, vDsPgto
		numeric vQtTentativa, Status
	endvariables

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0

	vDsPgto = $item("DS_FORMAPGTO",piParams)
	call espacoDireita(vDsPgto,16,vDsPgto)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	$vl14DIG$ = $item("VL_VALOR",piParams)
	$vl6DIG$ = $item("NR_CUPOM",piParams)

	if ($item("PADRAO_ECF",$$gParamGlb) = <PADRAO_LOCALIMPFINAL>)
		putitem/id poParams, "DS_CUPOM", "024%%vDsPgto%%$vl14DIG$%%$vl6DIG$%%^"
		return(0)
	endif

	filedump "024%%vDsPgto%%$vl14DIG$%%$vl6DIG$%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.abreRelatorioGerencial")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 8)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.abreRelatorioGerencial")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.abreRelatorioGerencial")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	return(0)
end ;abreRelatorioGerencial


;------------------------------------------
;-=CANONICO=- (18/09/2008) TAR 397 PRJ 102
public operation verificaTermica
	;---------------------------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vCdComponente, vDsRetorno, vEOF, vDsLinha, vDsPath, vDsConteudo
		numeric vQtTentativa, Status
		boolean vInConcomitante
	endvariables

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0

	filedump "035%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.verificaTermica")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	vDsConteudo = ""
	vQtTentativa = 0
	repeat
		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 8)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.verificaTermica")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.verificaTermica")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".filename("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	repeat

		activate "vbfileman".learquivo(vDsLinha)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		vDsRetorno = $item("IN_TERMICA",vDsLinha) 
		length(vDsRetorno)
		if ($result > 0)
			putitem/id poParams, "IN_TERMICA", vDsRetorno
		endif

		activate "vbfileman".eof(vEOF)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

	until (vEOF = -1)

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	return(0)
end;verificaTermica

;* Claudemir - 25/08/2009 - Prj/Tarefa: 78/2658
;-----------------------
public operation leCheque
;-----------------------
	params
		string piGlobal  :IN
		string piParams  :IN
		string poParams  :OUT
		string poCdErro  :OUT
		string poCtxErro :OUT
	endparams

	variables
		string vEOF, vDsPath, vDsConteudo,vDsRetorno, vDsLinha
		numeric vQtTentativa, Status 
		boolean vFlag
	endvariables

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0

	filedump "132%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.leituraX")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	vDsConteudo = ""
	vQtTentativa = 0
	repeat
		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 10)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.imprimeCheque")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif
	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.leCheque")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		return(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".filename("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	repeat
		activate "vbfileman".learquivo(vDsLinha)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		vDsRetorno = vDsLinha

		activate "vbfileman".eof(vEOF)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif
	until (vEOF = -1)

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	poParams = vDsRetorno

	return(0)
end; leCheque

;---------------------------------------
;-=CANONICO=- TAR 768 PRJ 102 - Adequar homologacao PAF-ECF - 
public operation geraRelatorioGerencial
;------------------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams

	variables
		string viParams, voParams, vDsLinha, vDsTexto, vDsRegistro
		string vDsCupom, vDsConteudo, vDsImpressao, DsLstCupom   
		numeric vNrCopia, vNrLinha, vPadraoECF, vNrViasCupom   
	endvariables

	DsLstCupom  = $item("DS_LSTCUPOM",piParams)
	if (DsLstCupom = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Texto a ser impresso não informado!", "ADICIONAL=Operação->ECFSVCO011.geraRelatorioGerencial")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif   

	vNrViasCupom= $item("NR_VIASCUPOM",piParams)
	if (vNrViasCupom = "")
		vNrViasCupom = 1
	endif   

	vPadraoECF = $item("PADRAO_ECF",$$gParamGlb)

	if (vPadraoECF = 100)

		vDsImpressao = "024%%^"

		getitem vDsRegistro, DsLstCupom, 1
		vDsCupom = ""
		vDsConteudo = $item("DS_CUPOM",vDsRegistro)
		length vDsConteudo
		while($result > 0)
			scan vDsConteudo, "%%^"
			if ($result > 0)
				vDsLinha = vDsConteudo[1, $result - 1]                            
				vDsConteudo = vDsConteudo[$result + 1]            
			else
				vDsLinha = vDsConteudo
				vDsConteudo = ""
			endif
			vDsImpressao = "%%vDsImpressao%%%025%%vDsLinha%%^"
			vDsCupom = "%%vDsCupom%%%025%%vDsLinha%%^"
			length vDsConteudo
		endwhile

		;---------------------------
		;imprime cupom nao fiscal 
		;---------------------------
		vNrCopia = 1
		repeat

			if (vNrCopia != vNrViasCupom)
				vDsImpressao = "%%vDsImpressao%%%025%%^%%%025%%^"
			else
				vDsImpressao  = "%%vDsImpressao%%%026"
			endif

			viParams = ""
			putitem/id viParams, "IN_IMPRIMEVIA", <TRUE>
			putitem/id viParams, "DS_TEXTO", vDsImpressao
			activate "ECFSVCO001".ImprimirRelatorioGerencial(viParams,voParams,$xcderro$,$xctxerro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif

			if (vNrCopia = vNrViasCupom)
				;aqui insere a linha 026 para encerrar o gerencial
				vDsImpressao = ""
				vDsImpressao = "%%vDsCupom%%%026"	
			else
				vDsImpressao = ""
				vDsImpressao = "%%vDsCupom"
			endif
					
			vNrCopia = vNrCopia + 1
		until (vNrCopia > vNrViasCupom)
	endif      
	
	return(0)
end; geraRelatorioGerencial

;-------------------------------------------
;-=CANONICO=- (11/01/2010) TAR 768 PRJ 102 - Adequar Homologacao PAF-ECF 
public operation leituraMemoriaFiscalDataMFD
	;-----------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsPath, vDsConteudo, vDataINI, vDataFIM, vTipo
		numeric vQtTentativa, Status
	endvariables

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0

	vDataINI = $item("DT_INICIO",piParams)
	if (vDataINI = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data inicial não informada!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalDataMFD")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	vDataFIM = $item("DT_FIM",piParams)
	if (vDataFIM = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data final não informada!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalDataMFD")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	vTipo = $item("TP_TIPO",piParams) ; c = Completa / s = Simplificada
	if (vTipo = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Tipo de leitura não informado!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalDataMFD")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	filedump "018%%vDataINI%%vDataFIM%%vTipo%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalDataMFD")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 60)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalDataMFD")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalDataMFD")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	putitem/id poParams, "DS_PATH", vDsPath

	return(0)
end ;leituraMemoriaFiscalDataMFD

;----------------------------------------------
;-=CANONICO=- (11/01/2010) TAR 768 PRJ 102 - Adequar Homologacao PAF-ECF 
public operation leituraMemoriaFiscalReducaoMFD
	;------------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsPath, vDsConteudo, vRedINI, vRedFIM, vTipo
		numeric vQtTentativa, Status
	endvariables

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0

	vRedINI = $item("NR_REDINI",piParams)
	if (vRedINI = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Redução inicial não informada!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalReducaoMFD")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	call preencheZero(vRedINI,5,vRedINI)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	vRedFIM = $item("NR_REDFIM",piParams)
	if (vRedFIM = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Redução final não informada!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalReducaoMFD")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	call preencheZero(vRedFIM,5,vRedFIM)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	vTipo = $item("TP_TIPO",piParams) ; c = Completa / s = Simplificada
	if (vTipo = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Tipo de leitura não informado!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalReducaoMFD")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	filedump "019%%vRedINI%%vRedFIM%%vTipo%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalReducaoMFD")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 60)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalReducaoMFD")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalReducaoMFD")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	putitem/id poParams, "DS_PATH", vDsPath

	return(0)
end ;operation leituraMemoriaFiscalReducaoMFD 


;-------------------------------------------
;-=CANONICO=- (11/01/2010) TAR 768 PRJ 102 - Adequar Homologacao PAF-ECF 
public operation leMemoriaFiscalSerialDataMFD
	;-----------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsPath, vDsConteudo, vDataINI, vDataFIM, vTipo
		numeric vQtTentativa, Status
	endvariables

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0

	vDataINI = $item("DT_INICIO",piParams)
	if (vDataINI = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data inicial não informada!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalSerialDataMFD")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	vDataFIM = $item("DT_FIM",piParams)
	if (vDataFIM = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data final não informada!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalSerialDataMFD")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	vTipo = $item("TP_TIPO",piParams) ; c = Completa / s = Simplificada
	if (vTipo = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Tipo de leitura não informado!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalSerialDataMFD")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	filedump "020%%vDataINI%%vDataFIM%%vTipo%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalSerialDataMFD")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 60)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalSerialDataMFD")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalSerialDataMFD")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	putitem/id poParams, "DS_PATH", vDsPath

	return(0)
end ;operation leMemoriaFiscalSerialDataMFD

;------------------------
public operation leMemoriaFiscalSerialReducaoMFD
	;------------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		string vEOF, vDsPath, vDsConteudo, vRedINI, vRedFIM, vTipo 
		numeric vQtTentativa, Status
	endvariables

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0
	vRedINI = $item("NR_REDINI",piParams)
	if (vRedINI = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Redução inicial não informada!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalReducao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	call preencheZero(vRedINI,5,vRedINI)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	vRedFIM = $item("NR_REDFIM",piParams)
	if (vRedFIM = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Redução final não informada!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalReducao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	call preencheZero(vRedFIM,5,vRedFIM)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	vTipo = $item("TP_TIPO",piParams) ; c = Completa / s = Simplificada
	if (vTipo = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Tipo de leitura não informado!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalSerialDataMFD")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	filedump "036%%vRedINI%%vRedFIM%%vTipo%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalReducao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 60)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalReducao")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				exit(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.leituraMemoriaFiscalReducao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	putitem/id poParams, "DS_PATH", vDsPath

	return(0)
end;operation leMemoriaFiscalSerialReducaoMFD

;------------------------------------------------------
;-=CANONICO=- 21/10/2009 - HOMOLOGACAO PAF-ECF
public operation geraEAD
;------------------------------------------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams

	variables
		String viParams, voParams, vEOF, vDsMensagem, vDsArquivo, vDsNomeArquivo
		String vDsChavePrivada, vDsChavePublica, vDsPath    
		boolean vFlag 
	endvariables

	vDsArquivo = $item("DS_PATH",piParams) ;Arquivo e caminho a ser assinado pelo EAD
	
	if (vDsArquivo = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Arquivo não informado!", "ADICIONAL=Operação->ECFSVC0011.geraEAD")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	vDsPath = "D:\Virtualage\Storeage\temp\" ; diretorio temporario para gravar os arquivos das chaves

	vDsNomeArquivo = $item("DS_NOMEARQ",piParams) ;Arquivo com nome do arquivo depois de assinado

	vDsChavePublica	= $item("DS_CHAVEPUBLICA", piParams) ;Chave publica definida na tablela GLB_CHAVE / codigo = 1

	vDsChavePrivada = $item("DS_CHAVEPRIVADA", piParams) ;Chave privada definida na tabela GLB_CHAVE / codigo = 2

	if (vDsChavePrivada = "" & vDsChavePrivada = "") ;Quando não forem informadas o sistema busca na Global
		clear/e "GLB_CHAVESVC"	
		retrieve/e "GLB_CHAVESVC"
		if ($status >=0)
			setocc "GLB_CHAVESVC", 1
			while ($status >= 0)
				if (CD_CHAVE.GLB_CHAVESVC = 1) ;Chave publica
					vDsChavePublica = VL_CHAVE.GLB_CHAVESVC
					filedump "%%vDsChavePublica ","%%vDsPath%%%ChavePublicaStoreage.txt"
					if ($status < 0)
						$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Não foi possivel gravar chave pública!", "ADICIONAL=Operação->ECFSVC0011.geraEAD")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						exit(-1)
					endif
				endif
				if (CD_CHAVE.GLB_CHAVESVC = 2) ;Chave privada
					vDsChavePrivada = VL_CHAVE.GLB_CHAVESVC
					filedump "%%vDsChavePrivada","%%vDsPath%%%ChavePrivadaStoreage.txt"
					if ($status < 0)
						$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Não foi possivel gravar chave privada!", "ADICIONAL=Operação->ECFSVC0011.geraEAD")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						exit(-1)
					endif
				endif
				setocc "GLB_CHAVESVC", $curocc("GLB_CHAVESVC") + 1	
			endwhile	
		endif
	endif

	spawn "#EAD.exe %%vDsArquivo %%vDsPath%%%ChavePublicaStoreage.txt %%vDsPath%%%ChavePrivadaStoreage.txt" ;programa assinador de EAD / Não precisa do path desde que esteja na variavel de ambimente do windows
	refresh

	activate "vbfileman".arqexiste(vFlag,"%%vDsNomeArquivo")
	if (vFlag)
		activate "vbfileman".apagaarquivo("%%vDsNomeArquivo")
	endif

	activate "vbfileman".arqexiste(vFlag,"%%vDsPath%%%ChavePublicaStoreage.txt")
	if (vFlag)
		activate "vbfileman".apagaarquivo("%%vDsPath%%%ChavePublicaStoreage.txt")
	endif

	activate "vbfileman".arqexiste(vFlag,"%%vDsPath%%%ChavePrivadaStoreage.txt")
	if (vFlag)
		activate "vbfileman".apagaarquivo("%%vDsPath%%%ChavePrivadaStoreage.txt")
	endif

	if (vDsNomeArquivo != "")
		activate "vbfileman".movearquivo(vEOF,"%%vDsArquivo","%%vDsNomeArquivo")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return($status)
		endif
	endif
	
	;-=CANONICO=- 21/10/2009 - HOMOLOGACAO PAF-ECF
	vDsMensagem = ""
	vDsMensagem = "Processo concluído com sucesso.%%^"
	if (vDsNomeArquivo != "")
		vDsMensagem = "%%vDsMensagem%%%Arquivo digital salvo em %%vDsNomeArquivo%%^"
	else
		vDsMensagem = "%%vDsMensagem%%%Arquivo digital salvo em %%vDsArquivo%%^"
	endif
	putitem/id poParams, "DS_MENSAGEM", vDsMensagem 
	;
	return(0)
End; operation geraEAD

;--------------------------------
public operation extrairCOO
;--------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	variables
		string viParams, voParams, vDsArquivo, vCOO, poDsLogErro, vDsLinha, vEOF
		boolean vFlag  
	endvariables

	vDsArquivo = $item("DS_ARQUIVO", piParams)	

	message/hint "Efetuando leitura da MFD..."
	
	activate "vbfileman".arqexiste(vFlag,vDsArquivo) 
	if (vFlag = <TRUE>)

		activate "vbfileman".filename(vDsArquivo)
		if ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Problema ao abrir arquivo %%vDsArquivo%%%!", "ADICIONAL=Operação->FISSVO027.extrairCOO")
			poDsLogErro = "%%poDsLogErro%%$xCtxErro$%%^"
			exit(-1)
		endif
		
		repeat
			activate "vbfileman".learquivo(vDsLinha)
			if ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Problema ao ler arquivo %%vDsArquivo%%%!", "ADICIONAL=Operação->FISSVO027.extrairCOO")
				poDsLogErro = "%%poDsLogErro%%$xCtxErro$%%^"
				exit(-1)
			endif
			
			call extraiValor("COO:", vDsLinha, vCOO) ;efetua a extração Contador Ordem de Operação
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				return(-1)
			endif
		
			activate "vbfileman".eof(vEOF)
			if ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Problema ao ler status arquivo %%vDsArquivo%%%!", "ADICIONAL=Operação->FISSVO027.extrairCOO")
				poDsLogErro = "%%poDsLogErro%%$xCtxErro$%%^"
				exit(-1)
			endif
		until (vEOF = -1)
	endif

	putitem/id poParams, "DS_COOINI", $vCOOINI$
	putitem/id poParams, "DS_COOFIM", $vCOOFIM$
	putitem/id poParams, "DS_DATAINI", $vDtInicial$
	putitem/id poParams, "DS_DATAFIM", $vDtEmissao$

	return(0)
end; operation extrairCOO

;----------------------------------
public operation efetuaLeituraArqMFD
;----------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	variables
		string viParams, voParams, vDsDadoINI, vDsDadoFIM, vDsConteudo, vDsArquivo, poDsLogErro, vEOF, vDsLinha, vDsMeioPagto, vVlFormaPagto
		string vDsPagamento, vDsLstPagamento, vDsRegistro, vSimbDoc, vDsPath
		numeric vCOO, vCCF, vCDC, vGRG, vGNF, vDsValor, vNrContadorRed, vQtTentativa  
		numeric vNrTpDownload
		boolean vFlag  
	endvariables

	vDsDadoIni = $item("DS_DADOINI", piParams)
	vDsDadoFIM = $item("DS_DADOFIM", piParams)
	vNrTpDownload = $item("NR_TPDOWNLOAD",piParams) ; 0 = Total ; 1 = Data ; 2 = COO

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"

	message/hint "Efetuando download da MFD..."
	viParams = ""
	voParams = ""		
	putitem/id viParams, "DS_ARQUIVO", "C:\ECF\DOWNLOAD.MFD" ;ESSE CAMINHO E FIXO PORQUE, AQUI INFORMA PRA ECF ONDE COLOCAR O ARQUIVO
	;putitem/id viParams, "DS_ARQUIVO", "%%vDsPath%%%DOWNLOAD.MFD" 
	if (vNrTpDownload = 1); 1 = Data 
		$DataINI$ = vDsDadoIni 
		$DataFIM$ = vDsDadoFIM 
		putitem/id viParams, "TP_DOWNLOAD", "1"
		putitem/id viParams, "DS_DADOINI", "%%$DataINI$"
		putitem/id viParams, "DS_DADOFIM", "%%$DataFIM$"
	elseif (vNrTpDownload = 2) ; 2 = COO
		putitem/id viParams, "TP_DOWNLOAD", "2"
		putitem/id viParams, "DS_DADOINI", vDsDadoIni 
		putitem/id viParams, "DS_DADOFIM", vDsDadoFIM 
		putitem/id viParams, "NR_USUARIO", "1" ;FIXO
	else
		putitem/id viParams, "TP_DOWNLOAD", "0" ; TOTAL
	endif
	putitem/id viParams, "TP_FORMATO", "0" ; 0 = TXT ; 1 = RTF ; 2 = MDB 

	activate "ECFSVCO011".downloadMFD(viParams,voParams,$xcderro$,$xctxerro$)
	if ($procerror)       
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		return(-1)
	elseif ($status = -10)
		viParams = ""
		voParams = ""
		putitem/id viParams,"TITULO", "Erro de comunicação com a ECF"
		putitem/id viParams,"MENSAGEM", $item("DESCRICAO",$xctxerro$)
		activate "GERFP008".EXEC(viParams,voParams,$xCdErro$,$xCtxErro$)
		if ($procerror)       
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			return(-1)
		endif
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		return(-1)
	endif

	vDsConteudo = ""
	vQtTentativa = 0
	
	vDsArquivo = "%%vDsPath%%%DOWNLOAD.TXT" 
	;vDsArquivo = "C:\ECF\DOWNLOAD.TXT"	
	
	activate "vbfileman".arqexiste(vFlag,vDsArquivo) 
	if (vFlag = <TRUE>)
		activate "KERNEL32".SLEEP(2000)        

		activate "vbfileman".filename(vDsArquivo)
		if ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Problema ao abrir arquivo %%vDsArquivo%%%!", "ADICIONAL=Operação->ECFSVCO011.efetuaLeituraArqMFD")
			poDsLogErro = "%%poDsLogErro%%$xCtxErro$%%^"
			exit(-1)
		endif

		vCOO = 0
		vCCF = 0
		VCOO = 0
		vCDC = 0
     	vGRG = 0
		vGNF = 0
		vNrContadorRed = 0
		vDsPagamento = ""
		vDsLstPagamento = ""	
		vDsRegistro = ""
		vSimbDoc = ""
		repeat
			activate "vbfileman".learquivo(vDsLinha)
			if ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Problema ao ler arquivo %%vDsArquivo%%%!", "ADICIONAL=Operação->ECFSVCO011.efetuaLeituraArqMFD")
				poDsLogErro = "%%poDsLogErro%%$xCtxErro$%%^"
				exit(-1)
			endif
		
			call extraiValor("COO:", vDsLinha, vDsValor) ;efetua a extração Contador Ordem de Operação
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				return(-1)
			endif
			if (vDsValor != 0) 
				vCOO = vDsValor
			endif

			call extraiValor("CCF:", vDsLinha, vDsValor) ;efetua a extração Contador Cupom Fiscal
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				return(-1)
			endif
			if (vDsValor != 0) 
				vCCF = vDsValor
			endif
			
			call extraiValor("CDC:", vDsLinha, vDsValor) ;efetua a extração Contador de Comprovante de Crédito ou Débito
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				return(-1)
			endif
			if (vDsValor != 0) 
				vCDC = vDsValor
			endif

			call extraiValor("GRG:", vDsLinha, vDsValor) ;efetua a extração Contador Geral de Relatorio Gerencial
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				return(-1)
			endif
			if (vDsValor != 0) 
				vGRG = vDsValor
			endif

			call extraiValor("GNF:", vDsLinha, vDsValor) ;efetua a extração Contador Gerencial de Operação não Fiscal
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				return(-1)
			endif
			if (vDsValor != 0) 
				vGNF = vDsValor
			endif

			if (vDsLinha[1:10] = "QQQQQQQQQQ")
				$vDtFinalEmissao$ = vDsLinha[20:10]
				$vHrFinalEmissao$ = vDsLinha[31:8]
			endif

			if (vDsLinha[1:8] = "Dinheiro")		
				vDsMeioPagto = "Dinheiro"
				vVlFormaPagto  = vDsLinha[20:50]
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, " ", "", -1)
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, ".", "", -1)
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, ",", ".", -1)

				putitem/id vDsPagamento, "DS_MEIOPAGTO", vDsMeioPagto 
				putitem/id vDsPagamento, "VL_FORMAPAGTO", vVlFormaPagto
				putitem vDsLstPagamento, -1, vDsPagamento
			endif

			if (vDsLinha[1:6] = "Cheque")				
				vDsMeioPagto = "Cheque"
				vVlFormaPagto  = vDsLinha[20:50]
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, " ", "", -1)
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, ".", "", -1)
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, ",", ".", -1)

				putitem/id vDsPagamento, "DS_MEIOPAGTO", vDsMeioPagto 
				putitem/id vDsPagamento, "VL_FORMAPAGTO", vVlFormaPagto
				putitem vDsLstPagamento, -1, vDsPagamento
			endif

			if (vDsLinha[1:6] = "Cartao")				
				vDsMeioPagto = "Cartao"
				vVlFormaPagto  = vDsLinha[20:50]
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, " ", "", -1)
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, ".", "", -1)
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, ",", ".", -1)

				putitem/id vDsPagamento, "DS_MEIOPAGTO", vDsMeioPagto 
				putitem/id vDsPagamento, "VL_FORMAPAGTO", vVlFormaPagto
				putitem vDsLstPagamento, -1, vDsPagamento
			endif

			if (vDsLinha[1:14] = "Cartao credito")				
				vDsMeioPagto = "Cartao credito"
				vVlFormaPagto  = vDsLinha[20:50]
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, " ", "", -1)
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, ".", "", -1)
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, ",", ".", -1)

				putitem/id vDsPagamento, "DS_MEIOPAGTO", vDsMeioPagto 
				putitem/id vDsPagamento, "VL_FORMAPAGTO", vVlFormaPagto
				putitem vDsLstPagamento, -1, vDsPagamento
			endif


			if (vDsLinha[1:13] = "Cartao debito")				
				vDsMeioPagto = "Cartao debito"
				vVlFormaPagto  = vDsLinha[20:50]
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, " ", "", -1)
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, ".", "", -1)
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, ",", ".", -1)

				putitem/id vDsPagamento, "DS_MEIOPAGTO", vDsMeioPagto 
				putitem/id vDsPagamento, "VL_FORMAPAGTO", vVlFormaPagto
				putitem vDsLstPagamento, -1, vDsPagamento
			endif

			if (vDsLinha[1:6] = "Fatura")				
				vDsMeioPagto = "Fatura"
				vVlFormaPagto  = vDsLinha[20:50]	
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, " ", "", -1)
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, ".", "", -1)
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, ",", ".", -1)

				putitem/id vDsPagamento, "DS_MEIOPAGTO", vDsMeioPagto 
				putitem/id vDsPagamento, "VL_FORMAPAGTO", vVlFormaPagto
				putitem vDsLstPagamento, -1, vDsPagamento
			endif

			if (vDsLinha[1:12] = "Adiantamento")				
				vDsMeioPagto = "Adiantamento"
				vVlFormaPagto  = vDsLinha[20:50]	
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, " ", "", -1)
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, ".", "", -1)
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, ",", ".", -1)

				putitem/id vDsPagamento, "DS_MEIOPAGTO", vDsMeioPagto 
				putitem/id vDsPagamento, "VL_FORMAPAGTO", vVlFormaPagto
				putitem vDsLstPagamento, -1, vDsPagamento
			endif

			if (vDsLinha[1:15] = "Cartao de debit")				
				vDsMeioPagto = "Cartao de debit"
				vVlFormaPagto  = vDsLinha[20:50]
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, " ", "", -1)
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, ".", "", -1)
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, ",", ".", -1)

				putitem/id vDsPagamento, "DS_MEIOPAGTO", vDsMeioPagto 
				putitem/id vDsPagamento, "VL_FORMAPAGTO", vVlFormaPagto
				putitem vDsLstPagamento, -1, vDsPagamento
			endif

			if (vDsLinha[1:12] = "Cartao teste")				
				vDsMeioPagto = "Cartao teste"
				vVlFormaPagto  = vDsLinha[20:50]
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, " ", "", -1)
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, ".", "", -1)
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, ",", ".", -1)

				putitem/id vDsPagamento, "DS_MEIOPAGTO", vDsMeioPagto 
				putitem/id vDsPagamento, "VL_FORMAPAGTO", vVlFormaPagto
				putitem vDsLstPagamento, -1, vDsPagamento
			endif

			if (vDsLinha[1:6] = "T.E.F.")				
				vDsMeioPagto = "T.E.F."
				vVlFormaPagto  = vDsLinha[20:50]
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, " ", "", -1)
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, ".", "", -1)
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, ",", ".", -1)

				putitem/id vDsPagamento, "DS_MEIOPAGTO", vDsMeioPagto 
				putitem/id vDsPagamento, "VL_FORMAPAGTO", vVlFormaPagto
				putitem vDsLstPagamento, -1, vDsPagamento	
			endif

			if (vDsLinha[1:15] = "Receb. de Fatur")				
				vDsMeioPagto = "Receb. de Fatur"
				vVlFormaPagto  = vDsLinha[20:50]
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, " ", "", -1)
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, ".", "", -1)
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, ",", ".", -1)

				putitem/id vDsPagamento, "DS_MEIOPAGTO", vDsMeioPagto 
				putitem/id vDsPagamento, "VL_FORMAPAGTO", vVlFormaPagto
				putitem vDsLstPagamento, -1, vDsPagamento
			endif

			if (vDsLinha[1:15] = "Cancel. Recebim")				
				vDsMeioPagto = "Cancel. Recebim"
				vVlFormaPagto  = vDsLinha[20:50]
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, " ", "", -1)
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, ".", "", -1)
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, ",", ".", -1)

				putitem/id vDsPagamento, "DS_MEIOPAGTO", vDsMeioPagto 
				putitem/id vDsPagamento, "VL_FORMAPAGTO", vVlFormaPagto
				putitem vDsLstPagamento, -1, vDsPagamento
			endif

			if (vDsLinha[1:6] = "CREDEV")				
				vDsMeioPagto = "CREDEV"
				vVlFormaPagto  = vDsLinha[20:50]	
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, " ", "", -1)
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, ".", "", -1)
				vVlFormaPagto =  $replace(vVlFormaPagto, 1, ",", ".", -1)

				putitem/id vDsPagamento, "DS_MEIOPAGTO", vDsMeioPagto 
				putitem/id vDsPagamento, "VL_FORMAPAGTO", vVlFormaPagto
				putitem vDsLstPagamento, -1, vDsPagamento
			endif

			if (vDsLinha[3:19] = "RELATÓRIO GERENCIAL")
				vSimbDoc = "RG"
			endif

			if (vDsLinha[8:9] = "LEITURA X")
				vSimbDoc = "RG"
			endif

			if (vDsLinha[10:39] = "COMPROVANTE CRÉDITO OU DÉBITO")
				vSimbDoc = "CC"
			endif

			if (vDsLinha[2:22] = "COMPROVANTE NÃO-FISCAL")
				vSimbDoc = "CN"
			endif


			if (vDsLinha[1:23] = "Contador de Reduções Z:")
				vNrContadorRed = vDslinha[43:6]
			endif

			if (vDsLinha = "FAB:BE050769200004007241                     BR")
				clear/e "FIS_ECFSVC"
				CD_EMPRESA.FIS_ECFSVC/init   = $item("CD_EMPRESA",$$gParamGlb)
				CD_SERIEFAB.FIS_ECFSVC/init  = $item("CD_SERIEECF",$$gParamGlb) 
				retrieve/e "FIS_ECFSVC"
				
				creocc "FIS_DNFSVC", -1
				CD_EMPRESA.FIS_DNFSVC = $item("CD_EMPRESA", $$gParamGlb)      
				NR_ECF.FIS_DNFSVC  = NR_ECF.FIS_ECFSVC       
				DT_EMISSAO.FIS_DNFSVC = $vDtEmissao$    
				NR_COO.FIS_DNFSVC =  vCOO 
				retrieve/o "FIS_DNFSVC"
				if ($status = -7)
					retrieve/x "FIS_DNFSVC"
				endif
				CD_OPERADOR.FIS_DNFSVC  =  $item("CD_USUARIO", $$gParamGlb)
				DT_CADASTRO.FIS_DNFSVC  =  $datim
				TP_SIMBDOC.FIS_DNFSVC   =  vSimbDoc
				NR_GNF.FIS_DNFSVC       =  vGNF
				NR_GRG.FIS_DNFSVC       =  vGRG
				NR_CDC.FIS_DNFSVC       =  vCDC
				NR_REDUCAOZ.FIS_DNFSVC       =  vNrContadorRed 
				DT_FINALEMISSAO.FIS_DNFSVC = $vDtFinalEmissao$
				HR_FINALEMISSAO.FIS_DNFSVC = $vHrFinalEmissao$

				
				if (vDsLstPagamento!= "")
				repeat
					getitem vDsRegistro, vDsLstPagamento, 1
					creocc "FIS_MPGTOSVC", -1
					CD_EMPRESA.FIS_MPGTOSVC = $item("CD_EMPRESA", $$gParamGlb)      
					NR_ECF.FIS_MPGTOSVC = NR_ECF.FIS_ECFSVC         
					DT_EMISSAO.FIS_MPGTOSVC = $vDtEmissao$    
					NR_COO.FIS_MPGTOSVC =  vCOO
					DS_MPGTO.FIS_MPGTOSVC = $item("DS_MEIOPAGTO", vDsRegistro)
					retrieve/o "FIS_MPGTOSVC"
					if ($status = -7)
						retrieve/x "FIS_MPGTOSVC"
					endif
					CD_OPERADOR.FIS_MPGTOSVC  =  $item("CD_USUARIO", $$gParamGlb)
					DT_CADASTRO.FIS_MPGTOSVC  =  $datim
					NR_CCF.FIS_MPGTOSVC       =  vCCF
					NR_GNF.FIS_MPGTOSVC       =  vGNF
					VL_PAGO.FIS_MPGTOSVC      =  $item("VL_FORMAPAGTO", vDsRegistro)
					TP_ESTORNO.FIS_MPGTOSVC   =  "N" 
					VL_ESTORNADO.FIS_MPGTOSVC =  0
 
					delitem vDsLstPagamento, 1
					until (vDsLstPagamento= "")
				endif

				vCOO = 0
				vCCF = 0
				VCOO = 0
				vCDC = 0
		      	vGRG = 0
				vGNF = 0
				vNrContadorRed = 0
				vDsPagamento = ""
				vDsLstPagamento = ""
				vDsRegistro	= ""		
				vSimbDoc = ""
      		endif

			activate "vbfileman".eof(vEOF)
			if ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Problema ao ler status arquivo %%vDsArquivo%%%!", "ADICIONAL=Operação->ECFSVCO011.efetuaLeituraArqMFD")
				poDsLogErro = "%%poDsLogErro%%$xCtxErro$%%^"
				exit(-1)
			endif
		until (vEOF = -1)

	endif

	$collhandle("FIS_DNFSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	putitem/id poParams, "DS_PATH", vDsPath
	
	return(0)
end ;operation efetuaLeituraArqMFD

;-------------------------------
public operation retornaPathECF
;------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		string vDsPath
	endvariables

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	
	putitem/id poParams, "DS_PATH", vDsPath

	return(0)
end ;operation retornaPathECF

;------------------------------------;
public operation geraAtoCotep
	;---------------------------------;	
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams

	variables
		string vDsArquivoMFD, vDsArquivoTXT, vTpDownload, vDadoINI, vDadoFIM, vDsRazao, vDsEndereco, vDsPath, vEOF, vDsConteudo
		numeric status, vQtTentativa
		boolean vFlag
	endvariables

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0

	;funciona somente para impressoras fiscais térmicas
	vDsArquivoMFD = $item("DS_ARQMFD",piParams)
	vDsArquivoTXT = $item("DS_ARQTXT",piParams)
	vDadoINI = $item("DS_DADOINI",piParams)
	vDadoFIM = $item("DS_DADOFIM",piParams)
	vDsRazao = $item("DS_RAZAO",piParams)
	vDsEndereco = $item("DS_ENDERECO",piParams)
	vTpDownload	= $item("TP_DOWNLOAD", piParams) ;* Claudemir - Prj/Tarefa: 102/875 - 26/05/2010
	
	vDsArquivoMFD = "%%vDsPath%%vDsArquivoMFD"

	vDsArquivoTXT = "%%vDsPath%%vDsArquivoTXT"

	call espacoDireita(vDsArquivoMFD,35,vDsArquivoMFD)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	call espacoDireita(vDsArquivoTXT,35,vDsArquivoTXT)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	call espacoDireita(vDadoINI,6,vDadoINI)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	call espacoDireita(vDadoFIM,6,vDadoFIM)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	call espacoDireita(vDsRazao,30,vDsRazao)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	call espacoDireita(vDsEndereco,30,vDsEndereco)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	activate "vbfileman".arqexiste(vFlag,"%%vDsPath%%%RETORNOECF.TXT")
	if (vFlag = <TRUE>)
		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif
	endif

	;* Claudemir - Prj/Tarefa: 102/875 - 26/05/2010
	;filedump/append "044%%vDsArquivoMFD%%vDsArquivoTXT%%vDadoINI%%vDadoFIM%%vDsRazao%%vDsEndereco%%^","%%vDsPath%%%MFD.TMP"
	filedump "044%%vDsArquivoMFD%%vDsArquivoTXT%%vDadoINI%%vDadoFIM%%vDsRazao%%vDsEndereco%%vTpDownload%%^","%%vDsPath%%%MFD.TMP" 
	;*
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.geraAtoCotep")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%MFD.TMP","%%vDsPath%%%MFD.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	activate "KERNEL32".SLEEP(40000)  
	vDsConteudo = ""
	vQtTentativa = 0
	repeat
		activate "KERNEL32".SLEEP(1000)
		activate "vbfileman".arqexiste(vFlag,"%%vDsPath%%%DOWNLOAD.MFD")
		if (vFlag = <FALSE>)
			break
		endif

		activate "vbfileman".arqexiste(vFlag,"%%vDsPath%%%RETORNOECF.TXT")
		if (vFlag = <TRUE>)
			break
		endif

		vQtTentativa = vQtTentativa + 1
		if (vQtTentativa > 50000)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.geraAtoCotep")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			activate "vbfileman".apagaarquivo("%%vDsPath%%%MFD.TXT")
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
			endif
			exit(-1)
		endif
	until (vDsConteudo != "")
	
	
	activate "vbfileman".arqexiste(vFlag,"%%vDsPath%%%RETORNOECF.TXT")
	if (vFlag = <TRUE>)
		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif
	endif

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.geraAtoCotep")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	putitem/id poParams, "DS_PATH", vDsPath

	return(0)

End; operation geraAtoCotep

;* Claudemir - Prj/Tarefa: 156/639 - 23/12/2011
;------------------------------------
public operation verificaDocVinculado
;------------------------------------
	params
		string piParams :IN
		string poParams :OUT
		string poCdErro :OUT
		string poCtxErro :OUT
	endparams

	variables
		string vEOF, vDsLinha, vDsRetorno, vDsPath, vDsConteudo, viParams, voParams
		string vDsLista, vDsRegistro, vNrCupom, vNrSerieEcf
		numeric vQtTentativa, Status
		boolean vFlag 
	endvariables

	vDsPath = $item("DS_UNIDTERMINAL",$$gParamGlb)
	vDsPath = "%%vDsPath%%%:\ECF\"
	$status = 0

	vNrCupom	= $item("NR_CUPOM", piParams)
	vNrSerieEcf	= $item("NR_SERIE", piParams)

	if (vNrCupom = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número do COO do cupom não informado!", "ADICIONAL=Operação->ECFSVC0011.verificaDocVinculado")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	if (vNrSerieEcf = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número de série da ECF não informado!", "ADICIONAL=Operação->ECFSVC0011.verificaDocVinculado")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	call preencheZero(vNrCupom, 6, vNrCupom)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
	endif

	call espacoDireita(vNrSerieEcf, 20, vNrSerieEcf)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
	endif
	
	filedump "136%%vNrCupom%%vNrSerieEcf%%^","%%vDsPath%%%ECF.TMP"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na gravação de arquivos na máquina check in!", "ADICIONAL=Operação->ECFSVC0011.leInformacaoImpressora")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
		
	activate "vbfileman".movearquivo(vEOF,"%%vDsPath%%%ECF.TMP","%%vDsPath%%%ECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif
	
	vDsConteudo = ""
	vQtTentativa = 0
	repeat

		fileload "%%vDsPath%%%RETORNOECF.TXT", vDsConteudo
		if ($procerror) | ($status = 0)
			activate "KERNEL32".SLEEP(2000)        
			vQtTentativa = vQtTentativa + 1
			if (vQtTentativa > 8)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Falha na comunicação tempo de resposta esgotado para máquina check in!", "ADICIONAL=Operação->ECFSVC0011.leInformacaoImpressora")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				activate "vbfileman".apagaarquivo("%%vDsPath%%%ECF.TXT")
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
				endif
				return(-1)
			endif
		endif

	until (vDsConteudo != "")

	length vDsConteudo
	Status = vDsConteudo[1,4]
	if (Status = -1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsConteudo[5,$result]", "ADICIONAL=Operação->ECFSVC0011.leInformacaoImpressora")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$

		activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		exit(-1)
	else
		$instancehandle->setDisplay("%%vDsConteudo[5,$result]", "", "")
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		endif
	endif

	activate "vbfileman".filename("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	repeat

		activate "vbfileman".learquivo(vDsLinha)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

		vDsRetorno = $item("NR_COOVINCULADO",vDsLinha)
		length(vDsRetorno)
		if ($result > 0)
			putitem/id poParams, "NR_COOVINCULADO", vDsRetorno
		endif

		activate "vbfileman".eof(vEOF)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
		endif

	until (vEOF = -1)

	activate "vbfileman".apagaarquivo("%%vDsPath%%%RETORNOECF.TXT")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
	endif

	return(0)
end ;  verificaDocVinculado  ;*
