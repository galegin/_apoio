;------------------------------
public operation geraLiquidacao
;------------------------------
	params
		string piGlobal :IN
		string piParams :IN
		string poParams :OUT
		numeric poCdErro :OUT
		string poCtxErro :OUT
	endparams

	variables
		numeric vNrFatura, vCdEmpresa, vCdCliente, vNrParcela, vNrSeqItem
		numeric vNrSeqLiq, vVlTotal, vNrCtaPesCx
		string vDsLinha, viParams, voParams, vDsRegFatI, vDsFaturaI
		string vDsOrigem, vDsDestino, vDsRegOrigem, vDsRegDestino
		date vDtSistema
	endvariables

	clear/e "FCR_FATURAISVC"
	clear/e "GER_EMPRESASVC"
	clear/e "FGR_LIQSVC"
	clear/e "F_FCR_FATURAISVC"
	
	clear/e "FCC_CTAPESSVC"
	CD_PESSOA.FCC_CTAPESSVC = $item("CD_USUARIO", piGlobal)
	retrieve/e "FCC_CTAPESSVC"
	if ($status >= 0)
		vNrCtaPesCx = NR_CTAPES.FCC_CTAPESSVC
	else
		vNrCtaPesCx = 0
	endif

	vDsOrigem = $item("DS_ORIGEM", piParams)
	if (vDsOrigem != "")
		repeat
			getitem vDsRegOrigem, vDsOrigem, 1
			creocc "FCR_FATURAISVC", -1
			getlistitems/occ vDsRegOrigem, "FCR_FATURAISVC"
			retrieve/o "FCR_FATURAISVC"
			if ($status = -7)
				retrieve/x "FCR_FATURAISVC"
			endif

			delitem vDsOrigem, 1
		until (vDsOrigem = "")    
	endif

	vDsDestino = $item("DS_DESTINO", piParams)
	if (vDsDestino != "")
		repeat
			getitem vDsRegDestino, vDsDestino, 1
			creocc "F_FCR_FATURAISVC", -1
			getlistitems/occ vDsRegDestino, "F_FCR_FATURAISVC"
			retrieve/o "F_FCR_FATURAISVC"
			if ($status = -7)
				retrieve/x "F_FCR_FATURAISVC"
			endif

			delitem vDsDestino, 1
		until (vDsDestino = "")    
	endif

	vCdEmpresa = $item("CD_EMPRESA", piGlobal)

	clear/e "GER_EMPRESASVC"
	CD_EMPRESA.GER_EMPRESASVC = vCdEmpresa
	retrieve/e "GER_EMPRESASVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não cadastrada!", "ADICIONAL=Operação->FGRSVCO001.geraLiquidacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	viParams = ""
	putitem/id viParams, "NM_ENTIDADE", "FGR_LIQ"
	activate "GERSVCO031".getNumSeq($xlpg$, viParams, voParams, $xCdErro$, $xCtxerro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)  
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)  
	endif    
	vNrSeqLiq = $item("NR_SEQUENCIA", voParams)
	;--------------------------------------------
	;Gravação de Itens da Liquidação e Liquidação
	;--------------------------------------------
	setocc "FCR_FATURAISVC", 1

	vDtSistema = DT_EMISSAO.FCR_FATURAISVC

	creocc "FGR_LIQSVC", -1
	CD_EMPLIQ.FGR_LIQSVC = CD_EMPRESA.FCR_FATURAISVC ;vCdEmpresa
	DT_LIQ.FGR_LIQSVC = vDtSistema
	NR_SEQLIQ.FGR_LIQSVC = vNrSeqLiq
	retrieve/o "FGR_LIQSVC"
	if ($status = -7)
		retrieve/x "FGR_LIQSVC"
	endif
	CD_OPERADOR.FGR_LIQSVC = $item("CD_USUARIO", piGlobal)
	DT_CADASTRO.FGR_LIQSVC = $datim
	TP_LIQUIDACAO.FGR_LIQSVC = 5
	CD_GRUPOEMPRESA.FGR_LIQSVC = CD_GRUPOEMPRESA.GER_EMPRESASVC

	putmess "Inicio salvando fatura %%$clock"
	
	vNrSeqItem = 1
	vVlTotal = 0
	setocc "FCR_FATURAISVC", 1
	while ($status >= 0)
		creocc "FGR_LIQITEMCRSVC", -1
		NR_SEQITEM.FGR_LIQITEMCRSVC = vNrSeqItem
		CD_OPERADOR.FGR_LIQITEMCRSVC = $item("CD_USUARIO", piGlobal)
		DT_CADASTRO.FGR_LIQITEMCRSVC = $datim
		CD_EMPFAT.FGR_LIQITEMCRSVC = CD_EMPRESA.FCR_FATURAISVC
		CD_CLIENTE.FGR_LIQITEMCRSVC = CD_CLIENTE.FCR_FATURAISVC
		NR_FAT.FGR_LIQITEMCRSVC = NR_FAT.FCR_FATURAISVC
		NR_PARCELA.FGR_LIQITEMCRSVC = NR_PARCELA.FCR_FATURAISVC
		TP_TIPOREG.FGR_LIQITEMCRSVC = 1
		TP_DOCUMENTO.FGR_LIQITEMCRSVC = TP_DOCUMENTO.FCR_FATURAISVC
		NR_CTAPESCX.FGR_LIQITEMCRSVC = vNrCtaPesCx
		vVlTotal = vVlTotal + VL_FATURA.FCR_FATURAISVC
		vNrSeqItem = vNrSeqItem + 1

		;--Douglas Ferreira - [Prj/Tarefa 186/0111] - 13/07/2011
		;CD_EMPLIQ.FCR_FATURAISVC = vCdEmpresa
		CD_EMPLIQ.FCR_FATURAISVC = CD_EMPLIQ.FGR_LIQSVC
		;

		;MTF(04/10/2007) - Projeto 079, tarefa 163.
		if (dt_liq.fcr_faturaisvc != "")
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fatura já baixada em outro processo.%%^Empresa: %%cd_empresa.fcr_faturaisvc   Cliente: %%cd_cliente.fcr_faturaisvc  Fatura: %%nr_fat.fcr_faturaisvc  Parcela: %%nr_parcela.fcr_faturaisvc", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		;
		DT_LIQ.FCR_FATURAISVC = vDtSistema
		NR_SEQLIQ.FCR_FATURAISVC = vNrSeqLiq
		VL_PAGO.FCR_FATURAISVC = VL_FATURA.FCR_FATURAISVC
		;Projeto 078 - Tarefa 3640 - Aloisio Gargantini - 17/08/2010
		;TP_BAIXA.FCR_FATURAISVC = 1
		if (TP_BAIXA.FCR_FATURAISVC < 1)
			TP_BAIXA.FCR_FATURAISVC = 1
		endif
		;
		CD_OPERBAIXA.FCR_FATURAISVC = $item("CD_USUARIO", piGlobal)
		;Projeto 078 - Tarefa 3640 - Aloisio Gargantini - 17/08/2010
		DT_BAIXA.FCR_FATURAIsvc/init = vDtSistema
		;
		;MTF(04/10/2007) - Projeto 079, tarefa 163.
		if ($status = -11)
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fatura sendo utilizada em outro processo ou manutenção.%%^Empresa: %%cd_empresa.fcr_faturaisvc   Cliente: %%cd_cliente.fcr_faturaisvc  Fatura: %%nr_fat.fcr_faturaisvc  Parcela: %%nr_parcela.fcr_faturaisvc", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		;
		
;		viParams = ""
;		putitem/id viParams, "CD_EMPRESA", CD_EMPRESA.FCR_FATURAISVC
;		putitem/id viParams, "CD_CLIENTE", CD_CLIENTE.FCR_FATURAISVC
;		putitem/id viParams, "NR_FAT", NR_FAT.FCR_FATURAISVC
;		putitem/id viParams, "NR_PARCELA", NR_PARCELA.FCR_FATURAISVC
;		putitem/id viParams, "CD_EMPLIQ", vCdEmpresa
;		putitem/id viParams, "DT_LIQ", vDtSistema
;		putitem/id viParams, "NR_SEQLIQ", vNrSeqLiq
;		putitem/id viParams, "TP_BAIXA", 1
;		activate "FCRSVCO001".gravaLiquidacaoFatura(piGlobal, viParams, voParams, $xCdErro$, $xCtxErro$)
;		if ($procerror)
;			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
;			poCdErro = $xCdErro$
;			poCtxErro = $xCtxErro$
;			return (-1)
;		elseif ($status < 0)
;			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
;			poCdErro = $xCdErro$
;			poCtxErro = $xCtxErro$
;			return (-1)
;		endif

		setocc "FCR_FATURAISVC", $curocc("FCR_FATURAISVC") + 1
	endwhile

	putmess "Final salvando fatura %%$clock"								
	
	setocc "F_FCR_FATURAISVC", 1
	while ($status >= 0)
		creocc "FGR_LIQITEMCRSVC", -1
		NR_SEQITEM.FGR_LIQITEMCRSVC = vNrSeqItem
		CD_OPERADOR.FGR_LIQITEMCRSVC = $item("CD_USUARIO", piGlobal)
		DT_CADASTRO.FGR_LIQITEMCRSVC = $datim
		CD_EMPFAT.FGR_LIQITEMCRSVC = CD_EMPRESA.F_FCR_FATURAISVC
		CD_CLIENTE.FGR_LIQITEMCRSVC = CD_CLIENTE.F_FCR_FATURAISVC
		NR_FAT.FGR_LIQITEMCRSVC = NR_FAT.F_FCR_FATURAISVC
		NR_PARCELA.FGR_LIQITEMCRSVC = NR_PARCELA.F_FCR_FATURAISVC
		TP_TIPOREG.FGR_LIQITEMCRSVC = 2
		TP_DOCUMENTO.FGR_LIQITEMCRSVC = TP_DOCUMENTO.F_FCR_FATURAISVC
		vNrSeqItem = vNrSeqItem + 1
		setocc "F_FCR_FATURAISVC", $curocc("F_FCR_FATURAISVC") + 1
	endwhile

	putmess "Inicio salvando liquidacao %%$clock"

	VL_TOTAL.FGR_LIQSVC = vVlTotal
	$collhandle("FGR_LIQSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	putmess "Final salvando liquidacao %%$clock"

	$collhandle("FCR_FATURAISVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif	

	return (0)
end ;geraCartao

;--------------------------------
public operation GeraLiqFatCartao
;--------------------------------
;	BAM - 04/04/05
;	Gera uma liq (fgr_liq)
; 	gera um liqitemcr do tipo 1 para cada fatura informada (lista)
; 	gera um liqitemcr do tipo 2 para o total das faturas informadas (lista)
;   utilizada no momento para a baixa de cartão (FCRFP026)
	params
		string piGlobal :IN
		string piParams :IN
		string poParams :OUT
		numeric poCdErro :OUT
		string poCtxErro :OUT
	endparams
	variables
		numeric vCdEmpresa, vNrSeqItem, vNrSeqLiq, vVlTotal, vNrCtaPes
		string vDsLinha, viParams, voParams, vDsOrigem, vDsRegOrigem 
		date vDtSistema
	endvariables

	clear/e "FCR_FATURAISVC"
	clear/e "GER_EMPRESASVC"
	clear/e "FGR_LIQSVC"
	clear/e "F_FCR_FATURAISVC"
	clear/e "FCC_CTAPESSVC"

	vDsOrigem = $item("DS_ORIGEM", piParams)
	if (vDsOrigem != "")
		repeat
			getitem vDsRegOrigem, vDsOrigem, 1
			creocc "FCR_FATURAISVC", -1
			getlistitems/occ vDsRegOrigem, "FCR_FATURAISVC"
			retrieve/o "FCR_FATURAISVC"
			if ($status = -7)
				retrieve/x "FCR_FATURAISVC"
			endif
			delitem vDsOrigem, 1
		until (vDsOrigem = "")    
	endif
	$status = 0
	vNrCtaPes  = $item("NR_CTAPES",piParams)

	vDtSistema = $item("DT_SISTEMA", piGlobal)
	vCdEmpresa = $item("CD_EMPRESA", piGlobal)
	clear/e "GER_EMPRESASVC"
	CD_EMPRESA.GER_EMPRESASVC = vCdEmpresa
	retrieve/e "GER_EMPRESASVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não cadastrada!", "ADICIONAL=Operação->FGRSVCO001.geraLiquidacao")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	;Busca um número de liquidação
	viParams = ""
	putitem/id viParams, "NM_ENTIDADE", "FGR_LIQ"
	activate "GERSVCO031".getNumSeq($xlpg$, viParams, voParams, $xCdErro$, $xCtxerro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)  
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)  
	endif    
	vNrSeqLiq = $item("NR_SEQUENCIA", voParams)

	;--------------------------------------------
	;Gravação da Liq e LiqItemCR
	;--------------------------------------------
;	clear/e "FGR_LIQSVC"
;	CD_EMPLIQ.FGR_LIQSVC 	= vCdEmpresa
;	DT_LIQ.FGR_LIQSVC 		= vDtSistema
;	NR_SEQLIQ.FGR_LIQSVC 	= vNrSeqLiq
;	retrieve/e "FGR_LIQSVC"
;	if ($status < 0)

	creocc "FGR_LIQSVC", -1
	CD_EMPLIQ.FGR_LIQSVC 	= vCdEmpresa
	DT_LIQ.FGR_LIQSVC 		= vDtSistema
	NR_SEQLIQ.FGR_LIQSVC 	= vNrSeqLiq
	retrieve/o "FGR_LIQSVC"
	if ($status = -7)
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Liquidacao já existente %%CD_EMPLIQ.FGR_LIQSVC %%DT_LIQ.FGR_LIQSVC %%NR_SEQLIQ.FGR_LIQSVC", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif
	CD_OPERADOR.FGR_LIQSVC = $item("CD_USUARIO", piGlobal)
	DT_CADASTRO.FGR_LIQSVC = $datim
	TP_LIQUIDACAO.FGR_LIQSVC 	= 12 ; cartao 
	CD_GRUPOEMPRESA.FGR_LIQSVC 	= CD_GRUPOEMPRESA.GER_EMPRESASVC
	vNrSeqItem 	= 1 ;GERAR 1  OCC DO LIQITEMCR PARA CARTAO
	vVlTotal 	= 0

	clear/e "FGR_LIQITEMCRSVC"
	setocc "FCR_FATURAISVC", 1
	while ($status >= 0)
;		tipo 1 - cartao
		creocc "FGR_LIQITEMCRSVC", -1
		NR_SEQITEM.FGR_LIQITEMCRSVC 	= vNrSeqItem
		CD_OPERADOR.FGR_LIQITEMCRSVC 	= $item("CD_USUARIO", piGlobal)
		DT_CADASTRO.FGR_LIQITEMCRSVC 	= $datim
		CD_EMPFAT.FGR_LIQITEMCRSVC 		= CD_EMPRESA.FCR_FATURAISVC
		CD_CLIENTE.FGR_LIQITEMCRSVC 	= CD_CLIENTE.FCR_FATURAISVC
		NR_FAT.FGR_LIQITEMCRSVC 		= NR_FAT.FCR_FATURAISVC
		NR_PARCELA.FGR_LIQITEMCRSVC 	= NR_PARCELA.FCR_FATURAISVC
		TP_TIPOREG.FGR_LIQITEMCRSVC 	= 1
		vVlTotal 						= vVlTotal + VL_FATURA.FCR_FATURAISVC
		vNrSeqItem 						= vNrSeqItem + 1
		setocc "FCR_FATURAISVC", $curocc("FCR_FATURAISVC") + 1
	endwhile
	$status = 0

;-----------
	;BAM 13/06/05 - GERAR SOMENTE UM ITEMCR TIPO REG 2 POIS VÁRIOS TITULOS SERÃO PAGOS EM 1 CTA
	;tipo 2 ctapes
	creocc "FGR_LIQITEMCRSVC", -1
	NR_SEQITEM.FGR_LIQITEMCRSVC 	= vNrSeqItem
	CD_OPERADOR.FGR_LIQITEMCRSVC 	= $item("CD_USUARIO", piGlobal)
	DT_CADASTRO.FGR_LIQITEMCRSVC 	= $datim
	TP_TIPOREG.FGR_LIQITEMCRSVC 	= 2
	NR_CTAPES.FGR_LIQITEMCRSVC 		= vNrCtaPes
	vVlTotal 						= vVlTotal + VL_FATURA.FCR_FATURAISVC
;-----------------
	VL_TOTAL.FGR_LIQSVC 			= $item("VL_PAGO",piParams)
	$collhandle("FGR_LIQSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

;-> Rotina de baixa ficou para FGRSVCO007									
;	setocc "FCR_FATURAISVC", 1
;	while ($status >= 0)
;		CD_EMPLIQ.FCR_FATURAISVC 	= vCdEmpresa
;		DT_LIQ.FCR_FATURAISVC 		= vDtSistema
;		NR_SEQLIQ.FCR_FATURAISVC 	= vNrSeqLiq
;		viParams = ""
;		putlistitems/occ vDsLinha, "FCR_FATURAISVC"
;		putitem/id viParams, "DS_FATURAI", vDsLinha
;		putitem/id viParams, "CD_COMPONENTE", $componentname
;		As informações a seguir passaram a ser exigência do servico FCRSVCO001
;		Confirmar quais realmente devem ser setadas.
;		putitem/id viParams, "DS_CHEQUE", ""
;		putitem/id viParams, "IN_ALTSOFATURAI",<True>
;		putitem/id viParams, "IN_SEMCOMISSAO",<true>
;		putitem/id viParams, "IN_SEMIMPOSTO",<true>
;		putitem/id viParams, "IN_NAOGRVJURO",<true>
;		putitem/id viParams, "IN_NAOGRVMULTA",<true>
;		putitem/id viParams, "IN_NAOGRVDESCANT",<true>
;		putitem/id viParams, "IN_NAOGRVDESC1",<true>
;		putitem/id viParams, "IN_NAOGRVDESC2",<true>
;		activate "FCRSVCO001".geraFatura($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
;		if ($procerror)       
;			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
;			poCdErro = $xCdErro$
;			poCtxErro = $xCtxErro$
;			return (-1)
;		elseif ($status < 0)
;			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
;			poCdErro = $xCdErro$
;			poCtxErro = $xCtxErro$
;			return (-1)
;		endif
;
;		setocc "FCR_FATURAISVC", $curocc("FCR_FATURAISVC") + 1
;	endwhile
;
	putitem/id poParams, "CD_EMPLIQ",vCdEmpresa 
	putitem/id poParams, "DT_LIQ",vDtSistema
	putitem/id poParams, "NR_SEQLIQ",vNrSeqLiq
	return (0)
end ;GeraLiqFatCartao

;------------------------------------
public operation geraLiquidacaoCartao
;------------------------------------
	params
		string piGlobal :IN
		string piParams :IN
		string poParams :OUT
		numeric poCdErro :OUT
		string poCtxErro :OUT
	endparams

	variables
		date vDtLiq, vDtLancto
		string viParams, voParams, vDsLinha, vpiParams, vpoParams, vDsObs
		numeric vNrFat, vCdEmpresa, vCdCliente, vNrParcela
		numeric vCdEmpLiq, vNrSeqLiq, vNrSeqItem, vVlLiquido, vVlDesconto
	endvariables

	clear/e "FCR_FATURAISVC"
	clear/e "GER_EMPRESASVC"
	clear/e "FGR_LIQSVC"
	clear/e "F_FCR_FATURAISVC"
	clear/e "FCC_CTAPESSVC"

	vDtLancto = $item("DT_LANCTO", piParams)
	vVlLiquido = $item("VL_LIQUIDO", piParams)

	vCdEmpLiq = $item("CD_EMPLIQ", piParams)
	vDtLiq = $item("DT_LIQ", piParams)
	vNrSeqLiq = $item("NR_SEQLIQ", piParams)
	vNrSeqItem = $item("NR_SEQITEM", piParams)

	vCdEmpresa = $item("CD_EMPRESA", piParams)
	vCdCliente = $item("CD_CLIENTE", piParams)
	vNrFat = $item("NR_FAT", piParams)
	vNrParcela = $item("NR_PARCELA", piParams)
	;==BY BIANCHINI[PRJ/TAREFA 186/0297] 31/10/2011==;	
	vDsObs = $item("DS_OBSERVACAO", piParams)
	;==

	if (vNrSeqLiq > 0)
		clear/e "FGR_LIQSVC"
		CD_EMPLIQ.FGR_LIQSVC = vCdEmpLiq
		DT_LIQ.FGR_LIQSVC = vDtLiq
		NR_SEQLIQ.FGR_LIQSVC = vNrSeqLiq
		retrieve/e "FGR_LIQSVC"
		if ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Liquidação não encontada!", "ADICIONAL=Operação->FGRSVCO001.geraLiquidacaoCartao")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		endif
	endif

	while (vNrSeqLiq = 0)
		viParams = ""
		putitem/id viParams, "NM_ENTIDADE", "FGR_LIQ"
		activate "GERSVCO031".getNumSeq($xlpg$, viParams, voParams, $xCdErro$, $xCtxerro$)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)  
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)  
		endif    
		vNrSeqLiq = $item("NR_SEQUENCIA", voParams)

		clear/e "FGR_LIQSVC"
		creocc "FGR_LIQSVC", -1
		;Douglas Ferreira - [Prj/Tarefa 78/4075] - 04/02/2011
		if (vCdEmpLiq > 0)
			CD_EMPLIQ.FGR_LIQSVC = vCdEmpLiq
		else
		;
			CD_EMPLIQ.FGR_LIQSVC = $item("CD_EMPRESA", piGlobal)
		endif
		DT_LIQ.FGR_LIQSVC = vDtLancto
		NR_SEQLIQ.FGR_LIQSVC = vNrSeqLiq
		retrieve/o "FGR_LIQSVC"
		if ($status = -7)
			vNrSeqLiq = 0
		else
			CD_OPERADOR.FGR_LIQSVC = $item("CD_USUARIO", piGlobal)
			DT_CADASTRO.FGR_LIQSVC = $datim
			TP_LIQUIDACAO.FGR_LIQSVC = 12
			CD_GRUPOEMPRESA.FGR_LIQSVC = $item("CD_GRUPOEMPRESA", piGlobal)
		endif
	endwhile

	if (vNrSeqItem = 0)
		vNrSeqItem = 1
	endif

	clear/e "FCR_FATURAISVC"
	CD_EMPRESA.FCR_FATURAISVC = vCdEmpresa
	CD_CLIENTE.FCR_FATURAISVC = vCdCliente
	NR_FAT.FCR_FATURAISVC = vNrFat
	NR_PARCELA.FCR_FATURAISVC = vNrParcela
	retrieve/e "FCR_FATURAISVC"
	if ($status >= 0)
		creocc "FGR_LIQITEMCRSVC", -1
		NR_SEQITEM.FGR_LIQITEMCRSVC = vNrSeqItem
		CD_OPERADOR.FGR_LIQITEMCRSVC = $item("CD_USUARIO", piGlobal)
		DT_CADASTRO.FGR_LIQITEMCRSVC = $datim
		CD_EMPFAT.FGR_LIQITEMCRSVC = CD_EMPRESA.FCR_FATURAISVC
		CD_CLIENTE.FGR_LIQITEMCRSVC = CD_CLIENTE.FCR_FATURAISVC
		NR_FAT.FGR_LIQITEMCRSVC = NR_FAT.FCR_FATURAISVC
		NR_PARCELA.FGR_LIQITEMCRSVC = NR_PARCELA.FCR_FATURAISVC
		TP_TIPOREG.FGR_LIQITEMCRSVC = 1
		TP_DOCUMENTO.FGR_LIQITEMCRSVC = TP_DOCUMENTO.FCR_FATURAISVC
		vNrSeqItem = vNrSeqItem + 1

		vVlDesconto = VL_FATURA.FCR_FATURAISVC - vVlLiquido
		CD_EMPLIQ.FCR_FATURAISVC = CD_EMPLIQ.FGR_LIQSVC
		;MTF(04/10/2007) - Projeto 079, tarefa 163.
		if (dt_liq.fcr_faturaisvc != "")
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fatura já baixada em outro processo.%%^Empresa: %%cd_empresa.fcr_faturaisvc   Cliente: %%cd_cliente.fcr_faturaisvc  Fatura: %%nr_fat.fcr_faturaisvc  Parcela: %%nr_parcela.fcr_faturaisvc", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		;
		DT_LIQ.FCR_FATURAISVC = DT_LIQ.FGR_LIQSVC
		NR_SEQLIQ.FCR_FATURAISVC = NR_SEQLIQ.FGR_LIQSVC
		VL_PAGO.FCR_FATURAISVC = vVlLiquido
		VL_LIQUIDO.FCR_FATURAISVC = vVlLiquido
		VL_DESCONTO.FCR_FATURAISVC = vVlDesconto
		;Projeto 078 - Tarefa 3640 - Aloisio Gargantini - 17/08/2010
		;TP_BAIXA.FCR_FATURAISVC = 1
		if (TP_BAIXA.FCR_FATURAISVC < 1)
			TP_BAIXA.FCR_FATURAISVC = 1
		endif
		DT_BAIXA.FCR_FATURAISVC = DT_LIQ.FGR_LIQSVC
		;
		CD_OPERBAIXA.FCR_FATURAISVC = $item("CD_USUARIO", piGlobal)
		;MTF(04/10/2007) - Projeto 079, tarefa 163.
		if ($status = -11)
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fatura sendo utilizada em outro processo ou manutenção.%%^Empresa: %%cd_empresa.fcr_faturaisvc   Cliente: %%cd_cliente.fcr_faturaisvc  Fatura: %%nr_fat.fcr_faturaisvc  Parcela: %%nr_parcela.fcr_faturaisvc", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		;
		;==BY BIANCHINI[PRJ/TAREFA 186/0297] 31/10/2011==;
		if (vDsObs != "")
			vpiParams = ""
			putitem/id vpiParams, "CD_EMPRESA"   ,CD_EMPRESA.FCR_FATURAISVC
			putitem/id vpiParams, "CD_CLIENTE"   ,CD_CLIENTE.FCR_FATURAISVC
			putitem/id vpiParams, "NR_FAT"       ,NR_FAT.FCR_FATURAISVC
			putitem/id vpiParams, "NR_PARCELA"   ,NR_PARCELA.FCR_FATURAISVC
			putitem/id vpiParams, "DS_OBSERVACAO", vDsObs
			putitem/id vpiParams, "CD_COMPONENTE", $componentname
			activate "FCRSVCO001".gravaObsFatura($$gParamGlb, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
			if ($procerror)
				$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				return(-1)
			elseif ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				return(-1)
			endif
		endif
		;==

		$collhandle("FCR_FATURAISVC")->Salvar()
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		endif
	endif

	$collhandle("FGR_LIQSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	poParams = ""
	putitem/id poParams, "CD_EMPLIQ", CD_EMPLIQ.FGR_LIQSVC
	putitem/id poParams, "DT_LIQ", DT_LIQ.FGR_LIQSVC
	putitem/id poParams, "NR_SEQLIQ", NR_SEQLIQ.FGR_LIQSVC
	putitem/id poParams, "NR_SEQITEM", vNrSeqItem

	return (0)
end ;geraLiquidacaoCartao

;---------------------------------------
public operation concluiLiquidacaoCartao
;---------------------------------------
	params
		string piGlobal :IN
		string piParams :IN
		string poParams :OUT
		numeric poCdErro :OUT
		string poCtxErro :OUT
	endparams

	variables
		date vDtLiq
		string viParams, voParams, vDsLinha, vDsLstMovCC, vDsMovCC
		string vDsLstDuplicata, vDsDuplicata
		numeric vCdEmpLiq, vNrSeqLiq, vNrSeqItem, vVlLiquido, vVlDesconto
	endvariables

	vVlLiquido = $item("VL_LIQUIDO", piParams)

	vCdEmpLiq = $item("CD_EMPLIQ", piParams)
	vDtLiq = $item("DT_LIQ", piParams)
	vNrSeqLiq = $item("NR_SEQLIQ", piParams)
	vNrSeqItem = $item("NR_SEQITEM", piParams)
	vDsLstMovCC = $item("DS_LSTMOVCC", piParams)
	vDsLstDuplicata = $item("DS_LSTDUPLICATA", piParams)

	clear/e "FCR_FATURAISVC"
	clear/e "GER_EMPRESASVC"
	clear/e "F_FCR_FATURAISVC"
	clear/e "FCC_CTAPESSVC"

	clear/e "FGR_LIQSVC"
	CD_EMPLIQ.FGR_LIQSVC = vCdEmpLiq
	DT_LIQ.FGR_LIQSVC = vDtLiq
	NR_SEQLIQ.FGR_LIQSVC = vNrSeqLiq
	retrieve/e "FGR_LIQSVC"
	if ($status >= 0)
		repeat
			getitem  vDsMovCC, vDsLstMovCC, 1

			creocc "FGR_LIQITEMCRSVC", -1
			NR_SEQITEM.FGR_LIQITEMCRSVC = vNrSeqItem
			CD_OPERADOR.FGR_LIQITEMCRSVC = $item("CD_USUARIO", piGlobal)
			DT_CADASTRO.FGR_LIQITEMCRSVC = $datim
			TP_TIPOREG.FGR_LIQITEMCRSVC = 2
			TP_DOCUMENTO.FGR_LIQITEMCRSVC = 3
			NR_CTAPES.FGR_LIQITEMCRSVC = $item("NR_CTAPES", vDsMovCC)
			NR_CTAPESFCC.FGR_LIQITEMCRSVC = $item("NR_CTAPES", vDsMovCC)
			DT_MOVIMFCC.FGR_LIQITEMCRSVC = $item("DT_MOVIM", vDsMovCC)
			NR_SEQMOVFCC.FGR_LIQITEMCRSVC = $item("NR_SEQMOV", vDsMovCC)

			vNrSeqItem = vNrSeqItem + 1
			delitem vDsLstMovCC, 1
		until (vDsLstMovCC = "")

		vNrSeqItem = 0
		if (vDsLstDuplicata != "")
			repeat
				getitem  vDsDuplicata, vDsLstDuplicata, 1
				vNrSeqItem = vNrSeqItem + 1

				creocc "FGR_LIQITEMCCSVC", -1
				NR_SEQITEM.FGR_LIQITEMCCSVC = vNrSeqItem
				CD_OPERADOR.FGR_LIQITEMCCSVC = $item("CD_USUARIO", piGlobal)
				DT_CADASTRO.FGR_LIQITEMCCSVC = $datim
				CD_EMPRESADUP.FGR_LIQITEMCCSVC = $item("CD_EMPRESA", vDsDuplicata)
				CD_FORNECDUP.FGR_LIQITEMCCSVC = $item("CD_FORNECEDOR", vDsDuplicata)
				NR_DUPLICATADUP.FGR_LIQITEMCCSVC = $item("NR_DUPLICATA", vDsDuplicata)
				NR_PARCELADUP.FGR_LIQITEMCCSVC = $item("NR_PARCELA", vDsDuplicata)

				delitem vDsLstDuplicata, 1
			until (vDsLstDuplicata = "")
		endif
	endif

	VL_TOTAL.FGR_LIQSVC = vVlLiquido
	$collhandle("FGR_LIQSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	return(0)
end ;concluiLiquidacaoCartao