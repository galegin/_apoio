entry getParam
	params
		numeric piCdEmpresa : IN
		string piDsOperacao : IN
	endparams

	variables
		string viParams, voParams
	endvariables

	if (piCdEmpresa = 0)
		piCdEmpresa = $item("CD_EMPRESA", $xlpg$)
	endif

	viParams = ""
	putitem viParams, -1, "TP_COMISSAO_REPRE"
	;Luiz Carlos Paulek - 15/12/2006 - 
	putitem viParams, -1, "CD_TIPOCLASS_COMIS"
	;MTF(30/03/2007) - Projeto 078, tarefa 277.
	putitem viParams, -1, "CD_EMPPADRAO_COMIS"
	;Rodrigo(30/09/2009) - Projeto 156 Tarefa 18
	putitem viParams, -1, "IN_COMISSAO_REPRE_PROD"
	;
	putitem viParams, -1, "IN_ZERA_REPRE_COMIS"
	activate "ADMSVCO001".GetParamEmpresa(piCdEmpresa, viParams, voParams, $xCdErro$, $xCtxerro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		return(-1)
	elseif ($xCdErro$)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%$item("DESCRICAO", $xCtxErro$)", "ADICIONAL=Operação->PEDSVCO001.%%piDsOperacao")
		return(-1)
	endif
	$tpComissaoRepre$ = $item("TP_COMISSAO_REPRE", voParams)
	;Luiz Carlos Paulek - 15/12/2006 - Proj.78 - Tarefa 103
	$cdTipoClassComis$ = $item("CD_TIPOCLASS_COMIS", voParams)
	;Luiz Carlos Paulek - 15/12/2006 - Proj.78 - Tarefa 103
	;MTF(30/03/2007) - Projeto 078, tarefa 277.
	$cdemppadraocomis$ = $item("CD_EMPPADRAO_COMIS", voParams)
	;->Rodrigo(30/09/2009) - Projeto 156 Tarefa 18
	$inComissaoRepreProd$ = $item("IN_COMISSAO_REPRE_PROD", voParams)
	;<-Rodrigo(30/09/2009) - Projeto 156 Tarefa 18
	$inZeraRepreComis$ = $item("IN_ZERA_REPRE_COMIS", voParams)
	return(0)
end

;-----------------------------------------------------;
entry calcularTotalComissao                ;;-> Rodrigo - PRJ 156 TAR 18 - 30/9/2009
;-----------------------------------------------------;
; MTF    : 20/09/2007         Projeto 078, tarefa 811 ;
; Funcao : Somar total de comissao de um comissionado ;
;          caso haja mais de uma comissao p/ o mesmo  ;
;          comissionado.                              ;
; Chamada: operation - calculaComissaoGuia()          ;
;          operation - calculaComissaoRepre()         ;
;-----------------------------------------------------;
;
	params
		boolean piInComissaoRepre  :IN
		string  piDsLstComissao    :INOUT
		string  piVlFatura		   :IN
		numeric piPrReducao		   :IN
	endparams

	variables
		string  vLstComissaoRet, vDsRegistro
		numeric vCdComissionado, vVlCalc
	endvariables
	
;	vLstComissao    = $item("LST_COMISSAO", piParams)
	vLstComissaoRet = ""
	clear/e "TMP_NR09SVC"
	if (piDsLstComissao != "")
		repeat
			getitem vDsRegistro, piDsLstComissao, 1
			
			if ($item("CD_PESCOMIS", vDsRegistro) != "")
				creocc "TMP_NR09SVC", -1
				nr_geral.tmp_nr09svc = $item("CD_PESCOMIS", vDsRegistro)
				retrieve/o "TMP_NR09SVC"
				if ($status = 4)
					retrieve/x "TMP_NR09SVC"
				endif
				cd_tipocomis.tmp_nr09svc   = $item("CD_TIPOCOMIS", vDsRegistro)
				pr_comissaofat.tmp_nr09svc = pr_comissaofat.tmp_nr09svc + $item("PR_COMISSAOFAT", vDsRegistro)
				pr_comissaorec.tmp_nr09svc = pr_comissaorec.tmp_nr09svc + $item("PR_COMISSAOREC", vDsRegistro)
				vl_comissaofat.tmp_nr09svc = vl_comissaofat.tmp_nr09svc + $item("VL_COMISSAOFAT", vDsRegistro)
				vl_comissaorec.tmp_nr09svc = vl_comissaorec.tmp_nr09svc + $item("VL_COMISSAOREC", vDsRegistro)
				cd_tipoclass.tmp_nr09svc   = $item("CD_TIPOCLASS", vDsRegistro)
				cd_class.tmp_nr09svc       = $item("CD_CLASS", vDsRegistro)
			endif
			
			delitem piDsLstComissao, 1
		until(piDsLstComissao = "")
	endif
	
	if (!$empty("TMP_NR09SVC"))
		setocc "TMP_NR09SVC", 1
		while ($status >= 0)
			
			if(piInComissaoRepre = <TRUE> & piPrReducao != 0)
				PR_COMISSAOFAT.TMP_NR09SVC = PR_COMISSAOFAT.TMP_NR09SVC * piPrReducao
				vVlCalc = piVlFatura * PR_COMISSAOFAT.TMP_NR09SVC / 100
				VL_COMISSAOFAT.TMP_NR09SVC = vVlCalc[round, 2]

				PR_COMISSAOREC.TMP_NR09SVC = PR_COMISSAOREC.TMP_NR09SVC * piPrReducao
				vVlCalc = piVlFatura * PR_COMISSAOREC.TMP_NR09SVC / 100
				VL_COMISSAOREC.TMP_NR09SVC = vVlCalc[round, 2]
			endif

			vDsRegistro = ""
			putitem/id vDsRegistro,     "CD_PESCOMIS",    nr_geral.tmp_nr09svc
			putitem/id vDsRegistro,     "CD_TIPOCOMIS",   cd_tipocomis.tmp_nr09svc
			putitem/id vDsRegistro,     "PR_COMISSAOFAT", pr_comissaofat.tmp_nr09svc
			putitem/id vDsRegistro,     "PR_COMISSAOREC", pr_comissaorec.tmp_nr09svc
			putitem/id vDsRegistro,     "VL_COMISSAOFAT", vl_comissaofat.tmp_nr09svc
			putitem/id vDsRegistro,     "VL_COMISSAOREC", vl_comissaorec.tmp_nr09svc
			putitem/id vDsRegistro,     "CD_TIPOCLASS",   cd_tipoclass.tmp_nr09svc
			putitem/id vDsRegistro,     "CD_CLASS",       cd_class.tmp_nr09svc
			putitem    vLstComissaoRet, -1,               vDsRegistro
		
			setocc "TMP_NR09SVC", $curocc(TMP_NR09SVC) + 1
		endwhile
	endif
	piDsLstComissao = vLstComissaoRet
;	putitem/id piDsLstComissao, "LST_COMISSAO", vLstComissaoRet
	;<- Rodrigo - PRJ 156 TAR 18 - 30/9/2009
	return(0)
End ; calcularTotalComissao.

;---------------------------
entry buscaItemContrato
;---------------------------
; DIONE |094/1786| 16/05/11|
;---------------------------

	params
		numeric piCdEmpTransacao : IN
		date piDtTransacao : IN
		numeric piNrTransacao : IN
		Numeric poNrItemContrato : OUT
	endparams

	clear/e "TRA_TRANSAGRUSVC"
	CD_EMPRESA.TRA_TRANSAGRUSVC/init   = piCdEmpTransacao
	NR_TRANSACAO.TRA_TRANSAGRUSVC/init = piNrTransacao
	DT_TRANSACAO.TRA_TRANSAGRUSVC/init = piDtTransacao
	retrieve/e "TRA_TRANSAGRUSVC"
	if($status >= 0)
		setocc "TRA_TRANSAGRUSVC", 1

		clear/e "IMB_CONTRATOTSVC"
		CD_EMPTRANSACAO.IMB_CONTRATOTSVC/init = CD_EMPRESAORI.TRA_TRANSAGRUSVC
		NR_TRANSACAO.IMB_CONTRATOTSVC/init    = NR_TRANSACAOORI.TRA_TRANSAGRUSVC
		DT_TRANSACAO.IMB_CONTRATOTSVC/init    = DT_TRANSACAOORI.TRA_TRANSAGRUSVC
		retrieve/e "IMB_CONTRATOTSVC"
		if($status >= 0)
			poNrItemContrato = NR_SEQITEM.IMB_CONTRATOTSVC
		endif
	endif

	return(0)
End ; buscaItemContrato

;-----------------------------------
public operation calculaComissaoGuia
;-----------------------------------
	params
		string  $xlpg$      :IN
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		string viParams, voParams, vDsRegistro, vDsLstTransacao
		string vDsLstComissionado, vDsLstComissao
		numeric vCdEmpresa, vNrTransacao, vCdGuia, vVlFatura, vTpDocumento, vCdTipoComis
		numeric vVlCalc, vPrComissaoFat, vPrComissaoRec, vVlComissaoFat, vVlComissaoRec
		date vDtTransacao
		boolean vInFat, vInRec
	endvariables


	vDsLstTransacao = $item("DS_LSTTRANSACAO", piParams)
	vVlFatura = $item("VL_FATURA", piParams)
	vTpDocumento = $item("TP_DOCUMENTO", piParams)

	if (vDsLstTransacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Lista de transação não informada!", "ADICIONAL=Operação->COMSVCO002.calculaComissaoGuia")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if (vVlFatura = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Valor da fatura nãp informado!", "ADICIONAL=Operação->COMSVCO002.calculaComissaoGuia")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if (vTpDocumento = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Tipo de documento não informado!", "ADICIONAL=Operação->COMSVCO002.calculaComissaoGuia")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	call getParam($item("CD_EMPRESA", $xlpg$), "calculaComissaoGuia")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	clear/e "TRA_TRANSACAOSVC"
	vCdGuia = 0
	
	repeat
		getitem vDsRegistro, vDsLstTransacao, 1
		vCdEmpresa = $item("CD_EMPRESA", vDsRegistro)
		vNrTransacao = $item("NR_TRANSACAO", vDsRegistro)
		vDtTransacao = $item("DT_TRANSACAO", vDsRegistro)
		
		if (vCdEmpresa = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->COMSVCO002.calculaComissaoGuia")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		if (vNrTransacao = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número da transação não informado!", "ADICIONAL=Operação->COMSVCO002.calculaComissaoGuia")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		if (vDtTransacao = "")
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data transação não informada!", "ADICIONAL=Operação->COMSVCO002.calculaComissaoGuia")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		
		creocc "TRA_TRANSACAOSVC", -1
		CD_EMPRESA.TRA_TRANSACAOSVC/init = vCdEmpresa
		NR_TRANSACAO.TRA_TRANSACAOSVC/init = vNrTransacao
		DT_TRANSACAO.TRA_TRANSACAOSVC/init = vDtTransacao
		retrieve/o "TRA_TRANSACAOSVC"
		if ($status = -7)
			retrieve/x "TRA_TRANSACAOSVC"
		elseif ($status = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->COMSVCO002.calculaComissaoGuia")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif  
	
		if ($curocc("TRA_TRANSACAOSVC") = 1)
			vCdGuia = CD_GUIA.TRA_TRANSACAOSVC
		else
			if (CD_GUIA.TRA_TRANSACAOSVC != vCdGuia)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Existem guias diferentes na lista de transações!", "ADICIONAL=Operação->COMSVCO002.calculaComissaoGuia")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
		endif
		
		delitem vDsLstTransacao, 1
	until (vDsLstTransacao = "")

	if (vCdGuia = 0)
		exit(0)
	endif

	viParams = ""
	putitem/id viParams, "CD_PESSOA", vCdGuia
	activate "COMSVCO001".buscaComissionado($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
	if ($procerror)       
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif	
	vDsLstComissao = ""
	vDsLstComissionado = $item("DS_LSTCOMISSIONADO", voParams)

	if (vDsLstComissionado != "")
		repeat
			getitem vDsRegistro, vDsLstComissionado, 1
			vPrComissaoFat = $item("PR_COMISSAOFAT", vDsRegistro)
			vPrComissaoRec = $item("PR_COMISSAOREC", vDsRegistro)
			vCdTipoComis = $item("CD_TIPOCOMIS", vDsRegistro)
			vInFat = <TRUE>
			vInRec = <TRUE>
			if (vCdTipoComis > 0)
				clear/e "COM_DOCTIPOCOSVC"
				CD_TIPOCOMIS.COM_DOCTIPOCOSVC/init = vCdTipoComis
				TP_DOCUMENTO.COM_DOCTIPOCOSVC/init = vTpDocumento
				retrieve/e "COM_DOCTIPOCOSVC"
				if ($status >= 0)
					if (IN_AGRUPAPERC.COM_DOCTIPOCOSVC = <TRUE>)
						vPrComissaoFat = vPrComissaoFat + vPrComissaoRec
						vPrComissaoRec = vPrComissaoFat

						putitem/id vDsRegistro, "PR_COMISSAOFAT", vPrComissaoFat
						putitem/id vDsRegistro, "PR_COMISSAOREC", vPrComissaoRec
					endif

					if (IN_FATURAMENTO.COM_DOCTIPOCOSVC = <FALSE>)
						vInFat = <FALSE>
						putitem/id vDsRegistro, "PR_COMISSAOFAT", 0
					endif
					if (IN_RECEBIMENTO.COM_DOCTIPOCOSVC = <FALSE>)
						vInRec = <FALSE>
						putitem/id vDsRegistro, "PR_COMISSAOREC", 0
					endif
				endif
			endif
			if (vInFat = <TRUE>)
				vVlCalc = vVlFatura * vPrComissaoFat / 100
				vVlComissaoFat = vVlCalc[round, 2]
				putitem/id vDsRegistro, "VL_COMISSAOFAT", vVlComissaoFat	
			endif
			if (vInRec = <TRUE>)
				vVlCalc = vVlFatura * vPrComissaoRec / 100
				vVlComissaoRec = vVlCalc[round, 2]
				putitem/id vDsRegistro, "VL_COMISSAOREC", vVlComissaoRec
			endif				
			putitem vDsLstComissao, -1, vDsRegistro
			delitem vDsLstComissionado, 1
		until (vDsLstComissionado = "")
	endif

	;MTF(20/09/2007) - Projeto 078, tarefa 811.
;	viParams = ""
;	putitem/id viParams, "LST_COMISSAO", vDsLstComissao
;	$instancehandle->calcularTotalComissao($xLpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
;	if ($procerror)
;		$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL= / COMSVCO002.calculaComissaoGuia() chamando COMSVCO002.calcularTotalComissao()")
;		poCdErro  = $xCdErro$
;		poCtxErro = $xCtxErro$
;		return(-1)
;	elseif ($status < 0)
;		$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL= / COMSVCO002.calculaComissaoGuia() chamando COMSVCO002.calcularTotalComissao()")
;		poCdErro  = $xCdErro$
;		poCtxErro = $xCtxErro$
;		return(-1)
;	endif
;	vDsLstComissao = $item("LST_COMISSAO", voParams)
	;

;->Rodrigo - 01/10/2009 - PRJ 156 TAR 18

;	call calcularTotalComissao($inComissaoRepreProd$, vDsLstComissao, vVlFatura, vPrReducao)
	$inComissaoRepreProd$ = <FALSE>
	call calcularTotalComissao($inComissaoRepreProd$, vDsLstComissao, "", "")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
;<-Rodrigo - 01/10/2009 - PRJ 156 TAR 18
	
	poParams = ""
	putitem/id poParams, "DS_LSTCOMISSAO", vDsLstComissao

	exit(0)
end

;-------------------------------------
public operation calculaComissaoTransf
;-------------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		numeric vCdEmpresa, vCdCliente, vNrFat, vNrParcela, vVlFatura, vPrComissao
		string vDsLstFatura, vLstFatura, vDsFatura, vpiParams, vpoParams
	endvariables

	vCdEmpresa = $item("CD_EMPRESA", piParams)
	vCdCliente = $item("CD_CLIENTE", piParams)
	vNrFat = $item("NR_FAT", piParams)
	vNrParcela = $item("NR_PARCELA", piParams)
	vDsLstFatura = $item("DS_LSTFATURA", piParams)

	if (vCdEmpresa = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa da fatura não informada!", "ADICIONAL=Operação->COMSVCO002.calculaComisTransf")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if (vCdCliente = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Cliente da fatura não informada!", "ADICIONAL=Operação->COMSVCO002.calculaComisTransf")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if (vNrFat = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número da fatura não informada!", "ADICIONAL=Operação->COMSVCO002.calculaComisTransf")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if (vNrParcela = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Parcela da fatura não informada!", "ADICIONAL=Operação->COMSVCO002.calculaComisTransf")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if (vDsLstFatura = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Lista de fatura não informada!", "ADICIONAL=Operação->COMSVCO002.calculaComisTransf")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	call getParam($item("CD_EMPRESA", $xlpg$), "calculaComissaoTransf")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	clear/e "FCR_FATURAISVC"
	CD_EMPRESA.FCR_FATURAISVC = vCdEmpresa
	CD_CLIENTE.FCR_FATURAISVC = vCdCliente
	NR_FAT.FCR_FATURAISVC = vNrFat
	NR_PARCELA.FCR_FATURAISVC = vNrParcela
	retrieve/e "FCR_FATURAISVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Fatura não encontrada!", "ADICIONAL=Operação->COMSVCO002.calculaComisTransf")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	else
		setocc "FCR_COMISSAOSVC", 1
		while ($status >= 0)
			vPrComissao = PR_COMISSAOREC.FCR_COMISSAOSVC

			vLstFatura = vDsLstFatura
			repeat
				getitem vDsFatura, vLstFatura
				vCdEmpresa = $item("CD_EMPRESA", vDsFatura)
				vCdCliente = $item("CD_CLIENTE", vDsFatura)
				vNrFat = $item("NR_FAT", vDsFatura)
				vNrParcela = $item("NR_PARCELA", vDsFatura)
				vVlFatura = $item("VL_FATURA", vDsFatura)

				creocc "F_FCR_COMISSASVC", -1
				CD_EMPRESA.F_FCR_COMISSASVC = vCdEmpresa
				CD_CLIENTE.F_FCR_COMISSASVC = vCdCliente
				NR_FATURA.F_FCR_COMISSASVC = vNrFat
				NR_PARCELA.F_FCR_COMISSASVC = vNrParcela
				CD_PESCOMIS.F_FCR_COMISSASVC = CD_PESCOMIS.FCR_COMISSAOSVC
				retrieve/o "F_FCR_COMISSASVC"
				if ($status = -7)
					retrieve/x "F_FCR_COMISSASVC"
				endif

				PR_COMISSAOREC.F_FCR_COMISSASVC = vPrComissao
				VL_COMISSAOREC.F_FCR_COMISSASVC = vVlFatura * vPrComissao / 100
				PR_COMISSAOREC.F_FCR_COMISSASVC = 0
				VL_COMISSAOREC.F_FCR_COMISSASVC = 0
				IN_RECPAGO.F_FCR_COMISSASVC = <FALSE>
				IN_FATPAGO.F_FCR_COMISSASVC = <FALSE>
				CD_TIPOCOMIS.F_FCR_COMISSASVC = CD_TIPOCOMIS.FCR_COMISSAOSVC
				CD_OPERADOR.F_FCR_COMISSASVC = $item("CD_USUARIO", $xlpg$)
				DT_CADASTRO.F_FCR_COMISSASVC = $datim
				
				;MTF(01/08/2007) - Projeto 078, tarefa 688.
				vpiParams = ""
				putlistitems/occ vpiParams, "F_FCR_COMISSASVC"
				activate "FCRSVCO001".gravaComissaoFatura($xLpg$, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
				if ($procerror)
					$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=  / COMSVCO002.calculaComissaoTransf() chamando FCRSVCO001.gravaComissaoFatura()")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				elseif ($status < 0)
					$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=  / COMSVCO002.calculaComissaoTransf() chamando FCRSVCO001.gravaComissaoFatura()")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
				;
				
				delitem vLstFatura, 1
			until (vLstFatura = "")

			setocc "FCR_COMISSAOSVC", $curocc("FCR_COMISSAOSVC") + 1
		endwhile
		
		;MTF(01/08/2007) - Projeto 078, tarefa 688.
		;$collhandle("F_FCR_COMISSASVC")->Salvar()
		;if ($procerror)
		;	$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		;	poCdErro = $xCdErro$
		;	poCtxErro = $xCtxErro$
		;	exit (-1)
		;elseif ($status < 0)
		;	$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		;	poCdErro = $xCdErro$
		;	poCtxErro = $xCtxErro$
		;	exit (-1)
		;endif
		;
	endif

	exit(0)
end

;------------------------------------
public operation calculaComissaoRepre
;------------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		string viParams, voParams, vDsRegistro, vDsLstTransacao
		string vDsLstComissionado, vDsLstComissao, vCdClass
		numeric vCdEmpresa, vNrTransacao, vCdRepresentante, vVlFatura, vTpDocumento, vCdTipoComis, vCdTipoClass
		numeric vVlCalc, vPrComissaoFat, vPrComissaoRec, vVlComissaoFat, vVlComissaoRec, vCdPesComis
		date vDtTransacao
		boolean vInFat, vInRec, vInTraSemPedido, vInTraSemPed
		numeric vVlComissFatItem, vVlComissRecItem, vVlTotalItem, vVlTotProduto, vVlTotTransacao, vPrReducao
	endvariables

	vDsLstTransacao = $item("DS_LSTTRANSACAO" , piParams)
	vVlFatura = $item("VL_FATURA", piParams)
	vTpDocumento = $item("TP_DOCUMENTO", piParams)

	if (vDsLstTransacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Lista de transação não informada!", "ADICIONAL=Operação->COMSVCO002.calculaComissaoRepre")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if (vVlFatura = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Valor da fatura não informado!", "ADICIONAL=Operação->COMSVCO002.calculaComissaoRepre")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if (vTpDocumento = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Tipo de documento não informado!", "ADICIONAL=Operação->COMSVCO002.calculaComissaoRepre")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	call getParam($item("CD_EMPRESA", $xlpg$), "calculaComissaoRepre")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	clear/e "TRA_TRANSACAOSVC"
	vCdRepresentante = 0
	vInTraSemPedido  = <FALSE>
	
	repeat
		getitem vDsRegistro, vDsLstTransacao, 1
		vCdEmpresa = $item("CD_EMPRESA", vDsRegistro)
		vNrTransacao = $item("NR_TRANSACAO" , vDsRegistro)
		vDtTransacao = $item("DT_TRANSACAO" , vDsRegistro)
		
		if (vCdEmpresa = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->COMSVCO002.calculaComissaoRepre")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		
		if (vNrTransacao = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número da transação não informado!", "ADICIONAL=Operação->COMSVCO002.calculaComissaoRepre")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		
		if (vDtTransacao = "")
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data transação não informada!", "ADICIONAL=Operação->COMSVCO002.calculaComissaoRepre")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		
		creocc "TRA_TRANSACAOSVC", -1
		CD_EMPRESA.TRA_TRANSACAOSVC/init = vCdEmpresa
		NR_TRANSACAO.TRA_TRANSACAOSVC/init = vNrTransacao
		DT_TRANSACAO.TRA_TRANSACAOSVC/init = vDtTransacao
		retrieve/o "TRA_TRANSACAOSVC"
		if ($status = -7)
			retrieve/x "TRA_TRANSACAOSVC"
		elseif ($status = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->COMSVCO002.calculaComissaoRepre")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif  

		clear/e "PED_PEDIDOTRASVC"
		CD_EMPTRANSACAO.PED_PEDIDOTRASVC = vCdEmpresa
		NR_TRANSACAO.PED_PEDIDOTRASVC = vNrTransacao
		DT_TRANSACAO.PED_PEDIDOTRASVC = vDtTransacao
		retrieve/e "PED_PEDIDOTRASVC"
		if ($status >= 0)
			creocc "PED_PEDIDOCSVC", -1
			CD_EMPRESA.PED_PEDIDOCSVC = CD_EMPPEDIDO.PED_PEDIDOTRASVC
			CD_PEDIDO.PED_PEDIDOCSVC = CD_PEDIDO.PED_PEDIDOTRASVC
			retrieve/o "PED_PEDIDOCSVC"
			if ($status = -7)
				retrieve/x "PED_PEDIDOCSVC"
			elseif ($status = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Pedido %%CD_PEDIDO.PED_PEDIDOTRASVC não cadastrado!", "ADICIONAL=Operação->COMSVCO002.calculaComissaoRepre")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
		else
			vInTraSemPed = <FALSE>
			
			clear/e "TRA_TRANSAGRUSVC"
			CD_EMPRESA.TRA_TRANSAGRUSVC = vCdEmpresa
			NR_TRANSACAO.TRA_TRANSAGRUSVC = vNrTransacao
			DT_TRANSACAO.TRA_TRANSAGRUSVC = vDtTransacao
			retrieve/e "TRA_TRANSAGRUSVC"	
			if ($status >= 0)
				clear/e "PED_PEDIDOTRASVC"
				CD_EMPTRANSACAO.PED_PEDIDOTRASVC = CD_EMPRESAORI.TRA_TRANSAGRUSVC
				NR_TRANSACAO.PED_PEDIDOTRASVC = NR_TRANSACAOORI.TRA_TRANSAGRUSVC
				DT_TRANSACAO.PED_PEDIDOTRASVC = DT_TRANSACAOORI.TRA_TRANSAGRUSVC
				retrieve/e "PED_PEDIDOTRASVC"
				if ($status >= 0)
					creocc "PED_PEDIDOCSVC", -1
					CD_EMPRESA.PED_PEDIDOCSVC = CD_EMPPEDIDO.PED_PEDIDOTRASVC
					CD_PEDIDO.PED_PEDIDOCSVC = CD_PEDIDO.PED_PEDIDOTRASVC
					retrieve/o "PED_PEDIDOCSVC"
					if ($status = -7)
						retrieve/x "PED_PEDIDOCSVC"
					elseif ($status = 0)
						$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Pedido %%CD_PEDIDO.PED_PEDIDOTRASVC agrupado não cadastrado!", "ADICIONAL=Operação->COMSVCO002.calculaComissaoRepre")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						exit(-1)
					endif
				else
					vInTraSemPed = <TRUE>
				endif
			else
				vInTraSemPed = <TRUE>
			endif
			
			if (vInTraSemPed = <TRUE>)
				clear/e "FIS_ITEMCONSISVC"
				CD_EMPTRA.FIS_ITEMCONSISVC/init = vCdEmpresa
				NR_TRANSACAO.FIS_ITEMCONSISVC/init = vNrTransacao
				DT_TRANSACAO.FIS_ITEMCONSISVC/init = vDtTransacao
				retrieve/e "FIS_ITEMCONSISVC"
				if ($status >= 0)
					clear/e "FIS_NFSVC"
					CD_EMPRESA.FIS_NFSVC/init = CD_EMPRESA.FIS_ITEMCONSISVC
					NR_FATURA.FIS_NFSVC/init = NR_FATURA.FIS_ITEMCONSISVC
					DT_FATURA.FIS_NFSVC/init = DT_FATURA.FIS_ITEMCONSISVC
					retrieve/e "FIS_NFSVC"
					if ($status >= 0)
						clear/e "PED_PEDIDOTRASVC"
						CD_EMPTRANSACAO.PED_PEDIDOTRASVC = CD_EMPRESAORI.FIS_NFSVC
						NR_TRANSACAO.PED_PEDIDOTRASVC = NR_TRANSACAOORI.FIS_NFSVC
						DT_TRANSACAO.PED_PEDIDOTRASVC = DT_TRANSACAOORI.FIS_NFSVC
						retrieve/e "PED_PEDIDOTRASVC"
						if ($status >= 0)
							creocc "PED_PEDIDOCSVC", -1
							CD_EMPRESA.PED_PEDIDOCSVC = CD_EMPPEDIDO.PED_PEDIDOTRASVC
							CD_PEDIDO.PED_PEDIDOCSVC = CD_PEDIDO.PED_PEDIDOTRASVC
							retrieve/o "PED_PEDIDOCSVC"
							if ($status = -7)
								retrieve/x "PED_PEDIDOCSVC"
							elseif ($status = 0)
								$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Pedido %%CD_PEDIDO.PED_PEDIDOTRASVC agrupado não cadastrado!", "ADICIONAL=Operação->COMSVCO002.calculaComissaoRepre")
								poCdErro = $xCdErro$
								poCtxErro = $xCtxErro$
								exit(-1)
							endif
						else
							vInTraSemPedido = <TRUE>
						endif
					else
						vInTraSemPedido = <TRUE>
					endif
				else
					vInTraSemPedido = <TRUE>
				endif
			endif
		endif
		
		if ($curocc("TRA_TRANSACAOSVC") = 1)
			vCdRepresentante = CD_REPRESENTANT.TRA_TRANSACAOSVC
		else
			if (CD_REPRESENTANT.TRA_TRANSACAOSVC != vCdRepresentante)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Existem representantes diferentes na lista de transações!", "ADICIONAL=Operação->COMSVCO002.calculaComissaoRepre")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
		endif
			
		vVlTotProduto = vVlTotProduto + VL_TRANSACAO.TRA_TRANSACAOSVC
		vVlTotTransacao = vVlTotTransacao + VL_TOTAL.TRA_TRANSACAOSVC

		delitem vDsLstTransacao, 1
	until (vDsLstTransacao = "")

	if (vCdRepresentante = 0)
		exit(0)
	endif

	if ($tpComissaoRepre$ != 01) & ($totocc("TRA_TRANSACAOSVC") > 1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Comissão do representante poderá ser calculado apenas para uma única transação!", "ADICIONAL=Operação->COMSVCO002.calculaComissaoRepre")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	if ($totocc("PED_PEDIDOCSVC") > 1)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Mais de um pedido vinculado a(s) transação(ões)!", "ADICIONAL=Operação->COMSVCO002.calculaComissaoRepre")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	if ($empty("PED_PEDIDOCSVC") = 0)
		if (vInTraSemPedido = <TRUE>)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Exite(m) transação(ões) com e sem pedido(s)!", "ADICIONAL=Operação->COMSVCO002.calculaComissaoRepre")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
	endif
		
	vDsLstComissao = ""

	if ($empty("PED_PEDIDOCCOSVC") = 0)
		setocc "PED_PEDIDOCCOSVC", 1
		while ($status >= 0)
			clear/e "COM_ESTRUTURASVC"
			;MTF(30/03/2007) - Projeto 078, tarefa 277.
			cd_empcomis.com_estruturasvc/init = $cdemppadraocomis$
			;
			CD_PESCOMIS.COM_ESTRUTURASVC/init = CD_PESCOMIS.PED_PEDIDOCCOSVC
			retrieve/e "COM_ESTRUTURASVC"
			if ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Pessoa %%CD_PESCOMIS.PED_PEDIDOCCOSVC não cadastrada na estrutura de comissionado!", "ADICIONAL=Operação->COMSVCO002.calculaComissaoRepre")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
			
			vDsRegistro = ""
			putitem/id vDsRegistro, "CD_TIPOCOMIS", CD_TIPOCOMIS.COM_ESTRUTURASVC
			vInFat = <TRUE>
			vInRec = <TRUE>
			
			vVlTotalItem = 0
			vVlComissFatItem = 0
			vVlComissRecItem = 0
			
			if ($inZeraRepreComis$ = 1) & (CD_CLIENTE.PED_PEDIDOCSVC = CD_REPRESENTANT.PED_PEDIDOCSVC)
				vPrComissaoFat = 0
				vPrComissaoRec = 0
			else
				clear/e "PED_PEDIDOICOSVC"
				CD_EMPRESA.PED_PEDIDOICOSVC/init = CD_EMPRESA.PED_PEDIDOCCOSVC
				CD_PEDIDO.PED_PEDIDOICOSVC/init = CD_PEDIDO.PED_PEDIDOCCOSVC
				retrieve/e "PED_PEDIDOICOSVC"
				if ($status >= 0)
					setocc "TRA_TRANSACAOSVC", 1
					while ($status >= 0)
						if ($empty("TRA_TRANSITEMSVC") = 0)
							setocc "TRA_TRANSITEMSVC", 1
							while ($status >= 0)
								clear/e "PED_PEDIDOICOSVC"
								CD_EMPRESA.PED_PEDIDOICOSVC/init = CD_EMPRESA.PED_PEDIDOCCOSVC
								CD_PEDIDO.PED_PEDIDOICOSVC/init = CD_PEDIDO.PED_PEDIDOCCOSVC
								CD_PRODUTO.PED_PEDIDOICOSVC/init = CD_PRODUTO.TRA_TRANSITEMSVC
								CD_PESCOMIS.PED_PEDIDOICOSVC/init = CD_PESCOMIS.PED_PEDIDOCCOSVC
								TP_COMISSIONADO.PED_PEDIDOICOSVC/init = TP_COMISSIONADO.PED_PEDIDOICOSVC
								retrieve/e "PED_PEDIDOICOSVC"
								if ($status >= 0)
									vVlComissFatItem = vVlComissFatItem + (VL_TOTALLIQUIDO.TRA_TRANSITEMSVC * PR_COMISSAOFAT.PED_PEDIDOICOSVC / 100)
									vVlComissRecItem = vVlComissRecItem + (VL_TOTALLIQUIDO.TRA_TRANSITEMSVC * PR_COMISSAOREC.PED_PEDIDOICOSVC / 100)
								else
									vVlComissFatItem = vVlComissFatItem + (VL_TOTALLIQUIDO.TRA_TRANSITEMSVC * PR_COMISSAOFAT.PED_PEDIDOCCOSVC / 100)
									vVlComissRecItem = vVlComissRecItem + (VL_TOTALLIQUIDO.TRA_TRANSITEMSVC * PR_COMISSAOREC.PED_PEDIDOCCOSVC / 100)
								endif
								
								vVlTotalItem = vVlTotalItem + VL_TOTALLIQUIDO.TRA_TRANSITEMSVC
								
								setocc "TRA_TRANSITEMSVC", $curocc("TRA_TRANSITEMSVC") + 1
							endwhile
						endif
						
						setocc "TRA_TRANSACAOSVC", $curocc("TRA_TRANSACAOSVC") + 1
					endwhile
					
					vPrComissaoFat = vVlComissFatItem / vVlTotalItem * 100
					vPrComissaoRec = vVlComissRecItem / vVlTotalItem * 100
				else
					vPrComissaoFat = PR_COMISSAOFAT.PED_PEDIDOCCOSVC
					vPrComissaoRec = PR_COMISSAOREC.PED_PEDIDOCCOSVC
				endif
			endif
			
			putitem/id vDsRegistro, "CD_PESCOMIS", CD_PESCOMIS.PED_PEDIDOCCOSVC

			if (CD_TIPOCOMIS.COM_ESTRUTURASVC > 0)
				clear/e "COM_DOCTIPOCOSVC"
				CD_TIPOCOMIS.COM_DOCTIPOCOSVC/init = CD_TIPOCOMIS.COM_ESTRUTURASVC
				TP_DOCUMENTO.COM_DOCTIPOCOSVC/init = vTpDocumento
				retrieve/e "COM_DOCTIPOCOSVC"
				if ($status >= 0)
					if (IN_AGRUPAPERC.COM_DOCTIPOCOSVC = <TRUE>)
						vPrComissaoFat = vPrComissaoFat + vPrComissaoRec
						vPrComissaoRec = vPrComissaoFat
					endif

					if (IN_FATURAMENTO.COM_DOCTIPOCOSVC = <FALSE>)
						vInFat = <FALSE>
						putitem/id vDsRegistro, "PR_COMISSAOFAT", 0
					endif
						if (IN_RECEBIMENTO.COM_DOCTIPOCOSVC = <FALSE>)
						vInRec = <FALSE>
						putitem/id vDsRegistro, "PR_COMISSAOREC", 0
					endif
				endif
			endif

			if (vInFat = <TRUE>)
				vVlCalc = vVlFatura * vPrComissaoFat / 100
				vVlComissaoFat = vVlCalc[round, 2]
				putitem/id vDsRegistro, "PR_COMISSAOFAT", vPrComissaoFat
				putitem/id vDsRegistro, "VL_COMISSAOFAT", vVlComissaoFat	
			endif

			if (vInRec = <TRUE>)
				vVlCalc = vVlFatura * vPrComissaoRec / 100
				vVlComissaoRec = vVlCalc[round, 2]
				putitem/id vDsRegistro, "PR_COMISSAOREC", vPrComissaoRec
				putitem/id vDsRegistro, "VL_COMISSAOREC", vVlComissaoRec
			endif	

			;Luiz Carlos Paulek - 15/12/2006 - Proj.78 - Tarefa 103
			
			vCdTipoClass = 0
			vCdClass = 0
			
			if ($cdTipoClassComis$ > 0)
				clear/e "PED_PEDIDOISVC"
				CD_EMPRESA.PED_PEDIDOISVC/init = CD_EMPRESA.PED_PEDIDOCSVC
				CD_PEDIDO.PED_PEDIDOISVC/init  = CD_PEDIDO.PED_PEDIDOCSVC
				retrieve/e "PED_PEDIDOISVC"
				if ($status >= 0)
					setocc "PED_PEDIDOISVC", 1
					clear/e "PRD_PRODUTOCLSVC"
					CD_PRODUTO.PRD_PRODUTOCLSVC/init = CD_PRODUTO.PED_PEDIDOISVC
					CD_TIPOCLAS.PRD_PRODUTOCLSVC/init = $cdTipoClassComis$
					retrieve/e "PRD_PRODUTOCLSVC"
					if ($status >= 0)
						vCdTipoClass = CD_TIPOCLAS.PRD_PRODUTOCLSVC
 						vCdClass = CD_CLASSIFICACAO.PRD_PRODUTOCLSVC
					endif
				endif
			endif
			putitem/id vDsRegistro "CD_TIPOCLASS", vCdTipoClass
			putitem/id vDsRegistro "CD_CLASS", vCdClass 
			
			;Luiz Carlos Paulek - 15/12/2006 - Proj.78 - Tarefa 103
			putitem vDsLstComissao, -1, vDsRegistro
			
			setocc "PED_PEDIDOCCOSVC", $curocc("PED_PEDIDOCCOSVC") + 1
		endwhile
	else
		viParams = ""
		putitem/id viParams, "CD_PESSOA", vCdRepresentante
		;-------------------------------------------------------
		;Marcos Rogerio - Projeto 0078 / Tarefa 0019 - 24/08/2006 - Miguel
		if (PR_COMISSAOFAT.PED_PEDIDOCSVC > 0 | PR_COMISSAOREC.PED_PEDIDOCSVC > 0)
			putitem/id viParams, "IN_OBRIGATORIO", <TRUE>
		endif
		;-------------------------------------------------------
		activate "COMSVCO001".buscaComissionado($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
		if ($procerror)       
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif	

		vDsLstComissionado = $item("DS_LSTCOMISSIONADO", voParams)

		if (vDsLstComissionado != "")
			repeat
				getitem vDsRegistro, vDsLstComissionado, 1
;Busch78/396

				if ($inZeraRepreComis$ = 1)
					if(CD_PESSOA.TRA_TRANSACAOSVC= CD_REPRESENTANT.TRA_TRANSACAOSVC)
						vPrComissaoFat = 0
						vPrComissaoRec = 0
					else
						vPrComissaoFat = $item("PR_COMISSAOFAT", vDsRegistro)
						vPrComissaoRec = $item("PR_COMISSAOREC", vDsRegistro)
					endif		
				else
					vPrComissaoFat = $item("PR_COMISSAOFAT", vDsRegistro)
					vPrComissaoRec = $item("PR_COMISSAOREC", vDsRegistro)
				endif
;	

				vCdTipoComis = $item("CD_TIPOCOMIS", vDsRegistro)
				vCdPesComis = $item("CD_PESCOMIS", vDsRegistro)
	
				if ($tpComissaoRepre$ = 0 | $tpComissaoRepre$ = 2) & ($empty("PED_PEDIDOCSVC") = 0)
					if (vCdRepresentante = vCdPesComis)
						if ($inZeraRepreComis$ = 1)
							if(CD_PESSOA.TRA_TRANSACAOSVC = CD_REPRESENTANT.TRA_TRANSACAOSVC)
								vPrComissaoFat = 0
								vPrComissaoRec = 0
							else
								vPrComissaoFat = PR_COMISSAOFAT.PED_PEDIDOCSVC
								vPrComissaoRec = PR_COMISSAOREC.PED_PEDIDOCSVC
							endif		
						else
							vPrComissaoFat = PR_COMISSAOFAT.PED_PEDIDOCSVC
							vPrComissaoRec = PR_COMISSAOREC.PED_PEDIDOCSVC
						endif

					endif
				endif
				vInFat = <TRUE>
				vInRec = <TRUE>
	
				if (vCdTipoComis > 0)
					clear/e "COM_DOCTIPOCOSVC"
					CD_TIPOCOMIS.COM_DOCTIPOCOSVC/init = vCdTipoComis
					TP_DOCUMENTO.COM_DOCTIPOCOSVC/init = vTpDocumento
					retrieve/e "COM_DOCTIPOCOSVC"
					if ($status >= 0)
						if (IN_AGRUPAPERC.COM_DOCTIPOCOSVC = <TRUE>)
							vPrComissaoFat = vPrComissaoFat + vPrComissaoRec
							vPrComissaoRec = vPrComissaoFat
						endif
	
						if (IN_FATURAMENTO.COM_DOCTIPOCOSVC = <FALSE>)
							vInFat = <FALSE>
							putitem/id vDsRegistro, "PR_COMISSAOFAT", 0
						endif

						if (IN_RECEBIMENTO.COM_DOCTIPOCOSVC = <FALSE>)
							vInRec = <FALSE>
							putitem/id vDsRegistro, "PR_COMISSAOREC", 0
						endif
					endif
				endif

				if (vInFat = <TRUE>)
					vVlCalc = vVlFatura * vPrComissaoFat / 100
					vVlComissaoFat = vVlCalc[round, 2]
					putitem/id vDsRegistro, "PR_COMISSAOFAT", vPrComissaoFat
					putitem/id vDsRegistro, "VL_COMISSAOFAT", vVlComissaoFat	
				endif
				if (vInRec = <TRUE>)
					vVlCalc = vVlFatura * vPrComissaoRec / 100
					vVlComissaoRec = vVlCalc[round, 2]
					putitem/id vDsRegistro, "PR_COMISSAOREC", vPrComissaoRec
					putitem/id vDsRegistro, "VL_COMISSAOREC", vVlComissaoRec
				endif
				
				;MTF(03/08/2007) - Projeto 079, tarefa 096.
				vCdTipoClass = ""
				vCdClass     = ""
				if ($cdTipoClassComis$ > 0) & (cd_pedido.ped_pedidocsvc != "")
					clear/e "PED_PEDIDOISVC"
					cd_empresa.ped_pedidoisvc/init = cd_empresa.ped_pedidocsvc
					cd_pedido.ped_pedidoisvc/init  = cd_pedido.ped_pedidocsvc
					retrieve/e "PED_PEDIDOISVC"
					if ($status >= 0)
						setocc "PED_PEDIDOISVC", 1
						clear/e "PRD_PRODUTOCLSVC"
						cd_produto.prd_produtoclsvc/init  = cd_produto.ped_pedidoisvc
						cd_tipoclas.prd_produtoclsvc/init = $cdTipoClassComis$
						retrieve/e "PRD_PRODUTOCLSVC"
						if ($status >= 0)
							vCdTipoClass = cd_tipoclas.prd_produtoclsvc
 							vCdClass     = cd_classificacao.prd_produtoclsvc
						endif
					endif
				endif
				putitem/id vDsRegistro "CD_TIPOCLASS", vCdTipoClass
				putitem/id vDsRegistro "CD_CLASS",     vCdClass 
				;
				putitem vDsLstComissao, -1, vDsRegistro
				
				delitem vDsLstComissionado, 1
			until (vDsLstComissionado = "")
		endif
	endif
	
	;MTF(20/09/2007) - Projeto 078, tarefa 811.
;	viParams = ""
;	putitem/id viParams, "LST_COMISSAO", vDsLstComissao
;	$instancehandle->calcularTotalComissao($xLpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
;	if ($procerror)
;		$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL= / COMSVCO002.calculaComissaoRepre() chamando COMSVCO002.calcularTotalComissao()")
;		poCdErro  = $xCdErro$
;		poCtxErro = $xCtxErro$
;		return(-1)
;	elseif ($status < 0)
;		$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL= / COMSVCO002.calculaComissaoRepre() chamando COMSVCO002.calcularTotalComissao()")
;		poCdErro  = $xCdErro$
;		poCtxErro = $xCtxErro$
;		return(-1)
;	endif
;	vDsLstComissao = $item("LST_COMISSAO", voParams)
	
;->Rodrigo - 30/09/2009 - PRJ 156 TAR 18
	vPrReducao = vVlTotProduto / vVlTotTransacao

	call calcularTotalComissao($inComissaoRepreProd$, vDsLstComissao, vVlFatura, vPrReducao)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
;<-Rodrigo - 30/09/2009 - PRJ 156 TAR 18

	;
	poParams = ""
	putitem/id poParams, "DS_LSTCOMISSAO", vDsLstComissao

	exit(0)
end

	;----------------------------------
public operation calculaComissaoContrato
	;----------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	variables
		numeric vCdEmpContrato, vNrSeqContrato, vNrSeqItem, vVlCalc, vVlFatura, vPrComissaoFat, vPrComissaoRec, vNrParcela 
		string vDsLstComissao, vDsRegistro, viParams, voParams
		Numeric vCdEmpTransacao, vNrTransacao
		Date vDtTransacao
	endvariables
	
	vCdEmpContrato = $item("CD_EMPCONTRATO", piParams)
	vNrSeqContrato = $item("NR_SEQCONTRATO", piParams)
	vNrSeqItem = $item("NR_SEQITEM", piParams)
	vVlFatura = $item("VL_FATURA", piParams)

	; --- DIONE |094/1786| 16/05/11
	vCdEmpTransacao = $item("CD_EMPTRANSACAO", piParams)
	vDtTransacao = $item("DT_TRANSACAO", piParams)
	vNrTransacao = $item("NR_TRANSACAO", piParams)
	if (vNrSeqItem = 0)
		call buscaItemContrato(vCdEmpTransacao, vDtTransacao, vNrTransacao, vNrSeqItem)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif
	; ---

	if (vCdEmpContrato = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa do contrato não informada!", "ADICIONAL=Operação->COMSVCO002.calculaComissaoContrato")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif    
	
	if (vNrSeqContrato = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Sequência do contrato não informada!", "ADICIONAL=Operação->COMSVCO002.calculaComissaoContrato")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vNrSeqItem = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Item de contrato não informado!", "ADICIONAL=Operação->COMSVCO002.calculaComissaoContrato")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (vVlFatura = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Valor da fatura não informado!", "ADICIONAL=Operação->COMSVCO002.calculaComissaoContrato")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	clear/e "IMB_CONTRATOSVC"
	CD_EMPRESA.IMB_CONTRATOSVC/init = vCdEmpContrato
	NR_SEQ.IMB_CONTRATOSVC/init = vNrSeqContrato
	retrieve/e "IMB_CONTRATOSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Contrato %%vNrSeqContrato não cadastrado na empresa %%vCdEmpContrato!", "ADICIONAL=Operação->COMSVCO002.calculaComissaoContrato")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	clear/e "IMB_CONTRATOISVC"
	NR_SEQITEM.IMB_CONTRATOISVC/init = vNrSeqItem
	retrieve/e "IMB_CONTRATOISVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Item de contrato %%vNrSeqItem não encontrado para o contrato %%vNrSeqContrato!", "ADICIONAL=Operação->COMSVCO002.calculaComissaoContrato")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	setocc "IMB_CONTRATOIPARSVC", -1
	vNrParcela = $totocc("IMB_CONTRATOIPARSVC")
	setocc "IMB_CONTRATOIPARSVC", 1

	if ($empty("IMB_COMISSAOSVC") = 0)

		vDsLstComissao = ""
		setocc "IMB_COMISSAOSVC", 1
		while ($status >= 0)

			if (NR_PARCELA.IMB_CONTRATOISVC >= NR_PARCELAINI.IMB_COMISSAOSVC & NR_PARCELA.IMB_CONTRATOISVC <= NR_PARCELAFIM.IMB_COMISSAOSVC)

				viParams = ""
				voParams = ""	
				putitem/id viParams, "CD_EMPRESA", CD_EMPRESA.IMB_CONTRATOISVC
				putitem/id viParams, "NR_SEQ", NR_SEQ.IMB_CONTRATOISVC
				putitem/id viParams, "NR_SEQITEM", NR_SEQITEM.IMB_CONTRATOISVC
				putitem/id viParams, "NR_SEQCOMISSAO", NR_SEQCOMISSAO.IMB_COMISSAOSVC	
				activate "SICSVCO016".validaValorComissao($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
				if ($procerror)       
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif
				vPrComissaoFat = $item("PR_COMISSAOFAT", voParams)
				vPrComissaoRec = $item("PR_COMISSAOREC", voParams)

				vDsRegistro = ""
				putitem/id vDsRegistro,"CD_PESCOMIS", CD_REPRESENTANTE.IMB_COMISSAOSVC
				putitem/id vDsRegistro,"CD_TIPOCOMIS", 1
				putitem/id vDsRegistro,"PR_COMISSAOFAT", vPrComissaoFat
				putitem/id vDsRegistro,"PR_COMISSAOREC", vPrComissaoRec
				if (VL_FATURAMENTO.IMB_COMISSAOSVC = 0)
					vVlCalc = vVlFatura * vPrComissaoFat / 100
					vVlCalc = vVlCalc[round, 2]
					vVlCalc = vVlCalc / vNrParcela
				else
					vVlCalc = VL_FATURAMENTO.IMB_COMISSAOSVC
					vVlCalc = vVlCalc / vNrParcela	
				endif
				putitem/id vDsRegistro,"VL_COMISSAOFAT", vVlCalc
				if (VL_RECEBIMENTO.IMB_COMISSAOSVC = 0)
					vVlCalc = vVlFatura * vPrComissaoRec / 100
					vVlCalc = vVlCalc[round, 2]
					vVlCalc = vVlCalc / vNrParcela
				else
					vVlCalc = VL_RECEBIMENTO.IMB_COMISSAOSVC
					vVlCalc = vVlCalc / vNrParcela
				endif
				putitem/id vDsRegistro,"VL_COMISSAOREC", vVlCalc
				putitem/id vDsRegistro,"CD_TIPOCLASS", ""
				putitem/id vDsRegistro,"CD_CLASS", ""
				putitem vDsLstComissao, -1,vDsRegistro	
			endif
		
			setocc "IMB_COMISSAOSVC", $curocc("IMB_COMISSAOSVC") + 1
		endwhile
	endif

	poParams = ""
	putitem/id poParams, "DS_LSTCOMISSAO", vDsLstComissao

	exit(0)
end;operation calculaComissaoContrato