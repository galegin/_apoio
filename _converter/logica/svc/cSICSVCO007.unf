entry getParam
	params
		numeric piCdEmpresa : IN
		numeric poCdErro :OUT
		string poCtxErro :OUT
	endparams

	variables
		string viParams, voParams
	endvariables

	if (piCdEmpresa = 0)
		$instancehandle->SetErroApl("ERRO=-1·;DESCRICAO=Empresa para busca de parâmetros não infomada!", $xCdErro$, $xCtxErro$)
		return(-1)
	endif
	
	viParams = ""
	putitem viParams, -1, "CD_TPMANUT_CXUSUARIO"
	;Projeto 078 - Tarefa 1970 - Aloisio Gargantini - 07/11/2008
	putitem viParams, -1, "TP_NOME_CXUSUARIO"
	;
	;Projeto 078 - Tarefa 3602 - Aloisio Gargantini - 09/08/2010
	putitem viParams, -1, "IN_LOG_MOV_CTAPES"
	;
	activate "ADMSVCO001".GetLstParametro(viParams, voParams, $xcderro$, $xctxerro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	$cdTpManutCxUsuario$ = $item("CD_TPMANUT_CXUSUARIO", voParams)
	;Projeto 078 - Tarefa 1970 - Aloisio Gargantini - 07/11/2008
	$tpNomeCxUsuario$ = $item("TP_NOME_CXUSUARIO", voParams)
	;
	;Projeto 078 - Tarefa 3602 - Aloisio Gargantini - 09/08/2010
	$inLogMovCtaPes$ = $item("IN_LOG_MOV_CTAPES", voParams)
	;
	viParams = ""
	putitem viParams, -1, "IN_VALIDA_USUTERM"
	putitem viParams, -1, "CD_CTAPES_CXFILIAL"
	putitem viParams, -1, "CD_CTAPES_CXMATRIZ"
	putitem viParams, -1, "IN_UTILIZA_CXFILIAL"
	activate "ADMSVCO001".GetParamEmpresa(piCdEmpresa, viParams, voParams, $xCdErro$, $xCtxErro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	$inUsuTerm$ = $item("IN_VALIDA_USUTERM", voParams)
	$cxFilial$ = $item("CD_CTAPES_CXFILIAL", voParams)
	$cxMatriz$ = $item("CD_CTAPES_CXMATRIZ", voParams)
	$inCxFilial$ = $item("IN_UTILIZA_CXFILIAL", voParams)

	return(0)
end

;-----------------------------------
public operation validaAberturaCaixa
;-----------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		string viParams, voParams, viValores
		numeric vCdEmpresa, vCdOperCx, vCdTerminal, vNrCtaPes, vCdEmpresaCC, vCxFilial, vVlAbertura, vCdCCusto, vNrSeqMovRel
		numeric vCxMatriz, vNrCtaPesFundo, vCdEmpresaFundo, vNrCtaPesAux, vCdEmpPrincipal
		boolean vInCxFilial
		date vDtAbertura
	endvariables  

	;Grava uma cópia do caixa aberto na empresa associada

	vCdEmpresa      = $item("CD_EMPRESA",      piParams)
	vCdTerminal     = $item("CD_TERMINAL",     piParams)
	vDtAbertura     = $item("DT_ABERTURA",     piParams)
	vCdOperCx       = $item("CD_OPERCX",       piParams)
	;MARTINEZ - PRJ/TAR 180/212 - 27/06/2011
	vNrCtaPesFundo  = $item("NR_CTAPESFUNDO",  piParams)
	vCdEmpresaFundo = $item("CD_EMPRESAFUNDO", piParams)
	;
	vVlAbertura     = $item("VL_ABERTURA",     piParams)
	
	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->SICSVCO007.validaAberturaCaixa")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif    
	
	if (vCdTerminal = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Terminal não informado!", "ADICIONAL=Operação->SICSVCO007.validaAberturaCaixa")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	if (vDtAbertura = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data de abertura não informada!", "ADICIONAL=Operação->SICSVCO007.validaAberturaCaixa")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	clear/e "GER_EMPRESASVC"
	CD_EMPRESA.GER_EMPRESASVC/init = vCdEmpresa
	retrieve/e "GER_EMPRESASVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa %%vCdEmpresa não cadastrada!", "ADICIONAL=Operação->SICSVCO007.validaAberturaCaixa")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	;MARTINEZ - PRJ/TAR 180/191 - 06/06/2011
	putitem $xlplemp$, -1, "TP_LANCAMENTO_FUNDO_CX"
	activate "ADMSVCO001".GetParamEmpresa($item("CD_EMPRESA", $$gParamGlb), $xlplemp$, $xlplemp$, $xcderro$, $xctxerro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "");
	elseif ($xcdErro$)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
	endif
	$tpLanctoFundoCx$ = $item("TP_LANCAMENTO_FUNDO_CX", $xlplemp$)
	;

	if (CD_CCUSTO.GER_EMPRESASVC > 0)
		vCdEmpresaCC = CD_CCUSTO.GER_EMPRESASVC
	else
		clear/e "GER_EMPRESASVC"
		CD_CCUSTO.GER_EMPRESASVC/init = vCdEmpresa
		retrieve/e "GER_EMPRESASVC"
		if ($status >= 0)
			vCdEmpresaCC = CD_EMPRESA.GER_EMPRESASVC
			vCdEmpPrincipal = vCdEmpresa
		else
			exit(0)
		endif
	endif

	;Busca a conta do operador para testar se ela esta ativa
	viParams = ""
	putitem/id viParams, "CD_EMPRESA", vCdEmpresaCC
	putitem/id viParams, "CD_TERMINAL", vCdTerminal
	activate "FCCSVCO002".buscaContaOperador($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
	if ($procerror)       
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	vNrCtaPes = $item("NR_CTAPES", voParams)

	; MFGALEGO - 21/11/2008
	if (vNrCtaPes = 0) | (vNrCtaPes = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Nenhuma conta cadastrada para o operador %%vCdOperCx na empresa %%vCdEmpresaCC%%%!", "ADICIONAL=Operação->SICSVCO007.validaAberturaCaixa")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	;

	;MARTINEZ - PRJ/TAR 180/212 - 27/06/2011 - Vai procurar em qual empresa foi lançado o valor de fundo (principal ou encargos)
	if (vNrCtaPesFundo = "") | (vCdEmpresaFundo = "")
		clear/e "FCC_CTAPESSVC"
		NR_CTAPES.FCC_CTAPESSVC/init = vNrCtaPes
		retrieve/e "FCC_CTAPESSVC"
		if ($status >= 0)
			if (VL_LIMITE.FCC_CTAPESSVC > 0)
				vNrCtaPesFundo  = vNrCtaPes
				vCdEmpresaFundo = vCdEmpresaCC
			else
				viParams = ""
				putitem/id viParams, "CD_EMPRESA", vCdEmpresa
				putitem/id viParams, "CD_TERMINAL", vCdTerminal
				activate "FCCSVCO002".buscaContaOperador($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
				if ($procerror)       
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif
	
				vNrCtaPesAux = $item("NR_CTAPES", voParams)

				clear/e "FCC_CTAPESSVC"
				NR_CTAPES.FCC_CTAPESSVC/init = vNrCtaPesAux
				retrieve/e "FCC_CTAPESSVC"
				if ($status >= 0)
					if (VL_LIMITE.FCC_CTAPESSVC > 0)
						vNrCtaPesFundo  = vNrCtaPesAux
						vCdEmpresaFundo = vCdEmpresa
					else
						vNrCtaPesFundo  = vNrCtaPes
						vCdEmpresaFundo = vCdEmpresaCC
					endif
				endif
			endif
		endif
	endif
	;

	clear/e "FCX_CAIXACSVC"
	creocc "FCX_CAIXACSVC", -1
	getlistitems/occ piParams, "FCX_CAIXACSVC"	
	CD_EMPRESA.FCX_CAIXACSVC = vCdEmpresaCC
	IN_FECHADO.FCX_CAIXACSVC = <FALSE>
	NR_CTAPES.FCX_CAIXACSVC = vNrCtaPes
	CD_OPERADOR.FCX_CAIXACSVC = $item("CD_USUARIO", $xlpg$)
	DT_CADASTRO.FCX_CAIXACSVC = $datim
	
	$collhandle("FCX_CAIXACSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	if ($tpLanctoFundoCx$ != 1) ;MARTINEZ - PRJ/TAR 180/191 - 06/06/2011 - Se for zero vai continuar lançamdo o valor de fundo na conta da empresa principal
		if (vVlAbertura > 0) ;Faz o lançamento no CC p/ abater o valor de adiantamento 
			viParams = ""
			putitem/id viParams, "CD_EMPRESA", CD_EMPRESA.FCX_CAIXACSVC
			activate "SICSVCO009".validaCentroCusto($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "") 
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
				return(-1)
			endif
		
			vCdCCusto = $item("CD_CENTROCUSTO", voParams)
			
			if (vCdCCusto != CD_EMPRESA.FCX_CAIXACSVC)
				viParams = ""
				putitem viParams, -1, "CD_CTAPES_CXFILIAL"
				;== BY BIANCHINI [PRJ/TAREFA 78/4087] 10/02/2011 ==;
				putitem viParams, -1, "CD_CTAPES_CXMATRIZ"
				putitem viParams, -1, "IN_UTILIZA_CXFILIAL"
				;==
				activate "ADMSVCO001".GetParamEmpresa(CD_EMPRESA.FCX_CAIXACSVC, viParams, voParams, $xcderro$, $xctxerro$)
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					rollback
					exit(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					rollback
					exit(-1)
				endif
			
				;== BY BIANCHINI [PRJ/TAREFA 78/4087] 10/02/2011 ==;
				vInCxFilial = $item("IN_UTILIZA_CXFILIAL", voParams)
				vCxMatriz   = $item("CD_CTAPES_CXMATRIZ",  voParams)
				vCxFilial   = $item("CD_CTAPES_CXFILIAL",  voParams)
				if (vInCxFilial = <TRUE>)
					if (vCxFilial = 0) | (vCxFilial = "")
						;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Valor incorreto no parametro CD_CTAPES_CXFILIAL", "ADICIONAL=Operação->FCXSVCO002.abreCaixa")
						$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Conta caixa filial não informada para abertura de caixa.%%^%%^Parâmetro empresa: CD_CTAPES_CXFILIAL", "")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						rollback
						exit(-1)
					endif
				else
					if (vCxMatriz = 0) | (vCxMatriz = "")
						$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Conta caixa matriz não informada para abertura de caixa.%%^%%^Parâmetro empresa: CD_CTAPES_CXMATRIZ", "")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						rollback
						exit(-1)
					endif
				endif
				;==
			
				clear/e "FCX_HISTRELSVC"
				TP_DOCUMENTO.FCX_HISTRELSVC = 3
				retrieve/e "FCX_HISTRELSVC"
				if ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Não existe histórico associado a tipo de operação dinheiro", "ADICIONAL=Operação->FCXSVCO002.abreCaixa")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					rollback
					exit(-1)
				endif
				
				;Projeto 078 - Tarefa 1675 - Aloisio Gargantini - 05/08/2008
				viParams  = ""
				viValores = ""
				voParams  = ""

				activate "FCCSVCO017".getNumMovRel($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxerro$)
				if ($procerror)       
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=Operação->FCXSVCO002.abreCaixa")
					return(-1)
				endif
				if ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=Operação->FCXSVCO002.abreCaixa")
					return(-1)
				endif
				vNrSeqMovRel = $item("NR_SEQMOVREL", voParams)
				;	

				viValores = ""
				viParams = ""
				putitem/id viParams, "CD_EMPRESA", CD_EMPRESA.FCX_CAIXACSVC
				putitem/id viParams, "NR_CTAPES", vNrCtaPes
				putitem/id viParams, "DT_MOVIMENTO", $item("DT_SISTEMA", $xlpg$)
				putitem/id viParams, "CD_HISTORICO", 856 ;ZERA SALDO DO CAIXA PARA LANCAMENTO DO VALOR DE FUNDO
				putitem/id viParams, "TP_DOCUMENTO", 3 ;3 - DINHEIRO
				putitem/id viParams, "NR_SEQHISTRELSUB", 1 ;1 - PADRAO PARA TODOS OS TIPOS DE DOCUMENTO
				putitem/id viParams, "VL_LANCTO", vVlAbertura
				putitem/id viParams, "IN_ESTORNO", <FALSE>
				putitem/id viParams, "IN_CAIXA", <FALSE>
				putitem/id viParams, "DS_DOC", ""
				putitem/id viParams, "DS_AUX", ""
				;Projeto 078 - Tarefa 1675 - Aloisio Gargantini - 05/08/2008
				if (vNrSeqMovRel > 0)
					putitem/id viParams, "NR_SEQMOVREL", vNrSeqMovRel
				endif
				;
				activate "FCCSVCO002".movimentaConta($xlpg$, viParams, viValores, voParams, $xCdErro$, $xCtxerro$)
				if ($procerror)       
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					rollback
					exit(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					rollback
					exit(-1)
				endif
			
				viValores = ""
				viParams = ""
				putitem/id viParams, "CD_EMPRESA", CD_EMPRESA.FCX_CAIXACSVC
				putitem/id viParams, "NR_CTAPES", vNrCtaPes
				putitem/id viParams, "DT_MOVIMENTO", $item("DT_SISTEMA", $xlpg$)
				putitem/id viParams, "CD_HISTORICO", 830 ;ABERTURA DE CAIXA (C)
				putitem/id viParams, "CD_TERMINAL", vCdTerminal
				putitem/id viParams, "DT_ABERTURA", vDtAbertura
				putitem/id viParams, "NR_SEQCAIXA", NR_SEQ.FCX_CAIXACSVC
				putitem/id viParams, "TP_DOCUMENTO", 3 ;3 - DINHEIRO
				putitem/id viParams, "NR_SEQHISTRELSUB", 1 ;1 - PADRAO PARA TODOS OS TIPOS DE DOCUMENTO
				putitem/id viParams, "VL_LANCTO", vVlAbertura
				putitem/id viParams, "IN_ESTORNO", <FALSE>
				putitem/id viParams, "IN_CAIXA", <TRUE>
				putitem/id viParams, "DS_DOC", ""
				putitem/id viParams, "DS_AUX", ""
				;Projeto 078 - Tarefa 1675 - Aloisio Gargantini - 05/08/2008
				if (vNrSeqMovRel > 0)
					putitem/id viParams, "NR_SEQMOVREL", vNrSeqMovRel
				endif
				;
				activate "FCCSVCO002".movimentaConta($xlpg$, viParams, viValores, voParams, $xCdErro$, $xCtxerro$)
				if ($procerror)       
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					rollback
					exit(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					rollback
					exit(-1)
				endif
			endif
		endif
	;MARTINEZ - PRJ/TAR 180/191 - 06/06/2011
	;Caso o parâmetro por empresa TP_LANCAMENTO_FUNDO_CX estiver setado como 1,
	;vai efetuar o lançamento na conta da empresa em que o valor de fundo foi lançado
	else
		if (vCdEmpPrincipal = vCdEmpresaFundo)
			exit (0)
		endif

		if (vVlAbertura > 0)
			viParams = ""
			putitem viParams, -1, "CD_CTAPES_CXFILIAL"
			putitem viParams, -1, "CD_CTAPES_CXMATRIZ"
			putitem viParams, -1, "IN_UTILIZA_CXFILIAL"
			activate "ADMSVCO001".GetParamEmpresa(vCdEmpresa, viParams, voParams, $xcderro$, $xctxerro$)
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				rollback
				exit(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				rollback
				exit(-1)
			endif

			vInCxFilial = $item("IN_UTILIZA_CXFILIAL", voParams)
			vCxMatriz   = $item("CD_CTAPES_CXMATRIZ",  voParams)
			vCxFilial   = $item("CD_CTAPES_CXFILIAL",  voParams)
			if (vInCxFilial = <TRUE>)
				if (vCxFilial = 0) | (vCxFilial = "")
					$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Conta caixa filial não informada para abertura de caixa.%%^%%^Parâmetro empresa: CD_CTAPES_CXFILIAL", "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					rollback
					exit(-1)
				endif
			else
				if (vCxMatriz = 0) | (vCxMatriz = "")
					$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Conta caixa matriz não informada para abertura de caixa.%%^%%^Parâmetro empresa: CD_CTAPES_CXMATRIZ", "")
					poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
					rollback
					exit(-1)
				endif
			endif
			
			clear/e "FCX_HISTRELSVC"
			TP_DOCUMENTO.FCX_HISTRELSVC = 3
			retrieve/e "FCX_HISTRELSVC"
			if ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Não existe histórico associado a tipo de operação dinheiro", "ADICIONAL=Operação->FCXSVCO002.abreCaixa")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				rollback
				exit(-1)
			endif

			viParams  = ""
			viValores = ""
			voParams  = ""
			activate "FCCSVCO017".getNumMovRel($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxerro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=Operação->FCXSVCO002.abreCaixa")
				return(-1)
			endif
			if ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=Operação->FCXSVCO002.abreCaixa")
				return(-1)
			endif
			vNrSeqMovRel = $item("NR_SEQMOVREL", voParams)
			;	

			viValores = ""
			viParams = ""
			putitem/id viParams, "CD_EMPRESA", vCdEmpresaFundo
			putitem/id viParams, "NR_CTAPES", vNrCtaPesFundo
			putitem/id viParams, "DT_MOVIMENTO", $item("DT_SISTEMA", $xlpg$)
			putitem/id viParams, "CD_HISTORICO", 856 ;ZERA SALDO DO CAIXA PARA LANCAMENTO DO VALOR DE FUNDO
			putitem/id viParams, "TP_DOCUMENTO", 3 ;3 - DINHEIRO
			putitem/id viParams, "NR_SEQHISTRELSUB", 1 ;1 - PADRAO PARA TODOS OS TIPOS DE DOCUMENTO
			putitem/id viParams, "VL_LANCTO", vVlAbertura
			putitem/id viParams, "IN_ESTORNO", <FALSE>
			putitem/id viParams, "IN_CAIXA", <FALSE>
			putitem/id viParams, "DS_DOC", ""
			putitem/id viParams, "DS_AUX", ""
			if (vNrSeqMovRel > 0)
				putitem/id viParams, "NR_SEQMOVREL", vNrSeqMovRel
			endif
			activate "FCCSVCO002".movimentaConta($xlpg$, viParams, viValores, voParams, $xCdErro$, $xCtxerro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				rollback
				exit(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				rollback
				exit(-1)
			endif
			
			viValores = ""
			viParams = ""
			putitem/id viParams, "CD_EMPRESA", vCdEmpresaFundo
			putitem/id viParams, "NR_CTAPES", vNrCtaPesFundo
			putitem/id viParams, "DT_MOVIMENTO", $item("DT_SISTEMA", $xlpg$)
			putitem/id viParams, "CD_HISTORICO", 830 ;ABERTURA DE CAIXA (C)
			putitem/id viParams, "CD_TERMINAL", vCdTerminal
			putitem/id viParams, "DT_ABERTURA", vDtAbertura
			putitem/id viParams, "NR_SEQCAIXA", NR_SEQ.FCX_CAIXACSVC
			putitem/id viParams, "TP_DOCUMENTO", 3 ;3 - DINHEIRO
			putitem/id viParams, "NR_SEQHISTRELSUB", 1 ;1 - PADRAO PARA TODOS OS TIPOS DE DOCUMENTO
			putitem/id viParams, "VL_LANCTO", vVlAbertura
			putitem/id viParams, "IN_ESTORNO", <FALSE>
			putitem/id viParams, "IN_CAIXA", <TRUE>
			putitem/id viParams, "DS_DOC", ""
			putitem/id viParams, "DS_AUX", ""
			if (vNrSeqMovRel > 0)
				putitem/id viParams, "NR_SEQMOVREL", vNrSeqMovRel
			endif
			activate "FCCSVCO002".movimentaConta($xlpg$, viParams, viValores, voParams, $xCdErro$, $xCtxerro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				rollback
				exit(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				rollback
				exit(-1)
			endif
		endif
	endif

	exit(0)
end

;-------------------------------------
public operation validaFechamentoCaixa
;-------------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		numeric vCdEmpresa, vNrSeq, vCdTerminal, vCdEmpresaCC
		date vDtAbertura
	endvariables  

	;Verifica se exite o caixa aberto na empresa associada

	vCdEmpresa  = $item("CD_EMPRESA", piParams)
	vCdTerminal = $item("CD_TERMINAL", piParams)
	vDtAbertura = $item("DT_ABERTURA", piParams)
	vNrSeq = $item("NR_SEQ", piParams)
	
	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->SICSVCO007.validaAberturaCaixa")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif    
	
	if (vCdTerminal = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Terminal não informado!", "ADICIONAL=Operação->SICSVCO007.validaAberturaCaixa")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	if (vDtAbertura = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data de abertura não informada!", "ADICIONAL=Operação->SICSVCO007.validaAberturaCaixa")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	if (vNrSeq = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Nr. de sequência do caixa informado!", "ADICIONAL=Operação->SICSVCO007.validaAberturaCaixa")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	clear/e "GER_EMPRESASVC"
	CD_EMPRESA.GER_EMPRESASVC/init = vCdEmpresa
	retrieve/e "GER_EMPRESASVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa %%vCdEmpresa não cadastrada!", "ADICIONAL=Operação->SICSVCO007.validaAberturaCaixa")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	if (CD_CCUSTO.GER_EMPRESASVC > 0)
		vCdEmpresaCC = CD_CCUSTO.GER_EMPRESASVC
	else
		clear/e "GER_EMPRESASVC"
		CD_CCUSTO.GER_EMPRESASVC/init = vCdEmpresa
		retrieve/e "GER_EMPRESASVC"
		if ($status >= 0)
			vCdEmpresaCC = CD_EMPRESA.GER_EMPRESASVC
		else
			exit(0)
		endif
	endif

	clear/e "FCX_CAIXACSVC"
	CD_EMPRESA.FCX_CAIXACSVC = vCdEmpresaCC
	CD_TERMINAL.FCX_CAIXACSVC = vCdTerminal
	DT_ABERTURA.FCX_CAIXACSVC = vDtAbertura
	NR_SEQ.FCX_CAIXACSVC = vNrSeq
	retrieve/e "FCX_CAIXACSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Termina %%vCdTerminal não possui caixa aberto na empresa %%vCdEmpresaCC%%!", "ADICIONAL=Operação->SICSVCO007.validaAberturaCaixa")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	else
		clear/e "FCX_CAIXAMSVC"
		CD_EMPRESA.FCX_CAIXAMSVC/init = CD_EMPRESA.FCX_CAIXACSVC
		CD_TERMINAL.FCX_CAIXAMSVC/init = CD_TERMINAL.FCX_CAIXACSVC
		DT_ABERTURA.FCX_CAIXAMSVC/init = DT_ABERTURA.FCX_CAIXACSVC
		NR_SEQ.FCX_CAIXAMSVC/init = NR_SEQ.FCX_CAIXACSVC
		retrieve/e "FCX_CAIXAMSVC"
		if ($status >= 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Caixa não pode ser encerrado. Existe movimento!", "ADICIONAL=Operação->FCXSVCO002.fechaCaixa")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
	endif

	IN_FECHADO.FCX_CAIXACSVC = <TRUE>
	CD_OPERADOR.FCX_CAIXACSVC = $item("CD_USUARIO", $xlpg$)
	DT_CADASTRO.FCX_CAIXACSVC = $datim
	
	$collhandle("FCX_CAIXACSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	exit(0)
end


;---------------------------
public operation validaCaixa
;---------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		numeric vCdEmpresa, vNrSeq, vCdTerminal, vCdEmpresaCC
		date vDtAbertura
	endvariables  

	;Verifica se exite o caixa aberto na empresa associada

	vCdEmpresa  = $item("CD_EMPRESA", piParams)
	vCdTerminal = $item("CD_TERMINAL", piParams)
	vDtAbertura = $item("DT_ABERTURA", piParams)
	vNrSeq = $item("NR_SEQ", piParams)
	
	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->SICSVCO007.validaAberturaCaixa")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif    
	
	if (vCdTerminal = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Terminal não informado!", "ADICIONAL=Operação->SICSVCO007.validaAberturaCaixa")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	if (vDtAbertura = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data de abertura não informada!", "ADICIONAL=Operação->SICSVCO007.validaAberturaCaixa")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	if (vNrSeq = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Nr. de sequência do caixa informado!", "ADICIONAL=Operação->SICSVCO007.validaAberturaCaixa")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	clear/e "GER_EMPRESASVC"
	CD_EMPRESA.GER_EMPRESASVC/init = vCdEmpresa
	retrieve/e "GER_EMPRESASVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa %%vCdEmpresa não cadastrada!", "ADICIONAL=Operação->SICSVCO007.validaAberturaCaixa")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	if (CD_CCUSTO.GER_EMPRESASVC > 0)
		vCdEmpresaCC = CD_CCUSTO.GER_EMPRESASVC
	else
		clear/e "GER_EMPRESASVC"
		CD_CCUSTO.GER_EMPRESASVC/init = vCdEmpresa
		retrieve/e "GER_EMPRESASVC"
		if ($status >= 0)
			vCdEmpresaCC = CD_EMPRESA.GER_EMPRESASVC
		else
			exit(0)
		endif
	endif

	clear/e "FCX_CAIXACSVC"
	CD_EMPRESA.FCX_CAIXACSVC/init = vCdEmpresaCC
	CD_TERMINAL.FCX_CAIXACSVC/init = vCdTerminal
	DT_ABERTURA.FCX_CAIXACSVC/init = vDtAbertura
	NR_SEQ.FCX_CAIXACSVC/init = vNrSeq
	retrieve/e "FCX_CAIXACSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Termina %%vCdTerminal não possui caixa aberto na empresa %%vCdEmpresaCC%%!", "ADICIONAL=Operação->SICSVCO007.validaAberturaCaixa")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	exit(0)
end

;-------------------------------
public operation carregaTerminal
;-------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		string vDsTerminal, vCdEmpresa
		boolean vInRetornaTerminal
	endvariables

	vCdEmpresa = $item("CD_EMPRESA", $xlpg$)
	call getParam(vCdEmpresa, $xCdErro$, $xCtxErro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")	
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	vCdEmpresa = $item("CD_EMPRESA", piParams)

	vInRetornaTerminal = $item("IN_RETORNATERMINAL", piParams)

	clear/e "FCX_CAIXACSVC"
	CD_EMPRESA.FCX_CAIXACSVC = vCdEmpresa
	IN_FECHADO.FCX_CAIXACSVC = <FALSE>
	retrieve/e "FCX_CAIXACSVC"
	if ($status >= 0)
		setocc "FCX_CAIXACSVC"
		while ($status >= 0)
			clear/e "GER_EMPRESASVC"
			CD_EMPRESA.GER_EMPRESASVC = CD_EMPRESA.FCX_CAIXACSVC
			retrieve/e "GER_EMPRESASVC"
			if ($status >= 0) & (CD_CCUSTO.GER_EMPRESASVC = "")
				clear/e "GER_TERMINALSVC"
				CD_EMPRESA.GER_TERMINALSVC = CD_EMPRESA.FCX_CAIXACSVC
				CD_TERMINAL.GER_TERMINALSVC = CD_TERMINAL.FCX_CAIXACSVC
				retrieve/e "GER_TERMINALSVC"
				if ($status >= 0)
					if ($inUsuTerm$ = 0)
						putitem/id vDsTerminal, "%%CD_TERMINAL.GER_TERMINALSVC", DS_TERMINAL.GER_TERMINALSVC
					else
						clear/e "FCX_TERMINALUSVC"
						CD_EMPRESA.FCX_TERMINALUSVC = CD_EMPRESA.GER_TERMINALSVC
						CD_TERMINAL.FCX_TERMINALUSVC = CD_TERMINAL.GER_TERMINALSVC
						retrieve/e "FCX_TERMINALUSVC"
						if ($status >= 0)
							clear/e "ADM_USUARIOSVC"
							CD_USUARIO.ADM_USUARIOSVC = CD_USUARIO.FCX_TERMINALUSVC
							retrieve/e "ADM_USUARIOSVC"
							if ($status >= 0)
								;fiuza 19/11/08 - a adriana do lojao precisou usar essa mesma rotina no TEFFP001
                                ;mas retornando o codigo do terminal.
								if (vInRetornaTerminal = <TRUE>)
									if ($tpNomeCxUsuario$ = 1)
										putitem/id vDsTerminal, "%%CD_TERMINAL.FCX_TERMINALUSVC", NM_USUARIO.ADM_USUARIOSVC
									else
										putitem/id vDsTerminal, "%%CD_TERMINAL.FCX_TERMINALUSVC", NM_LOGIN.ADM_USUARIOSVC
									endif
								else
									;Projeto 078 - Tarefa 1970 - Aloisio Gargantini - 07/11/2008
									;putitem/id vDsTerminal, "%%CD_USUARIO.FCX_TERMINALUSVC", NM_LOGIN.ADM_USUARIOSVC	
									if ($tpNomeCxUsuario$ = 1)
										putitem/id vDsTerminal, "%%CD_USUARIO.FCX_TERMINALUSVC", NM_USUARIO.ADM_USUARIOSVC
									else
										putitem/id vDsTerminal, "%%CD_USUARIO.FCX_TERMINALUSVC", NM_LOGIN.ADM_USUARIOSVC
									endif
									;
								endif	
							endif
						endif
					endif
				endif
			endif

			setocc "FCX_CAIXACSVC", $curocc("FCX_CAIXACSVC") + 1
		endwhile
	endif

	poParams = ""
	putitem/id poParams, "DS_LSTTERMINAL", vDsTerminal

	exit(0)
end ;carregaTerminal

;---------------------------------
public operation descricaoTerminal
;---------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		string vDsTerminal, vCdEmpresa
		numeric vCdTerminal
	endvariables

	vCdTerminal = $item("CD_TERMINAL", piParams)
	vCdEmpresa = $item("CD_EMPRESA", piParams)

	clear/e "GER_EMPRESASVC"
	CD_EMPRESA.GER_EMPRESASVC = vCdEmpresa
	retrieve/e "GER_EMPRESASVC"
	if ($status >= 0) 
		setocc "GER_EMPRESASVC", 1
		while ($status >= 0)
			if (CD_CCUSTO.GER_EMPRESASVC = "")
				clear/e "GER_TERMINALSVC"
				CD_EMPRESA.GER_TERMINALSVC = CD_EMPRESA.GER_EMPRESASVC
				CD_TERMINAL.GER_TERMINALSVC = vCdTerminal
				retrieve/e "GER_TERMINALSVC"
				if ($status >= 0)
					if ($inUsuTerm$ = 0)
						vDsTerminal = DS_TERMINAL.GER_TERMINALSVC
					else
						clear/e "FCX_TERMINALUSVC"
						CD_EMPRESA.FCX_TERMINALUSVC = CD_EMPRESA.GER_TERMINALSVC
						CD_TERMINAL.FCX_TERMINALUSVC = CD_TERMINAL.GER_TERMINALSVC
						retrieve/e "FCX_TERMINALUSVC"
						if ($status >= 0)
							clear/e "ADM_USUARIOSVC"
							CD_USUARIO.ADM_USUARIOSVC = CD_USUARIO.FCX_TERMINALUSVC
							retrieve/e "ADM_USUARIOSVC"
							if ($status >= 0)
								;Projeto 078 - Tarefa 1970 - Aloisio Gargantini - 07/11/2008
								;vDsTerminal = NM_LOGIN.ADM_USUARIOSVC
								if ($tpNomeCxUsuario$ = 1)
									vDsTerminal = NM_USUARIO.ADM_USUARIOSVC
								else
									vDsTerminal = NM_LOGIN.ADM_USUARIOSVC
								endif
								;
							endif
						endif
					endif
				endif
			endif

			setocc "GER_EMPRESASVC", $curocc("GER_EMPRESASVC") + 1
		endwhile
	endif
	
	poParams = ""
	putitem/id poParams, "DS_TERMINAL", vDsTerminal

	exit(0)
end ;carregaTerminal

;-----------------------------------
public operation carregaTodoTerminal
;-----------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		string vDsTerminal, vLstEmpresa, vDtAbertura, vTpCaixa
		boolean vInInativo, vInDiferenca
		numeric vCdEmpresa
	endvariables

	vCdEmpresa = $item("CD_EMPRESA", $xlpg$)
	
	call getParam(vCdEmpresa, $xCdErro$, $xCtxErro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")	
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	vLstEmpresa = $item("CD_EMPRESA", piParams)
	vInInativo = $item("IN_INATIVO", piParams)
	vDtAbertura = $item("DT_ABERTURA", piParams)
	vInDiferenca = $item("IN_DIFERENCA", piParams)
	vTpCaixa = $item("TP_CAIXA", piParams)
	
	if ($inUsuTerm$ = 1)
		if (vLstEmpresa != "")
			repeat
				getitem vCdEmpresa, vLstEmpresa, 1

				clear/e "GER_EMPRESASVC"
				CD_EMPRESA.GER_EMPRESASVC = vCdEmpresa
				retrieve/e "GER_EMPRESASVC"
				if ($status >= 0) & (CD_CCUSTO.GER_EMPRESASVC = "")
					clear/e "FCC_CTAPESSVC"
					CD_EMPRESA.FCC_CTAPESSVC = CD_EMPRESA.GER_EMPRESASVC
					TP_MANUTENCAO.FCC_CTAPESSVC = $cdTpManutCxUsuario$
					retrieve/e "FCC_CTAPESSVC"
					if ($status >= 0)
						setocc "FCC_CTAPESSVC", 1
						while ($status >= 0)
							if (CD_OPERCAIXA.FCC_CTAPESSVC > 0)
								clear/e "FCX_CAIXACSVC"
								CD_EMPRESA.FCX_CAIXACSVC = CD_EMPRESA.FCC_CTAPESSVC
								DT_ABERTURA.FCX_CAIXACSVC = vDtAbertura
								NR_CTAPES.FCX_CAIXACSVC = NR_CTAPES.FCC_CTAPESSVC
								if (vInDiferenca = <TRUE>)
									IN_DIFERENCA.FCX_CAIXACSVC = <TRUE>
								endif
								if (vTpCaixa = "F")
									IN_FECHADO.FCX_CAIXACSVC = <TRUE>
								endif
								retrieve/e "FCX_CAIXACSVC"
								if ($status >= 0)
									clear/e "ADM_USUARIOSVC"
									CD_USUARIO.ADM_USUARIOSVC = CD_OPERCAIXA.FCC_CTAPESSVC
									retrieve/e "ADM_USUARIOSVC"
									if ($status >= 0) & (TP_BLOQUEIO = 0 | vInInativo = <TRUE>)
										;Projeto 078 - Tarefa 1970 - Aloisio Gargantini - 07/11/2008
										;putitem/id vDsTerminal, "%%CD_USUARIO.ADM_USUARIOSVC", NM_LOGIN.ADM_USUARIOSVC
										if ($tpNomeCxUsuario$ = 1)
												putitem/id vDsTerminal, "%%CD_USUARIO.FCX_TERMINALUSVC", NM_USUARIO.ADM_USUARIOSVC
										else
												putitem/id vDsTerminal, "%%CD_USUARIO.ADM_USUARIOSVC", NM_LOGIN.ADM_USUARIOSVC
										endif
										;
									endif
								endif
							endif

							setocc "FCC_CTAPESSVC", $curocc("FCC_CTAPESSVC") + 1
						endwhile
					endif
				endif
	
				delitem vLstEmpresa, 1
			until (vLstEmpresa = "")
		endif
	else
		clear/e "FCX_CAIXACSVC"
		CD_EMPRESA.FCX_CAIXACSVC = vLstEmpresa
		DT_ABERTURA.FCX_CAIXACSVC = vDtAbertura
		if (vInDiferenca = <TRUE>)
			IN_DIFERENCA.FCX_CAIXACSVC = <TRUE>
		endif
		if (vTpCaixa = "F")
			IN_FECHADO.FCX_CAIXACSVC = <TRUE>
		endif
		retrieve/e "FCX_CAIXACSVC"
		if ($status >= 0)
			setocc "FCX_CAIXACSVC"
			while ($status >= 0)
				clear/e "GER_EMPRESASVC"
				CD_EMPRESA.GER_EMPRESASVC = CD_EMPRESA.FCX_CAIXACSVC
				retrieve/e "GER_EMPRESASVC"
				if ($status >= 0) & (CD_CCUSTO.GER_EMPRESASVC = "")
					clear/e "GER_TERMINALSVC"
					CD_EMPRESA.GER_TERMINALSVC = CD_EMPRESA.FCX_CAIXACSVC
					CD_TERMINAL.GER_TERMINALSVC = CD_TERMINAL.FCX_CAIXACSVC
					retrieve/e "GER_TERMINALSVC"
					if ($status >= 0)
						putitem/id vDsTerminal, "%%CD_TERMINAL.GER_TERMINALSVC", DS_TERMINAL.GER_TERMINALSVC
					endif
				endif

				setocc "FCX_CAIXACSVC", $curocc("FCX_CAIXACSVC") + 1
			endwhile
		endif
	endif

	poParams = ""
	putitem/id poParams, "DS_LSTTERMINAL", vDsTerminal

	exit(0)
end ;carregaTerminal

;-----------------------------------
public operation validaRetiradaCaixa
;-----------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	variables
		numeric vCdEmpresa, vNrSeq, vCdTerminal, vVlValor, vTpDocumento, vNrSeqHistRelSub, vCdEmpresaRetorno, vVlSaldoAtualDoc, vVlSaldoAtual
		numeric vCxConta, vVlSistema, vVlRetorno, vNrSeqMovRel, vTpProcesso, vVlSaldoAntDoc, vVlSaldoAnt, vNrCtaPesFCC, vNrSeqMovFCC
		date vDtAbertura, vDtMovimFCC
		string vDsAux, vDsObs, viParams, voParams, viValores
	endvariables  

	;Verifica se exite o caixa aberto na empresa associada

	vCdEmpresa  = $item("CD_EMPRESA", piParams)
	vCdTerminal = $item("CD_TERMINAL", piParams)
	vDtAbertura = $item("DT_ABERTURA", piParams)
	vNrSeq = $item("NR_SEQ", piParams)
	vVlValor = $item("VL_VALOR", piParams)
	vTpDocumento = $item("TP_DOCUMENTO", piParams)
	vNrSeqHistRelSub = $item("NR_SEQHISTRELSUB", piParams)
	vDsAux = $item("DS_AUX", piParams)
	vDsObs = $item("DS_OBS", piParams)
	;Projeto 078 - Tarefa 3602 - Aloisio Gargantini - 09/08/2010
	vTpProcesso = $item("TP_PROCESSO", piParams)
	;
	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->SICSVCO007.validaRetiradaCaixa")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif    
	
	if (vCdTerminal = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Terminal não informado!", "ADICIONAL=Operação->SICSVCO007.validaRetiradaCaixa")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	if (vDtAbertura = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data de abertura não informada!", "ADICIONAL=Operação->SICSVCO007.validaRetiradaCaixa")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	if (vNrSeq = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Nr. de sequência do caixa não informado!", "ADICIONAL=Operação->SICSVCO007.validaRetiradaCaixa")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	if (vVlValor = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Valor da retirada não informado!", "ADICIONAL=Operação->SICSVCO007.validaRetiradaCaixa")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	if (vTpDocumento = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Tipo de documento não informado!", "ADICIONAL=Operação->SICSVCO007.validaRetiradaCaixa")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	if (vNrSeqHistRelSub = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Sequencia de documento não informado!", "ADICIONAL=Operação->SICSVCO007.validaRetiradaCaixa")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	clear/e "GER_EMPRESASVC"
	CD_EMPRESA.GER_EMPRESASVC/init = vCdEmpresa
	retrieve/e "GER_EMPRESASVC"
	if ($status >= 0)
		if (CD_CCUSTO.GER_EMPRESASVC = 0)
			clear/e "GER_EMPRESASVC"
			CD_CCUSTO.GER_EMPRESASVC/init = vCdEmpresa
			retrieve/e "GER_EMPRESASVC"
			if ($status >= 0)
				vCdEmpresaRetorno = vCdEmpresa
				vCdEmpresa = CD_EMPRESA.GER_EMPRESASVC
			;Projeto 078 - Tarefa 3019 - Aloisio Gargantini - 10/12/2009
			else
				vCdEmpresaRetorno = vCdEmpresa
			;
			endif
		else
			vCdEmpresaRetorno = CD_CCUSTO.GER_EMPRESASVC
		endif
	endif	
	
	clear/e "FCX_CAIXACSVC"
	CD_EMPRESA.FCX_CAIXACSVC/init = vCdEmpresa
	CD_TERMINAL.FCX_CAIXACSVC/init = vCdTerminal
	DT_ABERTURA.FCX_CAIXACSVC/init = vDtAbertura
	NR_SEQ.FCX_CAIXACSVC/init = vNrSeq
	retrieve/e "FCX_CAIXACSVC"
	if ($status < 0)
		; caso não haja caixa na encargos, retorno com o valor total de empresa principal
		clear/e "FCX_CAIXACSVC"
		CD_EMPRESA.FCX_CAIXACSVC/init = vCdEmpresaRetorno
		CD_TERMINAL.FCX_CAIXACSVC/init = vCdTerminal
		DT_ABERTURA.FCX_CAIXACSVC/init = vDtAbertura
		NR_SEQ.FCX_CAIXACSVC/init = vNrSeq
		retrieve/e "FCX_CAIXACSVC"
		if ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Caixa não encontrado!", "ADICIONAL=Operação->SICSVCO007.validaRetiradaCaixa")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		
		call getParam(vCdEmpresaRetorno, $xCdErro$, $xCtxErro$)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			rollback
			exit(-1)
		endif
		if ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")	
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			rollback
			exit(-1)
		endif
		
		poParams = ""
		putitem/id poParams, "CD_EMPRESA",         vCdEmpresaRetorno
		putitem/id poParams, "NR_CTAPES",          NR_CTAPES.FCX_CAIXACSVC
		putitem/id poParams, "CD_CTAPES_CXFILIAL", $cxFilial$
		putitem/id poParams, "CD_CTAPES_CXMATRIZ", $cxMatriz$
		putitem/id poParams, "VL_VALOR",           vVlValor
		
		exit(0)
	endif
	
	call getParam(vCdEmpresa, $xCdErro$, $xCtxErro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")	
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	;Projeto 078 - Tarefa 3602 - Aloisio Gargantini - 09/08/2010
	if ($inLogMovCtaPes$ = <TRUE>) & ((vTpProcesso = "") | (vTpProcesso = 0))
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Tipo de processo não informado!", "ADICIONAL=Operação->SICSVCO007.validaRetiradaCaixa")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	;	
	if ($inCxFilial$ = 1)
		vCxConta = $cxFilial$
	else
		vCxConta = $cxMatriz$
	endif
	
	clear/e "FCX_CAIXAMSVC"
	CD_EMPRESA.FCX_CAIXAMSVC = vCdEmpresa
	DT_ABERTURA.FCX_CAIXAMSVC = vDtAbertura
	CD_TERMINAL.FCX_CAIXAMSVC = vCdTerminal
	NR_SEQ.FCX_CAIXAMSVC = vNrSeq
	retrieve/e "FCX_CAIXAMSVC"
	if ($status >= 0)
		setocc "FCX_CAIXAMSVC", 1
		while ($status >= 0)
			if (IN_ESTORNO.FCC_MOVSVC = <FALSE>)
				if (TP_DOCUMENTO.FCC_MOVSVC = vTpDocumento) & (NR_SEQHISTRELSUB.FCC_MOVSVC = vNrSeqHistRelSub)
					if (TP_OPERACAO.FCC_MOVSVC = "D")
						vVlSistema = vVlSistema - VL_LANCTO.FCC_MOVSVC
					else
						vVlSistema = vVlSistema + VL_LANCTO.FCC_MOVSVC
					endif
				endif
				
				if (TP_DOCUMENTO.FCC_MOVSVC = 9) & (vTpDocumento = 3)
					if (TP_OPERACAO.FCC_MOVSVC = "D")
						vVlSistema = vVlSistema + VL_LANCTO.FCC_MOVSVC
					else
						vVlSistema = vVlSistema - VL_LANCTO.FCC_MOVSVC
					endif
				endif
			endif
			
			setocc "FCX_CAIXAMSVC", $curocc("FCX_CAIXAMSVC") + 1
		endwhile
	endif
	
	if (vVlValor > vVlSistema) & (vVlSistema > 0)
		vVlRetorno = vVlValor - vVlSistema
		vVlValor = vVlSistema
	endif
	
	if (vVlSistema <= 0)
		vVlRetorno = vVlValor
		vVlValor = 0
	endif
	
	if (vVlValor > 0)
		;Projeto 078 - Tarefa 1675 - Aloisio Gargantini - 05/08/2008
		viParams  = ""
		viValores = ""
		voParams  = ""

		activate "FCCSVCO017".getNumMovRel($xLpg$, viParams, voParams, $xCdErro$, $xCtxerro$)
		if ($procerror)       
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=Operação->FCXSVCO002.abreCaixa")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		if ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=Operação->FCXSVCO002.abreCaixa")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		vNrSeqMovRel = $item("NR_SEQMOVREL", voParams)
		;	
		;Projeto 078 - Tarefa 3602 - Aloisio Gargantini - 09/08/2010
		if ($inLogMovCtaPes$ = <TRUE>)
			;buscar saldo Cta.
			viParams = ""
			putitem/id viParams, "NR_CTAPES", NR_CTAPES.FCX_CAIXACSVC
			putitem/id viParams, "DT_SALDO",  $item("DT_SISTEMA", $xlpg$)
			activate "FCCSVCO002".buscaSaldoConta($xLpg$, viParams, "", voParams, $xCdErro$, $xCtxerro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				rollback
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				rollback
				return(-1)
			endif
			vVlSaldoAnt = $item("VL_SALDO", voParams)

			;buscar saldo Cta. por tipo de documento
			viParams = ""		
			putitem/id viParams, "NR_CTAPES",        NR_CTAPES.FCX_CAIXACSVC
			putitem/id viParams, "TP_DOCUMENTO",     vTpDocumento
			putitem/id viParams, "NR_SEQHISTRELSUB", vNrSeqHistRelSub
			putitem/id viParams, "DT_SALDO",         $item("DT_SISTEMA", $xLpg$)
			activate "FCCSVCO002".buscaSaldoCtaTp($xLpg$, viParams, "", voParams, $xCdErro$, $xCtxerro$)
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				rollback
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				rollback
				return(-1)
			endif
			vVlSaldoAntDoc = $item("VL_SALDO", voParams)
		endif
		;
		viParams = ""
		putitem/id viParams, "CD_EMPRESA", vCdEmpresa
		putitem/id viParams, "NR_CTAPES", NR_CTAPES.FCX_CAIXACSVC
		putitem/id viParams, "DT_MOVIMENTO", $item("DT_SISTEMA", $xlpg$)
		putitem/id viParams, "CD_HISTORICO", 833 ;Debito.
		putitem/id viParams, "DS_AUX", vDsAux
		putitem/id viParams, "VL_LANCTO", vVlValor
		putitem/id viParams, "IN_ESTORNO", "N"
		putitem/id viParams, "TP_DOCUMENTO", vTpDocumento
		putitem/id viParams, "NR_SEQHISTRELSUB", vNrSeqHistRelSub
		putitem/id viParams, "IN_CAIXA", <TRUE>
		putitem/id viParams, "CD_TERMINAL", vCdTerminal
		putitem/id viParams, "DT_ABERTURA", vDtAbertura
		putitem/id viParams, "NR_SEQCAIXA", vNrSeq
		putitem/id viParams, "DS_OBS", vDsObs
		;Projeto 078 - Tarefa 1675 - Aloisio Gargantini - 05/08/2008
		if (vNrSeqMovRel > 0)
			putitem/id viParams, "NR_SEQMOVREL", vNrSeqMovRel
		endif
		;
		activate "FCCSVCO002".movimentaConta($xlpg$, viParams, viValores, voParams, $xCdErro$, $xCtxerro$)
		if ($procerror)       
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			rollback
			exit(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			rollback
			exit(-1)
		endif
		;Projeto 078 - Tarefa 3602 - Aloisio Gargantini - 09/08/2010
		if ($inLogMovCtaPes$ = <TRUE>)
			vNrCtaPesFCC = $item("NR_CTAPES", voParams)
			vDtMovimFCC  = $item("DT_MOVIM", voParams)
			vNrSeqMovFCC = $item("NR_SEQMOV", voParams)	

			;buscar saldo Cta.
			viParams = ""
			putitem/id viParams, "NR_CTAPES", NR_CTAPES.FCX_CAIXACSVC
			putitem/id viParams, "DT_SALDO",  $item("DT_SISTEMA", $xLpg$)
			activate "FCCSVCO002".buscaSaldoConta($xLpg$, viParams, "", voParams, $xCdErro$, $xCtxerro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				rollback
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				rollback
				return(-1)
			endif
			vVlSaldoAtual = $item("VL_SALDO", voParams)

			;buscar saldo Cta. por tipo de documento
			viParams = ""
			putitem/id viParams, "NR_CTAPES",        NR_CTAPES.FCX_CAIXACSVC
			putitem/id viParams, "TP_DOCUMENTO",     vTpDocumento
			putitem/id viParams, "NR_SEQHISTRELSUB", vNrSeqHistRelSub
			putitem/id viParams, "DT_SALDO",         $item("DT_SISTEMA", $xLpg$)
			activate "FCCSVCO002".buscaSaldoCtaTp($xLpg$, viParams, "", voParams, $xCdErro$, $xCtxerro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				rollback
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				rollback
				return(-1)
			endif
			vVlSaldoAtualDoc = $item("VL_SALDO", voParams)

			;gravação do log
			viParams = ""
			putitem/id viParams, "TP_PROCESSO",     vTpProcesso
			putitem/id viParams, "TP_DOCUMENTO",    vTpDocumento
			putitem/id viParams, "NR_CTAPES",       NR_CTAPES.FCX_CAIXACSVC
			putitem/id viParams, "VL_LANCAMENTO",   vVlValor
			putitem/id viParams, "VL_SALDODOC",     vVlSaldoAtualDoc
			putitem/id viParams, "VL_SALDOCTA",     vVlSaldoAtual
			putitem/id viParams, "VL_SALDOANTDOC",  vVlSaldoAntDoc
			putitem/id viParams, "VL_SALDOANTCTA",  vVlSaldoAnt
			putitem/id viParams, "NR_CTAPESFCC",    vNrCtaPesFCC
			putitem/id viParams, "DT_MOVIMFCC",     vDtMovimFCC
			putitem/id viParams, "NR_SEQMOVFCC",    vNrSeqMovFCC
			activate "FCCSVCO018".gravarLogMovtoCtaPes($xLpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
			if ($procerror)
				$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				rollback
				return(-1)
			elseif ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				rollback
				return(-1)
			endif
		endif
		;
		;----------------------------------------------
		;Conta Destino
		;----------------------------------------------
		;Projeto 078 - Tarefa 3602 - Aloisio Gargantini - 09/08/2010
		if ($inLogMovCtaPes$ = <TRUE>)
			;buscar saldo Cta.
			viParams = ""
			putitem/id viParams, "NR_CTAPES", vCxConta
			putitem/id viParams, "DT_SALDO",  $item("DT_SISTEMA", $xLpg$)
			activate "FCCSVCO002".buscaSaldoConta($xLpg$, viParams, "", voParams, $xCdErro$, $xCtxerro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				rollback
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				rollback
				return(-1)
			endif
			vVlSaldoAnt = $item("VL_SALDO", voParams)

			;buscar saldo Cta. por tipo de documento
			viParams = ""		
			putitem/id viParams, "NR_CTAPES",        vCxConta
			putitem/id viParams, "TP_DOCUMENTO",     vTpDocumento
			putitem/id viParams, "NR_SEQHISTRELSUB", vNrSeqHistRelSub
			putitem/id viParams, "DT_SALDO",         $item("DT_SISTEMA", $xLpg$)
			activate "FCCSVCO002".buscaSaldoCtaTp($xLpg$, viParams, "", voParams, $xCdErro$, $xCtxerro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				rollback
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				rollback
				return(-1)
			endif
			vVlSaldoAntDoc = $item("VL_SALDO", voParams)
		endif
		;
		viParams = ""
		putitem/id viParams, "CD_EMPRESA", vCdEmpresa
		putitem/id viParams, "NR_CTAPES", vCxConta
		putitem/id viParams, "DT_MOVIMENTO", $item("DT_SISTEMA", $xlpg$)
		putitem/id viParams, "CD_HISTORICO", 832
		putitem/id viParams, "DS_AUX", "RET. CX OP: %%CD_OPERADOR.FCX_CAIXACSVC"
		putitem/id viParams, "VL_LANCTO", vVlValor
		putitem/id viParams, "IN_ESTORNO", "N"
		putitem/id viParams, "TP_DOCUMENTO", vTpDocumento
		putitem/id viParams, "NR_SEQHISTRELSUB", vNrSeqHistRelSub
		putitem/id viParams, "DS_OBS", vDsObs
		;Projeto 078 - Tarefa 1675 - Aloisio Gargantini - 05/08/2008
		if (vNrSeqMovRel > 0)
			putitem/id viParams, "NR_SEQMOVREL", vNrSeqMovRel
		endif
		;
		activate "FCCSVCO002".movimentaConta($xlpg$, viParams, viValores, voParams, $xCdErro$, $xCtxerro$)
		if ($procerror)       
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			rollback
			exit(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			rollback
			exit(-1)
		endif
		;Projeto 078 - Tarefa 3602 - Aloisio Gargantini - 09/08/2010
		if ($inLogMovCtaPes$ = <TRUE>)
			vNrCtaPesFCC = $item("NR_CTAPES", voParams)
			vDtMovimFCC  = $item("DT_MOVIM", voParams)
			vNrSeqMovFCC = $item("NR_SEQMOV", voParams)	

			;buscar saldo Cta.
			viParams = ""
			putitem/id viParams, "NR_CTAPES", vCxConta
			putitem/id viParams, "DT_SALDO",  $item("DT_SISTEMA", $xLpg$)
			activate "FCCSVCO002".buscaSaldoConta($xLpg$, viParams, "", voParams, $xCdErro$, $xCtxerro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				rollback
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				rollback
				return(-1)
			endif
			vVlSaldoAtual = $item("VL_SALDO", voParams)

			;buscar saldo Cta. por tipo de documento
			viParams = ""
			putitem/id viParams, "NR_CTAPES",        vCxConta
			putitem/id viParams, "TP_DOCUMENTO",     vTpDocumento
			putitem/id viParams, "NR_SEQHISTRELSUB", vNrSeqHistRelSub
			putitem/id viParams, "DT_SALDO",         $item("DT_SISTEMA", $xLpg$)
			activate "FCCSVCO002".buscaSaldoCtaTp($xLpg$, viParams, "", voParams, $xCdErro$, $xCtxerro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				rollback
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				rollback
				return(-1)
			endif
			vVlSaldoAtualDoc = $item("VL_SALDO", voParams)

			;gravação do log
			viParams = ""
			putitem/id viParams, "TP_PROCESSO",     vTpProcesso
			putitem/id viParams, "TP_DOCUMENTO",    vTpDocumento
			putitem/id viParams, "NR_CTAPES",       vCxConta
			putitem/id viParams, "VL_LANCAMENTO",   vVlValor
			putitem/id viParams, "VL_SALDODOC",     vVlSaldoAtualDoc
			putitem/id viParams, "VL_SALDOCTA",     vVlSaldoAtual
			putitem/id viParams, "VL_SALDOANTDOC",  vVlSaldoAntDoc
			putitem/id viParams, "VL_SALDOANTCTA",  vVlSaldoAnt
			putitem/id viParams, "NR_CTAPESFCC",    vNrCtaPesFCC
			putitem/id viParams, "DT_MOVIMFCC",     vDtMovimFCC
			putitem/id viParams, "NR_SEQMOVFCC",    vNrSeqMovFCC
			activate "FCCSVCO018".gravarLogMovtoCtaPes($xLpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
			if ($procerror)
				$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				rollback
				return(-1)
			elseif ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				rollback
				return(-1)
			endif
		endif
		;
		if (vTpDocumento = 2) & ($inCxFilial$ != 1) ;Cheque e Matriz.
			;Projeto 078 - Tarefa 3602 - Aloisio Gargantini - 09/08/2010
			if ($inLogMovCtaPes$ = <TRUE>)
				;buscar saldo Cta.
				viParams = ""
				putitem/id viParams, "NR_CTAPES", vCxConta
				putitem/id viParams, "DT_SALDO",  $item("DT_SISTEMA", $xLpg$)
				activate "FCCSVCO002".buscaSaldoConta($xLpg$, viParams, "", voParams, $xCdErro$, $xCtxerro$)
				if ($procerror)       
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					rollback
					return(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					rollback
					return(-1)
				endif
				vVlSaldoAnt = $item("VL_SALDO", voParams)

				;buscar saldo Cta. por tipo de documento
				viParams = ""		
				putitem/id viParams, "NR_CTAPES",        vCxConta
				putitem/id viParams, "TP_DOCUMENTO",     vTpDocumento
				putitem/id viParams, "NR_SEQHISTRELSUB", vNrSeqHistRelSub
				putitem/id viParams, "DT_SALDO",         $item("DT_SISTEMA", $xLpg$)
				activate "FCCSVCO002".buscaSaldoCtaTp($xLpg$, viParams, "", voParams, $xCdErro$, $xCtxerro$)
				if ($procerror)       
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					rollback
					return(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					rollback
					return(-1)
				endif
				vVlSaldoAntDoc = $item("VL_SALDO", voParams)
			endif
			;
			;Lancar o credito de lancamento na conta caixa.
			viParams = ""
			putitem/id viParams, "CD_EMPRESA", vCdEmpresa
			putitem/id viParams, "NR_CTAPES", vCxConta
			putitem/id viParams, "DT_MOVIMENTO", $item("DT_SISTEMA", $xlpg$)
			putitem/id viParams, "CD_HISTORICO", 833 ;Debito.
			putitem/id viParams, "VL_LANCTO", vVlValor
			putitem/id viParams, "IN_ESTORNO", "N"
			putitem/id viParams, "TP_DOCUMENTO", vTpDocumento
			putitem/id viParams, "NR_SEQHISTRELSUB", vNrSeqHistRelSub
			putitem/id viParams, "DS_AUX", "RET. CX OP: %%CD_OPERADOR.FCX_CAIXACSVC"
			putitem/id viParams, "DS_OBS", vDsObs
			;Projeto 078 - Tarefa 1675 - Aloisio Gargantini - 05/08/2008
			if (vNrSeqMovRel > 0)
				putitem/id viParams, "NR_SEQMOVREL", vNrSeqMovRel
			endif
			;
			activate "FCCSVCO002".movimentaConta($xlpg$, viParams, viValores, voParams, $xCdErro$, $xCtxerro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				rollback
				exit(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				rollback
				exit(-1)
			endif
			;Projeto 078 - Tarefa 3602 - Aloisio Gargantini - 09/08/2010
			if ($inLogMovCtaPes$ = <TRUE>)
				vNrCtaPesFCC = $item("NR_CTAPES", voParams)
				vDtMovimFCC  = $item("DT_MOVIM", voParams)
				vNrSeqMovFCC = $item("NR_SEQMOV", voParams)	

				;buscar saldo Cta.
				viParams = ""
				putitem/id viParams, "NR_CTAPES", vCxConta
				putitem/id viParams, "DT_SALDO",  $item("DT_SISTEMA", $xLpg$)
				activate "FCCSVCO002".buscaSaldoConta($xLpg$, viParams, "", voParams, $xCdErro$, $xCtxerro$)
				if ($procerror)       
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					rollback
					return(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					rollback
					return(-1)
				endif
				vVlSaldoAtual = $item("VL_SALDO", voParams)

				;buscar saldo Cta. por tipo de documento
				viParams = ""
				putitem/id viParams, "NR_CTAPES",        vCxConta
				putitem/id viParams, "TP_DOCUMENTO",     vTpDocumento
				putitem/id viParams, "NR_SEQHISTRELSUB", vNrSeqHistRelSub
				putitem/id viParams, "DT_SALDO",         $item("DT_SISTEMA", $xLpg$)
				activate "FCCSVCO002".buscaSaldoCtaTp($xLpg$, viParams, "", voParams, $xCdErro$, $xCtxerro$)
				if ($procerror)       
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					rollback
					return(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					rollback
					return(-1)
				endif
				vVlSaldoAtualDoc = $item("VL_SALDO", voParams)
	
				;gravação do log
				viParams = ""
				putitem/id viParams, "TP_PROCESSO",     vTpProcesso
				putitem/id viParams, "TP_DOCUMENTO",    vTpDocumento
				putitem/id viParams, "NR_CTAPES",       vCxConta
				putitem/id viParams, "VL_LANCAMENTO",   vVlValor
				putitem/id viParams, "VL_SALDODOC",     vVlSaldoAtualDoc
				putitem/id viParams, "VL_SALDOCTA",     vVlSaldoAtual
				putitem/id viParams, "VL_SALDOANTDOC",  vVlSaldoAntDoc
				putitem/id viParams, "VL_SALDOANTCTA",  vVlSaldoAnt
				putitem/id viParams, "NR_CTAPESFCC",    vNrCtaPesFCC
				putitem/id viParams, "DT_MOVIMFCC",     vDtMovimFCC
				putitem/id viParams, "NR_SEQMOVFCC",    vNrSeqMovFCC
				activate "FCCSVCO018".gravarLogMovtoCtaPes($xLpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
				if ($procerror)
					$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					rollback
					return(-1)
				elseif ($status < 0)
					$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					rollback
					return(-1)
				endif
			endif
			;
		endif
	endif
		
	clear/e "FCX_CAIXACSVC"
	CD_EMPRESA.FCX_CAIXACSVC/init = vCdEmpresaRetorno
	CD_TERMINAL.FCX_CAIXACSVC/init = vCdTerminal
	DT_ABERTURA.FCX_CAIXACSVC/init = vDtAbertura
	NR_SEQ.FCX_CAIXACSVC/init = vNrSeq
	retrieve/e "FCX_CAIXACSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Caixa não encontrado!", "ADICIONAL=Operação->SICSVCO007.validaRetiradaCaixa")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	call getParam(vCdEmpresaRetorno, $xCdErro$, $xCtxErro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")	
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	poParams = ""
	putitem/id poParams, "CD_EMPRESA", vCdEmpresaRetorno
	putitem/id poParams, "NR_CTAPES", NR_CTAPES.FCX_CAIXACSVC
	putitem/id poParams, "CD_CTAPES_CXFILIAL", $cxFilial$
	putitem/id poParams, "CD_CTAPES_CXMATRIZ", $cxMatriz$
	putitem/id poParams, "VL_VALOR", vVlRetorno
	
	exit(0)
end