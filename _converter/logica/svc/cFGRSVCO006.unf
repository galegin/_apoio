Public Operation VencimentoParcelas
;Marcos R. Kuzminski
;Data.....: 18/01/2005
;Descrição: Retorna as datas de vencimento conforme regra cadastradas na formula do portador (cartão) e 
;           parâmetros enviando pelo programa chamador
;Chamada..: 
;----------------------------

	params
		string  piGlobal  :IN
		string  piParams  :IN
		string  poParams  :OUT
		numeric poCdErro  :OUT
		string  poCtxErro :OUT
	endparams
	Variables
		numeric CdEmpresa, CdPortador, NrParcelas, NrContador, NrDiasSoma, NrVectoCliente, NrMesCompra, NrDiasCarencia
		numeric vNrDiasCarencia, vNrDiasBase, vNrDias, vDiaVenctoConvenio, vCdFormulaCartao, vNrDiasAux
		numeric vDiaFixo, vNrMes, vNrAno, vTpDocumento, vNrSeqHistRelSub, vBisexto, vPrTaxa
		string  ListaVencimento, viParams, voParams, DsDiaUtil, DsWhile, vpiParams, vpoParams
		date    DtVenda, DtMelhorDataCompra, DtVenctoClienteMesCorrente, DtVencimentoFinal, DtSistema, DtVectoBase
		date    DtBase, DtVenctoClienteAux
		boolean vInProprio, vInDiaFixo, vInCarenciaUtil, vInDiasUtil, vInConvenio, vInFaturamento, vInFevereiro28, vInGeraFaturaOp
	Endvariables

	CdEmpresa      = $item("CD_EMPRESA"     , piParams)
	CdPortador     = $item("CD_PORTADOR"    , piParams)
	DtVenda        = $item("DT_VENDA"       , piParams)
	NrParcelas     = $item("NR_PARCELAS"    , piParams)
	NrVectoCliente = $item("NR_VECTOCLIENTE", piParams)	
	DtSistema      = $item("DT_SISTEMA"     , piGlobal)
	
	;------------------------------------------
	;HAF (14/12/2006) - Tarefa 078 - 101
	;Faz a leitura primeiramente por Tipo de Documento, depois por Empresa
	vTpDocumento     = $item("TP_DOCUMENTO",     piParams)
	vNrSeqHistRelSub = $item("NR_SEQHISTRELSUB", piParams)
	vCdFormulaCartao = 0
	
	if (vTpDocumento != 0 & vNrSeqHistRelSub != 0)
		clear/e "FCX_HISTRELSUSVC"
		TP_DOCUMENTO.FCX_HISTRELSUSVC/init     = vTpDocumento
		NR_SEQHISTRELSUB.FCX_HISTRELSUSVC/init = vNrSeqHistRelSub
		retrieve/e "FCX_HISTRELSUSVC"
		if ($status >= 0)
			if (CD_FORMULACARTAO.FCX_HISTRELSUSVC != 0)
				vCdFormulaCartao = CD_FORMULACARTAO.FCX_HISTRELSUSVC
			endif
		endif
	endif
	
	;Projeto 078 - Tarefa 3997 - Aloisio Gargantini - 07/02/2010
	;if (vCdFormulaCartao = 0)
	;	clear/e "FGR_PORTEMPRESVC"
	;	CD_EMPRESA.FGR_PORTEMPRESVC/init  = cdEmpresa
	;	NR_PORTADOR.FGR_PORTEMPRESVC/init = cdPortador
	;	retrieve/e "FGR_PORTEMPRESVC"
	;	if ($status >= 0)
	;		vCdFormulaCartao = CD_FORMULACARTAO.FGR_PORTEMPRESVC
	;	;Projeto 078 - Tarefa 1498 - Aloisio Gargantini - 13/05/2008
	;	else
	;		$instancehandle->setStatus(<STS_AVISO>, "GEN001", "DESCRICAO=Fórmula não encontrada para o portador: %%NR_PORTADOR.FGR_PORTEMPRESVC na empresa: %%CD_EMPRESA.FGR_PORTEMPRESVC. Favor verificar o componente FGRFM004.", "")	
	;		poCdErro  = $xCdErro$
	;		poCtxErro = $xCtxErro$
	;		return(-1)
	;	;
	;	endif
	;endif
	
	clear/e "FGR_PORTEMPRESVC"
	CD_EMPRESA.FGR_PORTEMPRESVC/init  = cdEmpresa
	NR_PORTADOR.FGR_PORTEMPRESVC/init = cdPortador
	retrieve/e "FGR_PORTEMPRESVC"
	if ($status >= 0)
		if (vCdFormulaCartao = 0)
			vCdFormulaCartao = CD_FORMULACARTAO.FGR_PORTEMPRESVC
		endif
	else
		if (vCdFormulaCartao = 0)
			$instancehandle->setStatus(<STS_AVISO>, "GEN001", "DESCRICAO=Fórmula não encontrada para o portador: %%NR_PORTADOR.FGR_PORTEMPRESVC na empresa: %%CD_EMPRESA.FGR_PORTEMPRESVC. Favor verificar o componente FGRFM004.", "")	
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif
	;
	
	;MTF(23/08/2006) - Projeto 078, tarefa 011.
	vInProprio      = <FALSE>
	vInCarenciaUtil = <FALSE>
	vInDiaFixo      = <FALSE>
	vInDiasUtil     = <FALSE>
	vNrDiasCarencia = ""
	vNrDiasBase     = ""
	vNrDias         = ""
	;
	;MTF(03/10/2006) - Projeto 078, tarefa 038.
	vInFaturamento     = $item("IN_FATURAMENTO", piParams)
	vInConvenio        = <FALSE>
	vDiaVenctoConvenio = ""
	;
	
	clear/e "DUMMY_VECTOS"

	;------------------------------------------
	;HAF (14/12/2006) - Tarefa 078 - 101
	;Faz a leitura primeiramento por Tipo de Documento, depois por Empresa
;	clear/e "FGR_PORTEMPRESVC"
;	CD_EMPRESA.FGR_PORTEMPRESVC/init  = CdEmpresa
;	NR_PORTADOR.FGR_PORTEMPRESVC/init = CdPortador
;	retrieve/e "FGR_PORTEMPRESVC"
	if (vCdFormulaCartao != 0 )
		clear/e "FGR_FORMULACASVC"
		CD_FORMULACARTAO.FGR_FORMULACASVC/init = vCdFormulaCartao
		retrieve/e "FGR_FORMULACASVC"
		if ($status >= 0)
	;-------------------------------------------
			;MTF(23/08/2006) - Projeto 078, tarefa 011.
			;Se houver formula cartao relacionada ao portador empresa, verifica se o codigo formula cartao
			;esta lancado no formula cartao por empresa.
			clear/e "FGR_FORMULACESVC"
			cd_empresa.fgr_formulacesvc/init       = cd_empresa.fgr_portempresvc
			cd_formulacartao.fgr_formulacesvc/init = vCdFormulaCartao
			retrieve/e "FGR_FORMULACESVC"
			;--Douglas Ferreira - [Prj/Tarefa 78/3933] - 19/11/2010
			;if ($status >= 0)
			if ($status >= 0) & (CD_EMPRESA.FGR_PORTEMPRESVC > 0)
			;
				;Pega informacao do formula cartao por empresa.
				vInProprio      = in_proprio.fgr_formulacesvc
				vInCarenciaUtil = in_carenciautil.fgr_formulacesvc
				vInDiaFixo      = in_diafixo.fgr_formulacesvc
				vInDiasUtil     = in_diasutil.fgr_formulacesvc
				vNrDiasCarencia = nr_diascarencia.fgr_formulacesvc
				vNrDiasBase     = nr_diasbase.fgr_formulacesvc
				vNrDias         = nr_dias.fgr_formulacesvc
				vInFevereiro28  = IN_FEVEREIRO28.FGR_FORMULACESVC ;RAH - 26/04/2007 (Prj078/Trf412)
				;MTF(03/10/2006) - Projeto 078, tarefa 038.
				if (in_convenio.fgr_formulacesvc = <TRUE>)
					vInConvenio        = <TRUE>
					vDiaVenctoConvenio = nr_diaconvenio.fgr_formulacesvc
				endif
				;
				vInGeraFaturaOp = in_gerafatoperadora.fgr_formulacesvc ;Projeto 078 - Tarefa 1317 - Aloisio Gargantini - 26/03/2008
				
				;--Douglas Ferreira - [Prj/Tarefa 180/0274] - 30/09/2011
				if (!$empty("FGR_FORMULACDTSVC"))
					setocc "FGR_FORMULACDTSVC", 1
					while ($status >= 0)
						
						if (DT_INI.FGR_FORMULACDTSVC <= DtSistema) & (DT_FIM.FGR_FORMULACDTSVC >= DtSistema) & (TP_SITUACAO.FGR_FORMULACDTSVC = 1) ;1-Ativa
							vPrTaxa = PR_TAXA.FGR_FORMULACDTSVC
							break
						endif
						
						setocc "FGR_FORMULACDTSVC", $curocc(FGR_FORMULACDTSVC) + 1
					endwhile
				endif
				
				if (vPrTaxa = 0) | (vPrTaxa = "")
				;
					vPrTaxa = PR_TAXA.FGR_FORMULACESVC ;--Douglas Ferreira - [Prj/Tarefa 186/0152] - 25/07/2011
				endif
			else
				;Pega informacao do formula cartao.
				vInProprio      = in_proprio.fgr_formulacasvc
				vInCarenciaUtil = in_carenciautil.fgr_formulacasvc
				vInDiaFixo      = in_diafixo.fgr_formulacasvc
				vInDiasUtil     = in_diasutil.fgr_formulacasvc
				vNrDiasCarencia = nr_diascarencia.fgr_formulacasvc
				vNrDiasBase     = nr_diasbase.fgr_formulacasvc
				vNrDias         = nr_dias.fgr_formulacasvc
				vInFevereiro28  = IN_FEVEREIRO28.FGR_FORMULACASVC ;RAH - 26/04/2007 (Prj078/Trf412)
				;MTF(03/10/2006) - Projeto 078, tarefa 038.
				if (in_convenio.fgr_formulacasvc = <TRUE>)
					vInConvenio        = <TRUE>
					vDiaVenctoConvenio = nr_diaconvenio.fgr_formulacasvc
				endif
				;
				vInGeraFaturaOp = in_gerafatoperadora.fgr_formulacasvc ;Projeto 078 - Tarefa 1317 - Aloisio Gargantini - 26/03/2008
				vPrTaxa         = PR_TAXA.FGR_FORMULACASVC ;--Douglas Ferreira - [Prj/Tarefa 186/0152] - 25/07/2011
			endif
		endif
		;
		;MTF(03/10/2006) - Projeto 078, tarefa 038.
		if (vInConvenio = <TRUE>) & (vInFaturamento = <TRUE>)
			;Gera vencimento das parcelas de cartao de convenio.
			if (vDiaVenctoConvenio = "") | (vDiaVenctoConvenio = 0)
				$instancehandle->setStatus(<STS_AVISO>, "GEN001", "DESCRICAO=Dia de vencimento de convênio não informado para formula cartão %%cd_formulacartao.fgr_formulacasvc", "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
			
			vpiParams = ""
			putitem/id vpiParams, "CD_PORTADOR",        cdportador
			putitem/id vpiParams, "DT_VENDA",           dtvenda
			putitem/id vpiParams, "NR_PARCELAS",        nrparcelas
			putitem/id vpiParams, "DIA_VENCTOCONVENIO", vDiaVenctoConvenio
			putitem/id vpiParams, "NR_DIASCARENCIA",    vNrDiasCarencia
			$instancehandle->geraVenctoConvenio(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
			if ($procerror)
				$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		else
		;
			;MTF(23/08/2006) - Projeto 078, tarefa 011.
			;if (IN_PROPRIO.FGR_FORMULACASVC = "T") 
			;	if (NR_DIASCARENCIA.FGR_FORMULACASVC = "" | NR_DIASCARENCIA.FGR_FORMULACASVC <= 0)
			;		NR_DIASCARENCIA.FGR_FORMULACASVC = 0
			;	endif
			if (vInProprio = <TRUE>) 
				if (vNrDiasCarencia = "") | (vNrDiasCarencia <= 0)
					vNrDiasCarencia = 0
				endif
			;
				;monta data de vencimento do cliente (dia do vencimento do cliente + mes da venda + ano da venda)
				if (NrVectoCliente != "" & NrVectoCliente > 0)
					DtVenctoClienteMesCorrente = "%%NrVectoCliente/%%DtVenda[M]/%%DtVenda[Y]"
				else
					$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Dia do vencimento do cliente não informado !", "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
				
				;-----------------------------------------------------------------------------------------
				;monta melhor data de compra do cliente (vencimento do cliente - menos dias(úteis) de carência da formula)
				;considerar dias úteis
				
				;MTF(23/08/2006) - Projeto 078, tarefa 011.
				;if (IN_CARENCIAUTIL.FGR_FORMULACASVC  = <TRUE>)
				if (vInCarenciaUtil = <TRUE>)
				;
					;controla a quantidade de dias úteis (quantidade da carencia)
					NrContador = 0
					DtBase     = DtVenctoClienteMesCorrente
					DsWhile    = "SIM"		
					while (DsWhile = "SIM")
						;MTF(23/08/2006) - Projeto 078, tarefa 011.
						;if (NrContador >= NR_DIASCARENCIA.FGR_FORMULACASVC)
						if (NrContador >= vNrDiasCarencia)
						;
							break
						endif
						;diminui um dia na data base
						DtBase = DtBase -1d
						;retorna se o dia é util ou não
						putitem/id viParams, "CD_EMPRESA"   , "%%CdEmpresa"
						putitem/id viParams, "DT_DATABASE"  , "%%DtBase"
						putitem/id viParams, "IN_SABADOUTIL", "0"
		  				activate "FGRSVCO007".ValidaDiaUtil($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
						if ($procerror)       
							$instancehandle->SetStatus(<STS_ERRO>,$procerror, $procerrorcontext, "") 
							poCdErro  = $xCdErro$
							poCtxErro = $xCtxErro$
							return(-1)
						endif
						if ($status < 0)
							$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
							poCdErro  = $xCdErro$
							poCtxErro = $xCtxErro$
							return(1)
						endif
						;retorna se o dia é util ou não  (SIM / NAO)
						DsDiaUtil = $item("DS_DIAUTIL", voParams)
						if (DsDiaUtil = "SIM")
							NrContador = NrContador + 1
						endif
					endwhile
					DtMelhorDataCompra = DtBase
				else  
					; MFGALEGO - 29/08/2008 / Trf 133/46
					if (DtVenctoClienteMesCorrente < DtVenda)
						DtVenctoClienteAux = DtVenctoClienteMesCorrente
					    addmonths 1, "%%DtVenctoClienteAux"
						DtVenctoClienteAux = $result
						vNrDiasAux = DtVenctoClienteAux - DtVenda
						if (vNrDiasAux <= vNrDiasCarencia)
						    addmonths 1, "%%DtVenctoClienteMesCorrente"
							DtVenctoClienteMesCorrente = $result
						endif						
					endif
					;

					;considerar dias corridos.
					;MTF(23/08/2006) - Projeto 078, tarefa 011.
					;DtMelhorDataCompra = (DtVenctoClienteMesCorrente - NR_DIASCARENCIA.FGR_FORMULACASVC)
					DtMelhorDataCompra = (DtVenctoClienteMesCorrente - vNrDiasCarencia)
					;
				endif
				
				NrContador = 1
				while (NrContador <= NrParcelas)
					;primeira parcela
					if (NrContador = 1)
						if (DtVenda > DtMelhorDataCompra)
							;primeiro vencimento no mes seguinte a compra
						    addmonths 1, "%%DtVenctoClienteMesCorrente"
							$DtVencimento$ = $result
						else
							;primeiro vencimento no mes da compra
							$DtVencimento$ = DtVenctoClienteMesCorrente		
						endif
						;guarda primeiro vencimento
						addmonths -1, "%%$DtVencimento$"
						DtVectoBase = $result
						
						;MTF(17/04/2006) - Projeto 055, tarefa 025.
						;MTF(23/08/2006) - Projeto 078, tarefa 011.
						;if (in_diafixo.fgr_formulacasvc = <TRUE>)
						if (vInDiaFixo = <TRUE>)
						;
							vDiaFixo = $dtvencimento$[D]
							vNrMes   = $dtvencimento$[M]
							vNrAno   = $dtvencimento$[Y]
						endif
						;
					else
						;MTF(17/04/2006) - Projeto 055, tarefa 025.
						;MTF(23/08/2006) - Projeto 078, tarefa 011.
						;if (in_diafixo.fgr_formulacasvc = <TRUE>)
						if (vInDiaFixo = <TRUE>)
						;
							vpiParams = ""
							vNrMes    = vNrMes + 1
							putitem/id vpiParams, "CD_EMPRESA",    cdEmpresa
							putitem/id vpiParams, "DT_VENCIMENTO", $dtvencimento$
							putitem/id vpiParams, "DIA_FIXO",      vDiaFixo
							putitem/id vpiParams, "NR_MES",        vNrMes
							putitem/id vpiParams, "NR_ANO",        vNrAno
							$instancehandle->geraDataDiaFixo(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
							if ($procerror)
								$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
								poCdErro  = $xCdErro$
								poCtxErro = $xCtxErro$
								return(-1)
							elseif ($status < 0)
								$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
								poCdErro  = $xCdErro$
								poCtxErro = $xCtxErro$
								return(-1)
							endif
							
							$dtVencimento$ = $item("DT_VENCIMENTO", vpoParams)
							vNrMes         = $item("NR_MES",        vpoParams)
							vNrAno         = $item("NR_ANO",        vpoParams)
						else
							addmonths "%%NrContador", "%%DtVectoBase"	
							$DtVencimento$ = $result
						endif
					endif
					
					;-----------------------------------------------------------------------------------------
					;para cada vencimento é criada uma ocorrência em uma tabela DUMMY. suas ocorrências 
					;serão retornada para o programa chamador, em forma de lista
					creocc "DUMMY_VECTOS", -1
					NR_PARCELA.DUMMY_VECTOS    = NrContador
					DT_VENCIMENTO.DUMMY_VECTOS = $DtVencimento$
					;-----------------------------------------------------------------------------------------
					Nrcontador = NrContador + 1
				endwhile
			else  ;************	***********QUANDO NÃO FOR CARTÃO PRÓPRIO***********************
				NrContador = 	1
				while (NrContador <= NrParcelas)	
					
					;primeira parcela
					if (NrContador = 1)
						;MTF(23/08/2006) - Projeto 078, tarefa 011.
						;NrDiasSoma = (NR_DIASBASE.FGR_FORMULACASVC + NR_DIAS.FGR_FORMULACASVC)	
						NrDiasSoma = (vNrDiasBase + vNrDias)	
						;

						;RAH - 26/04/2007 (Prj078/Trf412)
;						$DtVencimento$ = (DtVenda + NrDiasSoma)
						;quando mês é fevereiro e esta habilitado o flag IN_FEVEREIRO28 altera adição de dias
						if (DtVenda[M] = 2 & vInFevereiro28 = <TRUE>)
							vBiSexto = DtVenda[Y] / 4
							vBiSexto = vBiSexto[fraction]
							if (vBiSexto = 0)
								$DtVencimento$ = (DtVenda + 29)
							else
								$DtVencimento$ = (DtVenda + 28)
							endif
						else
							$DtVencimento$ = (DtVenda + NrDiasSoma)
						endif;;
					else
						;demais parcelas
						;MTF(17/04/2006) - Projeto 055, tarefa 025.
						;MTF(23/08/2006) - Projeto 078, tarefa 011.
						;if (in_diafixo.fgr_formulacasvc = <TRUE>)
						if (vInDiaFixo = <TRUE>)
						;
							vpiParams = ""
							vNrMes    = vNrMes + 1
							putitem/id vpiParams, "CD_EMPRESA",    cdEmpresa
							putitem/id vpiParams, "DT_VENCIMENTO", dtVencimentoFinal
							putitem/id vpiParams, "DIA_FIXO",      vDiaFixo
							putitem/id vpiParams, "NR_MES",        vNrMes
							putitem/id vpiParams, "NR_ANO",        vNrAno
							$instancehandle->geraDataDiaFixo(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
							if ($procerror)
								$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
								poCdErro  = $xCdErro$
								poCtxErro = $xCtxErro$
								return(-1)
							elseif ($status < 0)
								$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
								poCdErro  = $xCdErro$
								poCtxErro = $xCtxErro$
								return(-1)
							endif
							
							$dtVencimento$ = $item("DT_VENCIMENTO", vpoParams)
							vNrMes         = $item("NR_MES", vpoParams)
							vNrAno         = $item("NR_ANO", vpoParams)
						else
							;MTF(23/08/2006) - Projeto 078, tarefa 011.
							;NrDiasSoma     = NR_DIAS.FGR_FORMULACASVC
							;$DtVencimento$ = ($DtVencimento$ + NR_DIAS.FGR_FORMULACASVC)
							NrDiasSoma     = vNrDias
							;

							;RAH - 26/04/2007 (Prj078/Trf412)
							;quando mês é fevereiro e esta habilitado o flag IN_FEVEREIRO28 altera adição de dias
;							$DtVencimento$ = ($DtVencimento$ + vNrDias)
							if ($DtVencimento$[M] = 2 & vInFevereiro28 = <TRUE>)
								vBiSexto = $DtVencimento$[Y] / 4
								vBiSexto = vBiSexto[fraction]
								if (vBiSexto = 0)
									$DtVencimento$ = ($DtVencimento$ + 29)
								else
									$DtVencimento$ = ($DtVencimento$ + 28)
								endif
							else
								$DtVencimento$ = ($DtVencimento$ + vNrDias)
							endif;;

						endif
						;
					endif
					
					;-----------------------------------------------------------------------------------------
					;se estiver configurado na formula do cartão,,, considerar dia útil .
					;a data de vencimento encontrada,,, será validada para ser em um dia útil
					;MTF(23/08/2006) - Projeto 078, tarefa 011.
					;if (IN_DIASUTIL.FGR_FORMULACASVC = <TRUE>)
					if (vInDiasUtil = <TRUE>)
					;
						;verifica se é feriado e se é dia útil (retorna o proximo dia útil)
						putitem/id viParams, "CD_EMPRESA"   , "%%CdEmpresa"
						putitem/id viParams, "DT_DATA"      , "%%$DtVencimento$"
						putitem/id viParams, "IN_SABADOUTIL", "0"
			 			activate "FGRSVCO007".RetornaProximoDiaUtil($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
						if ($procerror)       
							$instancehandle->SetStatus(<STS_ERRO>,$procerror, $procerrorcontext, "") 
							poCdErro  = $xCdErro$
							poCtxErro = $xCtxErro$
							return(-1)
						endif
						if ($status < 0)
							$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
							poCdErro  = $xCdErro$
							poCtxErro = $xCtxErro$
							return(1)
						endif
						DtVencimentoFinal = $item("DT_DIAUTIL", voParams)
					;Hugo Andreo
					;Precisei colocar esse else para alimentar a variavel DtVencimentoFinal
					;com o valor da DtVencimento, caso não utilize Dia Util
					else
						DtVencimentoFinal = $dtVencimento$
					endif
					
					;MTF(17/04/2006) - Projeto 055, tarefa 025.
					;MTF(23/08/2006) - Projeto 078, tarefa 011.
					;if (nrContador = 1) & (in_diafixo.fgr_formulacasvc = <TRUE>)
					if (nrContador = 1) & (vInDiaFixo = <TRUE>)
					;
						vDiaFixo = dtVencimentoFinal[D]
						vNrMes   = dtVencimentoFinal[M]
						vNrAno   = dtVencimentoFinal[Y]
					endif
					;
					
					;-----------------------------------------------------------------------------------------
					;para cada vencimento é criada uma ocorrência em uma tabela DUMMY. suas ocorrências serão retornada para o programa chamador, em forma de lista
					creocc "DUMMY_VECTOS", -1
					NR_PARCELA.DUMMY_VECTOS     = NrContador
					DT_VENCIMENTO.DUMMY_VECTOS  = DtVencimentoFinal
					NR_DIAS.DUMMY_VECTOS        = NrDiasSoma
					;-----------------------------------------------------------------------------------------
					Nrcontador = NrContador + 1
				endwhile
			endif ;FIM TESTE SE CARTÃO PRÓPRIO OU NÃO
		endif
		;
	endif

	;-----------------------------------------------------------------------------------------
	;montagem da lista dos vencimentos encontrados de acordo com a configuração da formula do cartão

	setocc"DUMMY_VECTOS", 1
	while ($status >= 0)
		putlistitems/occ ListaVencimento, "DUMMY_VECTOS"
		;Projeto 078 - Tarefa 1317 - Aloisio Gargantini - 26/03/2008
		putitem/id ListaVencimento, "IN_PROPRIO",   vInProprio
		putitem/id ListaVencimento, "IN_GERAFATOP", vInGeraFaturaOp
		;
		putitem poParams, -1, ListaVencimento
		setocc"DUMMY_VECTOS", $curocc(DUMMY_VECTOS) + 1
	endwhile
	putitem/id poParams, "PR_TAXA", vPrTaxa
	;-----------------------------------------------------------------------------------------
	$DtVencimento$ = ""

	exit(0)
end ;VencimentoParcelas


;--------------------------------
public operation geraDataDiaFixo
;--------------------------------
	params
		string  piGlobal  :IN
		string  piParams  :IN
		string  poParams  :OUT
		numeric poCdErro  :OUT
		string  poCtxErro :OUT
	endparams
	variables
		string  vpiParams, vpoParams
		numeric vCdEmpresa, vDiaFixo, vDia, vMes, vAno, vBiSexto
		date    vDtVencimento
	endvariables
	
	vCdEmpresa = $item("CD_EMPRESA", piParams)
	vDiaFixo   = $item("DIA_FIXO",   piParams)
	vMes       = $item("NR_MES",     piParams)
	vAno       = $item("NR_ANO",     piParams)
	if (vMes > 12)
		vMes = 1
		vAno = vAno + 1
	endif
	vDtVencimento = "%%vDiaFixo/%%vMes/%%vAno"
	if (vDtVencimento = "")
		if (vMes = 1)
			vDia = 31
		endif
		if (vMes = 2)
			vBiSexto = vAno / 4
			vBiSexto = vBiSexto[fraction]
			if (vBiSexto = 0)
				vDia = 29
			else
				vDia = 28
			endif
		endif
		if (vMes = 3)
			vDia = 31
		endif
		if (vMes = 4)
			vDia = 30
		endif
		if (vMes = 5)
			vDia = 31
		endif
		if (vMes = 6)
			vDia = 30
		endif
		if (vMes = 7)
			vDia = 31
		endif
		if (vMes = 8)
			vDia = 31
		endif
		if (vMes = 9)
			vDia = 30
		endif
		if (vMes = 10)
			vDia = 31
		endif
		if (vMes = 11)
			vDia = 30
		endif
		if (vMes = 12)
			vDia = 31
		endif
		
		vDtVencimento = "%%vDia/%%vMes/%%vAno"
	endif
	
	poParams = ""
	putitem/id poParams, "NR_MES",        vMes
	putitem/id poParams, "NR_ANO",        vAno
	putitem/id poParams, "DT_VENCIMENTO", vDtVencimento
	
	return(0)
End ;operation geraDataDiaFixo.


;------------------------------------------------------;
public operation geraVenctoConvenio                    ;
;------------------------------------------------------;
; MTF    : 03/10/2006          Projeto 078, tarefa 038 ;
; Funcao : Gerar parcelas de vencimento para convenio. ;
; Chamada: operation - vencimentoParcelas()            ;
;------------------------------------------------------;
;
	params
		string  piGlobal  :IN
		string  piParams  :IN
		string  poParams  :OUT
		numeric poCdErro  :OUT
		string  poCtxErro :OUT
	endparams
	variables
		string  vpiParams, vpoParams, vDataAux
		numeric vCdPortador, vNrParcelas, vNrDiasCarencia, vDiaVenctoConvenio, vNrMes, vNrAno, vNrContador
		date    vDtVenda, vDtConvenio, vDtVencimento
	endvariables
	
	vDtVenda           = $item("DT_VENDA",           piParams)
	vCdPortador        = $item("CD_PORTADOR",        piParams)
	vNrParcelas        = $item("NR_PARCELAS",        piParams)
	vDiaVenctoConvenio = $item("DIA_VENCTOCONVENIO", piParams)
	vNrDiasCarencia    = $item("NR_DIASCARENCIA",    piParams)
	
	if (vDtVenda = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Favor informar data de venda para gerar data de vencimento de convênio", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if (vNrParcelas = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Favor informar número de parcelas para gerar data de vencimento de convênio", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if (vDiaVenctoConvenio = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Favor informar o dia de vencimento do convênio", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	vNrContador = 1
	repeat
		
		if (vNrContador = 1)
			vNrMes = vDtVenda[M]
			vNrAno = vDtVenda[Y]
			vDtConvenio = "%%vDiaVenctoConvenio/%%vNrMes/%%vNrAno"
			vDtVencimento = vDtVenda + vNrDiasCarencia
			if (vDtVencimento > vDtConvenio)
				vNrMes = vNrMes + 1
			endif
		else
			vNrMes = vNrMes + 1
		endif
		
		vpiParams = ""
		putitem/id vpiParams, "DIA_FIXO", vDiaVenctoConvenio
		putitem/id vpiParams, "NR_MES",   vNrMes
		putitem/id vpiParams, "NR_ANO",   vNrAno
		$instancehandle->geraDataDiaFixo(piGlobal, vpiParams, vpoParams, $xCdErro$, $xCtxErro$)
		if ($procerror)
			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		
		vDtVencimento = $item("DT_VENCIMENTO", vpoParams)
		vNrMes        = $item("NR_MES",        vpoParams)
		vNrAno        = $item("NR_ANO",        vpoParams)
		
		creocc "DUMMY_VECTOS", -1
		nr_parcela.dummy_vectos    = vNrContador
		dt_vencimento.dummy_vectos = vDtVencimento
		
		vNrContador = vNrContador + 1
	until(vNrParcelas < vNrContador)
	
	return(0)
End ;operation geraVenctoConvenio.
