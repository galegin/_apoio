;-------------
entry getParam
;-------------
	params
		numeric piCdEmpresa : IN
	endparams

	variables
		string viParams, voParams
	endvariables

	if (piCdEmpresa = 0)
		piCdEmpresa = $item("CD_EMPRESA", $xlpg$)
	endif
	
	;parâmetros corporativos
	viParams = ""
	putitem viParams, -1, "CD_TPMANUT_CXUSUARIO" ;--Douglas Ferreira - [Prj/Tarefa 186/0227] - 19/09/2011
	activate "ADMSVCO001".GetLstParametro(viParams, voParams, $xCdErro$, $xCtxErro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		return(-1)
	endif
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		return(-1)
	endif
	$cdTpManutCxUsuario$ = $item("CD_TPMANUT_CXUSUARIO", voParams)  ;--Douglas Ferreira - [Prj/Tarefa 186/0227] - 19/09/2011
	
	;parâmetros por empresa
	viParams = ""
	putitem viParams, -1, "CD_CTAPES_CXMATRIZ"
	putitem viParams, -1, "NR_HORA_CANCEL_NFE"
	putitem viParams, -1, "TP_AMBIENTE_NFE"
	putitem viParams, -1, "NR_HR_DIF_FUSOHORARIO"
	putitem viParams, -1, "TIN_TINTURARIA" ;thamati 19/03/2010 [Proj. 0156 - Tar. 0232]
	putitem viParams, -1, "CD_CTAPES_CXFILIAL"    ; DIONE |PRJ 156/0283| 07/05/10
	putitem viParams, -1, "IN_ENVIO_RECEB_MALOTE" ; DIONE |PRJ 156/0283| 07/05/10
	putitem viParams, -1, "IN_UTILIZA_CXFILIAL"
	putitem viParams, -1, "IN_BLOQUEIA_CANC_NFE"; rodrigo - PRJ 176 TAR 83 - 14/03/2011
	;==BY BIANCHINI[PRJ/TAREFA 186/0019] 06/05/2011==;	
	;putitem viParams, -1, "IN_CONFERENTE_CAIXA" 
	putitem viParams, -1, "IN_CANC_TRANS_CX_FECHADO"
	;==	
	;==BY BIANCHINI[PRJ/TAREFA 186/0307] 04/11/2011==;	
	putitem viParams, -1, "IN_SUPRIMENTO_AUTOMATICO"
	;==
	putitem viParams, -1, "TP_VALIDACAO_CANC_TRA_ECF" ;* Claudemir - Prj/Tarefa: 156/639 - 23/12/2011
	putitem viParams, -1, "TP_BONUS_DESCONTO" ;Mendes - PRJ=180/TAR=336 - 20/01/2012	
	activate "ADMSVCO001".GetParamEmpresa(piCdEmpresa, viParams, voParams, $xCdErro$, $xCtxerro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		return(-1)
	elseif ($xCdErro$)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=%%$item("DESCRICAO", $xCtxErro$)", "")
		return(-1)
	endif
	
	$nrCtaMatriz$          = $item("CD_CTAPES_CXMATRIZ"        , voParams)
	$nrHoraCancelNFE$	   = $item("NR_HORA_CANCEL_NFE"        , voParams)
	$tpAmbienteNFE$        = $item("TP_AMBIENTE_NFE"           , voParams)
	$nrHrDifFusoHorario$   = $item("NR_HR_DIF_FUSOHORARIO"     , voParams)
	$tinTituraria$         = $item("TIN_TINTURARIA"            , voParams) ;thamati 19/03/2010 [Proj. 0156 - Tar. 0232]
	$cdCtaPesCxFilial$     = $item("CD_CTAPES_CXFILIAL"        , voParams) ; DIONE |PRJ 156/0283| 07/05/10
	$inEnvioRecebMalote$   = $item("IN_ENVIO_RECEB_MALOTE"     , voParams) ; DIONE |PRJ 156/0283| 07/05/10
	$inUtilizaCxFilial$    = $item("IN_UTILIZA_CXFILIAL"       , voParams)
	$inBloqueiaCancNfe$    = $item("IN_BLOQUEIA_CANC_NFE"      , voParams) ; rodrigo - PRJ 176 TAR 83 - 14/03/2011
	;==BY BIANCHINI[PRJ/TAREFA 186/0019] 06/05/2011==;
	;$inConferenteCaixa$    = $item("IN_CONFERENTE_CAIXA"       , voParams)
	$inCancTransCxFechado$ = $item("IN_CANC_TRANS_CX_FECHADO"  , voParams)
	;==
	;==BY BIANCHINI[PRJ/TAREFA 186/0307] 04/11/2011==;	
	$inSuprimentoAutomatico$ = $item("IN_SUPRIMENTO_AUTOMATICO", voParams)
	;==
	$tpValidacaoCancEcf$	= $item("TP_VALIDACAO_CANC_TRA_ECF", voParams) ;* Claudemir - Prj/Tarefa: 156/639 - 23/12/2011
	$tpBonus$ = $item("TP_BONUS_DESCONTO", voParams) ;Mendes - PRJ=180/TAR=336 - 20/01/2012
	return(0)
end


;---Elia Proj. 105/25 15/09/08
entry cancelaItemContrato
;-----------------------------

	params
		numeric piCdEmpContrato : IN
		numeric piNrSeqContrato : IN
		numeric piNrSeqItem     : IN
	endparams

	variables
		string viParams, voParams
		boolean vInDiscard	
	endvariables
	return(0)
	if (piNrSeqItem != 0)
		clear/e "IMB_CONTRATOISVC"
		NR_SEQITEM.IMB_CONTRATOISVC/init = piNrSeqItem
		retrieve/e "IMB_CONTRATOISVC"
		if ($status >= 0)

			clear/e "F_IMB_CONTTRASVC"
			CD_EMPCONTRATO.F_IMB_CONTTRASVC/init = piCdEmpContrato
			NR_SEQCONTRATO.F_IMB_CONTTRASVC/init = piNrSeqContrato
			NR_SEQITEM.F_IMB_CONTTRASVC/init = piNrSeqItem
			NR_TRANSACAO.F_IMB_CONTTRASVC/init = NR_TRANSACAO.TRA_TRANSACAOSVC
			DT_TRANSACAO.F_IMB_CONTTRASVC/init = DT_TRANSACAO.TRA_TRANSACAOSVC
			retrieve/e "F_IMB_CONTTRASVC"
			if ($status >= 0)
				setocc "F_IMB_CONTTRASVC", -1
				setocc "F_IMB_CONTTRASVC", 1
				while ($status >= 0)
					clear/e "F_TRA_TRANSACSVC"
					CD_EMPRESA.F_TRA_TRANSACSVC/init = CD_EMPTRANSACAO.F_IMB_CONTTRASVC
					NR_TRANSACAO.F_TRA_TRANSACSVC/init = NR_TRANSACAO.F_IMB_CONTTRASVC
					DT_TRANSACAO.F_TRA_TRANSACSVC/init = DT_TRANSACAO.F_IMB_CONTTRASVC
					retrieve/e "F_TRA_TRANSACSVC"
					if ($status >= 0)
						;nesse caso já foi cancelado o contrato
						if (TP_SITUACAO.F_TRA_TRANSACSVC = 6)
							return(0)
						endif
					endif
					setocc "F_IMB_CONTTRASVC", $curocc("F_IMB_CONTTRASVC") + 1
				endwhile
			endif

			clear/e "F_IMB_CONTTRASVC"
			CD_EMPCONTRATO.F_IMB_CONTTRASVC/init = piCdEmpContrato
			NR_SEQCONTRATO.F_IMB_CONTTRASVC/init = piNrSeqContrato
			NR_SEQITEM.F_IMB_CONTTRASVC/init = piNrSeqItem
			CD_EMPTRANSACAO.F_IMB_CONTTRASVC/init = CD_EMPRESA.TRA_TRANSACAOSVC
			retrieve/e "F_IMB_CONTTRASVC"
			if ($status >= 0)

				;descarta as transações canceladas	
				setocc "F_IMB_CONTTRASVC", -1
				setocc "F_IMB_CONTTRASVC", 1
				while ($status >= 0)
					vInDiscard = <FALSE>
					;---Verifica se a transacao do contrato nao esta cancelada
					clear/e "F_TRA_TRANSACSVC"
					CD_EMPRESA.F_TRA_TRANSACSVC/init = CD_EMPTRANSACAO.F_IMB_CONTTRASVC
					NR_TRANSACAO.F_TRA_TRANSACSVC/init = NR_TRANSACAO.F_IMB_CONTTRASVC
					DT_TRANSACAO.F_TRA_TRANSACSVC/init = DT_TRANSACAO.F_IMB_CONTTRASVC
					retrieve/e "F_TRA_TRANSACSVC"
					if ($status >= 0)
						if (TP_SITUACAO.F_TRA_TRANSACSVC = 6)
							vInDiscard = <TRUE>	
						endif
					endif
					if (vInDiscard = <TRUE>)
						discard "F_IMB_CONTTRASVC", 0
						if ($status = 0)
							$status = -1
						endif
					else
						setocc "F_IMB_CONTTRASVC", $curocc("F_IMB_CONTTRASVC") + 1
					endif
				endwhile	
				;-----------------------------				
;				sort/e "F_IMB_CONTTRASVC", "CD_EMPCONTRATO.F_IMB_CONTTRASVC,NR_SEQCONTRATO.F_IMB_CONTTRASVC,CD_EMPTRANSACAO.F_IMB_CONTTRASVC,DT_TRANSACAO.F_IMB_CONTTRASVC,NR_TRANSACAO.F_IMB_CONTTRASVC :d"
;				sort/e "F_IMB_CONTTRASVC", "CD_EMPCONTRATO.F_IMB_CONTTRASVC,NR_SEQCONTRATO.F_IMB_CONTTRASVC,CD_EMPTRANSACAO.F_IMB_CONTTRASVC,DT_TRANSACAO.F_IMB_CONTTRASVC,DT_PERIODOINICIAL.F_IMB_CONTTRASVC :d"
;				sort/e "F_IMB_CONTTRASVC", "CD_EMPCONTRATO.F_IMB_CONTTRASVC,NR_SEQCONTRATO.F_IMB_CONTTRASVC,CD_EMPTRANSACAO.F_IMB_CONTTRASVC,DT_TRANSACAO.F_IMB_CONTTRASVC :d"
				sort/e "F_IMB_CONTTRASVC", "CD_EMPCONTRATO.F_IMB_CONTTRASVC,NR_SEQCONTRATO.F_IMB_CONTTRASVC,CD_EMPTRANSACAO.F_IMB_CONTTRASVC,DT_PERIODOFINAL.F_IMB_CONTTRASVC :d"

				setocc "F_IMB_CONTTRASVC", 1
				while ($status >= 0)
					;---Verifica se a transacao do contrato nao esta cancelada
					clear/e "F_TRA_TRANSACSVC"
					CD_EMPRESA.F_TRA_TRANSACSVC/init = CD_EMPTRANSACAO.F_IMB_CONTTRASVC
					NR_TRANSACAO.F_TRA_TRANSACSVC/init = NR_TRANSACAO.F_IMB_CONTTRASVC
					DT_TRANSACAO.F_TRA_TRANSACSVC/init = DT_TRANSACAO.F_IMB_CONTTRASVC
					retrieve/e "F_TRA_TRANSACSVC"
					if ($status >= 0)
						if (NR_TRANSACAO.F_IMB_CONTTRASVC != NR_TRANSACAO.TRA_TRANSACAOSVC) 
							$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=É necessária cancelar primeiramente a transação: %%CD_EMPTRANSACAO.F_IMB_CONTTRASVC - %%DT_TRANSACAO.F_IMB_CONTTRASVC - %%NR_TRANSACAO.F_IMB_CONTTRASVC!", "")
							return(-1)
						else	
							DT_ULTFAT.IMB_CONTRATOISVC = $next("DT_PERIODOFINAL.F_IMB_CONTTRASVC")
							break
						endif
					endif
					;
					setocc "F_IMB_CONTTRASVC", $curocc("F_IMB_CONTTRASVC") + 1
				endwhile
			endif

			if (NR_PARCELA.IMB_CONTRATOISVC = 1)
				NR_PARCELA.IMB_CONTRATOISVC = ""	
			else
				NR_PARCELA.IMB_CONTRATOISVC = NR_PARCELA.IMB_CONTRATOISVC - 1
			endif

			if (TP_SITUACAO.IMB_CONTRATOISVC = 5)
				TP_SITUACAO.IMB_CONTRATOISVC = 1
			endif	

			viParams = ""
			putlistitems/occ viParams, "IMB_CONTRATOISVC"
			putitem/id viParams, "CD_EMPCONTRATO", piCdEmpContrato
			putitem/id viParams, "NR_SEQCONTRATO", piNrSeqContrato
			putitem/id viParams, "NR_SEQITEM", piNrSeqItem
			putitem/id viParams, "CD_COMPONENTE", $cdComponente$
			activate "IMBSVCO001".gravaItemContrato($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				return(-1)
			endif    
		endif
	endif

	return (0)

End ; entry cancelaItemContrato

;-----------------------------
;-=CANONICO=- (11/03/2010) TAR 216 PRJ 156 - Essa validação é para não permitir cancelar NFE após 7 de autorização, observe que o fusoHorario como parametro.
entry validaCancelamentoNFE
;-----------------------------
	variables
		string viParams, voParams, vPriLetra 
		numeric vNrHora
	endvariables

	; -> rodrigo - PRJ 175 TAR 83 - 14/03/2011
	if($inBloqueiaCancNfe$ = <true>)
		if($vTpSituacaoNF$ = "C")&(TP_MODDCTOFISCAL.FIS_NFSVC = 55)&(TP_PROCESSAMENTO.FIS_NFESVC != "A")
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Para NF-e que não esteja Autorizada não é permitido o cancelamento!", "ADICIONAL=Operação->TRASVCO013.cancelaTransacao")
			return(-1)			
		endif
	endif
	; <- rodrigo - PRJ 175 TAR 83 - 14/03/2011

	if ($tpAmbienteNFE$ = 1) ;1 = produção - 2 = homologação
		if (TP_PROCESSAMENTO.FIS_NFESVC = "A") ;A = Autorizada - G = Gerada - E = Enviada - D = Denegada - C = Cancelada - R = Rejeitada
	
			; --- DIONE |130/1495| 04/11/2011
			;if(TP_SITUACAO.FIS_NFESVC != "X")
			;	$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Não é permitido o cancelamento para nota NF-e excluída!", "ADICIONAL=Operação->TRASVCO013.cancelaTransacao")
			;	return(-1)		
			;endif
			; --- 

			$dtServidor$ = $datim
			$dtAuxiliar$ = DT_RECEBIMENTO.FIS_NFESVC
			vPriLetra = $dtAuxiliar$[1,1]
			$dtAuxiliar$ = $replace($dtAuxiliar$, 1, vPriLetra, "2");comando necessario porque a data do banco vem somente com 2 digitos exemplo (31/10/09)

			$dtNfe$ = $dtAuxiliar$
			vNrHora = $dtServidor$ - $dtNfe$
			
			vNrHora = (vNrHora * 24)  - $nrHrDifFusoHorario$
			if (vNrHora > $nrHoraCancelNFE$)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Nota fiscal eletrônica - %%NR_NF.FIS_NFSVC autorizada mais de %%$nrHoraCancelNFE$ horas!", "ADICIONAL=Operação->TRASVCO013.cancelaTransacao")
				return(-1)
			endif
		endif
	endif

	return (0)
End ; entry validaCancelamentoNFE


;-----------------------------------------
;-- MAD [Proj/Tar.156/624] - 02/09/2011
entry validaFatDupContabilidade
;----------------------------------------

	params
		numeric piCdEmpLiq : IN
		date    piDtLiq    : IN
		numeric piNrSeqLiq : IN
		string  piTpLiq    : IN
	endparams

	variables
		string viParams, voParams, vDsMensagem
	endvariables

	if (piCdEmpLiq = "")
		return(0)
	endif

	if (piDtLiq = "")
		return(0)
	endif

	if (piNrSeqLiq = "")
		return(0)
	endif

	if (piTpLiq = "")
		return(0)
	endif

	if (piTpLiq = "CP")
		clear/e "FGR_LIQITEMCCSVC"
		CD_EMPLIQ.FGR_LIQITEMCCSVC/init = piCdEmpLiq
		DT_LIQ.FGR_LIQITEMCCSVC/init    = piDtLiq
		NR_SEQLIQ.FGR_LIQITEMCCSVC/init = piNrSeqLiq
		retrieve/e "FGR_LIQITEMCCSVC"
		if ($status >= 0)
			setocc "FGR_LIQITEMCCSVC", 1
			while ($status >= 0)
				if (CD_EMPRESADUP.FGR_LIQITEMCCSVC != 0 & CD_FORNECDUP.FGR_LIQITEMCCSVC != 0 & NR_DUPLICATADUP.FGR_LIQITEMCCSVC != 0 & NR_PARCELADUP.FGR_LIQITEMCCSVC != 0)
					viParams = ""
					putitem/id viParams, "CD_EMPRESA"   , CD_EMPRESADUP.FGR_LIQITEMCCSVC
					putitem/id viParams, "CD_FORNECEDOR", CD_FORNECDUP.FGR_LIQITEMCCSVC
					putitem/id viParams, "NR_DUPLICATA" , NR_DUPLICATADUP.FGR_LIQITEMCCSVC
					putitem/id viParams, "NR_PARCELA"   , NR_PARCELADUP.FGR_LIQITEMCCSVC
					putitem/id viParams, "TP_PROCESSO"  , 0
					activate "FCPSVCO005".validarLanctoContabilDup($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
					if ($procerror)       
						$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						return(-1)
					elseif ($status < 0)
						$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
						return(-1)
					endif
					if ($item("IN_CONTABILIZADO",voParams) = <TRUE>)
						vDsMensagem = "Transação não pode ser cancelada pois a duplicata %%NR_DUPLICATADUP.FGR_LIQITEMCCSVC%%%-%%NR_PARCELADUP.FGR_LIQITEMCCSVC"
						vDsMensagem = "%%vDsMensagem já está contabilizada no%%^ pool empresa %%$item('CD_POOLEMPRESA',voParams)"
						vDsMensagem = "%%vDsMensagem - exercício contábil %%$item('DT_EXERCONTABIL',voParams) - lote %%$item('NR_LOTE',voParams)%%^"
						$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsMensagem", "ADICIONAL=Operação->TRASVCO013.cancelaTransacao")
						return(-1)
					endif
				endif
				setocc "FGR_LIQITEMCCSVC", $curocc("FGR_LIQITEMCCSVC") + 1
			endwhile
		endif

	elseif (piTpLiq = "CR")
		clear/e "FGR_LIQITEMCRSVC"
		CD_EMPLIQ.FGR_LIQITEMCRSVC/init = piCdEmpLiq
		DT_LIQ.FGR_LIQITEMCRSVC/init    = piDtLiq
		NR_SEQLIQ.FGR_LIQITEMCRSVC/init = piNrSeqLiq
		TP_TIPOREG.FGR_LIQITEMCRSVC/init = 2 ;---Elia Proj. 111/1944 14/09/2011
		retrieve/e "FGR_LIQITEMCRSVC"
		if ($status >= 0)
			setocc "FGR_LIQITEMCRSVC", 1
			while ($status >= 0)
				if (CD_EMPFAT.FGR_LIQITEMCRSVC != 0 & CD_CLIENTE.FGR_LIQITEMCRSVC != 0 & NR_FAT.FGR_LIQITEMCRSVC != 0 & NR_PARCELA.FGR_LIQITEMCRSVC != 0)
					viParams = ""
					putitem/id viParams, "CD_EMPRESA" , CD_EMPFAT.FGR_LIQITEMCRSVC
					putitem/id viParams, "CD_CLIENTE" , CD_CLIENTE.FGR_LIQITEMCRSVC
					putitem/id viParams, "NR_FAT"     , NR_FAT.FGR_LIQITEMCRSVC
					putitem/id viParams, "NR_PARCELA" , NR_PARCELA.FGR_LIQITEMCRSVC
					putitem/id viParams, "TP_PROCESSO", 0
					activate "FCRSVCO010".validarLanctoContabilFat($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
					if ($procerror)       
						$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						return(-1)
					elseif ($status < 0)
						$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
						return(-1)
					endif
					if ($item("IN_CONTABILIZADO",voParams) = <TRUE>)
						vDsMensagem = "Transação não pode ser cancelada pois a fatura %%NR_FAT.FGR_LIQITEMCRSVC%%%-%%NR_PARCELA.FGR_LIQITEMCRSVC"
						vDsMensagem = "%%vDsMensagem já está contabilizada no%%^ pool empresa %%$item('CD_POOLEMPRESA',voParams)"
						vDsMensagem = "%%vDsMensagem - exercício contábil %%$item('DT_EXERCONTABIL',voParams) - lote %%$item('NR_LOTE',voParams)%%^"
						$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%vDsMensagem", "ADICIONAL=Operação->TRASVCO013.cancelaTransacao")
						return(-1)
					endif
				endif
				setocc "FGR_LIQITEMCRSVC", $curocc("FGR_LIQITEMCRSVC") + 1
			endwhile
		endif
	endif

	return(0)

End ; entry validaFatDupContabilidade
;;

;Cris PRJ/TAR: 171/0196 - 20/09/2011
;Ao estornar a finalização da OP, deve alterar a situação da contagem para andamento.
;-----------------------------
entry alteraSituacaoContagemOp
;-----------------------------
	variables
		string viParams, voParams
	endvariables

	clear/e "PCP_OPCONTSVC"
	CD_EMPCONTAGEM.PCP_OPCONTSVC/init = CD_EMPCONTAGEM.TRA_TRANSACCOSVC
	NR_CONTAGEM.PCP_OPCONTSVC/init    = NR_CONTAGEM.TRA_TRANSACCOSVC
	retrieve/e "PCP_OPCONTSVC"
	if ($status >= 0)				
		viParams = ""		
		putitem/id viParams, "CD_EMPRESA" , CD_EMPCONTAGEM.PCP_OPCONTSVC
		putitem/id viParams, "NR_CONTAGEM", NR_CONTAGEM.PCP_OPCONTSVC
		putitem/id viParams, "CD_EMPOP"   , CD_EMPOP.PCP_OPCONTSVC
		putitem/id viParams, "NR_CICLO"   , NR_CICLO.PCP_OPCONTSVC
		putitem/id viParams, "NR_OP"      , NR_OP.PCP_OPCONTSVC
		putitem/id viParams, "TP_SITUACAO", 1
		putitem/id viParams, "TP_RELACIONAMENTO", 1 
		activate "GERSVCO053".alteraSitOpContagem($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			return(-1)
		elseif ($xCdErro$)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=%%$item("DESCRICAO", $xCtxErro$)", "")
			return(-1)
		endif
	endif

	return(0)

end ;alteraSituacaoContagemOp

;* Claudemir - Prj/Tarefa: 156/639 - 13/12/2011
;-----------------------------
entry validaCancelamentoCupom
;-----------------------------
	variables
		string	viParams, voParams, vDsNrSerie
		numeric vNrCupom
		boolean vInCancelou
	endvariables

	vInCancelou	= <FALSE>
	
	clear/e "TRA_TRANSACECSVC"		
	CD_EMPRESA.TRA_TRANSACECSVC/init	= CD_EMPRESA.TRA_TRANSACAOSVC
	NR_TRANSACAO.TRA_TRANSACECSVC/init	= NR_TRANSACAO.TRA_TRANSACAOSVC
	DT_TRANSACAO.TRA_TRANSACECSVC/init	= DT_TRANSACAO.TRA_TRANSACAOSVC
	retrieve/e "TRA_TRANSACECSVC"
	if ($status >= 0)
		;le o cadastro da ECF para pegar o número de série
		clear/e "FIS_ECFSVC"
		CD_EMPRESA.FIS_ECFSVC/init	= CD_EMPECF.TRA_TRANSACECSVC
		NR_ECF.FIS_ECFSVC/init		= NR_ECF.TRA_TRANSACECSVC
		retrieve/e "FIS_ECFSVC"
		if ($status >= 0)
			; pega o número do série da ECF
			viParams = ""
			putitem/id viParams, "IN_IMPCUPOMFISCAL", <FALSE>
			putitem/id viParams, "NM_FUNCAO", <ECF_NUMERO_SERIE>
			activate "ECFSVCO001".leinformacaoImpressora(viParams,voParams,$xcderro$,$xctxerro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				return(-1)
			elseif ($status = -10)
				viParams = ""
				voParams = ""
				putitem/id viParams,"TITULO", "Erro de comunicação com a ECF"
				putitem/id viParams,"MENSAGEM", $item("DESCRICAO",$xctxerro$)
				activate "GERFP008".EXEC(viParams,voParams,$xCdErro$,$xCtxErro$)
				if ($procerror)       
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					return(-1)
				endif
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				return(-1)
			endif

			vDsNrSerie = $item("NR_SERIE",voParams)
			vDsNrSerie = $rtrim(vDsNrSerie," ")
		else
			$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Não é possível cancelar a transação!%%^ECF não cadastrada.", "ADICIONAL=Operação->TRASVCO013.validaCancelamentoCupom")
			return(-1)				
		endif

		; verifica se o número de série da ECF é o mesmo da ECF da transação
		if (vDsNrSerie = CD_SERIEFAB.FIS_ECFSVC)			
			; pega o número do cupom 
			viParams = ""
			putitem/id viParams, "IN_IMPCUPOMFISCAL", <FALSE>
			putitem/id viParams, "NM_FUNCAO", <ECF_NUMERO_CUPOM>
			activate "ECFSVCO001".leinformacaoImpressora(viParams,voParams,$xcderro$,$xctxerro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				return(-1)
			elseif ($status = -10)
				viParams = ""
				voParams = ""
				putitem/id viParams,"TITULO", "Erro de comunicação com a ECF"
				putitem/id viParams,"MENSAGEM", $item("DESCRICAO",$xctxerro$)
				activate "GERFP008".EXEC(viParams,voParams,$xCdErro$,$xCtxErro$)
				if ($procerror)       
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					return(-1)
				endif
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				return(-1)
			endif

			vNrCupom = $item("NR_CUPOM",voParams)

			; verifica se o número do último cupom for igual ao número do cupom da transação
			; se for, vai cancelar o cupom
			if (vNrCupom = NR_CUPOM.TRA_TRANSACECSVC)
				viParams = ""
				voParams = ""
				activate "ECFSVCO001".CancelaCupom(viParams,voParams,$xcderro$,$xctxerro$)
				if ($procerror)       
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					return(-1)
				elseif ($status = -10)
					viParams = ""
					voParams = ""
					putitem/id viParams,"TITULO", "Erro de comunicação com a ECF"
					putitem/id viParams,"MENSAGEM", $item("DESCRICAO",$xctxerro$)
					activate "GERFP008".EXEC(viParams,voParams,$xCdErro$,$xCtxErro$)
					if ($procerror)       
						$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						return(-1)
					endif
					return(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					return(-1)
				endif

				vInCancelou	= <TRUE>
			else
				; Verifica se o NR_CUPOM.TRA_TRANSACECF é referente a um documento vinculado
				viParams = ""
				voParams = ""
				putitem/id viParams, "NR_CUPOM", vNrCupom ; número do último cupom retornado
				putitem/id viParams, "NR_SERIE", vDsNrSerie
				activate "ECFSVCO011".verificaDocVinculado(viParams,voParams,$xcderro$,$xctxerro$)
				if ($procerror)       
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					return(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					return(-1)
				endif

				; "ECFSVCO011".verificaDocVinculado = Retorna o número do COO a qual o documento foi vinculado
				; caso esse documento (último COO retornado pela ECF seja referente a um doc vinculado)

				; se o retorno da função for igual ao COO da transação, então o último COO retornado pela ECF
				; é referente a um documento vinculado e esse vinculado é o cupom da transação,
				; nesse caso, poderá ser feito o cancelamento, pois o vinculado será estornado e o cupom cancelado
				if ($item("NR_COOVINCULADO", voParams) = NR_CUPOM.TRA_TRANSACECSVC)
					viParams = ""
					voParams = ""
					activate "ECFSVCO001".CancelaCupom(viParams,voParams,$xcderro$,$xctxerro$)
					if ($procerror)       
						$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						return(-1)
					elseif ($status = -10)
						viParams = ""
						voParams = ""
						putitem/id viParams,"TITULO", "Erro de comunicação com a ECF"
						putitem/id viParams,"MENSAGEM", $item("DESCRICAO",$xctxerro$)
						activate "GERFP008".EXEC(viParams,voParams,$xCdErro$,$xCtxErro$)
						if ($procerror)       
							$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
							return(-1)
						endif
						return(-1)
					elseif ($status < 0)
						$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
						return(-1)
					endif

					vInCancelou	= <TRUE>
				else
					$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Não é possível cancelar a transação!%%^Cupom fiscal da transação não é o último.", "ADICIONAL=Operação->TRASVCO013.validaCancelamentoCupom")
					return(-1)
				endif					
			endif
		else
			$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Não é possível cancelar a transação!%%^Número de série da ECF não pertente a ECF da transação.", "ADICIONAL=Operação->TRASVCO013.validaCancelamentoCupom")
			return(-1)
		endif
	endif

	if (vInCancelou = <TRUE>)
		TP_SITUACAO.TRA_TRANSACECSVC = "C" ; Cancelado
		$collhandle("TRA_TRANSACECSVC")->Salvar()
	endif
		
	return(0)	
end ;validaCancelamentoECF  ;*

;-----------------------------------------
public operation buscaTransacaoRelacionada
;-----------------------------------------
	params
		string $xlpg$    :IN
		string piParams  :IN
		string poParams  :OUT
		string poCdErro  :OUT
		string poCtxErro :OUT
	endparams
	
	variables
		date    vDtTransacao, vDtLiq
		string  vDsRegistro, vDsLstTransacao
		boolean vInAchou, vInCancelada
		numeric vCdEmpresa, vNrTransacao, vCdEmpLiq, vNrSeqLiq
	endvariables
	
	;recebe a transacao
	vCdEmpresa   = $item("CD_EMPRESA",   piParams)
	vNrTransacao = $item("NR_TRANSACAO", piParams)
	vDtTransacao = $item("DT_TRANSACAO", piParams)
	vInCancelada = $item("IN_CANCELADA", piParams)
	
	;verifica se a chave foi passada corretamente
	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Empresa origem não informada!", "ADICIONAL=Operação->TRASVCO013.buscaTransacaoRelacionada")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	if (vNrTransacao = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Número transação origem não informado", "ADICIONAL=Operação->TRASVCO013.buscaTransacaoRelacionada")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	if (vDtTransacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Data transação origem não informada", "ADICIONAL=Operação->TRASVCO013.buscaTransacaoRelacionada")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	if (vInCancelada = "")
		vInCancelada = <TRUE>
	endif

	;busca a transacao que foi passada
	clear/e "TRA_TRANSACAOSVC"
	CD_EMPRESA.TRA_TRANSACAOSVC/init   = vCdEmpresa
	NR_TRANSACAO.TRA_TRANSACAOSVC/init = vNrTransacao
	DT_TRANSACAO.TRA_TRANSACAOSVC/init = vDtTransacao
	retrieve/e "TRA_TRANSACAOSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->TRASVCO013.buscaTransacaoRelacionada")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1) 
	endif

	clear/e "TRA_S_TRANSACSVC";limpa a entidade que vai montar a lista
	
	;verifica se existem transacções com o financeiro agrupado
	clear/e "FGR_LIQITEMCRSVC"
	CD_EMPTRANSACAO.FGR_LIQITEMCRSVC/init = vCdEmpresa
	NR_TRANSACAO.FGR_LIQITEMCRSVC/init    = vNrTransacao
	DT_TRANSACAO.FGR_LIQITEMCRSVC/init    = vDtTransacao
	TP_TIPOREG.FGR_LIQITEMCRSVC/init      = 1
	retrieve/e "FGR_LIQITEMCRSVC"
	if ($status >= 0) ;se não encontrar nada continua pois pode não ter recebido ainda a transação
		vCdEmpLiq = CD_EMPLIQ.FGR_LIQITEMCRSVC
		vDtLiq    = DT_LIQ.FGR_LIQITEMCRSVC
		vNrSeqLiq = NR_SEQLIQ.FGR_LIQITEMCRSVC
		clear/e "FGR_LIQITEMCRSVC"
		CD_EMPLIQ.FGR_LIQITEMCRSVC/init  = vCdEmpLiq
		NR_SEQLIQ.FGR_LIQITEMCRSVC/init  = vNrSeqLiq
		DT_LIQ.FGR_LIQITEMCRSVC/init     = vDtLiq
		TP_TIPOREG.FGR_LIQITEMCRSVC/init = 1
		retrieve/e "FGR_LIQITEMCRSVC"
		setocc "FGR_LIQITEMCRSVC", -1
		setocc "FGR_LIQITEMCRSVC", 1
		while ($status >= 0)
			;nao coloca na lista a transação que foi passada
			if(CD_EMPTRANSACAO.FGR_LIQITEMCRSVC != vCdEmpresa | NR_TRANSACAO.FGR_LIQITEMCRSVC != vNrTransacao | DT_TRANSACAO.FGR_LIQITEMCRSVC != vDtTransacao)
				if (NR_TRANSACAO.FGR_LIQITEMCRSVC > 0)
					creocc "TRA_S_TRANSACSVC", -1 
					CD_EMPRESA.TRA_S_TRANSACSVC/init   = CD_EMPTRANSACAO.FGR_LIQITEMCRSVC
					NR_TRANSACAO.TRA_S_TRANSACSVC/init = NR_TRANSACAO.FGR_LIQITEMCRSVC
					DT_TRANSACAO.TRA_S_TRANSACSVC/init = DT_TRANSACAO.FGR_LIQITEMCRSVC
					retrieve/o "TRA_S_TRANSACSVC"
					if ($status = -7)
						retrieve/x "TRA_S_TRANSACSVC"
					elseif ($status = 0)
						$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Transação %%NR_TRANSACAO.TRA_S_TRANSACSVC não cadastrada!", "ADICIONAL=Operação->TRASVCO013.buscaTransacaoRelacionada")
						poCdErro  = $xCdErro$
						poCtxErro = $xCtxErro$
						exit(-1)
					endif
				endif
			endif
			setocc "FGR_LIQITEMCRSVC", $curocc("FGR_LIQITEMCRSVC") + 1
		endwhile
	endif
	
	;Verifica transacoes agrupadas
	clear/e "TRA_TRANSAGRUSVC"
	CD_EMPRESA.TRA_TRANSAGRUSVC/init   = vCdEmpresa
	NR_TRANSACAO.TRA_TRANSAGRUSVC/init = vNrtransacao
	DT_TRANSACAO.TRA_TRANSAGRUSVC/init = vDtTransacao
	retrieve/e "TRA_TRANSAGRUSVC"
	if($status >=0)
		setocc "TRA_TRANSAGRUSVC", -1
		setocc "TRA_TRANSAGRUSVC", 1
		while ($status >=0)
			creocc "TRA_S_TRANSACSVC", -1 
			CD_EMPRESA.TRA_S_TRANSACSVC/init   = CD_EMPRESAORI.TRA_TRANSAGRUSVC
			NR_TRANSACAO.TRA_S_TRANSACSVC/init = NR_TRANSACAOORI.TRA_TRANSAGRUSVC
			DT_TRANSACAO.TRA_S_TRANSACSVC/init = DT_TRANSACAOORI.TRA_TRANSAGRUSVC
			retrieve/o "TRA_S_TRANSACSVC"
			if ($status = -7)
				retrieve/x "TRA_S_TRANSACSVC"
			elseif ($status = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Transação %%NR_TRANSACAO.TRA_S_TRANSACSVC não cadastrada!", "ADICIONAL=Operação->TRASVCO013.buscaTransacaoRelacionada")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
			
			if (TP_SITUACAO.TRA_S_TRANSACSVC = 4) ;Atendida não retorna Tarefa 102-639 por Hugo em 23/07/09
				discard "TRA_S_TRANSACSVC"
			endif
			
			setocc "TRA_TRANSAGRUSVC", $curocc("TRA_TRANSAGRUSVC") + 1
		endwhile		
	endif

	clear/e "TRA_TROCASVC"
	CD_EMPDEV.TRA_TROCASVC/init = vCdEmpresa
	NR_TRADEV.TRA_TROCASVC/init = vNrTransacao	
	DT_TRADEV.TRA_TROCASVC/init = vDtTransacao
	retrieve/e "TRA_TROCASVC"
	if ($status >= 0)
		creocc "TRA_S_TRANSACSVC", -1 
		CD_EMPRESA.TRA_S_TRANSACSVC/init   = CD_EMPVEN.TRA_TROCASVC
		NR_TRANSACAO.TRA_S_TRANSACSVC/init = NR_TRAVEN.TRA_TROCASVC
		DT_TRANSACAO.TRA_S_TRANSACSVC/init = DT_TRAVEN.TRA_TROCASVC
		retrieve/o "TRA_S_TRANSACSVC"
		if ($status = -7)
			retrieve/x "TRA_S_TRANSACSVC"
		elseif ($status = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Transação %%NR_TRANSACAO.TRA_S_TRANSACSVC não cadastrada!", "ADICIONAL=Operação->TRASVCO013.buscaTransacaoRelacionada")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
	endif 

	clear/e "TRA_TROCASVC"
	CD_EMPVEN.TRA_TROCASVC/init = vCdEmpresa
	NR_TRAVEN.TRA_TROCASVC/init = vNrTransacao	
	DT_TRAVEN.TRA_TROCASVC/init = vDtTransacao
	retrieve/e "TRA_TROCASVC"
	if ($status >= 0)
		creocc "TRA_S_TRANSACSVC", -1 
		CD_EMPRESA.TRA_S_TRANSACSVC/init   = CD_EMPDEV.TRA_TROCASVC
		NR_TRANSACAO.TRA_S_TRANSACSVC/init = NR_TRADEV.TRA_TROCASVC
		DT_TRANSACAO.TRA_S_TRANSACSVC/init = DT_TRADEV.TRA_TROCASVC
		retrieve/o "TRA_S_TRANSACSVC"
		if ($status = -7)
			retrieve/x "TRA_S_TRANSACSVC"
		elseif ($status = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Transação %%NR_TRANSACAO.TRA_S_TRANSACSVC não cadastrada!", "ADICIONAL=Operação->TRASVCO013.buscaTransacaoRelacionada")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
	endif

	;Busca as reeimpressoes
	clear/e "TRA_TRANSACAOSVC"
	CD_EMPRESAORI.TRA_TRANSACAOSVC/init   = vCdEmpresa
	NR_TRANSACAOORI.TRA_TRANSACAOSVC/init = vNrTransacao
	DT_TRANSACAOORI.TRA_TRANSACAOSVC/init = vDtTransacao
	retrieve/e "TRA_TRANSACAOSVC"
	if ($status >= 0)
		setocc "TRA_TRANSACAOSVC", 1
		while ($status >=0)
			if (TP_MODALIDADE.GER_OPERACAOSVC = 9) ;Reemissão
				creocc "TRA_S_TRANSACSVC", -1 
				CD_EMPRESA.TRA_S_TRANSACSVC/init   = CD_EMPRESA.TRA_TRANSACAOSVC
				NR_TRANSACAO.TRA_S_TRANSACSVC/init = NR_TRANSACAO.TRA_TRANSACAOSVC
				DT_TRANSACAO.TRA_S_TRANSACSVC/init = DT_TRANSACAO.TRA_TRANSACAOSVC
				retrieve/o "TRA_S_TRANSACSVC"
				if ($status = -7)
					retrieve/x "TRA_S_TRANSACSVC"
				elseif ($status = 0)
					$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Transação %%NR_TRANSACAO.TRA_S_TRANSACSVC não cadastrada!", "ADICIONAL=Operação->TRASVCO013.buscaTransacaoRelacionada")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif
			endif
			setocc "TRA_TRANSACAOSVC", $curocc("TRA_TRANSACAOSVC") + 1
		endwhile	
	endif

	if ($empty("TRA_S_TRANSACSVC") = 0)
		repeat
			vInAchou = <FALSE>
			clear/e "F_TRA_TRANSACSVC"
			setocc  "TRA_S_TRANSACSVC", 1
			while ($status >= 0)
				if (IN_VERIFICADO.TRA_S_TRANSACSVC = <TRUE>)
				else
					clear/e "TRA_TRANSAGRUSVC"
					CD_EMPRESA.TRA_TRANSAGRUSVC/init   = CD_EMPRESA.TRA_S_TRANSACSVC
					NR_TRANSACAO.TRA_TRANSAGRUSVC/init = NR_TRANSACAO.TRA_S_TRANSACSVC
					DT_TRANSACAO.TRA_TRANSAGRUSVC/init = DT_TRANSACAO.TRA_S_TRANSACSVC
					retrieve/e "TRA_TRANSAGRUSVC"
					if($status >=0)
						setocc "TRA_TRANSAGRUSVC", -1
						setocc "TRA_TRANSAGRUSVC", 1
						while ($status >=0)
							creocc "F_TRA_TRANSACSVC", -1 
							CD_EMPRESA.F_TRA_TRANSACSVC/init   = CD_EMPRESAORI.TRA_TRANSAGRUSVC
							NR_TRANSACAO.F_TRA_TRANSACSVC/init = NR_TRANSACAOORI.TRA_TRANSAGRUSVC
							DT_TRANSACAO.F_TRA_TRANSACSVC/init = DT_TRANSACAOORI.TRA_TRANSAGRUSVC
							retrieve/o "F_TRA_TRANSACSVC"
							if ($status = -7)
								retrieve/x "F_TRA_TRANSACSVC"
							elseif ($status = 0)
								$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Transação %%NR_TRANSACAO.F_TRA_TRANSACSVC não cadastrada!", "ADICIONAL=Operação->TRASVCO013.buscaTransacaoRelacionada")
								poCdErro  = $xCdErro$
								poCtxErro = $xCtxErro$
								exit(-1)
							endif
							
							if (TP_SITUACAO.F_TRA_TRANSACSVC = 4) ;Atendida não retorna Tarefa 102-639 por Hugo em 23/07/09
								discard "F_TRA_TRANSACSVC"
							endif
							
							setocc "TRA_TRANSAGRUSVC", $curocc("TRA_TRANSAGRUSVC") + 1
						endwhile		
					endif
					IN_VERIFICADO.TRA_S_TRANSACSVC/init = <TRUE>
				endif
				setocc "TRA_S_TRANSACSVC", $curocc("TRA_S_TRANSACSVC") + 1
			endwhile
			if ($empty("F_TRA_TRANSACSVC") = 0)
				vInAchou = <TRUE>
				setocc "F_TRA_TRANSACSVC", 1
				while ($status >= 0)
					creocc "TRA_S_TRANSACSVC", -1 
					CD_EMPRESA.TRA_S_TRANSACSVC/init   = CD_EMPRESA.F_TRA_TRANSACSVC
					NR_TRANSACAO.TRA_S_TRANSACSVC/init = NR_TRANSACAO.F_TRA_TRANSACSVC
					DT_TRANSACAO.TRA_S_TRANSACSVC/init = DT_TRANSACAO.F_TRA_TRANSACSVC
					retrieve/o "TRA_S_TRANSACSVC"
					if ($status = -7)
						retrieve/x "TRA_S_TRANSACSVC"
					elseif ($status = 0)
						$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Transação %%NR_TRANSACAO.TRA_S_TRANSACSVC não cadastrada!", "ADICIONAL=Operação->TRASVCO013.buscaTransacaoRelacionada")
						poCdErro  = $xCdErro$
						poCtxErro = $xCtxErro$
						exit(-1)
					endif
					setocc "F_TRA_TRANSACSVC", $curocc("F_TRA_TRANSACSVC") + 1
				endwhile
			endif
		until (vInAchou = <FALSE>)
	endif

	;busca transação de reserva/retirada de CMC - Fiuza
	clear/e "F_TRA_TRANSACSVC"
	CD_EMPRESAORI.F_TRA_TRANSACSVC/init   = vCdEmpresa
	NR_TRANSACAOORI.F_TRA_TRANSACSVC/init = vNrTransacao
	DT_TRANSACAOORI.F_TRA_TRANSACSVC/init = vDtTransacao
	retrieve/e "F_TRA_TRANSACSVC"
	if ($status >= 0)
		clear/e "CMC_SOLIMATITSVC"
		CD_EMPTRANSACAO.CMC_SOLIMATITSVC/init = CD_EMPRESA.F_TRA_TRANSACSVC
		NR_TRANSACAO.CMC_SOLIMATITSVC/init    = NR_TRANSACAO.F_TRA_TRANSACSVC
		DT_TRANSACAO.CMC_SOLIMATITSVC/init    = DT_TRANSACAO.F_TRA_TRANSACSVC
		retrieve/e "CMC_SOLIMATITSVC"	
		if ($status >= 0)
			creocc "TRA_S_TRANSACSVC", -1 
			CD_EMPRESA.TRA_S_TRANSACSVC/init   = CD_EMPRESA.F_TRA_TRANSACSVC
			NR_TRANSACAO.TRA_S_TRANSACSVC/init = NR_TRANSACAO.F_TRA_TRANSACSVC
			DT_TRANSACAO.TRA_S_TRANSACSVC/init = DT_TRANSACAO.F_TRA_TRANSACSVC
			retrieve/o "TRA_S_TRANSACSVC"
			if ($status = -7)
				retrieve/x "TRA_S_TRANSACSVC"
			elseif ($status = 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Transação %%NR_TRANSACAO.TRA_S_TRANSACSVC não cadastrada!", "ADICIONAL=Operação->TRASVCO013.buscaTransacaoRelacionada")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif			
		endif
	endif	
	
	;monta a lista das transacoes relacionadas
	if ($empty("TRA_S_TRANSACSVC") = 0)
		vDsLstTransacao = ""
		setocc "TRA_S_TRANSACSVC", -1            
		setocc "TRA_S_TRANSACSVC", 1
		while ($status >= 0)
			;Por Hugo em 14/10/10 Tarefa 172-31
			if (vInCancelada = <TRUE>) | (TP_SITUACAO.TRA_S_TRANSACSVC != 6) ;Não aceita transação cancelada
				vDsRegistro = ""
				putitem/id vDsRegistro, "CD_EMPRESA",   CD_EMPRESA.TRA_S_TRANSACSVC
				putitem/id vDsRegistro, "NR_TRANSACAO", NR_TRANSACAO.TRA_S_TRANSACSVC
				putitem/id vDsRegistro, "DT_TRANSACAO", DT_TRANSACAO.TRA_S_TRANSACSVC
				putitem vDsLstTransacao, -1, vDsRegistro
			endif
			
			setocc "TRA_S_TRANSACSVC", $curocc("TRA_S_TRANSACSVC") + 1
		endwhile
		poParams = ""
		putitem/id poParams, "DS_LSTTRANSACAO", vDsLstTransacao
	endif
	
	return(0)
end;buscaTransacaoRelacionada

;--------------------------------
public operation cancelaTransacao
;--------------------------------
	params
		string $xlpg$    :IN    
		string piParams  :IN
		string poParams  :OUT
		string poCdErro  :OUT
		string poCtxErro :OUT
	endparams
	
	variables
		date    vDtTransacao, vDtLiq, vDtSistema
		string  viParams, voParams, vDsObs, vDsLstNF, viValores, vDsLstConsignado, vTpLiq, vDsCaixa
		string  vDsMotivo, vDsRegistro, vDsLstTransacao, vTpQuantidadePED, vDsLstSerial
		string  vDsRegStatus, vDsLstStatusRep, vDsLstStatusNormal, vNmUsuario, vCdCodBarras
		boolean vInSoFinanceiro, vInFinanceiro, vInAchou, vInEstoque, vInCxFechado, vInEstornaCxUsu, vInAchouAgrupador, vInPedido
		boolean vInTrocaDocumento, vInEstoqueNao, vInOrigem, vInCancelar , vInSemInspecao, vInUtilizaCxFilialMov, vInSupreCaixa
		boolean vInValidaChqPresente, vInIgnoraCancECF
		numeric vCdEmpresa, vNrTransacao, vCdEmpLiq, vNrSeqLiq, vCdUsuario, vCdConferente, vNrTransacaoOri, vQtFaturado
		numeric vQtPendente, vTpContrInspSaldoLote, vVlSaldo, vNrCaixa, vCdCtaPesCxFilialMov, vCdCtaPesCxMatrizMov, vVlDiferenca
	endvariables
	
	vCdEmpresa				= $item("CD_EMPRESA",           piParams)
	vNrTransacao			= $item("NR_TRANSACAO",         piParams)
	vDtTransacao			= $item("DT_TRANSACAO",         piParams)	
	vDsMotivo				= $item("DS_MOTIVO",            piParams)
	$vTpSituacaoNF$			= $item("TP_SITUACAONF",        piParams)
	vTpQuantidadePED		= $item("TP_QUANTIDADEPED",     piParams)
	vInSoFinanceiro			= $item("IN_SOFINANCEIRO",      piParams)
	vCdConferente			= $item("CD_CONFERENTE",        piParams)
	$cdComponente$			= $item("CD_COMPONENTE",        piParams)
	vInCxFechado			= $item("IN_CXFECHADO",         piParams)
	vInEstoqueNao			= $item("IN_ESTOQUENAO",        piParams)
	vInEstornaCxUsu			= $item("IN_ESTORNACXUXU",      piParams)
	vInOrigem				= $item("IN_ORIGEM",            piParams)
	vDtSistema				= $item("DT_SISTEMA",           $xlpg$)
	vCdUsuario				= $item("CD_USUARIO",           $xlpg$)
	vInPedido				= $item("IN_PEDIDO",            piParams)
	vInTrocaDocumento		= $item("IN_TROCADOCUMENTO",    piParams)
	vInSemInspecao			= $item("IN_SEMINSPECAO",       piParams) ; Dione/Elia | 05/0810 - BomFio
	vInValidaChqPresente	= $item("IN_VALIDACHQPRESENTE", piParams) ;--Douglas Ferreira - [Prj/Tarefa 186/0245] - 03/10/2011
	vInIgnoraCancECF		= $item("IN_IGNORACANCECF",	 piParams) ;* Claudemir - Prj/Tarefa: 156/639 - 26/12/2011
	
	vTpContrInspSaldoLote = $item("TP_CONTR_INSP_SALDO_LOTE", $$gParamGlb) ;-- ALX - 130/1328 - 22/11/2010 --;
	
	if (vInPedido = "")
		vInPedido = <TRUE>
	endif
	
	if ($cdComponente$ = "")
		$cdComponente$ = $componentname
	endif
	
	;--Douglas Ferreira - [Prj/Tarefa 186/0245] - 03/10/2011
	if (vInValidaChqPresente = "")
		vInValidaChqPresente = <TRUE>
	endif
	;
	
	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Empresa origem não informada!", "ADICIONAL=Operação->TRASVCO013.cancelaTransacao")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	if (vNrTransacao = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Número transação origem não informado", "ADICIONAL=Operação->TRASVCO013.cancelaTransacao")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	if (vDtTransacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Data transação origem não informada", "ADICIONAL=Operação->TRASVCO013.cancelaTransacao")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	if (vDsMotivo = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Motivo de cancelamento não informado", "ADICIONAL=Operação->TRASVCO013.cancelaTransacao")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	vDsMotivo = "MOTIVO: %%vDsMotivo"
	vDsMotivo = vDsMotivo[1 : 80]
	
	if ($vTpSituacaoNF$ = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Situação da NF não informada", "ADICIONAL=Operação->TRASVCO013.cancelaTransacao")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	if (vTpQuantidadePED = "") & (vInPedido = <TRUE>)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Tipo de quantidade do pedido de compra da NF não informada", "ADICIONAL=Operação->TRASVCO013.cancelaTransacao")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	clear/e "ADM_USUARIOSVC"
	
	if (vCdConferente > 0)		
		CD_USUARIO.ADM_USUARIOSVC/init = vCdConferente
		retrieve/e "ADM_USUARIOSVC"
		if ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Usuário de conferência %%vCdConferente não cadastrado", "ADICIONAL=Operação->TRASVCO013.cancelaTransacao")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
	endif
	
	clear/e "TRA_TRANSACAOSVC"
	CD_EMPRESA.TRA_TRANSACAOSVC/init   = vCdEmpresa
	NR_TRANSACAO.TRA_TRANSACAOSVC/init = vNrTransacao
	DT_TRANSACAO.TRA_TRANSACAOSVC/init = vDtTransacao
	retrieve/e "TRA_TRANSACAOSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->TRASVCO013.cancelaTransacao")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1) 
	endif
	
	if (TP_SITUACAO.TRA_TRANSACAOSVC = 6) ;Cancelada
		exit(0)
	endif
	
	if (TP_SITUACAO.TRA_TRANSACAOSVC = 4) ;Atendida
		if (IN_FINANCEIRO.GER_OPERACAOSVC != <FALSE>)
			vInFinanceiro = <TRUE>
		endif
	endif
	
	;if (vInCxFechado = <TRUE>) ;-=CANONICO=- (11/03/2010) - TAR 216 PRJ 156
	call getParam(CD_EMPFAT.TRA_TRANSACAOSVC)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if ($status < 0)
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	;endif
	;-=CANONICO=- (11/03/2010) - TAR 216 PRJ 156
	call validaCancelamentoNFE()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if ($status < 0)
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	;* Claudemir - Prj/Tarefa: 156/639 - 23/12/2011
	; vInIgnoraCancECF = Criado para identificar que o cancelamento veio do ECFFP001 (ja foi feito a validação)
	if ($tpValidacaoCancEcf$ = 1) & (vInIgnoraCancECF = <FALSE>)
		call validaCancelamentoCupom()
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
	endif ;*
	
	;->Rafael Rodrigo PRJ 103 Tar 11 - 1/7/2009
	clear/e "MKT_CARTELAISVC"
	CD_EMPR.MKT_CARTELAISVC/init      = $item("CD_EMPRESA",   piParams)
	NR_TRANSACAO.MKT_CARTELAISVC/init = $item("NR_TRANSACAO", piParams)
	DT_TRANSACAO.MKT_CARTELAISVC/init = $item("DT_TRANSACAO", piParams)
	retrieve/e "MKT_CARTELAISVC"
	if($status >= 0)
		putitem/id viParams, "CD_EMPRESA",   vCdEmpresa
		putitem/id viParams, "NR_TRANSACAO", vNrTransacao
		putitem/id viParams, "DT_TRANSACAO", vDtTransacao
		activate "MKTSVCO004".AlteraSituacaoCartela($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
		if ($procerror)       
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
	endif
	;<-Rafael Rodrigo PRJ 103 Tar 11 - 1/7/2009

	vCdEmpLiq = ""
	vNrSeqLiq = ""
	vDtLiq    = ""

	if (vInFinanceiro = <TRUE>)
		vInAchou = <FALSE>
		;Entrada p/ transaferência / Compra / outras entradas saidas
		if (TP_OPERACAO.TRA_TRANSACAOSVC = "E") & (TP_MODALIDADE.GER_OPERACAOSVC = 1 | TP_MODALIDADE.GER_OPERACAOSVC = 2 | TP_MODALIDADE.GER_OPERACAOSVC = 4 | TP_MODALIDADE.GER_OPERACAOSVC = 5 | TP_MODALIDADE.GER_OPERACAOSVC = "E")
			vTpLiq = "CP"
			clear/e "FGR_LIQITEMCCSVC"
			CD_EMPTRANSACAO.FGR_LIQITEMCCSVC/init = CD_EMPRESA.TRA_TRANSACAOSVC
			NR_TRANSACAO.FGR_LIQITEMCCSVC/init    = NR_TRANSACAO.TRA_TRANSACAOSVC
			DT_TRANSACAO.FGR_LIQITEMCCSVC/init    = DT_TRANSACAO.TRA_TRANSACAOSVC
			retrieve/e "FGR_LIQITEMCCSVC"
			if ($status >= 0)
				setocc "FGR_LIQITEMCCSVC", 1
				while ($status >= 0) & (vInAchou = <FALSE>)
					clear/e "FGR_LIQSVC"
					CD_EMPLIQ.FGR_LIQSVC/init = CD_EMPLIQ.FGR_LIQITEMCCSVC
					DT_LIQ.FGR_LIQSVC/init    = DT_LIQ.FGR_LIQITEMCCSVC
					NR_SEQLIQ.FGR_LIQSVC/init = NR_SEQLIQ.FGR_LIQITEMCCSVC
					retrieve/e "FGR_LIQSVC"
					if ($status >= 0)
						;--Douglas Ferreira - [Prj/Tarefa 186/0092] - 11/08/2011
						;if (DT_CANCELAMENTO.FGR_LIQSVC = "")
						if (DT_CANCELAMENTO.FGR_LIQSVC = "") & (CD_EMPRESADUP.FGR_LIQITEMCCSVC > 0 & CD_FORNECDUP.FGR_LIQITEMCCSVC > 0 & NR_DUPLICATADUP.FGR_LIQITEMCCSVC > 0 & NR_PARCELADUP.FGR_LIQITEMCCSVC > 0)
						;
							vCdEmpLiq = CD_EMPLIQ.FGR_LIQITEMCCSVC
							vDtLiq    = DT_LIQ.FGR_LIQITEMCCSVC
							vNrSeqLiq = NR_SEQLIQ.FGR_LIQITEMCCSVC
							vInAchou  = <TRUE>
						endif
					endif	
					setocc "FGR_LIQITEMCCSVC", $curocc("FGR_LIQITEMCCSVC") + 1
				endwhile
			endif	
		else
			vTpLiq = "CR"
			clear/e "FGR_LIQITEMCRSVC"
			CD_EMPTRANSACAO.FGR_LIQITEMCRSVC/init = CD_EMPRESA.TRA_TRANSACAOSVC
			NR_TRANSACAO.FGR_LIQITEMCRSVC/init    = NR_TRANSACAO.TRA_TRANSACAOSVC
			DT_TRANSACAO.FGR_LIQITEMCRSVC/init    = DT_TRANSACAO.TRA_TRANSACAOSVC
			retrieve/e "FGR_LIQITEMCRSVC"
			if ($status >= 0)
				setocc "FGR_LIQITEMCRSVC", 1
				while ($status >= 0) & (vInAchou = <FALSE>)
					clear/e "FGR_LIQSVC"
					CD_EMPLIQ.FGR_LIQSVC/init = CD_EMPLIQ.FGR_LIQITEMCRSVC
					DT_LIQ.FGR_LIQSVC/init    = DT_LIQ.FGR_LIQITEMCRSVC
					NR_SEQLIQ.FGR_LIQSVC/init = NR_SEQLIQ.FGR_LIQITEMCRSVC
					retrieve/e "FGR_LIQSVC"
					if ($status >= 0)
						;--Douglas Ferreira - [Prj/Tarefa 186/0245] - 03/10/2011
						if (TP_LIQUIDACAO.FGR_LIQSVC = 82) & (TP_TIPOREG.FGR_LIQITEMCRSVC = 2) & (vInValidaChqPresente = <TRUE>) ;82-Adiantamento
							$instancehandle->setStatus(<STS_AVISO>, "GEN001", "DESCRICAO=Não é possível cancelar transação de cheque presente por este componente.%%^Utilizar o FCRFP003 para cancelar a liquidação nr.%%NR_SEQLIQ.FGR_LIQSVC%%%.", "ADICIONAL=TRASVCO013.cancelaTransacao()")
							poCdErro  = $xCdErro$
							poCtxErro = $xCtxErro$
							return(-1)
						endif
						;
						if (DT_CANCELAMENTO.FGR_LIQSVC = "")
							vCdEmpLiq = CD_EMPLIQ.FGR_LIQITEMCRSVC
							vDtLiq    = DT_LIQ.FGR_LIQITEMCRSVC
							vNrSeqLiq = NR_SEQLIQ.FGR_LIQITEMCRSVC
							vInAchou  = <TRUE>
						endif
					endif
					
					setocc "FGR_LIQITEMCRSVC", $curocc("FGR_LIQITEMCRSVC") + 1
				endwhile
			endif
			
			;Saída diferente de devolução
			if (TP_OPERACAO.TRA_TRANSACAOSVC = "S") & (TP_MODALIDADE.GER_OPERACAOSVC != 3) & (vNrSeqLiq > 0)
				if (vInCxFechado != <TRUE>)
					vInAchou = <FALSE>
					clear/e "FCC_MOVSVC"
					CD_EMPLIQ.FCC_MOVSVC/init = vCdEmpLiq
					DT_LIQ.FCC_MOVSVC/init    = vDtLiq
					NR_SEQLIQ.FCC_MOVSVC/init = vNrSeqLiq
					retrieve/e "FCC_MOVSVC"
					if ($status >= 0)
						setocc "FCC_MOVSVC", 1
						while ($status >= 0) & (vInAchou = <FALSE>)
							;Laçamentos no caixa(930 = Venda / 935 = Troco)
							if (CD_HISTORICO.FCC_MOVSVC = 930) | (CD_HISTORICO.FCC_MOVSVC = 935)
								clear/e "FCX_CAIXAMSVC"
								NR_CTAPES.FCX_CAIXAMSVC/init = NR_CTAPES.FCC_MOVSVC
								DT_MOVIM.FCX_CAIXAMSVC/init  = DT_MOVIM.FCC_MOVSVC
								NR_SEQMOV.FCX_CAIXAMSVC/init = NR_SEQMOV.FCC_MOVSVC
								retrieve/e "FCX_CAIXAMSVC"
								if ($status >= 0)
									;==BY BIANCHINI[PRJ/TAREFA 186/0041] 18/05/2011==;
									if ($inCancTransCxFechado$ = <FALSE>)
										if (IN_FECHADO.FCX_CAIXACSVC > 0)
											$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=O caixa onde a transação %%vNrTransacao foi recebida está fechado!", "ADICIONAL=Operação->TRASVCO013.cancelaTransacao")
											poCdErro = $xCdErro$
											poCtxErro = $xCtxErro$
											return(-1)
										else
									;==BY BIANCHINI[PRJ/TAREFA 186/254] 06/10/2011==;
											if(CD_OPERCONF.FCX_CAIXACSVC > 0)
												$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=O caixa onde a transação %%vNrTransacao foi recebida está com a contagem fechada.%%^Reabrir contagem para cancelar transação.", "ADICIONAL=Operação->TRASVCO013.cancelaTransacao")
												poCdErro  = $xCdErro$
												poCtxErro = $xCtxErro$
												exit(-2)
											endif
										endif
									elseif($inCancTransCxFechado$ = <TRUE>)
										if (IN_FECHADO.FCX_CAIXACSVC > 0)
											$instancehandle->SetStatus(<STS_AVISO>, "GEN001", "DESCRICAO=O caixa onde a transação %%vNrTransacao foi recebida está fechado! O cancelamento pode ocasionar diferença no caixa.", "ADICIONAL=Operação->TRASVCO013.cancelaTransacao")
											poCdErro = $xCdErro$
											poCtxErro = $xCtxErro$
											exit(-2)
										else
											if(CD_OPERCONF.FCX_CAIXACSVC > 0)
												$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=O caixa onde a transação %%vNrTransacao foi recebida está com a contagem fechada.%%^Reabrir contagem para cancelar transação.", "ADICIONAL=Operação->TRASVCO013.cancelaTransacao")
												poCdErro  = $xCdErro$
												poCtxErro = $xCtxErro$
												return(-1)
											endif
										endif
									endif
									;==
									;==BY BIANCHINI[PRJ/TAREFA 186/0019] 06/05/2011==;
									;if ($inCancTransCxFechado$ = <FALSE>)
										;if ($inConferenteCaixa$ = <TRUE>) 
											;if(CD_OPERCONF.FCX_CAIXACSVC > 0)
												; --- DIONE |PRJ 156/0283| 07/05/10	
												;if (IN_FECHADO.FCX_CAIXACSVC > 0)					
													;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=O caixa onde a transação %%vNrTransacao foi recebida está com a contagem fechada.%%^Reabrir contagem para cancelar transação.", "ADICIONAL=Operação->TRASVCO013.cancelaTransacao")
													;poCdErro = $xCdErro$
													;poCtxErro = $xCtxErro$
													;exit(-2)
												;else
												;	$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=O caixa onde a transação %%vNrTransacao foi recebida está com a contagem fechada.%%^Reabrir contagem para cancelar transação.", "ADICIONAL=Operação->TRASVCO013.cancelaTransacao")
												;	poCdErro = $xCdErro$
												;	poCtxErro = $xCtxErro$
												;	exit(-2)
												;endif
												; ---
										;endif
										;else
											;if (IN_FECHADO.FCX_CAIXACSVC > 0)
											;	$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=O caixa onde a transação %%vNrTransacao foi recebida está fechado!", "ADICIONAL=Operação->TRASVCO013.cancelaTransacao")
											;	poCdErro = $xCdErro$
											;	poCtxErro = $xCtxErro$
											;	exit(-2)
											;else
											;	$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=O caixa onde a transação %%vNrTransacao foi recebida está fechado! O cancelamento pode ocasionar diferença no caixa.", "ADICIONAL=Operação->TRASVCO013.cancelaTransacao")
											;	poCdErro = $xCdErro$
											;	poCtxErro = $xCtxErro$
											;	exit(-2)
											;endif
										;endif
									;elseif($inCancTransCxFechado$ = <TRUE>)
									;	if (IN_FECHADO.FCX_CAIXACSVC > 0)
									;		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=O caixa onde a transação %%vNrTransacao foi recebida está fechado! O cancelamento pode ocasionar diferença no caixa.", "ADICIONAL=Operação->TRASVCO013.cancelaTransacao")
									;		poCdErro = $xCdErro$
									;		poCtxErro = $xCtxErro$
									;		exit(-2)
									;	endif
									;endif
									;==
									;==
									vInAchou = <TRUE>
								endif
							endif
							setocc "FCC_MOVSVC", $curocc("FCC_MOVSVC") + 1
						endwhile
					endif
				;==BY BIANCHINI[PRJ/TAREFA 186/0041] 18/05/2011==;
				else
					if ($inCancTransCxFechado$ = <FALSE>)
						$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=O caixa onde a transação %%vNrTransacao foi recebida está fechado!", "ADICIONAL=Operação->TRASVCO013.cancelaTransacao")
						poCdErro  = $xCdErro$
						poCtxErro = $xCtxErro$
						exit(-2)
					endif
				;==
				endif
			endif
		endif
		;-- MAD [Proj/Tar.156/624] - 02/09/2011
		if (vCdEmpLiq != "") & (vDtLiq != "") & (vNrSeqLiq != "")
			call validaFatDupContabilidade(vCdEmpLiq, vDtLiq, vNrSeqLiq, vTpLiq)
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			elseif ($status < 0)
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif				
		endif
		;;		
	endif
	
	vDsLstTransacao = ""
	vDsRegistro     = ""
	putitem/id vDsRegistro, "CD_EMPRESA",   CD_EMPRESA.TRA_TRANSACAOSVC
	putitem/id vDsRegistro, "NR_TRANSACAO", NR_TRANSACAO.TRA_TRANSACAOSVC
	putitem/id vDsRegistro, "DT_TRANSACAO", DT_TRANSACAO.TRA_TRANSACAOSVC
	putitem vDsLstTransacao, -1, vDsRegistro
	
	if (vInSoFinanceiro = <TRUE>)
		;Situação atendida e operação gerando financeiro
		if (TP_SITUACAO.TRA_TRANSACAOSVC = 4) ;Atendida
			vDsLstNF = ""
			if ($empty("FIS_NFSVC") = 0)
				setocc "FIS_NFSVC", 1            
				while ($status >= 0)
					putitem/id vDsRegistro, "CD_EMPRESA", CD_EMPRESA.FIS_NFSVC
					putitem/id vDsRegistro, "NR_FATURA",  NR_FATURA.FIS_NFSVC
					putitem/id vDsRegistro, "DT_FATURA",  DT_FATURA.FIS_NFSVC
					putitem vDsLstNF,   -1, vDsRegistro
					setocc "FIS_NFSVC", $curocc("FIS_NFSVC") + 1
				endwhile
			endif
			
			vInEstoque = <FALSE>
			;Quando for ECF, o estoque deve ser cancelado
;			if (TP_DOCTO.GER_OPERACAOSVC = 2 | TP_DOCTO.GER_OPERACAOSVC = 3) & (vInTrocaDocumento != <TRUE>) ;ECF
			if ((TP_DOCTO.GER_OPERACAOSVC = 2 | TP_DOCTO.GER_OPERACAOSVC = 3) & vInTrocaDocumento != <TRUE> & TP_MODALIDADE.GER_OPERACAOSVC != 9) ; leandro 102/724 04/11/2009
				vInEstoque = <TRUE>
			endif
			
			if (vInEstoqueNao = <TRUE>)
				vInEstoque = <FALSE>
			endif
			
			if (vInEstoque = <TRUE>)
				viParams = ""
				putitem/id viParams, "DS_LSTTRANSACAO", vDsLstTransacao
				putitem/id viParams, "IN_ESTORNO",      <TRUE>
				activate "TRASVCO004".atualizaEstoqueTransacao($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
				if ($procerror)       
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif
				
				if (vDsLstNF != "")
					viParams = ""
					putitem/id viParams, "DS_LSTNF",   vDsLstNF
					putitem/id viParams, "IN_ESTORNO", <TRUE>
					;---Elia Proj. 130/487 22/05/09
					;activate "FISSVCO004".atualizaEstoqueNF($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
					putitem/id viParams, "IN_SEMINSPECAO", vInSemInspecao ; Dione/Elia | 05/0810 - BomFio
					activate "FISSVCO038".atualizaEstoqueNF($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
					;
					if ($procerror)       
						$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						poCdErro  = $xCdErro$
						poCtxErro = $xCtxErro$
						exit(-1)
					elseif ($status < 0)
						$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
						poCdErro  = $xCdErro$
						poCtxErro = $xCtxErro$
						exit(-1)
					endif
				endif
			endif
			
			viParams = ""
			putitem/id viParams, "DS_LSTTRANSACAO", vDsLstTransacao
			putitem/id viParams, "TP_SITUACAO", 5   ;Encerrada
			putitem/id viParams, "DS_MOTIVOALT",    vDsMotivo
			activate "TRASVCO004".alteraSituacaoTransacao($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
		endif
		
		;;Hugo em 04/01/2011 Tarefa 179-7
		;clear/e "TRA_ITEMPRDFISVC"
		;CD_EMPRESA.TRA_ITEMPRDFISVC/init = CD_EMPRESA.TRA_TRANSACAOSVC
		;NR_TRANSACAO.TRA_ITEMPRDFISVC/init = NR_TRANSACAO.TRA_TRANSACAOSVC
		;DT_TRANSACAO.TRA_ITEMPRDFISVC/init = DT_TRANSACAO.TRA_TRANSACAOSVC
		;retrieve/e "TRA_ITEMPRDFISVC"
		;if ($status >= 0)
		;	setocc "TRA_ITEMPRDFISVC", 1
		;	while ($status >= 0)
		;		viParams = ""
		;		putitem/id viParams, "CD_EMPRESA", CD_EMPPRDFIN.TRA_ITEMPRDFISVC
		;		putitem/id viParams, "NR_PRDFIN", NR_PRDFIN.TRA_ITEMPRDFISVC
		;		putitem/id viParams, "CD_COMPONENTE", $cdComponente$
		;		activate "PRFSVCO001".cancelaProdutoFinanceiro($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
		;		if ($procerror)       
		;			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		;			poCdErro = $xCdErro$
		;			poCtxErro = $xCtxErro$
		;			exit(-1)
		;		elseif ($status < 0)
		;			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		;			poCdErro = $xCdErro$
		;			poCtxErro = $xCtxErro$
		;			exit(-1)
		;		endif
		;		
		;		setocc "TRA_ITEMPRDFISVC", $curocc("TRA_ITEMPRDFISVC") + 1
		;	endwhile
		;endif
		;
		
		$dtAtual$ = $datim
		vDsObs = "Financeiro da transacao cancelado pelo usuario %%vCdUsuario em %%$dtAtual$"
		
		if (vInFinanceiro = <TRUE>) & (vNrSeqLiq > 0)
			;Entrada p/ transaferência / Compra / Outras entradas
			if (TP_OPERACAO.TRA_TRANSACAOSVC = "E") & (TP_MODALIDADE.GER_OPERACAOSVC = 1 | TP_MODALIDADE.GER_OPERACAOSVC = 2 | TP_MODALIDADE.GER_OPERACAOSVC = 4 | TP_MODALIDADE.GER_OPERACAOSVC = 5 | TP_MODALIDADE.GER_OPERACAOSVC = "E")
				
				; --- DIONE |066/0435| 28/07/2010
				viParams = ""
				putitem/id viParams, "CD_EMPLIQ", vCdEmpLiq
				putitem/id viParams, "DT_LIQ",    vDtLiq
				putitem/id viParams, "NR_SEQLIQ", vNrSeqLiq
				activate "FCPSVCO046".estornaRetencaoImposto($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
				if ($procerror)       
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")	
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif
				; ---
				
				viParams = ""
				putitem/id viParams, "CD_EMPLIQ",       vCdEmpLiq
				putitem/id viParams, "DT_LIQ",          vDtLiq
				putitem/id viParams, "NR_SEQLIQ",       vNrSeqLiq
				putitem/id viParams, "TP_CANCELAMENTO", "C" ;Cancelamento
				putitem/id viParams, "CD_COMPONENTE",   $cdComponente$
				putitem/id viParams, "DS_OBS",          vDsMotivo
				putitem/id viParams, "DS_LOG",          vDsObs
				activate "FCPSVCO013".cancelaLiquidacao($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
				if ($procerror)       
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif
			else
				; --- DIONE |066/0435| 28/07/2010
				viParams = ""
				putitem/id viParams, "CD_EMPLIQ", vCdEmpLiq
				putitem/id viParams, "DT_LIQ",    vDtLiq
				putitem/id viParams, "NR_SEQLIQ", vNrSeqLiq
				activate "FCPSVCO046".estornaRetencaoImposto($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")	
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif
				; ---
				
				;Esta rotina esta cancelando tanto as faturas qto as movimentacoes
				viParams = ""
				putitem/id viParams, "CD_EMPLIQ",     vCdEmpLiq
				putitem/id viParams, "DT_LIQ",        vDtLiq
				putitem/id viParams, "NR_SEQLIQ",     vNrSeqLiq
				;-- MAD [Proj/Tar.078/2949] - 13/11/2009
				putitem/id viParams, "DS_MOTIVOCANC", vDsMotivo
				putitem/id viParams, "DS_COMPONENTE", $cdComponente$
				;;
				activate "FCRSVCO010".cancelaLiquidacao($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
				if ($procerror)       
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif
				
				clear/e "FCC_MOVSVC"
				CD_EMPLIQ.FCC_MOVSVC/init = vCdEmpLiq
				DT_LIQ.FCC_MOVSVC/init    = vDtLiq
				NR_SEQLIQ.FCC_MOVSVC/init = vNrSeqLiq
				retrieve/e "FCC_MOVSVC"
				if ($status >= 0)
					setocc "FCC_MOVSVC", 1
					while ($status >= 0)
						;==BY BIANCHINI[PRJ/TAREFA 186/0307] 04/11/2011==;	
						if ($inSuprimentoAutomatico$ = <TRUE>)
							;--Douglas Ferreira - [Prj/Tarefa 186/0227] - 19/09/2011
							clear/e "FCC_CTAPESSVC"
							NR_CTAPES.FCC_CTAPESSVC/init = NR_CTAPES.FCC_MOVSVC
							retrieve/e "FCC_CTAPESSVC"
							if ($status >= 0) & (TP_MANUTENCAO.FCC_CTAPESSVC = $cdTpManutCxUsuario$) & %\
								(vInCxFechado != <TRUE>) & (TP_DOCUMENTO.FCC_MOVSVC != 9) ;9-Troco
								
								;verificar se cta possui saldo suficiente do tp. documento p/ estorno
								viParams = ""
								putitem/id viParams, "NR_CTAPES",        NR_CTAPES.FCC_MOVSVC
								putitem/id viParams, "TP_DOCUMENTO",     TP_DOCUMENTO.FCC_MOVSVC
								putitem/id viParams, "NR_SEQHISTRELSUB", NR_SEQHISTRELSUB.FCC_MOVSVC
								putitem/id viParams, "DT_SALDO",         $item("DT_SISTEMA", $xlpg$)
								activate "FCCSVCO002".buscaSaldoCtaTp($xlpg$, viParams, "", voParams, $xCdErro$, $xCtxErro$)
								if ($procerror)
									$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=TRASVCO013.cancelaTransacao() chamando FCCSVCO002.buscaSaldoCtaTp()")
									poCdErro  = $xCdErro$
									poCtxErro = $xCtxErro$
									return(-1)
								elseif ($status < 0)
									$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=TRASVCO013.cancelaTransacao() chamando FCCSVCO002.buscaSaldoCtaTp()")
									poCdErro  = $xCdErro$
									poCtxErro = $xCtxErro$
									return(-1)
								endif
								vVlSaldo = $item("VL_SALDO", voParams)
								
								if (vVlSaldo < VL_LANCTO.FCC_MOVSVC)
									
									;verificar se empresa do mov. utiliza cx. Matriz ou Filial
									viParams= ""
									putitem viParams, -1, "IN_UTILIZA_CXFILIAL"
									putitem viParams, -1, "CD_CTAPES_CXMATRIZ"
									putitem viParams, -1, "CD_CTAPES_CXFILIAL"
									activate "ADMSVCO001".GetParamEmpresa(CD_EMPRESA.FCC_MOVSVC, viParams, voParams, $xCdErro$, $xCtxerro$)
									if ($procerror)
										$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=TRASVCO013.cancelaTransacao() chamando ADMSVCO001.getParamEmpresa()")
										poCdErro  = $xCdErro$
										poCtxErro = $xCtxErro$
										return(-1)
									elseif ($status < 0)
										$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=TRASVCO013.cancelaTransacao() chamando ADMSVCO001.getParamEmpresa()")
										poCdErro  = $xCdErro$
										poCtxErro = $xCtxErro$
										return(-1)
									endif
									vInUtilizaCxFilialMov = $item("IN_UTILIZA_CXFILIAL", voParams)
									vCdCtaPesCxMatrizMov  = $item("CD_CTAPES_CXMATRIZ",  voParams)
									vCdCtaPesCxFilialMov  = $item("CD_CTAPES_CXFILIAL",  voParams)
									
									if (vInUtilizaCxFilialMov = <TRUE>)
										vDsCaixa = "Filial"
										vNrCaixa = vCdCtaPesCxFilialMov
									else
										vDsCaixa = "Matriz"
										vNrCaixa = vCdCtaPesCxMatrizMov
									endif
									if (vInSupreCaixa != <TRUE>) ;--Ferreira - [Prj/Tar 186/0268] - 10/10/2011
										askmess/question "Saldo da conta insuficiente para realizar o cancelamento. %%^Realizar suprimento do caixa %%vDsCaixa%%%?", "Não,Sim"
										if ($status = 1)
											$instancehandle->setStatus(<STS_AVISO>, "GEN001", "DESCRICAO=Cancelamento não realizado.", "ADICIONAL=TRASVCO013.cancelaTransacao()")
											return(-1)
										endif
										vInSupreCaixa = <TRUE> ;--Ferreira - [Prj/Tar 186/0268] - 10/10/2011
									endif
									
									vVlDiferenca = VL_LANCTO.FCC_MOVSVC - vVlSaldo
									vVlDiferenca = vVlDiferenca[round,2]
									
									;buscar informações do caixa usuário
									clear/e "FCX_CAIXAMSVC"
									NR_CTAPES.FCX_CAIXAMSVC/init = NR_CTAPES.FCC_MOVSVC
									DT_MOVIM.FCX_CAIXAMSVC/init  = DT_MOVIM.FCC_MOVSVC
									NR_SEQMOV.FCX_CAIXAMSVC/init = NR_SEQMOV.FCC_MOVSVC
									retrieve/e "FCX_CAIXAMSVC"
									if ($status < 0)
										$instancehandle->SetStatus(<STS_AVISO>, "GEN001", "DESCRICAO=Movimento não está relacionado a um caixa!", "ADICIONAL=TRASVCO013.cancelaTransacao()")
										poCdErro  = $xCdErro$
										poCtxErro = $xCtxErro$
										return(-1)
									endif
									
									;efetuar retirada do valor no cx. filial/matriz
									viParams = ""
									putitem/id viParams, "NR_CTAORIGEM",     vNrCaixa
									putitem/id viParams, "NR_CTADESTINO",    NR_CTAPES.FCC_MOVSVC
									putitem/id viParams, "VL_SUPRIMENTO",    vVlDiferenca
									putitem/id viParams, "CD_TERMINALDEST",  CD_TERMINAL.FCX_CAIXAMSVC
									putitem/id viParams, "DT_ABERTURADEST",  DT_ABERTURA.FCX_CAIXAMSVC
									putitem/id viParams, "NR_SEQDEST",       NR_SEQ.FCX_CAIXAMSVC
									putitem/id viParams, "DS_OBS",           "SUPRIMENTO REF. CANCEL. TRANSACAO %%NR_TRANSACAO.TRA_TRANSACAOSVC"
									putitem/id viParams, "IN_CXUSUARIO",     <FALSE>
									putitem/id viParams, "TP_PROCESSO",      3 ;Suprimento de caixa
									putitem/id viParams, "TP_DOCUMENTO",     TP_DOCUMENTO.FCC_MOVSVC
									putitem/id viParams, "NR_SEQHISTRELSUB", NR_SEQHISTRELSUB.FCC_MOVSVC
									activate "FCXSVCO002".supreCaixa($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
									if ($procerror)
										$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=TRASVCO013.cancelaTransacao() chamando FCCSVCO002.movimentaConta()")
										poCdErro  = $xCdErro$
										poCtxErro = $xCtxErro$
										return(-1)
									elseif ($status < 0)
										$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=TRASVCO013.cancelaTransacao() chamando FCCSVCO002.movimentaConta()")
										poCdErro  = $xCdErro$
										poCtxErro = $xCtxErro$
										return(-1)
									endif
								endif
							endif
							;
						endif
						;==

						;Estorna os lançamentos no caixa (930 = Venda / 935 = Troco).
						;Os lançamentos de adiantamento/CREDEV são cancelados pela rotina "FCRSVCO010".cancelaLiquidacao
						if (CD_HISTORICO.FCC_MOVSVC = 930) | (CD_HISTORICO.FCC_MOVSVC = 935)
							if (vInCxFechado = <TRUE>)
								if (TP_DOCUMENTO.FCC_MOVSVC = 3 | TP_DOCUMENTO.FCC_MOVSVC = 9) ;Dinheiro ou Troco (Somente os 2 são estornados da matriz)

									viParams = ""
									putitem/id viParams,       "CD_EMPRESA",   CD_EMPRESA.FCC_MOVSVC
									if ($inEnvioRecebMalote$)
										;==BY BIANCHINI[PRJ/TAREFA 186/254] 06/10/2011==;	
										if ($nrCtaMatriz$ = "")
											$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Conta não informada! Verificar o parâmetro CD_CTAPES_CXMATRIZ", "ADICIONAL=TRASVCO013.cancelaTransacao()")
											poCdErro  = $xCdErro$
											poCtxErro = $xCtxErro$
											exit(-1)
										else
										;==
											putitem/id viParams,    "NR_CTAPES",    $nrCtaMatriz$
										endif
									else
										if ($inUtilizaCxFilial$ = <TRUE>)
											;==BY BIANCHINI[PRJ/TAREFA 186/254] 06/10/2011==;	
											if ($cdCtaPesCxFilial$ = "")
												$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Conta não informada! Verificar o parâmetro CD_CTAPES_CXFILIAL", "ADICIONAL=TRASVCO013.cancelaTransacao()")
												poCdErro  = $xCdErro$
												poCtxErro = $xCtxErro$
												exit(-1)
											else
											;==
												putitem/id viParams, "NR_CTAPES",    $cdCtaPesCxFilial$
											endif
										else
											;==BY BIANCHINI[PRJ/TAREFA 186/254] 06/10/2011==;	
											if ($nrCtaMatriz$ = "")
												$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Conta não informada! Verificar o parâmetro CD_CTAPES_CXMATRIZ", "ADICIONAL=TRASVCO013.cancelaTransacao()")
												poCdErro  = $xCdErro$
												poCtxErro = $xCtxErro$
												exit(-1)
											else
											;==
												putitem/id viParams,    "NR_CTAPES",    $nrCtaMatriz$
											endif
										endif
									endif
									
									putitem/id viParams,        "DT_MOVIMENTO", $item("DT_SISTEMA", $$gParamGlb)
									if (TP_OPERACAO.FCC_MOVSVC = "C")
										putitem/id viParams,    "CD_HISTORICO",  962 ;DEBITO CANCELAMENTO TRANSACAO
									else
										putitem/id viParams,    "CD_HISTORICO",  963 ;CREDITO CANCELAMENTO TRANSACAO
									endif
									putitem/id viParams,        "VL_LANCTO",        VL_LANCTO.FCC_MOVSVC
									putitem/id viParams,        "IN_ESTORNO",       "N"
									putitem/id viParams,        "TP_DOCUMENTO",     TP_DOCUMENTO.FCC_MOVSVC
									putitem/id viParams,        "NR_SEQHISTRELSUB", NR_SEQHISTRELSUB.FCC_MOVSVC
									putitem/id viParams,        "DS_AUX",           "TRANSACAO: %%NR_TRANSACAO.TRA_TRANSACAOSVC"
									activate "FCCSVCO002".movimentaConta($$gParamGlb,viParams,viValores,voParams, $xCdErro$, $xCtxerro$)
									if ($procerror)       
										$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
										poCdErro  = $xCdErro$
										poCtxErro = $xCtxErro$
										exit(-1)
									elseif ($status < 0)
										$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
										poCdErro  = $xCdErro$
										poCtxErro = $xCtxErro$
										exit(-1)
									endif
								endif
								
								;Hugo - 31/01/06 
								;Foi incluido esse if para o Caixa do lojão
								;pois no lojão mesmo que o caixa usuario esteja encerrado (vInCxFechado = TRUE)
								;sera realizado o estorno no caixa usuario atraves da passagem de paramentro vInEstornoCxUsu
								
								if (vInEstornaCxUsu = <TRUE>)
									viParams = ""
									putitem/id viParams, "NR_CTAPES", NR_CTAPES.FCC_MOVSVC
									putitem/id viParams, "DT_MOVIM",  DT_MOVIM.FCC_MOVSVC
									putitem/id viParams, "NR_SEQMOV", NR_SEQMOV.FCC_MOVSVC
									activate "FCCSVCO002".estornaMovimento($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
									if ($procerror)       
										$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
										poCdErro  = $xCdErro$
										poCtxErro = $xCtxErro$
										exit(-1)
									elseif ($status < 0)
										$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
										poCdErro  = $xCdErro$
										poCtxErro = $xCtxErro$
										exit(-1)
									endif
								endif
							else
								viParams = ""
								putitem/id viParams, "NR_CTAPES", NR_CTAPES.FCC_MOVSVC
								putitem/id viParams, "DT_MOVIM",  DT_MOVIM.FCC_MOVSVC
								putitem/id viParams, "NR_SEQMOV", NR_SEQMOV.FCC_MOVSVC
								activate "FCCSVCO002".estornaMovimento($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
								if ($procerror)       
									$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
									poCdErro  = $xCdErro$
									poCtxErro = $xCtxErro$
									exit(-1)
								elseif ($status < 0)
									$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
									poCdErro  = $xCdErro$
									poCtxErro = $xCtxErro$
									exit(-1)
								endif
							endif
						endif
						
						;Projeto 180 - Tarefa 0181 - Aloisio Gargantini - 25/05/2011
						if (CD_HISTORICO.FCC_MOVSVC = 1093) | (CD_HISTORICO.FCC_MOVSVC = 1094) ;1093-Crédito 1094-Débito cheque presente
							;verifica saldo negativo caso o estorno seja de crédito
							if (CD_HISTORICO.FCC_MOVSVC = 1093) ;Crédito cheque presente
								viParams   = ""
								putitem/id viParams, "NR_CTAPES",        NR_CTAPES.FCC_MOVSVC
								putitem/id viParams, "TP_DOCUMENTO",     18 ;Cheque presente
								putitem/id viParams, "NR_SEQHISTRELSUB", 1
								putitem/id viParams, "CD_EMPRESA",       CD_EMPCHQPRES.FCC_MOVSVC
								putitem/id viParams, "CD_CLIENTE",       CD_CLICHQPRES.FCC_MOVSVC
								putitem/id viParams, "NR_CHEQUE",        NR_CHEQUEPRES.FCC_MOVSVC
								activate "FCRSVCO068".buscaSaldoChequePresente($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
								if ($procerror)       
									$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
									return(-1)
								elseif ($status < 0)
									$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
									return(-1)
								endif
								vVlSaldo = $item("VL_SALDO", voParams) 
								if (vVlSaldo < 0)
									$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Não é permitido fazer cancelamento. O saldo da conta %%NR_CTAPES.FCC_MOVSVC está negativo!", "ADICIONAL=Operação->TRASVCO013.cancelaTransacao")
									poCdErro  = $xCdErro$
									poCtxErro = $xCtxErro$
									exit(-1)
								endif
							endif
							;estorna movimento
							viParams = ""
							putitem/id viParams, "NR_CTAPES", NR_CTAPES.FCC_MOVSVC
							putitem/id viParams, "DT_MOVIM",  DT_MOVIM.FCC_MOVSVC
							putitem/id viParams, "NR_SEQMOV", NR_SEQMOV.FCC_MOVSVC
							activate "FCCSVCO002".estornaMovimento($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
							if ($procerror)       
								$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
								poCdErro  = $xCdErro$
								poCtxErro = $xCtxErro$
								exit(-1)
							elseif ($status < 0)
								$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
								poCdErro  = $xCdErro$
								poCtxErro = $xCtxErro$
								exit(-1)
							endif
							;grava observação do movimento
							viParams = ""
							putitem/id viParams, "NR_CTAPES",     NR_CTAPES.FCC_MOVSVC
							putitem/id viParams, "DT_MOVIM",      DT_MOVIM.FCC_MOVSVC
							putitem/id viParams, "NR_SEQMOV",     NR_SEQMOV.FCC_MOVSVC
							putitem/id viParams, "CD_COMPONENTE", "TRASVCO013"
							putitem/id viParams, "DS_OBS",        "Canc. cheque presente"
							activate "FCCSVCO002".gravaObsMov($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxerro$)
							if ($procerror)       
								$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
								poCdErro  = $xCdErro$
								poCtxErro = $xCtxErro$
								exit (-1)
							elseif ($status < 0)
								$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
								poCdErro  = $xCdErro$
								poCtxErro = $xCtxErro$
								exit(-1)
							endif
							
							;verifica se o cheque presente já existe com o mesmo código de barras. Se existir não pode mais cancelar. Tem que fazer devolução.
							clear/e "FCR_CHEQUEPRESVC"
							CD_EMPRESA.FCR_CHEQUEPRESVC/init = CD_EMPCHQPRES.FCC_MOVSVC
							CD_CLIENTE.FCR_CHEQUEPRESVC/init = CD_CLICHQPRES.FCC_MOVSVC
							NR_CHEQUE.FCR_CHEQUEPRESVC/init  = NR_CHEQUEPRES.FCC_MOVSVC
							retrieve/e "FCR_CHEQUEPRESVC"
							if ($status >=0)
								vCdCodBarras = CD_BARRA.FCR_CHEQUEPRESVC
								clear/e "FCR_CHEQUEPRESVC"
								CD_BARRA.FCR_CHEQUEPRESVC/init    = vCdCodBarras
								TP_SITUACAO.FCR_CHEQUEPRESVC/init = 1
								retrieve/e "FCR_CHEQUEPRESVC"
								if ($status >=0)
									setocc "FCR_CHEQUEPRESVC", 1
									while ($status >= 0)
										if (CD_EMPRESA.FCR_CHEQUEPRESVC != CD_EMPCHQPRES.FCC_MOVSVC) | (CD_CLIENTE.FCR_CHEQUEPRESVC != CD_CLICHQPRES.FCC_MOVSVC) | (NR_CHEQUE.FCR_CHEQUEPRESVC != NR_CHEQUEPRES.FCC_MOVSVC)
											$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Existe cheque presente ativo com o código de barras utilizado neste cancelamento. Não é permitido cancelar a transação.", "")
											poCdErro  = $xCdErro$
											poCtxErro = $xCtxErro$
											exit(-1)
										endif
										setocc "FCR_CHEQUEPRESVC", $curocc("FCR_CHEQUEPRESVC") + 1
									endwhile
								endif
							endif
							
							;verifica saldo zerado para marcar o cheque como utilizado
							viParams   = ""
							putitem/id viParams, "NR_CTAPES",        NR_CTAPES.FCC_MOVSVC
							putitem/id viParams, "TP_DOCUMENTO",     18 ;Cheque presente
							putitem/id viParams, "NR_SEQHISTRELSUB", 1
							putitem/id viParams, "CD_EMPRESA",       CD_EMPCHQPRES.FCC_MOVSVC
							putitem/id viParams, "CD_CLIENTE",       CD_CLICHQPRES.FCC_MOVSVC
							putitem/id viParams, "NR_CHEQUE",        NR_CHEQUEPRES.FCC_MOVSVC
							activate "FCRSVCO068".buscaSaldoChequePresente($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
							if ($procerror)       
								$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
								return(-1)
							elseif ($status < 0)
								$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
								return(-1)
							endif
							vVlSaldo = $item("VL_SALDO", voParams) 
							if (vVlSaldo = 0)
								;se saldo for 0, inutilizar o cheque presente.
								if (CD_EMPCHQPRES.FCC_MOVSVC != "") & (CD_CLICHQPRES.FCC_MOVSVC != "") & (NR_CHEQUEPRES.FCC_MOVSVC != "")
									viParams = ""
									putitem/id viParams, "CD_EMPRESA", CD_EMPCHQPRES.FCC_MOVSVC
									putitem/id viParams, "CD_CLIENTE", CD_CLICHQPRES.FCC_MOVSVC
									putitem/id viParams, "NR_CHEQUE" , NR_CHEQUEPRES.FCC_MOVSVC
									putitem/id viParams, "TP_CHEQUE" , 1
									activate "FCRSVCO068".gravarUtilizacaoChequePresente($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
									if ($procerror)
										$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
										poCdErro  = $xCdErro$
										poCtxErro = $xCtxErro$
										exit(-1)
									elseif ($status)
										$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
										poCdErro  = $xCdErro$
										poCtxErro = $xCtxErro$
										exit(-1)
									endif
								endif
							endif
						endif
						;
						setocc "FCC_MOVSVC", $curocc("FCC_MOVSVC") + 1
					endwhile
				endif
			endif
		endif
	else
		if ($empty("TRA_TRANSACCOSVC") = 0)
			setocc "TRA_TRANSACCOSVC", 1
			while ($status >= 0)
				clear/e "PED_PEDIDOCONSVC"
				CD_EMPCONTAGEM.PED_PEDIDOCONSVC = CD_EMPCONTAGEM.TRA_TRANSACCOSVC
				NR_CONTAGEM.PED_PEDIDOCONSVC    = NR_CONTAGEM.TRA_TRANSACCOSVC
				retrieve/e "PED_PEDIDOCONSVC"
				if ($status >= 0)
					TP_SITUACAO.PED_PEDIDOCONSVC = 1
					CD_OPERADOR.PED_PEDIDOCONSVC = $item("CD_USUARIO", $xlpg$)
					DT_CADASTRO.PED_PEDIDOCONSVC = $datim				
					$collhandle("PED_PEDIDOCONSVC")->Salvar()
					if ($procerror)
						$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						poCdErro  = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					elseif ($status < 0)
						$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
						poCdErro  = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					endif
				endif
				
				clear/e "PRD_MOSTCONTSVC"
				CD_EMPCONTAGEM.PRD_MOSTCONTSVC = CD_EMPCONTAGEM.TRA_TRANSACCOSVC
				NR_CONTAGEM.PRD_MOSTCONTSVC    = NR_CONTAGEM.TRA_TRANSACCOSVC
				retrieve/e "PRD_MOSTCONTSVC"
				if ($status >= 0)
					TP_SITUACAO.PRD_MOSTCONTSVC = 1
					CD_OPERADOR.PRD_MOSTCONTSVC = $item("CD_USUARIO", $xlpg$)
					DT_CADASTRO.PRD_MOSTCONTSVC = $datim				
					$collhandle("PRD_MOSTCONTSVC")->Salvar()
					if ($procerror)
						$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						poCdErro  = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					elseif ($status < 0)
						$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
						poCdErro  = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					endif
				endif
				
				;Cris PRJ/TAR: 171/0196 - 20/09/2011
				call alteraSituacaoContagemOp()
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
				if ($status < 0)
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
				;--
;===IES Prj 171/226 22/11/2011==				
;				clear/e "GER_CONTAGEMCSVC"
;				CD_EMPRESA.GER_CONTAGEMCSVC/init  = CD_EMPCONTAGEM.TRA_TRANSACCOSVC
;				NR_CONTAGEM.GER_CONTAGEMCSVC/init = NR_CONTAGEM.TRA_TRANSACCOSVC
;				retrieve/e "GER_CONTAGEMCSVC"
;				if ($status >= 0)
;					TP_SITUACAO.GER_CONTAGEMCSVC = 1
;					CD_OPERADOR.GER_CONTAGEMCSVC = $item("CD_USUARIO", $xlpg$)
;					DT_CADASTRO.GER_CONTAGEMCSVC = $datim				
;					$collhandle("GER_CONTAGEMCSVC")->Salvar()
;					if ($procerror)
;						$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
;						poCdErro  = $xCdErro$
;						poCtxErro = $xCtxErro$
;						return(-1)
;					elseif ($status < 0)
;						$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
;						poCdErro  = $xCdErro$
;						poCtxErro = $xCtxErro$
;						return(-1)
;					endif
;				endif
;===IES ====				
				setocc "TRA_TRANSACCOSVC", $curocc("TRA_TRANSACCOSVC") + 1
			endwhile
		endif
		
		;Fiuza 05/06/07 - projeto imobiliaria - prj 105 tar 1
		if ($empty("IMB_CONTRATOTSVC") = 0)
			;---Elia Proj. 105/25 15/09/08
			if (NR_SEQITEM.IMB_CONTRATOTSVC != "")
				call cancelaItemContrato(CD_EMPRESA.IMB_CONTRATOSVC, NR_SEQ.IMB_CONTRATOSVC, NR_SEQITEM.IMB_CONTRATOTSVC)
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif
				if ($status < 0)
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif
			else
			;
				viParams = ""
				putitem/id viParams, "CD_EMPCONTRATO", CD_EMPRESA.IMB_CONTRATOSVC
				putitem/id viParams, "NR_SEQCONTRATO", NR_SEQ.IMB_CONTRATOSVC
				putitem/id viParams, "CD_COMPONENTE",  $cdComponente$
				activate "IMBSVCO001".cancelaContrato($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
				if ($procerror)       
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif
			endif
		endif
		
		vInEstoque = <TRUE>
		;Quando for ECF, o estoque só é baixado quando a transação é atendida
		if (TP_DOCTO.GER_OPERACAOSVC = 2) | (TP_DOCTO.GER_OPERACAOSVC = 3) ;ECF
			if (TP_SITUACAO.TRA_TRANSACAOSVC != 4) ;Atendida
				vInEstoque = <FALSE>
			endif			
		endif
		
		if (vInEstoqueNao = <TRUE>)
			vInEstoque = <FALSE>
		endif
		
		if ((TP_SITUACAO.TRA_TRANSACAOSVC != 4 & TP_SITUACAO.TRA_TRANSACAOSVC != 5) | TP_MODALIDADE.GER_OPERACAOSVC = 9) ; leandro 102/724 04/11/2009
			vInEstoque = <FALSE>
		endif
		
		if (vInEstoque = <TRUE>)
			viParams = ""
			putitem/id viParams, "DS_LSTTRANSACAO", vDsLstTransacao
			putitem/id viParams, "IN_ESTORNO",      <TRUE>
			activate "TRASVCO004".atualizaEstoqueTransacao($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
		endif
		
		viParams = ""
		putitem/id viParams, "DS_LSTTRANSACAO", vDsLstTransacao
		putitem/id viParams, "TP_SITUACAO",     6 ;Cancelada
		putitem/id viParams, "DS_MOTIVOALT",    vDsMotivo
		activate "TRASVCO004".alteraSituacaoTransacao($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
		if ($procerror)       
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		
		;Hugo em 04/01/2011 Tarefa 179-7
		clear/e "TRA_ITEMPRDFISVC"
		CD_EMPRESA.TRA_ITEMPRDFISVC/init   = CD_EMPRESA.TRA_TRANSACAOSVC
		NR_TRANSACAO.TRA_ITEMPRDFISVC/init = NR_TRANSACAO.TRA_TRANSACAOSVC
		DT_TRANSACAO.TRA_ITEMPRDFISVC/init = DT_TRANSACAO.TRA_TRANSACAOSVC
		retrieve/e "TRA_ITEMPRDFISVC"
		if ($status >= 0)
			setocc "TRA_ITEMPRDFISVC", 1
			while ($status >= 0)
				viParams = ""
				putitem/id viParams, "CD_EMPRESA",    CD_EMPPRDFIN.TRA_ITEMPRDFISVC
				putitem/id viParams, "NR_PRDFIN",     NR_PRDFIN.TRA_ITEMPRDFISVC
				putitem/id viParams, "CD_COMPONENTE", $cdComponente$
				activate "PRFSVCO001".cancelaProdutoFinanceiro($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
				if ($procerror)       
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif
				
				setocc "TRA_ITEMPRDFISVC", $curocc("TRA_ITEMPRDFISVC") + 1
			endwhile
		endif
		;
		
		;Ranghetti - 156/574 - 11/08/2011 ->
		;Foi criado a variavel string vDsLstSerial			
		vDsLstSerial=""
		clear/e "TRA_ITEMSERIASVC"
		CD_EMPRESA.TRA_ITEMSERIASVC/init   = CD_EMPRESA.TRA_TRANSACAOSVC
		NR_TRANSACAO.TRA_ITEMSERIASVC/init = NR_TRANSACAO.TRA_TRANSACAOSVC
		DT_TRANSACAO.TRA_ITEMSERIASVC/init = DT_TRANSACAO.TRA_TRANSACAOSVC
		retrieve/e "TRA_ITEMSERIASVC"
		if ($status >= 0)
			setocc "TRA_ITEMSERIASVC", 1
			while ($status >= 0)
				if(DS_SERIAL.TRA_ITEMSERIASVC != "")
					if(vDsLstSerial = "")
						vDsLstSerial = DS_SERIAL.TRA_ITEMSERIASVC
					else
						vDsLstSerial = "%%vDsLstSeriaL%%%·;%%DS_SERIAL.TRA_ITEMSERIASVC"
					endif
				endif
				setocc "TRA_ITEMSERIASVC", $curocc("TRA_ITEMSERIASVC") + 1
			endwhile	
			viParams = ""
			if(TP_OPERACAO.TRA_TRANSACAOSVC = "E")
				putitem/id viParams, "TP_SITUACAO", 2
			elseif(TP_OPERACAO.TRA_TRANSACAOSVC = "S")
				putitem/id viParams, "TP_SITUACAO", 1
			endif
			putitem/id viParams, "CD_PRODUTO",   CD_PRODUTO.TRA_TRANSITEMSVC	
			putitem/id viParams, "DS_LSTSERIAL", vDsLstSerial
			activate "PRDSVCO021".alteraSituacaoSerialPrd($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif	
		endif
		;<- Ranghetti - 156/574 -
		
		if (TP_SITUACAO.TRA_TRANSACAOSVC > 1)
			vDsLstNF = ""
			if ($empty("FIS_NFSVC") = 0)
				setocc "FIS_NFSVC", 1            
				while ($status >= 0)
					putitem/id vDsRegistro, "CD_EMPRESA", CD_EMPRESA.FIS_NFSVC
					putitem/id vDsRegistro, "NR_FATURA",  NR_FATURA.FIS_NFSVC
					putitem/id vDsRegistro, "DT_FATURA",  DT_FATURA.FIS_NFSVC
					putitem vDsLstNF, -1, vDsRegistro
					setocc "FIS_NFSVC", $curocc("FIS_NFSVC") + 1
				endwhile
			endif
			
			if (vDsLstNF != "")
				if (vInEstoque = <TRUE>)
					viParams = ""
					putitem/id viParams, "DS_LSTNF",   vDsLstNF
					putitem/id viParams, "IN_ESTORNO", <TRUE>
					;---Elia Proj. 130/487 22/05/09
					;activate "FISSVCO004".atualizaEstoqueNF($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
					putitem/id viParams, "IN_SEMINSPECAO", vInSemInspecao ; Dione/Elia | 05/0810 - BomFio
					activate "FISSVCO038".atualizaEstoqueNF($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
					;
					if ($procerror)       
						$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						poCdErro  = $xCdErro$
						poCtxErro = $xCtxErro$
						exit(-1)
					elseif ($status < 0)
						$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
						poCdErro  = $xCdErro$
						poCtxErro = $xCtxErro$
						exit(-1)
					endif
				endif
				
				viParams = ""
				putitem/id viParams, "DS_LSTNF",    vDsLstNF
				putitem/id viParams, "TP_SITUACAO", $vTpSituacaoNF$
				putitem/id viParams, "DS_MOTIVOALT", vDsMotivo
				activate "FISSVCO004".alteraSituacaoNF($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
				if ($procerror)       
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif
			endif
		endif
		
		if (vInPedido = <TRUE>)
			if ($empty("CMP_PEDIDOTRASVC") = 0)
				viParams = ""
				putitem/id viParams, "CD_EMPRESA",    CD_EMPRESA.TRA_TRANSACAOSVC
				putitem/id viParams, "NR_TRANSACAO",  NR_TRANSACAO.TRA_TRANSACAOSVC
				putitem/id viParams, "DT_TRANSACAO",  DT_TRANSACAO.TRA_TRANSACAOSVC
				putitem/id viParams, "TP_QUANTIDADE", vTpQuantidadePED
				putitem/id viParams, "CD_COMPONENTE", $cdComponente$
				activate "CMPSVCO004".cancelaBaixa($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
				if ($procerror)       
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif
			elseif ($empty("PED_PEDIDOTRASVC") = 0)
				viParams = ""
				putitem/id viParams, "CD_EMPRESA",    CD_EMPRESA.TRA_TRANSACAOSVC
				putitem/id viParams, "NR_TRANSACAO",  NR_TRANSACAO.TRA_TRANSACAOSVC
				putitem/id viParams, "DT_TRANSACAO",  DT_TRANSACAO.TRA_TRANSACAOSVC
				putitem/id viParams, "TP_QUANTIDADE", vTpQuantidadePED
				putitem/id viParams, "CD_COMPONENTE", $cdComponente$
				activate "PEDSVCO002".cancelaBaixa($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
				if ($procerror)       
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif
			endif
		endif
		
		clear/e "CMC_SOLIMATITSVC"
		CD_EMPTRANSACAO.CMC_SOLIMATITSVC/init = CD_EMPRESA.TRA_TRANSACAOSVC
		NR_TRANSACAO.CMC_SOLIMATITSVC/init    = NR_TRANSACAO.TRA_TRANSACAOSVC
		DT_TRANSACAO.CMC_SOLIMATITSVC/init    = DT_TRANSACAO.TRA_TRANSACAOSVC
		retrieve/e "CMC_SOLIMATITSVC"
		if ($status >= 0) | ($empty("CMP_PEDIDOTRASVC") = 0)
			viParams = ""
			putitem/id viParams, "CD_EMPRESA",    CD_EMPRESA.TRA_TRANSACAOSVC
			putitem/id viParams, "NR_TRANSACAO",  NR_TRANSACAO.TRA_TRANSACAOSVC
			putitem/id viParams, "DT_TRANSACAO",  DT_TRANSACAO.TRA_TRANSACAOSVC
			putitem/id viParams, "CD_COMPONENTE", $cdComponente$
			activate "CMCSVCO010".cancelaBaixaSolicitacao($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif			
		else
			clear/e "CMC_SOLIMATITSVC"
		endif
		
		$dtAtual$ = $datim
		vDsObs    = "Transacao cancelada pelo usuario %%vCdUsuario em %%$dtAtual$"
		
		;Situação atendida e operação gerando financeiro
		if (vInFinanceiro = <TRUE>) & (vNrSeqLiq > 0)
			;Entrada p/ transaferência / Compra
			if (TP_OPERACAO.TRA_TRANSACAOSVC = "E") & (TP_MODALIDADE.GER_OPERACAOSVC = 1 | TP_MODALIDADE.GER_OPERACAOSVC = 2 | TP_MODALIDADE.GER_OPERACAOSVC = 4 | TP_MODALIDADE.GER_OPERACAOSVC = 5 | TP_MODALIDADE.GER_OPERACAOSVC = "E")
				; --- DIONE |066/0435| 28/07/2010
				viParams = ""
				putitem/id viParams, "CD_EMPLIQ", vCdEmpLiq
				putitem/id viParams, "DT_LIQ",    vDtLiq
				putitem/id viParams, "NR_SEQLIQ", vNrSeqLiq
				activate "FCPSVCO046".estornaRetencaoImposto($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
				if ($procerror)       
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif
				; ---
				
				viParams = ""
				putitem/id viParams, "CD_EMPLIQ",       vCdEmpLiq
				putitem/id viParams, "DT_LIQ",          vDtLiq
				putitem/id viParams, "NR_SEQLIQ",       vNrSeqLiq				
				putitem/id viParams, "TP_CANCELAMENTO", "C" ;Cancelamento
				putitem/id viParams, "CD_COMPONENTE",   $cdComponente$
				putitem/id viParams, "DS_OBS",          vDsMotivo
				putitem/id viParams, "DS_LOG",          vDsObs
				activate "FCPSVCO013".cancelaLiquidacao($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
				if ($procerror)       
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif
			else
				;Esta rotina esta cancelando tanto as faturas qto as movimentacoes
				viParams = ""
				putitem/id viParams, "CD_EMPLIQ",     vCdEmpLiq
				putitem/id viParams, "DT_LIQ",        vDtLiq
				putitem/id viParams, "NR_SEQLIQ",     vNrSeqLiq
				;-- MAD [Proj/Tar.078/2949] - 13/11/2009
				putitem/id viParams, "DS_MOTIVOCANC", vDsMotivo
				putitem/id viParams, "DS_COMPONENTE", $cdComponente$
				;;
				activate "FCRSVCO010".cancelaLiquidacao($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
				if ($procerror)       
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif
				
				clear/e "FCC_MOVSVC"
				CD_EMPLIQ.FCC_MOVSVC/init = vCdEmpLiq
				DT_LIQ.FCC_MOVSVC/init    = vDtLiq
				NR_SEQLIQ.FCC_MOVSVC/init = vNrSeqLiq
				retrieve/e "FCC_MOVSVC"
				if ($status >= 0)
					setocc "FCC_MOVSVC", 1
					while ($status >= 0)
						;==BY BIANCHINI[PRJ/TAREFA 186/0307] 04/11/2011==;	
						if ($inSuprimentoAutomatico$ = <TRUE>)
							;--Douglas Ferreira - [Prj/Tarefa 186/0227] - 19/09/2011
							clear/e "FCC_CTAPESSVC"
							NR_CTAPES.FCC_CTAPESSVC/init = NR_CTAPES.FCC_MOVSVC
							retrieve/e "FCC_CTAPESSVC"
							if ($status >= 0) & (TP_MANUTENCAO.FCC_CTAPESSVC = $cdTpManutCxUsuario$) & %\
								(vInCxFechado != <TRUE>) & (TP_DOCUMENTO.FCC_MOVSVC != 9) ;9-Troco
							
								;verificar se cta possui saldo suficiente do tp. documento p/ estorno
								viParams = ""
								putitem/id viParams, "NR_CTAPES",        NR_CTAPES.FCC_MOVSVC
								putitem/id viParams, "TP_DOCUMENTO",     TP_DOCUMENTO.FCC_MOVSVC
								putitem/id viParams, "NR_SEQHISTRELSUB", NR_SEQHISTRELSUB.FCC_MOVSVC
								putitem/id viParams, "DT_SALDO",         $item("DT_SISTEMA", $xlpg$)
								activate "FCCSVCO002".buscaSaldoCtaTp($xlpg$, viParams, "", voParams, $xCdErro$, $xCtxErro$)
								if ($procerror)
									$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=TRASVCO013.cancelaTransacao() chamando FCCSVCO002.buscaSaldoCtaTp()")
									poCdErro  = $xCdErro$
									poCtxErro = $xCtxErro$
									return(-1)
								elseif ($status < 0)
									$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=TRASVCO013.cancelaTransacao() chamando FCCSVCO002.buscaSaldoCtaTp()")
									poCdErro  = $xCdErro$
									poCtxErro = $xCtxErro$
									return(-1)
								endif
								vVlSaldo = $item("VL_SALDO", voParams)
							
								if (vVlSaldo < VL_LANCTO.FCC_MOVSVC)
								
									;verificar se empresa do mov. utiliza cx. Matriz ou Filial
									viParams= ""
									putitem viParams, -1, "IN_UTILIZA_CXFILIAL"
									putitem viParams, -1, "CD_CTAPES_CXMATRIZ"
									putitem viParams, -1, "CD_CTAPES_CXFILIAL"
									activate "ADMSVCO001".GetParamEmpresa(CD_EMPRESA.FCC_MOVSVC, viParams, voParams, $xCdErro$, $xCtxerro$)
									if ($procerror)
										$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=TRASVCO013.cancelaTransacao() chamando ADMSVCO001.getParamEmpresa()")
										poCdErro  = $xCdErro$
										poCtxErro = $xCtxErro$
										return(-1)
									elseif ($status < 0)
										$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=TRASVCO013.cancelaTransacao() chamando ADMSVCO001.getParamEmpresa()")
										poCdErro  = $xCdErro$
										poCtxErro = $xCtxErro$
										return(-1)
									endif
									vInUtilizaCxFilialMov = $item("IN_UTILIZA_CXFILIAL", voParams)
									vCdCtaPesCxMatrizMov  = $item("CD_CTAPES_CXMATRIZ",  voParams)
									vCdCtaPesCxFilialMov  = $item("CD_CTAPES_CXFILIAL",  voParams)
								
									if (vInUtilizaCxFilialMov = <TRUE>)
										vDsCaixa = "Filial"
										vNrCaixa = vCdCtaPesCxFilialMov
									else
										vDsCaixa = "Matriz"
										vNrCaixa = vCdCtaPesCxMatrizMov
									endif
									if (vInSupreCaixa != <TRUE>) ;--Ferreira - [Prj/Tar 186/0268] - 10/10/2011
										askmess/question "Saldo da conta insuficiente para realizar o cancelamento. %%^Realizar suprimento do caixa %%vDsCaixa%%%?", "Não,Sim"
										if ($status = 1)
											$instancehandle->setStatus(<STS_AVISO>, "GEN001", "DESCRICAO=Cancelamento não realizado.", "ADICIONAL=TRASVCO013.cancelaTransacao()")
											return(-1)
										endif
										vInSupreCaixa = <TRUE> ;--Ferreira - [Prj/Tar 186/0268] - 10/10/2011
									endif
									
									vVlDiferenca = VL_LANCTO.FCC_MOVSVC - vVlSaldo
									vVlDiferenca = vVlDiferenca[round,2]
								
									;buscar informações do caixa usuário
									clear/e "FCX_CAIXAMSVC"
									NR_CTAPES.FCX_CAIXAMSVC/init = NR_CTAPES.FCC_MOVSVC
									DT_MOVIM.FCX_CAIXAMSVC/init  = DT_MOVIM.FCC_MOVSVC
									NR_SEQMOV.FCX_CAIXAMSVC/init = NR_SEQMOV.FCC_MOVSVC
									retrieve/e "FCX_CAIXAMSVC"
									if ($status < 0)
										$instancehandle->SetStatus(<STS_AVISO>, "GEN001", "DESCRICAO=Movimento não está relacionado a um caixa!", "ADICIONAL=TRASVCO013.cancelaTransacao()")
										poCdErro  = $xCdErro$
										poCtxErro = $xCtxErro$
										return(-1)
									endif
							
									;efetuar retirada do valor no cx. filial/matriz
									viParams = ""
									putitem/id viParams, "NR_CTAORIGEM",     vNrCaixa
									putitem/id viParams, "NR_CTADESTINO",    NR_CTAPES.FCC_MOVSVC
									putitem/id viParams, "VL_SUPRIMENTO",    vVlDiferenca
									putitem/id viParams, "CD_TERMINALDEST",  CD_TERMINAL.FCX_CAIXAMSVC
									putitem/id viParams, "DT_ABERTURADEST",  DT_ABERTURA.FCX_CAIXAMSVC
									putitem/id viParams, "NR_SEQDEST",       NR_SEQ.FCX_CAIXAMSVC
									putitem/id viParams, "DS_OBS",           "SUPRIMENTO REF. CANCEL. TRANSACAO %%NR_TRANSACAO.TRA_TRANSACAOSVC"
									putitem/id viParams, "IN_CXUSUARIO",     <FALSE>
									putitem/id viParams, "TP_PROCESSO",      3 ;Suprimento de caixa
									putitem/id viParams, "TP_DOCUMENTO",     TP_DOCUMENTO.FCC_MOVSVC
									putitem/id viParams, "NR_SEQHISTRELSUB", NR_SEQHISTRELSUB.FCC_MOVSVC
									activate "FCXSVCO002".supreCaixa($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
									if ($procerror)
										$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=TRASVCO013.cancelaTransacao() chamando FCCSVCO002.movimentaConta()")
										poCdErro  = $xCdErro$
										poCtxErro = $xCtxErro$
										return(-1)
									elseif ($status < 0)
										$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=TRASVCO013.cancelaTransacao() chamando FCCSVCO002.movimentaConta()")
										poCdErro  = $xCdErro$
										poCtxErro = $xCtxErro$
										return(-1)
									endif
								endif
							endif
							;
						endif
						;==
					
						;Estorna os laçamentos no caixa(930 = Venda / 935 = Troco).
						;Os lançamento de adiantament/CREDEV são cancelados pela rotina "FCRSVCO010".cancelaLiquidacao
						if (CD_HISTORICO.FCC_MOVSVC = 930) | (CD_HISTORICO.FCC_MOVSVC = 935)
							if (vInCxFechado = <TRUE>)
								if (TP_DOCUMENTO.FCC_MOVSVC = 3 | TP_DOCUMENTO.FCC_MOVSVC = 9) ;Dinheiro ou Troco (Somente os 2 são estornados da matriz)
									viParams = ""
									putitem/id viParams, "CD_EMPRESA", CD_EMPRESA.FCC_MOVSVC
								
									if ($inEnvioRecebMalote$)
										putitem/id viParams, "NR_CTAPES", $nrCtaMatriz$
									else
										if ($inUtilizaCxFilial$ = <TRUE>)
											putitem/id viParams, "NR_CTAPES", $cdCtaPesCxFilial$
										else
											putitem/id viParams, "NR_CTAPES", $nrCtaMatriz$
										endif
									endif
								
									putitem/id viParams, "DT_MOVIMENTO",     $item("DT_SISTEMA", $$gParamGlb)
									if (TP_OPERACAO.FCC_MOVSVC = "C")
										putitem/id viParams, "CD_HISTORICO",  962 ;DEBITO CANCELAMENTO TRANSACAO
									else
										putitem/id viParams, "CD_HISTORICO",  963 ;CREDITO CANCELAMENTO TRANSACAO
									endif
									putitem/id viParams, "VL_LANCTO",        VL_LANCTO.FCC_MOVSVC
									putitem/id viParams, "IN_ESTORNO",       "N"
									putitem/id viParams, "TP_DOCUMENTO",     TP_DOCUMENTO.FCC_MOVSVC
									putitem/id viParams, "NR_SEQHISTRELSUB", NR_SEQHISTRELSUB.FCC_MOVSVC
									putitem/id viParams, "DS_AUX",           "TRANSACAO: %%NR_TRANSACAO.TRA_TRANSACAOSVC"
									activate "FCCSVCO002".movimentaConta($$gParamGlb,viParams,viValores,voParams, $xCdErro$, $xCtxerro$)
									if ($procerror)       
										$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
										poCdErro  = $xCdErro$
										poCtxErro = $xCtxErro$
										exit(-1)
									elseif ($status < 0)
										$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
										poCdErro  = $xCdErro$
										poCtxErro = $xCtxErro$
										exit(-1)
									endif
								endif
							
								;Hugo - 31/01/06 
								;Foi incluido esse if para o Caixa do lojão
								;pois no lojão mesmo que o caixa usuario esteja encerrado (vInCxFechado = TRUE)
								;sera realizado o estorno no caixa usuario atraves da passagem de paramentro vInEstornoCxUsu
							
								if (vInEstornaCxUsu = <TRUE>)
									viParams = ""
									putitem/id viParams, "NR_CTAPES", NR_CTAPES.FCC_MOVSVC
									putitem/id viParams, "DT_MOVIM",  DT_MOVIM.FCC_MOVSVC
									putitem/id viParams, "NR_SEQMOV", NR_SEQMOV.FCC_MOVSVC
									activate "FCCSVCO002".estornaMovimento($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
									if ($procerror)       
										$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
										poCdErro  = $xCdErro$
											poCtxErro = $xCtxErro$
										exit(-1)
									elseif ($status < 0)
										$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
										poCdErro  = $xCdErro$
										poCtxErro = $xCtxErro$
										exit(-1)
									endif
								endif
							else
								viParams = ""
								putitem/id viParams, "NR_CTAPES", NR_CTAPES.FCC_MOVSVC
								putitem/id viParams, "DT_MOVIM",  DT_MOVIM.FCC_MOVSVC
								putitem/id viParams, "NR_SEQMOV", NR_SEQMOV.FCC_MOVSVC
								activate "FCCSVCO002".estornaMovimento($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
								if ($procerror)       
									$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
									poCdErro  = $xCdErro$
									poCtxErro = $xCtxErro$
									exit(-1)
								elseif ($status < 0)
									$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
									poCdErro  = $xCdErro$
									poCtxErro = $xCtxErro$
									exit(-1)
								endif
							endif
						endif
						setocc "FCC_MOVSVC", $curocc("FCC_MOVSVC") + 1
					endwhile
				endif	
			endif
		endif	
		
		if (vTpContrInspSaldoLote != 1) ;-- ALX - 130/1328 - 22/11/2010 --;
			if (IN_KARDEX.GER_OPERACAOSVC = <TRUE>) & (TP_SITUACAO.TRA_TRANSACAOSVC != 10) ;Agrupada
				if (TP_OPERACAO.TRA_TRANSACAOSVC = "S")
					clear/e "TRA_ITEMLOTESVC"
					CD_EMPRESA.TRA_ITEMLOTESVC/init   = vCdEmpresa 
					NR_TRANSACAO.TRA_ITEMLOTESVC/init = vNrTransacao
					DT_TRANSACAO.TRA_ITEMLOTESVC/init = vDtTransacao
					retrieve/e "TRA_ITEMLOTESVC"
					if ($status >= 0)
						setocc "TRA_ITEMLOTESVC", 1
						while ($status >= 0)
							viParams = ""
							putitem/id viParams, "CD_EMPRESA",   CD_EMPLOTE.TRA_ITEMLOTESVC
							putitem/id viParams, "NR_LOTE",      NR_LOTE.TRA_ITEMLOTESVC
							putitem/id viParams, "NR_ITEM",      NR_ITEMLOTE.TRA_ITEMLOTESVC
							putitem/id viParams, "QT_MOVIMENTO", QT_LOTE.TRA_ITEMLOTESVC
							putitem/id viParams, "TP_MOVIMENTO", "B" ; B - Baixa
							putitem/id viParams, "IN_ESTORNO",   <TRUE> 
							if (TP_MODALIDADE.GER_OPERACAOSVC = 3) ;Devolução
								putitem/id viParams, "IN_VALIDASITUACAO", <FALSE> 
							endif
							activate "PRDSVCO020".movimentaQtLoteI($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
							if ($procerror)       
								$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
								poCdErro  = $xCdErro$
								poCtxErro = $xCtxErro$
								exit(-1)
							elseif ($status < 0)
								$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
								poCdErro  = $xCdErro$
								poCtxErro = $xCtxErro$
								exit(-1)
							endif		
							setocc "TRA_ITEMLOTESVC", $curocc("TRA_ITEMLOTESVC") + 1
						endwhile
					endif
				;thamati 19/03/2010 [Proj. 0156 - Tar. 0232 / Proj. 0130 - Tar. 0991] 	
				else	
					clear/e "TRA_ITEMLOTESVC"
					CD_EMPRESA.TRA_ITEMLOTESVC/init   = vCdEmpresa 
					NR_TRANSACAO.TRA_ITEMLOTESVC/init = vNrTransacao
					DT_TRANSACAO.TRA_ITEMLOTESVC/init = vDtTransacao
					retrieve/e "TRA_ITEMLOTESVC"
					if ($status >= 0) 						
						setocc "TRA_ITEMLOTESVC", 1
						while ($status >= 0)
							vInCancelar = <FALSE>
							if ($tinTituraria$ = 1) 
								vInCancelar = <TRUE>
							else
								clear/e "PRD_LOTEINFSVC"
								CD_EMPRESA.PRD_LOTEINFSVC/init = CD_EMPLOTE.TRA_ITEMLOTESVC
								NR_LOTE.PRD_LOTEINFSVC/init    = NR_LOTE.TRA_ITEMLOTESVC
								NR_ITEM.PRD_LOTEINFSVC/init    = NR_ITEMLOTE.TRA_ITEMLOTESVC
								retrieve/e "PRD_LOTEINFSVC"
								if ($status < 0)
									clear/e "PRD_LOTEINFSVC"
									clear/e "FIS_NFITEMPLOSVC"
									CD_EMPLOTE.FIS_NFITEMPLOSVC/init  = CD_EMPLOTE.TRA_ITEMLOTESVC
									NR_LOTE.FIS_NFITEMPLOSVC/init     = NR_LOTE.TRA_ITEMLOTESVC
									NR_ITEMLOTE.FIS_NFITEMPLOSVC/init = NR_ITEMLOTE.TRA_ITEMLOTESVC									
									retrieve/e "FIS_NFITEMPLOSVC"	
									if ($status >= 0)
										vInCancelar = <TRUE>
									endif
								endif
							endif
							
							if (vInCancelar)
								viParams = ""
								putitem/id viParams, "CD_EMPRESA",        CD_EMPLOTE.TRA_ITEMLOTESVC
								putitem/id viParams, "NR_LOTE",           NR_LOTE.TRA_ITEMLOTESVC
								putitem/id viParams, "NR_ITEM",           NR_ITEMLOTE.TRA_ITEMLOTESVC
								putitem/id viParams, "QT_MOVIMENTO",      QT_LOTE.TRA_ITEMLOTESVC
								putitem/id viParams, "TP_MOVIMENTO",      "C" ; C - CANCELAMENTO
								putitem/id viParams, "IN_VALIDASITUACAO", <FALSE> 
								putitem/id viParams, "IN_ESTORNO",        <FALSE> 
								activate "PRDSVCO020".movimentaQtLoteI($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
								if ($procerror)       
									$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
									poCdErro  = $xCdErro$
									poCtxErro = $xCtxErro$
									exit(-1)
								elseif ($status < 0)
									$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
									poCdErro  = $xCdErro$
									poCtxErro = $xCtxErro$
									exit(-1)
								endif		
							endif	
							setocc "TRA_ITEMLOTESVC", $curocc("TRA_ITEMLOTESVC") + 1
						endwhile					
					endif				
				endif
			endif
		endif
		
		;--Ferreira - [Prj/Tar 194/0011] - 23/11/2011
		clear/e "TRA_DEVTRASVC"
		CD_EMPTRANSACAO.TRA_DEVTRASVC/init = CD_EMPRESA.TRA_TRANSACAOSVC
		NR_TRANSACAO.TRA_DEVTRASVC/init    = NR_TRANSACAO.TRA_TRANSACAOSVC
		DT_TRANSACAO.TRA_DEVTRASVC/init    = DT_TRANSACAO.TRA_TRANSACAOSVC
		retrieve/e "TRA_DEVTRASVC"
		if ($status >= 0)
			
			viParams = ""
			putitem/id viParams, "CD_EMPRESA",   CD_EMPRESA.TRA_TRANSACAOSVC
			putitem/id viParams, "NR_TRANSACAO", NR_TRANSACAO.TRA_TRANSACAOSVC
			putitem/id viParams, "DT_TRANSACAO", DT_TRANSACAO.TRA_TRANSACAOSVC
			activate "TRASVCO021".cancelaMovTransacao($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
		endif
		;
		
		viParams = ""
		putitem/id viParams, "CD_EMPRESA",   CD_EMPRESA.TRA_TRANSACAOSVC
		putitem/id viParams, "NR_TRANSACAO", NR_TRANSACAO.TRA_TRANSACAOSVC
		putitem/id viParams, "DT_TRANSACAO", DT_TRANSACAO.TRA_TRANSACAOSVC
		activate "FISSVCO028".cancelaDevolucaoTransacao($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
		if ($procerror)       
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
	endif
	
	;Mendes - PRJ=180/TAR=333 - 19/01/2012
	if ($tpBonus$ = 2)
		clear/e "PES_BONUSMOVSVC"
		CD_EMPTRANSACAO.PES_BONUSMOVSVC/init = CD_EMPRESA.TRA_TRANSACAOSVC
		DT_TRANSACAO.PES_BONUSMOVSVC/init = DT_TRANSACAO.TRA_TRANSACAOSVC
		NR_TRANSACAO.PES_BONUSMOVSVC/init = NR_TRANSACAO.TRA_TRANSACAOSVC
		CD_EMPLIQ.PES_BONUSMOVSVC/init = vCdEmpLiq
		DT_LIQ.PES_BONUSMOVSVC/init = vDtLiq
		NR_SEQLIQ.PES_BONUSMOVSVC/init = vNrSeqLiq
		retrieve/e "PES_BONUSMOVSVC"
		if ($status >= 0)
			setocc "PES_BONUSMOVSVC", 1
			while ($status >= 0)
				viParams = ""
				putitem/id viParams, "CD_EMPRESA", CD_EMPRESA.PES_BONUSMOVSVC
				putitem/id viParams, "CD_PESSOA", CD_PESSOA.PES_BONUSMOVSVC
				putitem/id viParams, "TP_BONUS", TP_BONUS.PES_BONUSMOVSVC
				;Mendes - PRJ=180/TAR=336 - 20/01/2012
				if (TP_OPERACAO.PES_BONUSMOVSVC = "D")
					putitem/id viParams, "TP_OPERACAO", "C" ;Crédito
					putitem/id viParams, "CD_HISTORICO", 7 ;Crédito por Cancelamento de Bônus Desconto
				elseif (TP_OPERACAO.PES_BONUSMOVSVC = "C")
					putitem/id viParams, "TP_OPERACAO", "D" ;Débito
					putitem/id viParams, "CD_HISTORICO", 6 ;Débito por Cancelamento de Venda
				endif
				;;;
				putitem/id viParams, "CD_COMPONENTE", $componentname
				putitem/id viParams, "VL_BONUS", VL_MOVIMENTO.PES_BONUSMOVSVC
				putitem/id viParams, "CD_EMPTRANSACAO", CD_EMPTRANSACAO.PES_BONUSMOVSVC
				putitem/id viParams, "DT_TRANSACAO", DT_TRANSACAO.PES_BONUSMOVSVC
				putitem/id viParams, "NR_TRANSACAO", NR_TRANSACAO.PES_BONUSMOVSVC
				putitem/id viParams, "CD_EMPFAT", CD_EMPFAT.PES_BONUSMOVSVC
				putitem/id viParams, "NR_FAT", NR_FAT.PES_BONUSMOVSVC
				putitem/id viParams, "NR_PARCELA", NR_PARCELA.PES_BONUSMOVSVC
				putitem/id viParams, "CD_EMPLIQ", vCdEmpLiq
				putitem/id viParams, "DT_LIQ", vDtLiq
				putitem/id viParams, "NR_SEQLIQ", vNrSeqLiq
				putitem/id viParams, "DS_OBSERVACAO", "Lançamento gerado pelo cancelamento da liquidação %%vCdEmpLiq/%%vDtLiq/%%vNrSeqLiq"
				activate "PESSVCO035".lancaBonusDesconto($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
				if ($procerror)       
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif

				setocc "PES_BONUSMOVSVC", $curocc("PES_BONUSMOVSVC") + 1
			endwhile
		endif
	endif
	;;;

	viParams = ""
	putitem/id viParams, "DS_LSTTRANSACAO", vDsLstTransacao
	putitem/id viParams, "CD_COMPONENTE",   $cdComponente$
	putitem/id viParams, "DS_OBSERVACAO",   vDsObs
	activate "TRASVCO016".gravaObsTransacao($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
	if ($procerror)       
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	viParams = ""
	putitem/id viParams, "DS_LSTTRANSACAO", vDsLstTransacao
	putitem/id viParams, "CD_COMPONENTE",   $cdComponente$
	putitem/id viParams, "DS_OBSERVACAO",   vDsMotivo
	activate "TRASVCO016".gravaObsTransacao($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
	if ($procerror)       
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	if (vInSoFinanceiro != <TRUE>)
		if (CD_USUARIO.ADM_USUARIOSVC > 0)
			;--->MNT - Prj 094/1320 - 18/03/2010
			vNmUsuario = ""
			viParams   = ""
			voParams   = ""
			putitem/id viParams, "CD_USUARIO", CD_USUARIO.ADM_USUARIOSVC
			activate "ADMSVCO027".validaUsuarioEspecial($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)	
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus("",$xCdErro$, $xCtxErro$, "")
				return(-1)
			endif
			
			if(voParams != "")
				vNmUsuario = $item("NM_USUARIO", voParams)
			endif
			;<---
			
			viParams = ""
			putitem/id viParams, "DS_LSTTRANSACAO", vDsLstTransacao
			putitem/id viParams, "CD_COMPONENTE",   $cdComponente$
			putitem/id viParams, "DS_OBSERVACAO",   "Conferente de cancelamento: %%CD_USUARIO.ADM_USUARIOSVC %vNmUsuario"	
			activate "TRASVCO016".gravaObsTransacao($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
		endif
	endif
	
	if (vInOrigem != <TRUE>)
		viParams = ""
		putitem/id viParams, "CD_EMPRESA",   vCdEmpresa
		putitem/id viParams, "NR_TRANSACAO", vNrTransacao
		putitem/id viParams, "DT_TRANSACAO", vDtTransacao
		activate "SICSVCO005".buscaTransacaoOrigem($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
		if ($procerror)       
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		vNrTransacaoOri = $item("NR_TRANSACAO", voParams)
		if (vNrTransacaoOri > 0)
			viParams = piParams
			putitem/id viParams, "CD_EMPRESA",   $item("CD_EMPRESA",   voParams)
			putitem/id viParams, "NR_TRANSACAO", $item("NR_TRANSACAO", voParams)
			putitem/id viParams, "DT_TRANSACAO", $item("DT_TRANSACAO", voParams)
			putitem/id viParams, "IN_ORIGEM", <TRUE>
			newinstance "TRASVCO013", "TRASVCO013O", "TRANSACTION=FALSE"
			activate "TRASVCO013O".cancelaTransacao($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
		endif		
	endif
	
	;MARTINEZ - PRJ/TAR 156/539 - 15/03/2011
	;if (TP_SITUACAO.TRA_TRANSACAOSVC = 4 | TP_SITUACAO.TRA_TRANSACAOSVC = 5) ;Atendida/Encerrada
	if ((TP_SITUACAO.TRA_TRANSACAOSVC = 4 | TP_SITUACAO.TRA_TRANSACAOSVC = 5) & vInSoFinanceiro != <TRUE>)
	;
		vDsLstConsignado = ""
		clear/e "FIS_ITEMCONSISVC"
		CD_EMPTRA.FIS_ITEMCONSISVC/init    = vCdEmpresa
		NR_TRANSACAO.FIS_ITEMCONSISVC/init = vNrTransacao
		DT_TRANSACAO.FIS_ITEMCONSISVC/init = vDtTransacao
		retrieve/e "FIS_ITEMCONSISVC"
		if ($status >= 0)
			setocc "FIS_ITEMCONSISVC", 1
			while ($status >= 0)
				vQtFaturado = 0
				
				clear/e "TRA_TRANSITEMSVC"
				CD_EMPRESA.TRA_TRANSITEMSVC/init   = CD_EMPRESA.FIS_ITEMCONSISVC
				NR_TRANSACAO.TRA_TRANSITEMSVC/init = NR_TRANSACAO.FIS_ITEMCONSISVC
				DT_TRANSACAO.TRA_TRANSITEMSVC/init = DT_TRANSACAO.FIS_ITEMCONSISVC
				CD_PRODUTO.TRA_TRANSITEMSVC/init   = CD_PRODUTO.FIS_ITEMCONSISVC
				retrieve/e "TRA_TRANSITEMSVC"
				if ($status >= 0)
					vQtFaturado = QT_SOLICITADA.TRA_TRANSITEMSVC
				endif
				
				vDsRegistro = ""
				putitem/id vDsRegistro, "CD_EMPRESA", CD_EMPRESA.FIS_ITEMCONSISVC
				putitem/id vDsRegistro, "NR_FATURA",  NR_FATURA.FIS_ITEMCONSISVC
				putitem/id vDsRegistro, "DT_FATURA",  DT_FATURA.FIS_ITEMCONSISVC
				putitem/id vDsRegistro, "NR_ITEM",    NR_ITEM.FIS_ITEMCONSISVC
				putitem/id vDsRegistro, "CD_PRODUTO", CD_PRODUTO.FIS_ITEMCONSISVC
				
				if (TP_OPERACAO.GER_OPERACAOSVC = "E")
					putitem/id vDsRegistro, "QT_DEVOLVIDA", vQtFaturado
				else
					putitem/id vDsRegistro, "QT_VENDIDA",   vQtFaturado
				endif
				
				putitem vDsLstConsignado, -1, vDsRegistro
				
				setocc "FIS_ITEMCONSISVC", $curocc("FIS_ITEMCONSISVC") + 1
			endwhile
			
			viParams = ""
			putitem/id viParams, "DS_CONSIGNADO", vDsLstConsignado
			if (TP_OPERACAO.GER_OPERACAOSVC = "E")
				putitem/id viParams, "TP_CONSIGNADO", "DEVOLVER"
			else
				putitem/id viParams, "TP_CONSIGNADO", "FATURAR"
			endif
			activate "FISSVCO004".consignadoCancelar($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
		endif
	endif
	
	;========================= ANO Pjt104 Trf463 - 02/06/2009
	vInAchou          = <False>
	vInAchouAgrupador = <FALSE> ; <Yuri/Santhyago - Prj./Tsk. 153/122 - 03/09/2009>
	
	clear/e "TIN_OTNNSVC"
	CD_EMPTRA.TIN_OTNNSVC/init    = vCdEmpresa
	NR_TRANSACAO.TIN_OTNNSVC/init = vNrTransacao
	DT_TRANSACAO.TIN_OTNNSVC/init = vDtTransacao
	retrieve/e "TIN_OTNNSVC"
	if($status >= 0)
		
		vInAchou = <True>
		
		setocc "TIN_OTNNSVC", 1
		while($status >= 0)
			
			; <Yuri/Santhyago - Prj./Tsk. 153/122 - 03/09/2009
			if (CD_EMPDEST.TIN_OTNNSVC > 0 & NR_LOTEDEST.TIN_OTNNSVC > 0 & NR_ITEMDEST.TIN_OTNNSVC > 0)
				clear/e "PRD_LOTEISVC"
				CD_EMPRESA.PRD_LOTEISVC = CD_EMPDEST.TIN_OTNNSVC
				NR_LOTE.PRD_LOTEISVC    = NR_LOTEDEST.TIN_OTNNSVC
				NR_ITEM.PRD_LOTEISVC    = NR_ITEMDEST.TIN_OTNNSVC
				retrieve/e "PRD_LOTEISVC"
				if ($status >=0 & CD_AGRUPA.PRD_LOTEISVC != "")
					creocc "TIN_AGRUPADORSVC", -1
					CD_AGRUPA.TIN_AGRUPADORSVC = CD_AGRUPA.PRD_LOTEISVC
					retrieve/o "TIN_AGRUPADORSVC"
					if ($status = -7)
						retrieve/x "TIN_AGRUPADORSVC"
						vInAchouAgrupador              = <TRUE>
						IN_FINALIZADO.TIN_AGRUPADORSVC = <FALSE>
					endif
				endif
			endif
			; Yuri/Santhyago - Prj./Tsk. 153/122>
			
;			< Prj./Tsk. 153/327 - Hélcio/Santhyago - 04/01/2010
			vDsRegStatus = ""
			putitem/id vDsRegStatus, "CD_EMPRESA",   CD_EMPRESA.TIN_OTNNSVC
			putitem/id vDsRegStatus, "CD_OTN",       CD_OTN.TIN_OTNNSVC
			putitem/id vDsRegStatus, "CD_PRDORIGEM", CD_PRDORIGEM.TIN_OTNNSVC
			putitem/id vDsRegStatus, "CD_EMPLOTE",   CD_EMPLOTE.TIN_OTNNSVC
			putitem/id vDsRegStatus, "NR_LOTE",      NR_LOTE.TIN_OTNNSVC
			putitem/id vDsRegStatus, "NR_ITEM",      NR_ITEM.TIN_OTNNSVC
			clear/e "TIN_REPISVC"
			CD_EMPRESA.TIN_REPISVC/init   = CD_EMPRESA.TIN_OTNNSVC
			CD_OTN.TIN_REPISVC/init       = CD_OTN.TIN_OTNNSVC
			CD_PRDORIGEM.TIN_REPISVC/init = CD_PRDORIGEM.TIN_OTNNSVC
			CD_EMPLOTE.TIN_REPISVC/init   = CD_EMPLOTE.TIN_OTNNSVC
			NR_LOTE.TIN_REPISVC/init      = NR_LOTE.TIN_OTNNSVC
			NR_ITEM.TIN_REPISVC/init      = NR_ITEM.TIN_OTNNSVC
			retrieve/e "TIN_REPISVC"
			if ($status >= 0)
;				putitem vDsLstStatusRep, -1, vDsRegStatus
				IN_STATUS.TIN_OTNNSVC = "R"
			else
;				putitem vDsLstStatusNormal, -1, vDsRegStatus
				IN_STATUS.TIN_OTNNSVC = "N"
			endif
			clear/e "TIN_REPISVC"
;			Prj./Tsk. 153/327 >
			
			CD_EMPTRA.TIN_OTNNSVC    = "" 
			NR_TRANSACAO.TIN_OTNNSVC = ""
			DT_TRANSACAO.TIN_OTNNSVC = ""
			NR_ITEMTRA.TIN_OTNNSVC   = ""
			NR_SEQUENCIA.TIN_OTNNSVC = ""
			NR_GUIA.TIN_OTNNSVC      = ""
			
			setocc "TIN_OTNNSVC", $curocc("TIN_OTNNSVC")+1	
		endwhile
	endif
	
	if(vInAchou)
;		< Prj./Tsk. 153/327 - Hélcio/Santhyago - 04/01/2010
;		if (vDsLstStatusNormal != "")
;			viParams = ""
;			putitem/id viParams, "DS_LISTA",  vDsLstStatusNormal
;			putitem/id viParams, "CD_STATUS", "N" ; N - Normal
;			activate "TINSVCO002".alteraSitucaoItemOTNN($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
;			if ($procerror)
;				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
;				return(-1)
;			endif
;		endif
;
;		if (vDsLstStatusRep != "")
;			viParams = ""
;			putitem/id viParams, "DS_LISTA",  vDsLstStatusRep
;			putitem/id viParams, "CD_STATUS", "R" ; R - Reprocesso
;			activate "TINSVCO002".alteraSitucaoItemOTNN($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
;			if ($procerror)
;				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
;				return(-1)
;			endif
;		endif
;	Prj./Tsk. 153/327 >
		
		$collhandle("TIN_OTNNSVC")->Salvar()
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif
	
	if (vInAchouAgrupador)
		$collhandle("TIN_AGRUPADORSVC")->Salvar()
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif
	
	clear/e "TIN_OTNNSVC"
	clear/e "PRD_LOTEISVC"     ; <Yuri/Santhyago - Prj./Tsk. 153/122 - 03/09/2009>
	clear/e "TIN_AGRUPADORSVC" ; <Yuri/Santhyago - Prj./Tsk. 153/122 - 03/09/2009>
	
	;========================================================
	
	;========================= ANO Pjt104 Trf522 - 26/06/2009
	clear/e "TRA_TRANSOBSVC"
	CD_EMPTRA.TRA_TRANSOBSVC/init    = vCdEmpresa
	NR_TRANSACAO.TRA_TRANSOBSVC/init = vNrTransacao
	DT_TRANSACAO.TRA_TRANSOBSVC/init = vDtTransacao
	retrieve/e "TRA_TRANSOBSVC"
	if($status >= 0)
		$collhandle("TRA_TRANSOBSVC")->Excluir()
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		
		$collhandle("TRA_TRANSOBSVC")->Salvar()
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif
	;========================================================	
	
	exit(0)
end ;operation cancelaTransacao
