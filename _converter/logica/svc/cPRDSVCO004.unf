entry getParam
	params
		numeric piCdEmpresa : IN
	endparams

	variables
		numeric vCdEmpresa, vCdEmpValor
		string viParams, voParams, vDsPosIniFim
	endvariables

	if (piCdEmpresa = 0)
		$instancehandle->SetErroApl("ERRO=-1·;DESCRICAO=Empresa para busca de parâmetros não infomada!", $xCdErro$, $xCtxErro$)
		return(-1)
	endif
	
	viParams = ""
	putitem viParams, -1, "CD_EMPVALOR"
	putitem viParams, -1, "PRD_CFGNIVEL_GRUPO"
	putitem viParams, -1, "CD_GRADE_PADRAO"
	putitem viParams, -1, "CD_COR_PADRAO"
	putitem viParams, -1, "DS_LST_TAM_NUMERICO_GRUPO"
	putitem viParams, -1, "DS_LST_NIVEL_GRUPO"
	putitem viParams, -1, "DS_LST_NIVEL_DESC_GRUPO"
	putitem viParams, -1, "IN_CD_BARRA_COLCCI"
	putitem viParams, -1, "DS_SEP_NRSEQ_BARRA_PRD"
	putitem viParams, -1, "IN_SEQPRD_SEPARADO_EMP"
	putitem viParams, -1, "DS_POS_INI_FIM_BARRA_PRD"
	activate "ADMSVCO001".GetLstParametro(viParams, voParams, $xCdErro$, $xCtxerro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		return(-1)
	elseif ($xCdErro$)
		$instancehandle->SetErroApl($xCtxErro$, $xCdErro$, $xCtxErro$)
		return(-1)
	endif
	
	$cdEmpresaValorSis$ = $item("CD_EMPVALOR", voParams)
	if ($cdEmpresaValorSis$ = 0)    
		$cdEmpresaValorSis$ = $item("CD_EMPRESA", $xlpg$)
	endif
	$cdCfgNivel$ = $item("PRD_CFGNIVEL_GRUPO", voParams)
	$cdCorPadrao$ = $item("CD_COR_PADRAO", voParams)
	$cdGradePadrao$ = $item("CD_GRADE_PADRAO", voParams)
	$dsLstTamGrupo$ = $item("DS_LST_TAM_NUMERICO_GRUPO", voParams)
	$dsLstNivelGrupo$ = $item("DS_LST_NIVEL_GRUPO", voParams)	
	$dsLstNivelDescGrupo$ = $item("DS_LST_NIVEL_DESC_GRUPO", voParams)
	$inCdBarraColcci$ = $item("IN_CD_BARRA_COLCCI", voParams)
	$dsSepNrSeqBarraPRD$ = $item("DS_SEP_NRSEQ_BARRA_PRD", voParams)
	$inSeqPrdSeparado$ = $item("IN_SEQPRD_SEPARADO_EMP", voParams)
	vDsPosIniFim = $item("DS_POS_INI_FIM_BARRA_PRD", voParams)

	$nrPosicaoIni$ = 0
	$nrPosicaoFim$ = 0
	if (vDsPosIniFim != "")
		scan vDsPosIniFim, "/"
		if ($result > 1)
			$nrPosicaoIni$ = vDsPosIniFim[1, $result - 1]
			$nrPosicaoFim$ = vDsPosIniFim[$result + 1]
			if ($nrPosicaoIni$ = 0) | ($nrPosicaoFim$ = 0)
				$nrPosicaoIni$ = 0
				$nrPosicaoFim$ = 0
			endif			
			if ($nrPosicaoIni$ >= $nrPosicaoFim$)
				$nrPosicaoIni$ = 0
				$nrPosicaoFim$ = 0
			endif
		endif
	endif	
	
	viParams = ""
	putitem viParams, -1, "CD_EMPRESA_VALOR"
	putitem viParams, -1, "IN_CADASTRO_FIXO"
	putitem viParams, -1, "CD_EMP_PADRAO_PRD"
	putitem viParams, -1, "IN_PDV_OTIMIZADO"
	putitem viParams, -1, "DS_PREFIXO_COD_KIT_PRD"
	putitem viParams, -1, "TP_VALIDA_FAT_PRD_BLOQ"
	putitem viParams, -1, "TP_LEITURA_BARRA_LOTE"
	putitem viParams, -1, "DS_SEPARADOR_PREFIXO_BAR" ;>-- MAC - PRJ156/328 - 25/05/2010 ---
	activate "ADMSVCO001".GetParamEmpresa(piCdEmpresa, viParams, voParams, $xCdErro$, $xCtxerro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		return(-1)
	elseif ($xCdErro$)
		$instancehandle->SetErroApl($xCtxErro$, $xCdErro$, $xCtxErro$)
		return(-1)
	endif
	
	$cdEmpresaValorEmp$ = $item("CD_EMPRESA_VALOR", voParams)
	$inCadastroFixo$ = $item("IN_CADASTRO_FIXO", voParams)
	$cdEmpresaPadrao$ = $item("CD_EMP_PADRAO_PRD", voParams)
	$inPdvOtimizado$ = $item("IN_PDV_OTIMIZADO", voParams)
	$dsPrefixoKit$ = $item("DS_PREFIXO_COD_KIT_PRD", voParams)
	$tpValidaFatPrdBloq$ = $item("TP_VALIDA_FAT_PRD_BLOQ", voParams)
	$tpBarraLote$ = $item("TP_LEITURA_BARRA_LOTE", voParams)
	$dsSeparadorPrefixoBar$ = $item("DS_SEPARADOR_PREFIXO_BAR", voParams);>-- MAC - PRJ156/328 - 25/05/2010 ---
	
	return(0)
end

;-----------------
entry preencheZero
;-----------------
	params        
		numeric piNumero : IN
		numeric piTamanho : IN 
		string poNumero : OUT
	endparams
	
	poNumero = piNumero
	length poNumero
	while ($result < piTamanho)
		poNumero = "0%%poNumero"
		length poNumero
	endwhile
	
	if ($result > piTamanho)
		poNumero = poNumero[$result - piTamanho + 1]
	endif
	
	return(0)
end

 public operation ProcImplantacao 
	Params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		numeric poCdErro    :OUT
		string  poCtxErro   :OUT
	endParams
	Variables
		numeric vCdEmpresa, vCdGrupoEmpresa, vCdOperador, vCdProduto, vCdValor, vNrSeq
		numeric vInEstorno, vVlPreco, vVlCusto, vQtSaldo
		String  vListaParam, vGlobal
		date    vDtSistema
	endVariables
	poCdErro   = 0 
	poCtxErro  = "" 
	vInEstorno = 0
	
	vCdEmpresa      = $item("CD_EMPRESA",$xlpg$)
	vCdGrupoEmpresa = $item("CD_GRUPOEMPRESA",$xlpg$)
	vCdOperador     = $item("CD_OPERADOR",piParams) 
	vDtSistema      = $item("DT_SISTEMA",piParams)
	vInEstorno      = $item("IN_ESTORNO",piParams)
	vQtSaldo        = $item("QT_SALDO",piParams)
	vVlPreco        = $item("VL_PRECO",piParams)
	vVlCusto        = $item("VL_CUSTO",piParams)
	if (vQtSaldo = "")
		vQtSaldo = 0
	endif
	if (vVlPreco = "")
		vVlPreco = 0
	endif
	if (vVlCusto = "")
		vVlCusto = 0
	endif
	
	clear/e "GER_OPERACAOSVC"
	cd_operacao.ger_operacaosvc/init = $item("CD_OPERACAO",piParams)
	retrieve/e "GER_OPERACAOSVC"
	if ($status < 0)
		$instancehandle->SetErroOpr($procerrorcontext,poCdErro,poCtxErro)
		return (-1)
	endif
	;os saldos envolvidos na operacao foram lidos juntamente com a entidade acima (PAI-FILHO)
	;tratar uma lista
	setocc "ger_opersaldosvc",1
	if ($totdbocc(ger_opersaldosvc) > 0) & %\
	(in_kardex.ger_operacaosvc) 
	;existe uma ocorrencia e a operacao gera kardex
	clear/e "sis_prdhistsvc"
	cd_historico.sis_prdhistsvc/init = cd_historico.ger_opersaldosvc
	retrieve/e "SIS_PRDHISTSVC"
	if ($status < 0)
		$instancehandle->SetErroOpr($procerrorcontext,poCdErro,poCtxErro)
		return (-1)
	endif
	;somente sera negativo quando for um estorno de implantacao
	if (vInEstorno)
		; é um valor de adição - positivo INVERTER
		vQtSaldo = -1 * vQtSaldo  
	endif
	vCdProduto  = $item("CD_PRODUTO",piParams)
	vCdOperador = $item("CD_OPERADOR",piParams)
	repeat
		;gerar um registro no PRDSALDO
		clear/e "prd_tiposaldosvc"
		cd_saldo.prd_tiposaldosvc/init = cd_saldo.ger_opersaldosvc
		retrieve/e "prd_tiposaldosvc"
		if ($status < 0)
			$instancehandle->SetErroOpr($procerrorcontext,poCdErro,poCtxErro)
			return (-1)
		endif
		; busca o saldo
		clear/e "prd_prdsaldosvc"
		creocc "prd_prdsaldosvc",-1
		cd_empresa.prd_prdsaldosvc = vCdEmpresa
		cd_produto.prd_prdsaldosvc = vCdProduto
		cd_saldo.prd_prdsaldosvc   = cd_saldo.prd_tiposaldosvc
		dt_saldo.prd_prdsaldosvc   = vDtSistema
		retrieve/o "prd_prdsaldosvc"
		if ($status = -7)
			retrieve/x "prd_prdsaldosvc"
		endif
		cd_grupoempresa.prd_prdsaldosvc = vCdGrupoEmpresa
		;como é uma IMPLANTACAO ele assume o valor do SALDO sem calcular
		qt_saldo.prd_prdsaldosvc    = vQtSaldo
		cd_operador.prd_prdsaldosvc = vCdOperador
		dt_cadastro.prd_prdsaldosvc = $datim
		$collhandle(prd_prdsaldosvc)->Salvar()
		if ($status < 0)
			$instancehandle->SetErroOpr($procerrorcontext,poCdErro,poCtxErro)
			return (-1)
		endif
		if (in_gerakardex.ger_opersaldosvc = 1)
			;servico para buscar o nr_sequencia
			vNrSeq = 0
			;Serviço que gera a proxima sequencia 
			activate "GERSVCO009".GetSeqKardex(vCdEmpresa,vDtSistema,vCdProduto,$xlpg$,vNrSeq,$xCdErro$,$xCtxErro$)
			if (vNrSeq = 0)
				poCtxErro = " Não foi possível gerar uma sequência para o lançamento - Erro Fatal "  
				return(-1)
			endif
			;gerar o KARDEX PARA O ITEM
			clear/e "prd_kardexsvc"  
			creocc "prd_kardexsvc",-1
			cd_empresa.prd_kardexsvc      = vCdEmpresa
			cd_produto.prd_kardexsvc      = vCdProduto
			dt_movimento.prd_kardexsvc    = vDtSistema
			cd_saldo.prd_kardexsvc        = cd_saldo.ger_opersaldosvc
			nr_sequencia.prd_kardexsvc    = vNrSeq
			cd_grupoempresa.prd_kardexsvc = vCdGrupoEmpresa 
			cd_historico.prd_kardexsvc    = cd_historico.ger_opersaldosvc
			in_estorno.prd_kardexsvc      = vInEstorno 
			cd_operador.prd_kardexsvc     = vCdOperador
			dt_cadastro.prd_kardexsvc     = $datim
			;cd_seriedctoori.prd_kardexsvc = "IMP"
			nr_dctoorigem.prd_kardexsvc   = 1
			qt_movimentada.prd_kardexsvc  = vQtSaldo
			$collhandle(prd_kardexsvc)->Salvar()
			if ($status < 0)
				$instancehandle->SetErroOpr($procerrorcontext,poCdErro,poCtxErro) ; chamada de uma operation que retorno o erro diferente de -1 e -2
				return (-1)
			endif
		endif   
		;incrementa o hitlist para buscar a proxima ocorrencia lida
		setocc "ger_opersaldosvc",$curocc(ger_opersaldosvc)+1
	until ($status <= 0)
endif 
$status = 0
;Tratar valor. A rotina esta preparada para tratar someten UM PRECO e UM CUSTO
;caso seja um ESTORNO, não executa este segmento

setocc "ger_opervalorsvc",1
if ($totdbocc(ger_opervalorsvc) > 0) & %\
(vInEstorno = 0)
;gerar kardex com os valores deste produto
;busca os valores envolvidos na operacao 
repeat
	;gerar os Valores associados a operacao para o Produto
	clear/e "prd_valorsvc"
	creocc "prd_valorsvc",-1
	cd_empresa.prd_valorsvc = vCdEmpresa
	cd_produto.prd_valorsvc = vCdProduto
	tp_valor.prd_valorsvc   = tp_unidvalor.ger_opervalorsvc
	cd_valor.prd_valorsvc   = cd_unidvalor.ger_opervalorsvc
	retrieve/o "prd_valorsvc"
	if ($status = -7)
		retrieve/x "prd_valorsvc"
	endif
	cd_empresa.prd_valorsvc      = vCdEmpresa
	cd_produto.prd_valorsvc      = vCdProduto
	tp_valor.prd_valorsvc        = tp_unidvalor.ger_opervalorsvc
	cd_valor.prd_valorsvc        = cd_unidvalor.ger_opervalorsvc
	cd_grupoempresa.prd_valorsvc = vCdGrupoEmpresa
	if (tp_unidvalor.ger_opervalorsvc = "P")
		vl_produto.prd_valorsvc = vVlPreco
	else
		vl_produto.prd_valorsvc = vVlCusto
	endif
	cd_operador.prd_valorsvc = vCdOperador
	dt_cadastro.prd_valorsvc = $datim
	$collhandle(prd_valorsvc)->Salvar()
	
	if ($status < 0)
		$instancehandle->SetErroOpr($procerrorcontext,poCdErro,poCtxErro)
		return (-1)
	endif
	;gerar kardex para os valores, buscar sequencia de lancamento 
	if (vNrSeq != "")
		;ja existe um numero de seq.. Usar o mesmo 
	else
		vNrSeq = 0
		activate "GERSVCO009".GetSeqKardex(vCdEmpresa,vDtSistema,vCdProduto,$xlpg$,vNrSeq,$xCdErro$,$xCtxErro$)
		if (vNrSeq = 0)
			poCtxErro = " Não foi possível gerar uma sequência para o lançamento - Erro Fatal "  
			return(-1)
		endif
	endif
	if (tp_unidvalor.ger_opervalorsvc = "P")
		;gerar para os Precos 
		clear/e "prd_tipovalorsvc"
		cd_valor.prd_tipovalorsvc/init = cd_unidvalor.ger_opervalorsvc
		tp_valor.prd_tipovalorsvc/init = "P"
		retrieve/e "prd_tipovalorsvc"
		if ($status < 0)
			$instancehandle->SetErroOpr($procerrorcontext,poCdErro,poCtxErro) ; chamada de uma operation que retorno o erro diferente de -1 e -2
			return (-1)
		endif
		; busca o preco
		clear/e "prd_valorsvc"
		cd_empresa.prd_valorsvc = vCdEmpresa
		cd_produto.prd_valorsvc = vCdProduto
		cd_valor.prd_valorsvc   = cd_valor.prd_tipovalorsvc
		tp_valor.prd_valorsvc   = "P"
		retrieve/e "prd_valorsvc"
		
		;gera kardex com o valor
		clear/e "prd_kardexvalsvc"  
		creocc "prd_kardexvalsvc",-1
		cd_empresa.prd_kardexvalsvc      = vCdEmpresa
		cd_produto.prd_kardexvalsvc      = vCdProduto
		dt_movimento.prd_kardexvalsvc    = vDtSistema
		nr_sequencia.prd_kardexvalsvc    = vNrSeq
		tp_valor.prd_kardexvalsvc        = "P"
		cd_valor.prd_kardexvalsvc        = cd_valor.prd_tipovalorsvc
		vl_valor.prd_kardexvalsvc        = vVlPreco
		cd_grupoempresa.prd_kardexvalsvc = vCdGrupoEmpresa 
		cd_operador.prd_kardexvalsvc     = vCdOperador
		dt_cadastro.prd_kardexvalsvc     = $datim
		$collhandle(prd_kardexvalsvc)->Salvar()
		if ($status < 0)
			$instancehandle->SetErroOpr($procerrorcontext,poCdErro,poCtxErro) ; chamada de uma operation que retorno o erro diferente de -1 e -2
			return (-1)
		endif
	else
		;gerar para os Custos
		clear/e "prd_tipovalorsvc"
		tp_valor.prd_tipovalorsvc/init = "C"
		cd_valor.prd_tipovalorsvc/init = cd_unidvalor.ger_opervalorsvc 
		retrieve/e "prd_tipovalorsvc"
		if ($status < 0)
			$instancehandle->SetErroOpr($procerrorcontext,poCdErro,poCtxErro) ; chamada de uma operation que retorno o erro diferente de -1 e -2
			return (-1)
		endif
		; busca o custo
		clear/e "prd_valorsvc"
		cd_empresa.prd_valorsvc = vCdEmpresa
		cd_produto.prd_valorsvc = vCdProduto
		tp_valor.prd_valorsvc   = "C"
		cd_valor.prd_valorsvc   = cd_valor.prd_tipovalorsvc
		retrieve/e "prd_valorsvc"
		;gera kardex com o custo
		clear/e "prd_kardexvalsvc"  
		creocc "prd_kardexvalsvc",-1
		cd_empresa.prd_kardexvalsvc      = vCdEmpresa
		cd_produto.prd_kardexvalsvc      = vCdProduto
		dt_movimento.prd_kardexvalsvc    = vDtSistema
		nr_sequencia.prd_kardexvalsvc    = vNrSeq
		tp_valor.prd_kardexvalsvc        = "C"
		cd_valor.prd_kardexvalsvc        = cd_valor.prd_tipovalorsvc
		cd_grupoempresa.prd_kardexvalsvc = vCdGrupoEmpresa
		vl_valor.prd_kardexvalsvc        = vVlCusto
		cd_operador.prd_kardexvalsvc     = vCdOperador
		dt_cadastro.prd_kardexvalsvc     = $datim
		$collhandle(prd_kardexvalsvc)->Salvar()
		if ($status < 0)
			$instancehandle->SetErroOpr($procerrorcontext,poCdErro,poCtxErro) ; chamada de uma operation que retorno o erro diferente de -1 e -2
			return (-1)
		endif
	endif  
	;incrementa o hitlist para buscar a proxima ocorrencia lida
	setocc "ger_opervalorsvc",$curocc(ger_opervalorsvc)+1
until ($status <= 0)
endif
;SOMENTE VALOR 
return (0)
;=========================================================================
;Autor: BAM
;
;Nome:ProcImplantacao
;
;Data: 16/07/2002
;
;Versão:
;
;Descrição :Faz a implantacao de saldo de um produto, parte do presuposto que 
;           é o primeiro lançamento, vai gerar o PRD_PRDSALDO e PRD_VALOR
;           para o produto de acordo como os saldos e valores associados a OPERACAO
;           somente recebe UM PRECO, UM CUSTO e UM SALDO. Se a OPERACAO tiver mais
;           valores cadastrado deverá ser feito um processo específico.
;           juntamente com o processo acima, gera o Kardex de Saldo e Kardex de valor 
;           para o produto
;           O commit é executado no componente chamador
;Parametros Entrada
;           em piParam = CD_OPERACAO, CD_PRODUTO, DT_SISTEMA, CD_OPERADOR,
;                        QT_SALDO, VL_CUSTO, VL_PRECO
;
;Parametros Saída
;           Código de Erro
;           Contexto do erro
;Exemplo Chamada
;    activate "PRDSVCO004".ProcImplantacao($xlpg$,piParams,poParams,$xCdErro$,$xCtxErro$)
;Histórico Manutenção:
;
;Data    Operador    Detalhes
End ; operation ProcImplantacao

;-------------------------------------------------------------------------------------------
public operation ProcAltValor 
	Params
		string  $xlpg$    :IN    
		string  piParams    :IN
		string  poParams    :OUT
		numeric poCdErro    :OUT
		string  poCtxErro   :OUT
	endParams
	Variables
		numeric vCdEmpresa,vCdValor,vCdProduto,vNrSeq
		String  vTpValor
		date    vDtSistema
	endVariables
	poCdErro = 0 
	poCtxErro = "" 
	
	vCdEmpresa = $item("CD_EMPRESA",$xlpg$)
	vDtSistema = $item("DT_SISTEMA",piParams)
	vTpValor   = $item("TP_VALOR",piParams)
	vCdValor   = $item("CD_VALOR",piParams)
	vCdProduto = $item("CD_PRODUTO",piParams)
	
	clear/e "prd_altvalorsvc"
	creocc "prd_altvalorsvc",-1
	;gerar historico de alteracao de valores, buscar sequencia de lancamento 
	vNrSeq = 0
	activate "GERSVCO009".GetSeqValor(vCdEmpresa,vDtSistema,vCdProduto,vTpValor,vCdValor,$xlpg$,vNrSeq,$xCdErro$,$xCtxErro$)
	if (vNrSeq = 0)
		poCtxErro = " Não foi possível gerar uma sequência para o lançamento - Erro Fatal "  
		return(-1)
	endif
	cd_empresa.prd_altvalorsvc      = vCdEmpresa
	cd_produto.prd_altvalorsvc      = vCdProduto
	tp_valor.prd_altvalorsvc        = vTpValor
	cd_valor.prd_altvalorsvc        = vCdValor
	dt_movimento.prd_altvalorsvc    = vDtSistema
	nr_sequencia.prd_altvalorsvc    = vNrSeq
	cd_motivo.prd_altvalorsvc       = $item("CD_MOTIVOALT",piParams)
	cd_grupoempresa.prd_altvalorsvc = $item("CD_GRUPOEMPRESA",$xlpg$)
	cd_operador.prd_altvalorsvc     = $item("CD_OPERADOR",piParams) 
	vl_anterior.prd_altvalorsvc     = $item("VL_PRECO",piParams)
	dt_cadastro.prd_altvalorsvc     = $datim
	$collhandle(prd_altvalorsvc)->Salvar()
	if ($status < 0)
		$instancehandle->SetErroOpr($procerrorcontext,poCdErro,poCtxErro)
		return (-1)
	endif
	return (0)
	;=========================================================================
	;Autor: BAM
	;
	;Nome:ProcAltValor
	;
	;Data: 17/07/2002
	;
;Versão:
	;
	;Descrição :Anota o preco anterior de um produto para executar um controle
	;           de alteracao de precos, fica anotado o preco anterior
	;           O commit é executado no componente chamador
	;Parametros Entrada
	;           em piParam = CD_OPERACAO, CD_PRODUTO, DT_SISTEMA, CD_OPERADOR,
	;                        TP_VALOR, CD_VALORM, VL_PRECO
	;Parametros Saída
	;           Código de Erro
	;           Contexto do erro
	;Exemplo Chamada
	;    activate "PRDSVCO004".ProcAltValor($xlpg$,piParams,poParams,$xCdErro$,$xCtxErro$)
;Histórico Manutenção:
	;
	;Data    Operador    Detalhes
End ; operation ProcAltValor

;-----------------------------
public operation ProcCorrecao 
	;-----------------------------
	Params
		string  $xlpg$    :IN    
		string  piParams    :IN
		string  poParams    :OUT
		numeric poCdErro    :OUT
		string  poCtxErro   :OUT
	endParams
	Variables
		numeric vCdEmpresa,vCdGrupoEmpresa,vCdOperador,vCdProduto,vCdValor,vNrSeq,vValor,vCdMotivoAlt
		String  vGlobal,vTpValor
		date    vDtSistema
	endVariables
	poCdErro        = 0 
	poCtxErro       = "" 
	vCdEmpresa      = $item("CD_EMPRESA",$xlpg$)
	vCdGrupoEmpresa = $item("CD_GRUPOEMPRESA",$xlpg$)
	vCdOperador     = $item("CD_OPERADOR",piParams) 
	vDtSistema      = $item("DT_SISTEMA",piParams)
	vTpValor        = $item("TP_VALOR",piParams)
	vCdValor        = $item("CD_VALOR",piParams)
	vValor          = $item("VL_PRECO",piParams)
	vCdMotivoAlt    = $item("CD_MOTIVOALT",piParams)
	vCdProduto      = $item("CD_PRODUTO",piParams)
	
	clear/e "prd_altvalorsvc"
	creocc  "prd_altvalorsvc",-1
	;gerar historico de alteracao de valores, buscar sequencia de lancamento 
	vNrSeq = 0
	activate "GERSVCO009".GetSeqValor(vCdEmpresa,vDtSistema,vCdProduto,vTpValor,vCdValor,$xlpg$,vNrSeq,$xCdErro$,$xCtxErro$)
	if (vNrSeq = 0)
		poCtxErro = " Não foi possível gerar uma sequência para o lançamento - Erro Fatal "  
		return(-1)
	endif
	cd_empresa.prd_altvalorsvc      = vCdEmpresa
	cd_produto.prd_altvalorsvc      = vCdProduto
	tp_valor.prd_altvalorsvc        = vTpValor
	cd_valor.prd_altvalorsvc        = vCdValor
	dt_movimento.prd_altvalorsvc    = vDtSistema
	nr_sequencia.prd_altvalorsvc    = vNrSeq
	cd_motivo.prd_altvalorsvc       = vCdMotivoAlt
	cd_grupoempresa.prd_altvalorsvc = vCdGrupoEmpresa 
	cd_operador.prd_altvalorsvc     = vCdOperador
	vl_anterior.prd_altvalorsvc     = vValor
	dt_cadastro.prd_altvalorsvc     = $datim
	$collhandle(prd_altvalorsvc)->Salvar()
	if ($status < 0)
		$instancehandle->SetErroOpr($procerrorcontext,poCdErro,poCtxErro)
		return (-1)
	endif
	return (0)
	;=========================================================================
	;Autor: BAM
	;
	;Nome:ProcAltValor
	;
	;Data: 17/07/2002
	;
;Versão:
	;
	;Descrição :Anota o preco anterior de um produto para executar um controle
	;           de alteracao de precos, fica anotado o preco anterior
	;           O commit é executado no componente chamador
	;Parametros Entrada
	;           em piParam = CD_OPERACAO, CD_PRODUTO, DT_SISTEMA, CD_OPERADOR,
	;                        TP_VALOR, CD_VALORM, VL_PRECO
	;Parametros Saída
	;           Código de Erro
	;           Contexto do erro
	;Exemplo Chamada
	;    activate "PRDSVCO004".ProcAltValor($xlpg$,piParams,poParams,$xCdErro$,$xCtxErro$)
;Histórico Manutenção:
	;
	;Data    Operador    Detalhes
End ; operation ProcCorrecao

;------------------------------
public operation GetSdoAnterior 
	;------------------------------
	Params
		string  $xlpg$    :IN
		string  piParams    :IN
		string  poParams    :INOUT
		numeric poCdErro    :OUT
		string  poCtxErro   :OUT
	endParams
	
	variables
		numeric vCdGrupoEmpresa,vCdProduto,vCdSaldo,vQtSaldo,vCdEmpresa, vNr
		date    vDtSaldo,vDtSaldoEstoque,vDtMovimento
	endvariables
	
	;    vCdEmpresa      = $item("CD_EMPRESA",piParams)
	;    Foi colocado a Lista de Empresa no poParams e ele tem que ser INOUT
	vCdEmpresa      = poParams
	vCdGrupoEmpresa = $item("CD_GRUPOEMPRESA",piParams)
	vCdProduto      = $item("CD_PRODUTO",piParams)
	vCdSaldo        = $item("CD_SALDO",piParams)
	vDtSaldo        = $item("DT_SALDO",piParams)
	if (vDtSaldo = "")
		vDtSaldo        = $item("DT_SISTEMA",$xlpg$)
	endif
	vNr             = $item("NR_USUARIOS",$xlpg$)
	vDtSaldoEstoque = 0
	vDtMovimento    = 0
	vQtSaldo        = 0
	
	clear/e "GER_EMPRESASVC"
	if (vCdEmpresa = "") ;Lista Consolidado
		;if (vCdEmpresa = vNr) ;Lista Consolidado
		cd_grupoempresa.ger_empresasvc/init = vCdGrupoEmpresa
	else
		cd_empresa.ger_empresasvc/init = vCdEmpresa
	endif
	retrieve/e "GER_EMPRESASVC"
	if (!$procerror)
		setocc "GER_EMPRESASVC", 1
		repeat
			selectdb max(dt_saldo) %\
			from "PRD_PRDSALDOSVC" %\
			u_where (cd_empresa.prd_prdsaldosvc = cd_empresa.ger_empresasvc & %\
			cd_produto.prd_prdsaldosvc = vCdProduto & %\
			cd_saldo.prd_prdsaldosvc   = vCdSaldo   & %\
			dt_saldo.prd_prdsaldosvc   < vDtSaldo)    %\
			to vDtSaldoEstoque
			clear/e "PRD_PRDSALDOSVC"
			if (vDtSaldoEstoque != 0)
				cd_empresa.prd_prdsaldosvc = cd_empresa.ger_empresasvc
				cd_produto.prd_prdsaldosvc = vCdProduto
				cd_saldo.prd_prdsaldosvc   = vCdSaldo
				dt_saldo.prd_prdsaldosvc   = vDtSaldoEstoque
				retrieve/e "PRD_PRDSALDOSVC"
				if ($status = 0)
					vQtSaldo = vQtSaldo + qt_saldo.prd_prdsaldosvc
				endif
			endif
			setocc "GER_EMPRESASVC",$curocc(GER_EMPRESASVC)+1
		until ($status <=0)  
	endif
	poParams = ""
	putitem/id poParams, "DT_SALDO", vDtSaldoEstoque
	putitem/id poParams, "QT_SALDO", vQtSaldo
	
	return (0)
	
End ; operation GetSdoAnterior

;---------------------------
public operation GetSdoAtual 
	;---------------------------
	Params
		string  $xlpg$    :IN
		string  piParams    :IN
		string  poParams    :INOUT
		numeric poCdErro    :OUT
		string  poCtxErro   :OUT
	endParams
	
	variables
		numeric vCdGrupoEmpresa,vCdProduto,vCdSaldo,vQtSaldo,vCdEmpresa, vNr
		date    vDtSaldo,vDtSaldoEstoque,vDtMovimento
	endvariables
	
	;    vCdEmpresa      = $item("CD_EMPRESA",piParams)
	;    Foi colocado a Lista de Empresa no poParams e ele tem que ser INOUT
	vCdEmpresa      = poParams
	vCdGrupoEmpresa = $item("CD_GRUPOEMPRESA",piParams)
	vCdProduto      = $item("CD_PRODUTO",piParams)
	vCdSaldo        = $item("CD_SALDO",piParams)
	vDtSaldo        = $item("DT_SALDO",piParams)
	if (vDtSaldo = "")
		vDtSaldo        = $item("DT_SISTEMA",$xlpg$)
	endif
	vNr             = $item("NR_USUARIOS",$xlpg$)
	vDtSaldoEstoque = 0
	vDtMovimento    = 0
	vQtSaldo        = 0
	
	clear/e "GER_EMPRESASVC"
	if (vCdEmpresa = "") ;Lista Consolidado
		cd_grupoempresa.ger_empresasvc/init = vCdGrupoEmpresa
	else
		cd_empresa.ger_empresasvc/init = vCdEmpresa
	endif
	retrieve/e "GER_EMPRESASVC"
	if (!$procerror)
		setocc "GER_EMPRESASVC", 1
		repeat
			selectdb max(dt_saldo) %\
			from "PRD_PRDSALDOSVC" %\
			u_where (cd_empresa.prd_prdsaldosvc = cd_empresa.ger_empresasvc & %\
			cd_produto.prd_prdsaldosvc = vCdProduto & %\
			cd_saldo.prd_prdsaldosvc   = vCdSaldo   & %\
			dt_saldo.prd_prdsaldosvc  <= vDtSaldo)    %\
			to vDtSaldoEstoque
			clear/e "PRD_PRDSALDOSVC"
			if (vDtSaldoEstoque != 0)
				cd_empresa.prd_prdsaldosvc = cd_empresa.ger_empresasvc
				cd_produto.prd_prdsaldosvc = vCdProduto
				cd_saldo.prd_prdsaldosvc   = vCdSaldo
				dt_saldo.prd_prdsaldosvc   = vDtSaldoEstoque
				retrieve/e "PRD_PRDSALDOSVC"
				if ($status = 0)
					vQtSaldo = vQtSaldo + qt_saldo.prd_prdsaldosvc
				endif
			endif
			setocc "GER_EMPRESASVC",$curocc(GER_EMPRESASVC)+1
		until ($status <=0)  
	endif
	poParams = ""
	putitem/id poParams, "DT_SALDO", vDtSaldoEstoque
	putitem/id poParams, "QT_SALDO", vQtSaldo
	
	return (0)
	
End ; operation GetSdoAtual

;--------------------------------------------
; Opetion antiga, utilizar a  verificaProduto
;--------------------------------------------
public operation validaProduto 
	;-----------------------------
	params                        
		string piCdBarra : IN
		boolean piInCodigo : IN
		string poCdProduto : OUT
		numeric poCdErro : OUT
		string poCtxErro : OUT
	endparams
	
	clear/e "PRD_PRODUTOSVC"
	clear/e "PRD_CODIGOBARSVC"
	poCdProduto = ""
	
	if (piInCodigo = <TRUE>)    
		CD_PRODUTO.PRD_PRODUTOSVC = piCdBarra
	else
		CD_BARRAPRD.PRD_CODIGOBARSVC = piCdBarra
		retrieve/o "PRD_CODIGOBARSVC"
		if ($status = -7)
			retrieve/x "PRD_CODIGOBARSVC"
		else
			$instancehandle->SetErroApl("ERRO=-1·;DESCRICAO=Codigo de Barras %%CD_BARRAPRD.PRD_CODIGOBARSVC inválido!", poCdErro, poCtxErro)
			return(0)
		endif
		CD_PRODUTO.PRD_PRODUTOSVC = CD_PRODUTO.PRD_CODIGOBARSVC
	endif    
	
	retrieve/o "PRD_PRODUTOSVC"
	if ($status = -7)
		retrieve/x "PRD_PRODUTOSVC"
	else
		$instancehandle->SetErroApl("ERRO=-1·;DESCRICAO=Codigo de Produto %%CD_PRODUTO.PRD_PRODUTOSVC inválido!", poCdErro, poCtxErro)        
		return(0)
	endif
	
	poCdProduto = CD_PRODUTO.PRD_PRODUTOSVC
	
	return(0)
End ; operation validaProduto

;----------------------------
public operation GetSdoKardex 
	;----------------------------
	Params
		string  piLstEmp    :IN
		string  piParams    :IN
		string  poParams    :OUT
		numeric poCdErro    :OUT
		string  poCtxErro   :OUT
	endParams
	
	variables
		numeric vCdGrupoEmpresa,vCdProduto,vCdSaldo,vQtSaldo,vCdEmpresa
		date    vDtSaldo,vDtSaldoEstoque
	endvariables
	
	vCdEmpresa      = piLstEmp
	vCdGrupoEmpresa = $item("CD_GRUPOEMPRESA",piParams)
	vCdProduto      = $item("CD_PRODUTO",piParams)
	vCdSaldo        = $item("CD_SALDO",piParams)
	vDtSaldo        = $item("DT_SALDO",piParams)
	vDtSaldoEstoque = 0
	vQtSaldo        = 0
	
	clear/e "GER_EMPRESASVC"
	cd_empresa.ger_empresasvc/init      = vCdEmpresa
	cd_grupoempresa.ger_empresasvc/init = vCdGrupoEmpresa
	retrieve/e "GER_EMPRESASVC"
	if (!$procerror)
		setocc "GER_EMPRESASVC", 1
		repeat
			selectdb max(dt_saldo) %\
			from "PRD_PRDSALDOSVC" %\
			u_where (cd_empresa.prd_prdsaldosvc = cd_empresa.ger_empresasvc & %\
			cd_produto.prd_prdsaldosvc = vCdProduto & %\
			cd_saldo.prd_prdsaldosvc   = vCdSaldo   & %\
			dt_saldo.prd_prdsaldosvc   < vDtSaldo)    %\
			to vDtSaldoEstoque
			clear/e "PRD_PRDSALDOSVC"
			if (vDtSaldoEstoque != 0)
				cd_empresa.prd_prdsaldosvc = cd_empresa.ger_empresasvc
				cd_produto.prd_prdsaldosvc = vCdProduto
				cd_saldo.prd_prdsaldosvc   = vCdSaldo
				dt_saldo.prd_prdsaldosvc   = vDtSaldoEstoque
				retrieve/e "PRD_PRDSALDOSVC"
				if ($status = 0)
					vQtSaldo = vQtSaldo + qt_saldo.prd_prdsaldosvc
				endif
			endif
			setocc "GER_EMPRESASVC",$curocc(GER_EMPRESASVC)+1
		until ($status <=0)  
	endif
	
	poParams="DT_SALDO=%%vDtSaldoEstoque·;QT_SALDO=%%vQtSaldo"
	
	return (0)
End ; operation GetSdoKardex

;---------------------------------
public operation achaNovoCdProduto 
;---------------------------------
	params
		string  $xlpg$    :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		numeric vCdProduto, vCdEmpresaParam
		boolean vInSeqMP, vInSeqMc
		string vTpSeq
	endvariables
	
	vInSeqMP = $item("IN_SEQMP", piParams)
	;MTF(17/04/2007) - Projeto 087, tarefa 024.
	vInSeqMc = $item("IN_SEQMC", piParams)
	;
	vCdEmpresaParam = $item("CD_EMPRESA", piParams)
	if (vCdEmpresaParam = 0)
		vCdEmpresaParam = $item("CD_EMPRESA", $xlpg$)
	endif
	$inSeqPrdSeparado$ = $item("IN_SEQPRD_SEPARADO_EMP", piParams)	

	if ($inSeqPrdSeparado$ = "")
		call getParam(vCdEmpresaParam)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif   
	endif

	if (vInSeqMP = <TRUE>)
		vTpSeq = "PRD_PRODUTOMP"
	elseif (vInSeqMc = <TRUE>)
		vTpSeq = "PRD_PRODUTOMC"
	else
		vTpSeq = "PRD_PRODUTO"
	endif
	
	vCdProduto = ""
	while (vCdProduto = "")
		if ($inSeqPrdSeparado$ != <TRUE>)
			newinstance "GERSVCO001", "GERSVCO001", "TRANSACTION=TRUE"
			activate "GERSVCO001".GetNumSeqComm($xlpg$, vTpSeq, "CD_PRODUTO", 999999999, vCdProduto, $xCdErro$,$xCtxErro$)
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus("", $xCdErro$, $xCtxErro$, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		else
			newinstance "GERSVCO001", "GERSVCO001", "TRANSACTION=TRUE"
			activate "GERSVCO001".GetNumSeqEmp($xlpg$, vCdEmpresaParam, vTpSeq, "CD_PRODUTO", 999999999, vCdProduto, $xCdErro$, $xCtxErro$)
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus("", $xCdErro$, $xCtxErro$, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		endif
		
		clear/e "PRD_PRODUTOSVC"
		CD_PRODUTO.PRD_PRODUTOSVC/init = vCdProduto
		retrieve/e "PRD_PRODUTOSVC"
		if ($status >= 0)
			vCdProduto = ""
		endif
	endwhile
	
	poParams = ""
	putitem/id poParams, "CD_PRODUTO", vCdProduto
	
	return (0)
End ; operation achaNovoCdProduto

;----------------------------------
public operation achaNovoCdSeqGrupo
;----------------------------------
	params
		string  $xlpg$    :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		numeric vCdSeqGrupo
		boolean vInSeqMP
		string vTpSeq
	endvariables
	
	vInSeqMP = $item("IN_SEQMP", piParams)
	
	if (vInSeqMP = <TRUE>)
		vTpSeq = "PRD_GRUPOMP"
	else
		vTpSeq = "PRD_GRUPO"
	endif
	
	vCdSeqGrupo = ""
	while (vCdSeqGrupo = "")        
		newinstance "GERSVCO001", "GERSVCO001", "TRANSACTION=TRUE"
		activate "GERSVCO001".GetNumSeqComm($xlpg$, vTpSeq, "CD_SEQ", 999999999, vCdSeqGrupo, $xCdErro$,$xCtxErro$)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus("", $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		clear/e "PRD_GRUPOSVC"
		CD_SEQ.PRD_GRUPOSVC/init = vCdSeqGrupo
		retrieve/e "PRD_GRUPOSVC"
		if ($status >= 0)
			vCdSeqGrupo = ""
		endif
	endwhile
	
	poParams = ""
	putitem/id poParams, "CD_SEQGRUPO", vCdSeqGrupo
	
	return (0)
End ; operation achaNovoCdSeqGrupo

;-------------------------------
public operation verificaProduto
	;-------------------------------    
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		string vCdBarraPrd, vDsLstEmpresa, vDsLstEmp, vDsLinha, vDsLstProduto, viParams, voParams
		numeric vCdEmpresa, vCdEmpresaParam, vQtEmbalagem, vTpLote, vTpInspecao
		boolean vInCodigo, vInProdAcabado, vInMatPrima, vInInativo, vInAchou
		boolean vInBarraSeq, vInMatConsumo, vInProdutoBloq, vInPrdBloqueado, vInConsulta, vInQtLote
		numeric vCdEmpLote, vNrLote, vNrItem, vQtLote, vCdProduto
		numeric vPos
		string  vDsPrefixo, vCdBarraCont
	endvariables	

	clear/e "PRD_PRODUTOSVC"
	clear/e "PRD_CODIGOBARSVC"
	vQtEmbalagem = 1
	
	vCdBarraPrd = $item("CD_BARRAPRD", piParams)
	vInCodigo = $item("IN_CODIGO", piParams)
	vInProdAcabado = $item("IN_PRODACABADO", piParams)
	vInMatPrima = $item("IN_MATPRIMA", piParams)
	vInMatConsumo = $item("IN_MATCONSUMO", piParams)
	vInInativo = $item("IN_INATIVO", piParams)
	;---Elia Proj. 102/448 27/11/08
	vTpLote = $item("TP_LOTE", piParams)
	vTpInspecao = $item("TP_INSPECAO", piParams)
	;
	vInProdutoBloq = $item("IN_PRODUTOBLOQ", piParams)

	vInConsulta	= $item("IN_CONSULTA", piParams) ;;Marcus Vinicius - 101/528 - 16/03/2010
	
	vInQtLote = $item("IN_QTLOTE", piParams)
	if (vInQtLote = "")
		vInQtLote = <TRUE>
	endif
	
	vCdEmpresaParam = $item("CD_EMPRESA", piParams)
	if (vCdEmpresaParam = 0)
		vCdEmpresaParam = $item("CD_EMPRESA", $xlpg$)
	endif
	vInBarraSeq = <FALSE>

	call getParam(vCdEmpresaParam)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif   

	if (vInCodigo = <TRUE>)
		length vCdBarraPrd
		if ($result > 9)
			$instancehandle->setStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Código de produto %%vCdBarraPrd possui mais que 9 caracteres!", "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		CD_PRODUTO.PRD_PRODUTOSVC = vCdBarraPrd
	else
		;>-- MAC - PRJ 156/328 - 25/05/2010 ---
		vPos = 0
		vDsPrefixo   = ""
		vCdBarraCont = ""

		if ($dsSeparadorPrefixoBar$ != "")
			scan vCdBarraPrd, $dsSeparadorPrefixoBar$
			if ($result > 0)
				vPos = $result
				vDsPrefixo   = vCdBarraPrd[1,(vPos-1)]
				vCdBarraCont = vCdBarraPrd[vPos+1]
			endif
		endif
   
		if (vDsPrefixo = 01) ;Etiqueta contagem
			viParams = ""
			putitem/id viParams, "DS_STRING", vCdBarraCont	
			activate "GERSVCO053".validaContagem($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif

			poParams = ""
			putitem/id poParams, "CD_EMPCONTAGEM", $item("CD_EMPRESA", voParams)
			putitem/id poParams, "NR_CONTAGEM"   , $item("NR_CONTAGEM", voParams)
			
			;---Hugo em 11/08/11 Tarefa 22-1886
			if ($tpBarraLote$ = 1)
				clear/e "GER_CONTILOTESVC"
				CD_EMPCONTAGEM.GER_CONTILOTESVC/init = $item("CD_EMPRESA", voParams)
				NR_CONTAGEM.GER_CONTILOTESVC/init = $item("NR_CONTAGEM", voParams)
				retrieve/e "GER_CONTILOTESVC"
				if ($status >= 0)
					setocc "GER_CONTILOTESVC", -1
					setocc "GER_CONTILOTESVC", 1
					while ($status >= 0)
						viParams = ""
						putitem/id viParams, "CD_BARRA", CD_BARRALOTE.GER_CONTILOTESVC
						activate "PRDSVCO020".validaLote($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
						if ($procerror)       
							$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
							poCdErro = $xCdErro$
							poCtxErro = $xCtxErro$
							return(-1)	
						elseif ($status < 0)
							$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
							poCdErro = $xCdErro$
							poCtxErro = $xCtxErro$
							return(-1)
						endif
				
						vCdProduto = $item("CD_PRODUTO", voParams)
						vQtLote = $item("QT_LOTE", voParams)
						vNrLote = $item("NR_LOTE", voParams)
						vNrItem = $item("NR_ITEM", voParams)

						if (vCdProduto > 0) & (vQtLote = 0)
							$instancehandle->setStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Código de barras lote %%vCdBarraCont sem quantidade no lote %%vNrLote item %%vNrItem !", "")
							poCdErro = $xCdErro$
							poCtxErro = $xCtxErro$
							return(-1)
						endif
						setocc "GER_CONTILOTESVC", $curocc("GER_CONTILOTESVC") + 1
					endwhile
				endif
			endif
			;---			
			return (0)
		;--<
		else
			if ($inCdBarraColcci$ = <TRUE>)
				if($length(vCdBarraPrd) = 10)
					CD_BARRAPRD.PRD_CODIGOBARSVC = vCdBarraPrd[1 : 10]
				elseif($length(vCdBarraPrd) = 20)
					CD_BARRAPRD.PRD_CODIGOBARSVC = vCdBarraPrd[3 : 10]
				elseif($length(vCdBarraPrd) = 15)
					CD_BARRAPRD.PRD_CODIGOBARSVC = vCdBarraPrd[1 : 15]
				elseif($length(vCdBarraPrd) = 13) ;ANO Pjt148 Trf421 - 13/10/2009
					CD_BARRAPRD.PRD_CODIGOBARSVC = vCdBarraPrd
				elseif($length(vCdBarraPrd) = 16)
					CD_BARRAPRD.PRD_CODIGOBARSVC = vCdBarraPrd[1 : 16]
					retrieve/e "PRD_CODIGOBARSVC"
					if($status < 0)
						clear/e "PRD_CODIGOBARSVC"
						CD_BARRAPRD.PRD_CODIGOBARSVC = vCdBarraPrd[1 : 7]
					else
						clear/e "PRD_CODIGOBARSVC"
						CD_BARRAPRD.PRD_CODIGOBARSVC = vCdBarraPrd[1 : 16]
					endif
				elseif($length(vCdBarraPrd) = 14)
					CD_BARRAPRD.PRD_CODIGOBARSVC = vCdBarraPrd
					retrieve/e "PRD_CODIGOBARSVC"
					if($status < 0)
						clear/e "PRD_CODIGOBARSVC"
						CD_BARRAPRD.PRD_CODIGOBARSVC = vCdBarraPrd[1 : 7]
					else
						clear/e "PRD_CODIGOBARSVC"
						CD_BARRAPRD.PRD_CODIGOBARSVC = vCdBarraPrd[1 : 14]
					endif
				else
					CD_BARRAPRD.PRD_CODIGOBARSVC = vCdBarraPrd[1 : 7]
				endif
			;;Marcus Vinicius - 101/528 - 16/03/2010
			elseif ($tpBarraLote$ = 1 & vInConsulta = <TRUE> & ($length(vCdBarraPrd) >= 28 & $length(vCdBarraPrd) <= 30))
				clear/e "PRD_CODIGOBARSVC"
				CD_BARRAPRD.PRD_CODIGOBARSVC = vCdBarraPrd[1 : 13]
			;;	
			elseif ($dsSepNrSeqBarraPRD$ != "")
				scan vCdBarraPrd, $dsSepNrSeqBarraPRD$
				if ($result > 0)
					vCdBarraPrd = vCdBarraPrd[1 : $result - 1]
					vInBarraSeq = <TRUE>
				endif
				CD_BARRAPRD.PRD_CODIGOBARSVC = vCdBarraPrd
			else
				CD_BARRAPRD.PRD_CODIGOBARSVC = vCdBarraPrd
			endif
			retrieve/e "PRD_CODIGOBARSVC"
			if ($status < 0)
				;tarefa 101/299		Kazuyuki - 06/08/2008
				if ($nrPosicaoIni$ > 0 & $nrPosicaoFim$ > 0) & (vInBarraSeq = <FALSE>) & (vCdBarraPrd[$nrPosicaoIni$, $nrPosicaoFim$] != "")
					CD_BARRAPRD.PRD_CODIGOBARSVC = vCdBarraPrd[$nrPosicaoIni$, $nrPosicaoFim$]
					retrieve/e "PRD_CODIGOBARSVC"
					if ($status < 0)
						clear/e "PRD_KITCSVC"
						CD_KIT.PRD_KITCSVC = vCdBarraPrd
						retrieve/e "PRD_KITCSVC"
						if ($status < 0)
							;if ($tpBarraLote$ = 1) ;-->ROS-->148/734-->27/10/2011
								viParams = ""
								putitem/id viParams, "CD_BARRA", vCdBarraPrd
								activate "PRDSVCO020".validaLote($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
								if ($procerror)       
									$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
									poCdErro = $xCdErro$
									poCtxErro = $xCtxErro$
									return(-1)	
								elseif ($status < 0)
									$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
									poCdErro = $xCdErro$
									poCtxErro = $xCtxErro$
									return(-1)
								endif
								
								vCdEmpLote = $item("CD_EMPRESA", voParams)
								vNrLote = $item("NR_LOTE", voParams)
								vNrItem = $item("NR_ITEM", voParams)
								vQtLote = $item("QT_LOTE", voParams)
								vCdProduto = $item("CD_PRODUTO", voParams)
								
								vDsLinha = ""
								putitem/id vDsLinha, "CD_PRODUTO", vCdProduto
								putitem/id vDsLinha, "QT_PRODUTO", vQtLote
								putitem/id vDsLinha, "CD_EMPLOTE", vCdEmpLote
								putitem/id vDsLinha, "NR_LOTE", vNrLote
								putitem/id vDsLinha, "NR_ITEM", vNrItem
								putitem vDsLstProduto, -1, vDsLinha
								if(vCdProduto > 0) & (vQtLote > 0 | vInQtLote = <FALSE>);oda nao pode dar erro quando estou apenas lendo um codigo de barras para extrair o codigo do lote.
									CD_PRODUTO.PRD_PRODUTOSVC = vCdProduto
									vQtEmbalagem = vQtLote
								else
									$instancehandle->setStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Código de barras lote %%CD_BARRAPRD.PRD_CODIGOBARSVC sem quantidade!", "")
									poCdErro = $xCdErro$
									poCtxErro = $xCtxErro$
									return(-1)
								endif
							;-->ROS-->148/734-->27/10/2011
;							else
;								$instancehandle->setStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Código de barras %%CD_BARRAPRD.PRD_CODIGOBARSVC inválido!", "")
;								poCdErro = $xCdErro$
;								poCtxErro = $xCtxErro$
;								return(-1)
							;endif
						else
							setocc "PRD_KITISVC", 1
							CD_PRODUTO.PRD_PRODUTOSVC = CD_PRODUTO.PRD_KITISVC
							vQtEmbalagem = QT_PRODUTO.PRD_KITISVC
							setocc "PRD_KITISVC", 1
							while ($status >= 0)
								vDsLinha = ""
								putitem/id vDsLinha, "CD_PRODUTO", CD_PRODUTO.PRD_KITISVC
								putitem/id vDsLinha, "QT_PRODUTO", QT_PRODUTO.PRD_KITISVC
								putitem vDsLstProduto, -1, vDsLinha
						
								setocc "PRD_KITISVC", $curocc("PRD_KITISVC") + 1
							endwhile
						endif
					else
						CD_PRODUTO.PRD_PRODUTOSVC = CD_PRODUTO.PRD_CODIGOBARSVC
						vQtEmbalagem = QT_EMBALAGEM.PRD_CODIGOBARSVC
					endif
				else
					clear/e "PRD_KITCSVC"
					CD_KIT.PRD_KITCSVC = vCdBarraPrd
					retrieve/e "PRD_KITCSVC"
					if ($status < 0)
						if ($tpBarraLote$ = 1)
							viParams = ""
							putitem/id viParams, "CD_BARRA", vCdBarraPrd
							activate "PRDSVCO020".validaLote($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
							if ($procerror)       
								$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
								poCdErro = $xCdErro$
								poCtxErro = $xCtxErro$
								return(-1)	
							elseif ($status < 0)
								$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
								poCdErro = $xCdErro$
								poCtxErro = $xCtxErro$
								return(-1)
							endif
							
							vCdEmpLote = $item("CD_EMPRESA", voParams)
							vNrLote = $item("NR_LOTE", voParams)
							vNrItem = $item("NR_ITEM", voParams)
							vQtLote = $item("QT_LOTE", voParams)
							vCdProduto = $item("CD_PRODUTO", voParams)
							
							vDsLinha = ""
							putitem/id vDsLinha, "CD_PRODUTO", vCdProduto
							putitem/id vDsLinha, "QT_PRODUTO", vQtLote
							putitem/id vDsLinha, "CD_EMPLOTE", vCdEmpLote
							putitem/id vDsLinha, "NR_LOTE", vNrLote
							putitem/id vDsLinha, "NR_ITEM", vNrItem
							putitem vDsLstProduto, -1, vDsLinha
							if(vCdProduto > 0) & (vQtLote > 0 | vInQtLote = <FALSE>);oda nao pode dar erro quando estou apenas lendo um codigo de barras para extrair o codigo do lote.
								CD_PRODUTO.PRD_PRODUTOSVC = vCdProduto
								vQtEmbalagem = vQtLote
							else
								$instancehandle->setStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Código de barras lote %%CD_BARRAPRD.PRD_CODIGOBARSVC sem quantidade!", "")
								poCdErro = $xCdErro$
								poCtxErro = $xCtxErro$
								return(-1)
							endif
	
						else
							$instancehandle->setStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Código de barras %%CD_BARRAPRD.PRD_CODIGOBARSVC inválido!", "")
							poCdErro = $xCdErro$
							poCtxErro = $xCtxErro$
							return(-1)
						endif
					else
						setocc "PRD_KITISVC", 1
						CD_PRODUTO.PRD_PRODUTOSVC = CD_PRODUTO.PRD_KITISVC
						vQtEmbalagem = QT_PRODUTO.PRD_KITISVC
						setocc "PRD_KITISVC", 1
						while ($status >= 0)
							vDsLinha = ""
							putitem/id vDsLinha, "CD_PRODUTO", CD_PRODUTO.PRD_KITISVC
							putitem/id vDsLinha, "QT_PRODUTO", QT_PRODUTO.PRD_KITISVC
							putitem vDsLstProduto, -1, vDsLinha
						
							setocc "PRD_KITISVC", $curocc("PRD_KITISVC") + 1
						endwhile
					endif
				endif
			else
				;-->ROS-->148/734-->25/10/2011
				;>-- MAC - PRJ 156/253 - 13/04/2010 ---
				;if (($tpBarraLote$ = 1) & (TP_BARRA.PRD_CODIGOBARSVC = 1))
				if (TP_BARRA.PRD_CODIGOBARSVC = 1)
				;<--ROS.
					viParams = ""
					putitem/id viParams, "CD_BARRA", vCdBarraPrd
					activate "PRDSVCO020".validaLote($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
					if ($procerror)       
						$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)	
					elseif ($status < 0)
						$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					endif
								
					vCdEmpLote = $item("CD_EMPRESA", voParams)
					vNrLote = $item("NR_LOTE", voParams)
					vNrItem = $item("NR_ITEM", voParams)
					vQtLote = $item("QT_LOTE", voParams)
					vCdProduto = $item("CD_PRODUTO", voParams)
								
					vDsLinha = ""
					putitem/id vDsLinha, "CD_PRODUTO", vCdProduto
					putitem/id vDsLinha, "QT_PRODUTO", vQtLote
					putitem/id vDsLinha, "CD_EMPLOTE", vCdEmpLote
					putitem/id vDsLinha, "NR_LOTE", vNrLote
					putitem/id vDsLinha, "NR_ITEM", vNrItem
					putitem vDsLstProduto, -1, vDsLinha
					if(vCdProduto > 0) & (vQtLote > 0 | vInQtLote = <FALSE>);oda nao pode dar erro quando estou apenas lendo um codigo de barras para extrair o codigo do lote.
						CD_PRODUTO.PRD_PRODUTOSVC = vCdProduto
						vQtEmbalagem = vQtLote
					else
						$instancehandle->setStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Código de barras lote %%CD_BARRAPRD.PRD_CODIGOBARSVC sem quantidade!", "")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					endif
					;--<
				else
					CD_PRODUTO.PRD_PRODUTOSVC = CD_PRODUTO.PRD_CODIGOBARSVC
					vQtEmbalagem = QT_EMBALAGEM.PRD_CODIGOBARSVC
				endif
			endif
		endif    
	endif

	retrieve/e "PRD_PRODUTOSVC"
	if ($status < 0)
		$instancehandle->setStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Código de produto %%CD_PRODUTO.PRD_PRODUTOSVC inválido!", "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	else
		vDsLstEmpresa = ""
		vDsLstEmp = ""
		putitem vDsLstEmp, -1, vCdEmpresaParam
		vDsLstEmpresa = "%%vDsLstEmpresa - %%vCdEmpresaParam"
		if ($cdEmpresaPadrao$ > 0)
			putitem vDsLstEmp, -1, $cdEmpresaPadrao$
			vDsLstEmpresa = "%%vDsLstEmpresa - %%$cdEmpresaPadrao$"
		else
			if ($cdEmpresaValorEmp$ > 0) | ($cdEmpresaValorEmp$ != vCdEmpresaParam)
				putitem vDsLstEmp, -1, $cdEmpresaValorEmp$
				vDsLstEmpresa = "%%vDsLstEmpresa - %%$cdEmpresaValorEmp$"
			endif
			if ($cdEmpresaValorSis$ > 0) | ($cdEmpresaValorSis$ != vCdEmpresaParam)
				putitem vDsLstEmp, -1, $cdEmpresaValorSis$
				vDsLstEmpresa = "%%vDsLstEmpresa - %%$cdEmpresaValorSis$"
			endif	
		endif
		vInAchou = <FALSE>
		while (vDsLstEmp != "") & (vInAchou = <FALSE>)
			getitem vCdEmpresa, vDsLstEmp, 1
			clear/e "PRD_PRDINFOSVC"
			CD_EMPRESA.PRD_PRDINFOSVC/init = vCdEmpresa
			CD_PRODUTO.PRD_PRDINFOSVC/init = CD_PRODUTO.PRD_PRODUTOSVC
			retrieve/e "PRD_PRDINFOSVC"
			if ($status >= 0)
				vInAchou = <TRUE>
			endif
			delitem vDsLstEmp, 1
		endwhile		

		if (vInAchou = <FALSE>)
			$instancehandle->setStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Produto %%CD_PRODUTO.PRD_PRODUTOSVC sem dados p/ a(s) empresa(s) %%vDsLstEmpresa cadastrados!", "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		else
			if (vInInativo != <TRUE>)
				if (IN_INATIVO.PRD_PRDINFOSVC = <TRUE>)
					$instancehandle->setStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Produto %%CD_PRODUTO.PRD_PRODUTOSVC inativo na filial %%CD_EMPRESA.PRD_PRDINFOSVC%%%!", "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
			endif
		endif
		
		if (vInProdutoBloq = <TRUE>)
			viParams = ""
			putitem/id viParams, "CD_EMPRESA", vCdEmpresaParam
			putitem/id viParams, "CD_PRODUTO", CD_PRODUTO.PRD_PRODUTOSVC
			activate "PRDSVCO014".buscaDadosBloqueio($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus("", $xCdErro$, $xCtxErro$, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
			
			vInPrdBloqueado = $item("IN_BLOQUEADO", voParams)
			
			if (vInPrdBloqueado = <TRUE>)
				$instancehandle->setStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Produto %%CD_PRODUTO.PRD_PRODUTOSVC bloqueado", "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		endif
		
		if (vInProdAcabado = <TRUE>)
			if (IN_PRODACABADO.PRD_PRDINFOSVC != vInProdAcabado)
				$instancehandle->setStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Produto %%CD_PRODUTO.PRD_PRODUTOSVC não esta cadastrado como produto acabado!", "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		elseif (vInMatPrima = <TRUE>)
			if (IN_MATPRIMA.PRD_PRDINFOSVC != vInMatPrima)
				$instancehandle->setStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Produto %%CD_PRODUTO.PRD_PRODUTOSVC não esta cadastrado como matéria prima!", "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		;---Elia Proj. 102/448 27/11/08
		elseif (vInMatConsumo = <TRUE>)
			if (IN_MATCONSUMO.PRD_PRDINFOSVC != vInMatConsumo)
				$instancehandle->setStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Produto %%CD_PRODUTO.PRD_PRODUTOSVC não esta cadastrado como material de consumo!", "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		elseif (vTpLote != "")
			if (TP_LOTE.PRD_PRDINFOSVC != vTpLote)
				$instancehandle->setStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Produto %%CD_PRODUTO.PRD_PRODUTOSVC com tipo de lote inválido!", "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
 		elseif (vTpInspecao != "")
			if (TP_INSPECAO.PRD_PRDINFOSVC != vTpInspecao)
				$instancehandle->setStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Produto %%CD_PRODUTO.PRD_PRODUTOSVC com tipo de inspeção inválido!", "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		endif
		;
	endif
	; Luiz Carlos Paulek - 30/03/2007 - Tarefa 23 Projeto 101
	if ($inPdvOtimizado$ = <TRUE>)
		clear/e "PRD_EMBALAGEMSVC"
		CD_PRODUTO.PRD_EMBALAGEMSVC/init = CD_PRODUTO.PRD_PRODUTOSVC
		retrieve/e "PRD_EMBALAGEMSVC"
		if ($status >= 0)
			setocc "PRD_EMBALAGEMSVC", 1
			vQtEmbalagem = QT_EMBALAGEM.PRD_EMBALAGEMSVC
		endif
	endif
	; Luiz Carlos Paulek - 30/03/2007 - Tarefa 23 Projeto 101

	;tarefa 022/731		Hugo - 21/07/2008
	if ($tpValidaFatPrdBloq$ = 01)
		clear/e "PRD_PRDBLOQUESVC"
		CD_PRODUTO.PRD_PRDBLOQUESVC/init = CD_PRODUTO.PRD_PRODUTOSVC
		retrieve/e "PRD_PRDBLOQUESVC"
		if ($status >= 0)
			if (IN_BLOQUEIO.PRD_PRDBLOQUESVC = <TRUE>)
				$instancehandle->setStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Produto %%CD_PRODUTO.PRD_PRODUTOSVC bloqueado!", "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		endif
	endif
	;
		
	poParams = ""
	putitem/id poParams, "CD_PRODUTO", CD_PRODUTO.PRD_PRODUTOSVC
	putitem/id poParams, "QT_EMBALAGEM", vQtEmbalagem
	putitem/id poParams, "IN_PRODPROPRIA", IN_PRODPROPRIA.PRD_PRDINFOSVC
	putitem/id poParams, "IN_FRACIONADO", IN_FRACIONADO.PRD_PRDINFOSVC
	putitem/id poParams, "IN_COFINS", IN_COFINS.PRD_PRDINFOSVC
	putitem/id poParams, "IN_PIS", IN_PIS.PRD_PRDINFOSVC
	putitem/id poParams, "QT_ESTOQUEMIN", QT_ESTOQUEMIN.PRD_PRDINFOSVC
	putitem/id poParams, "QT_ESTOQUEMAX", QT_ESTOQUEMAX.PRD_PRDINFOSVC
	putitem/id poParams, "DS_PRODUTO", DS_PRODUTO.PRD_PRODUTOSVC
	putitem/id poParams, "IN_BARRASEQ", vInBarraSeq
	putitem/id poParams, "DS_LSTPRODUTO", vDsLstProduto
	putitem/id poParams, "TP_LOTE", TP_LOTE.PRD_PRDINFOSVC ; ANO Pjt121 Trf28 - 27/06/2008
	putitem/id poParams, "TP_INSPECAO", TP_INSPECAO.PRD_PRDINFOSVC	
	return (0)
End ; operation verificaProduto

;---Elia Proj. 148/195 22/06/09--- 
;---Remodelacao da operation
;;---------------------------------
;public operation carregaDadosGrupo_old
;	;---------------------------------
;	params
;		string  $xlpg$      :IN    
;		string  piParams    :IN
;		string  poParams    :OUT
;		string  poCdErro    :OUT
;		string  poCtxErro   :OUT
;	endparams
;	
;	variables
;		string vDsLista
;		numeric vCdSeq, vCdSeqGrupo, vCdCfgNivel, vCdEmpresaParam, vNrGeral
;		boolean vInFim, vInAchouDesc, vInAchouCod, vInCodigo, vInCompleto
;		string vDsGrupoComp ;Descrição completa do grupo
;		string vDsGrupoParam ;Descrição do grupo baseada no cadastro de configuração de níveis
;		string vCdGrupoComp ;Lista completa com os códigos do gupo
;		string vCdGrupoParam ;Lista dos códigos deo grupo baseada no cadastro de configuração de níveis		
;		string vDsTipoClasComp, vDsTipoClasParam
;		string vDsLstNivelGrupo, vDsLstNivelDescGrupo
;	endvariables	
;	
;	vDsLstNivelGrupo = $item("DS_LST_NIVEL_GRUPO_NF", piParams)
;	vDsLstNivelDescGrupo = $item("DS_LST_NIVEL_DES_GRUPO_NF", piParams)
;	vCdSeqGrupo = $item("CD_SEQGRUPO", piParams)
;	vCdCfgNivel = $item("CD_CFGNIVEL", piParams)
;	vCdEmpresaParam = $item("CD_EMPRESA", piParams)
;	if (vCdEmpresaParam = 0)
;		vCdEmpresaParam = $item("CD_EMPRESA", $xlpg$)
;	endif
;	vInCompleto = $item("IN_COMPLETO", piParams)
;	
;	if (vCdSeqGrupo = 0)
;		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Código do grupo não infomado!", "")
;		poCdErro = $xCdErro$
;		poCtxErro = $xCtxErro$
;		return(-1)
;	endif
;
;	$dsLstNivelGrupo$ = ""
;	$dsLstNivelDescGrupo$ = ""
;	if (vInCompleto = <TRUE>); | (vCdCfgNivel > 0)
;	else
;		call getParam(vCdEmpresaParam)
;		if ($procerror)
;			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
;			poCdErro = $xCdErro$
;			poCtxErro = $xCtxErro$
;			return(-1)
;		elseif ($status < 0)
;			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Erro ao carregar parâmetros!", "")
;			poCdErro = $xCdErro$
;			poCtxErro = $xCtxErro$
;			return(-1)
;		endif
;	endif
;
;	clear/e "TMP_NR09SVC"
;	
;	if (vDsLstNivelGrupo != "")
;		$dsLstNivelGrupo$ = vDsLstNivelGrupo
;	endif
;	
;	if (vDsLstNivelDescGrupo != "")
;		$dsLstNivelDescGrupo$ = vDsLstNivelDescGrupo
;	endif
;
;	if ($dsLstNivelGrupo$ != "")
;		vDsLista = $dsLstNivelGrupo$
;		length vDsLista
;		while ($result > 0)
;			scan vDsLista, ";"
;			if ($result > 0)
;				vNrGeral = vDsLista[1 : ($result - 1)]
;				vDsLista = vDsLista[($result + 1)]
;			else
;				vNrGeral = vDsLista
;				vDsLista = ""			
;			endif
;			creocc "TMP_NR09SVC", -1
;			NR_GERAL.TMP_NR09SVC/init = vNrGeral
;			retrieve/o "TMP_NR09SVC"
;			if ($status = -7)
;				retrieve/x "TMP_NR09SVC"
;			endif
;			length vDsLista
;		endwhile
;	endif
;
;	clear/e "F_TMP_NR09SVC"
;
;	if ($dsLstNivelDescGrupo$ != "")
;		vDsLista = $dsLstNivelDescGrupo$
;		length vDsLista
;		while ($result > 0)
;			scan vDsLista, ";"
;			if ($result > 0)
;				vNrGeral = vDsLista[1 : ($result - 1)]
;				vDsLista = vDsLista[($result + 1)]
;			else
;				vNrGeral = vDsLista
;				vDsLista = ""			
;			endif
;			creocc "F_TMP_NR09SVC", -1
;			NR_GERAL.F_TMP_NR09SVC/init = vNrGeral
;			retrieve/o "F_TMP_NR09SVC"
;			if ($status = -7)
;				retrieve/x "F_TMP_NR09SVC"
;			endif
;			length vDsLista
;		endwhile
;		vCdCfgNivel = 0
;	else	
;;		if (vCdCfgNivel = 0)
;;			vCdCfgNivel = $cdCfgNivel$
;;		endif
;	endif
;	
;	vDsGrupoComp = ""
;	vDsGrupoParam = ""
;	vCdGrupoComp = "" 
;	vCdGrupoParam = ""
;	vInFim = <FALSE>
;	;MTF(25/10/2006) - Projeto 041, tarefa 105.
;	vDsTipoClasComp  = ""
;	vDsTipoClasParam = ""
;	;
;
;	clear/e "PRD_GRUPOSVC"
;	vCdSeq = vCdSeqGrupo
;	while(vInFim = <FALSE>)
;		clear/e "PRD_GRUPOSVC"
;		CD_SEQ.PRD_GRUPOSVC = vCdSeq        
;		retrieve/o "PRD_GRUPOSVC"
;		if ($status >= 0)
;			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Erro na estrutura!", "")
;			poCdErro = $xCdErro$
;			poCtxErro = $xCtxErro$
;			return(-1)
;		elseif ($status = -7)
;			retrieve/x "PRD_GRUPOSVC"
;		endif
;		
;		if (vDsGrupoComp = "")
;			vDsGrupoComp = DS_GRUPO.PRD_GRUPOSVC
;		else
;			vDsGrupoComp = "%%DS_GRUPO.PRD_GRUPOSVC %%vDsGrupoComp"
;		endif
;
;		vInCodigo = <TRUE>
;
;		if ($empty("TMP_NR09SVC") = 0)
;			creocc "TMP_NR09SVC", -1 
;			NR_GERAL.TMP_NR09SVC/init = CD_TIPOCLAS.PRD_GRUPOSVC
;			retrieve/o "TMP_NR09SVC" 
;			if ($status != 4)
;				discard "TMP_NR09SVC"
;				vInCodigo = <FALSE>
;			endif		
;		endif
;
;		if (vInCodigo = <TRUE>)
;			if (vCdGrupoComp = "")
;				vCdGrupoComp = CD_GRUPO.PRD_GRUPOSVC
;			else
;				vCdGrupoComp = "%%CD_GRUPO.PRD_GRUPOSVC·;%%vCdGrupoComp"
;			endif
;			;MTF(25/10/2006) - Projeto 041, tarefa 105.
;			if (vDsTipoClasComp = "")
;				vDsTipoClasComp = ds_tipoclas.prd_tipoclassvc
;			else
;				vDsTipoClasComp = "%%ds_tipoclas.prd_tipoclassvc·;%%vDsTipoClasComp"
;			endif
;			;
;		endif
;		
;		vInAchouDesc = <TRUE>
;		vInAchouCod = <FALSE>
;		vInCodigo = <FALSE>
;		
;		if ($empty("F_TMP_NR09SVC") = 0)
;			creocc "F_TMP_NR09SVC", -1 
;			NR_GERAL.F_TMP_NR09SVC/init = CD_TIPOCLAS.PRD_GRUPOSVC
;			retrieve/o "F_TMP_NR09SVC" 
;			if ($status != 4)
;				discard "F_TMP_NR09SVC"
;				vInAchouDesc = <FALSE>
;			endif		
;		elseif (vCdCfgNivel > 0)
;			clear/e "PRD_CFGNIVELISVC"
;			CD_CFGNIVEL.PRD_CFGNIVELISVC = vCdCfgNivel
;			CD_TIPOCLAS.PRD_CFGNIVELISVC = CD_TIPOCLAS.PRD_GRUPOSVC
;			retrieve/e "PRD_CFGNIVELISVC"
;			if ($status >= 0)
;				if (IN_DESCRICAO.PRD_CFGNIVELISVC = <FALSE>)
;					vInAchouDesc = <FALSE>
;				endif
;			endif
;		endif
;		
;		if ($dsLstNivelGrupo$ = "" & $dsLstNivelDescGrupo$ = "") & (vCdCfgNivel > 0)
;			clear/e "PRD_CFGNIVELISVC"
;			CD_CFGNIVEL.PRD_CFGNIVELISVC = vCdCfgNivel
;			CD_TIPOCLAS.PRD_CFGNIVELISVC = CD_TIPOCLAS.PRD_GRUPOSVC
;			retrieve/e "PRD_CFGNIVELISVC"
;			if ($status >= 0)
;				if (IN_CODIGO.PRD_CFGNIVELISVC = <TRUE>)
;					vInAchouCod = <TRUE>
;					vInCodigo = <TRUE>
;				endif
;			endif
;		else
;			vInCodigo = <TRUE>
;		endif
;		
;		if (vInAchouDesc = <TRUE>)
;			if (vDsGrupoParam = "")
;				vDsGrupoParam = DS_GRUPO.PRD_GRUPOSVC
;			else
;				vDsGrupoParam = "%%DS_GRUPO.PRD_GRUPOSVC %%vDsGrupoParam"
;			endif
;			
;			if (vInCodigo = <TRUE>)
;				if (vCdGrupoParam = "")
;					vCdGrupoParam = CD_GRUPO.PRD_GRUPOSVC
;				else
;					vCdGrupoParam = "%%CD_GRUPO.PRD_GRUPOSVC·;%%vCdGrupoParam"
;				endif
;			endif
;			
;			;MTF(25/10/2006) - Projeto 041, tarefa 105.
;			if (vDsTipoClasParam = "")
;				vDsTipoClasParam = ds_tipoclas.prd_tipoclassvc
;			else
;				vDsTipoClasParam = "%%ds_tipoclas.prd_tipoclassvc·;%%vDsTipoClasParam"
;			endif
;			;
;		else
;			if (vInAchouCod = <TRUE> | vInCodigo = <TRUE>)
;				if (vCdGrupoParam = "")
;					vCdGrupoParam = CD_GRUPO.PRD_GRUPOSVC
;				else
;					vCdGrupoParam = "%%CD_GRUPO.PRD_GRUPOSVC·;%%vCdGrupoParam"
;				endif
;			endif
;		endif
;		
;		if (CD_SEQ.PRD_GRUPOSVC = CD_SEQPAI.PRD_GRUPOSVC | CD_SEQPAI.PRD_GRUPOSVC = "")
;			vInFim = <TRUE>
;		else
;			vCdSeq = CD_SEQPAI.PRD_GRUPOSVC
;		endif
;	endwhile 
;	
;	if ($dsLstNivelGrupo$ != "" | $dsLstNivelDescGrupo$ != "") & (vCdCfgNivel > 0)
;		vCdGrupoParam = vCdGrupoComp
;	endif
;	
;	;    if (vCdGrupoComp != "") ;inverte a lista para ficar na ordem correta
;	;        clear/e "SIS_NIVEL"        
;	;    endif
;
;	;Trabalha com cor e tamanho únicos
;	if ($cdCorPadrao$ != "") & ($cdGradePadrao$ > 0)
;		clear/e "PRD_PRDGRADESVC"
;		CD_SEQGRUPO.PRD_PRDGRADESVC/init = vCdSeqGrupo
;		retrieve/e "PRD_PRDGRADESVC"
;		if ($status >= 0)
;			setocc "PRD_PRDGRADESVC", -1
;			setocc "PRD_PRDGRADESVC", 1
;			if ($totocc("PRD_PRDGRADESVC") = 1)
;				clear/e "PRD_PRODUTOSVC"
;				CD_PRODUTO.PRD_PRODUTOSVC/init = CD_PRODUTO.PRD_PRDGRADESVC
;				retrieve/e "PRD_PRODUTOSVC"
;				if ($status >= 0)
;					vDsGrupoComp = DS_PRODUTO.PRD_PRODUTOSVC
;					vDsGrupoParam = DS_PRODUTO.PRD_PRODUTOSVC
;				endif
;			endif
;		endif
;	endif
;	
;	poParams = ""
;	putitem/id poParams, "DS_GRUPOCOMP", vDsGrupoComp
;	putitem/id poParams, "CD_GRUPOCOMP", vCdGrupoComp
;	putitem/id poParams, "DS_GRUPOPARAM", vDsGrupoParam
;	putitem/id poParams, "CD_GRUPOPARAM", vCdGrupoParam
;	;MTF(25/10/2006) - Projeto 041, tarefa 105.
;	putitem/id poParams, "DS_TIPOCLASCOMP",  vDsTipoClasComp
;	putitem/id poParams, "DS_TIPOCLASPARAM", vDsTipoClasParam
;	;
;	
;	return(0)
;end

;---Elia Proj. 148/195 22/06/09--- 
;---Remodelacao da operation
public operation carregaDadosGrupo
;---------------------------------

	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		string vDsLista
		numeric vCdSeq, vCdSeqGrupo, vCdCfgNivel, vCdEmpresaParam, vNrGeral
		boolean vInFim, vInCompleto, vInCodigo, vInDescricao
		string vDsGrupoComp ;Descrição completa do grupo
		string vDsGrupoParam ;Descrição do grupo baseada no cadastro de configuração de níveis
		string vCdGrupoComp ;Lista completa com os códigos do gupo
		string vCdGrupoParam ;Lista dos códigos deo grupo baseada no cadastro de configuração de níveis		
		string vDsTipoClasComp, vDsTipoClasParam
		string vDsLstNivelGrupo, vDsLstNivelDescGrupo
	endvariables	
	
	vDsLstNivelGrupo = $item("DS_LST_NIVEL_GRUPO_NF", piParams)
	vDsLstNivelDescGrupo = $item("DS_LST_NIVEL_DES_GRUPO_NF", piParams)
	vCdSeqGrupo = $item("CD_SEQGRUPO", piParams)
	vCdCfgNivel = $item("CD_CFGNIVEL", piParams)
	vCdEmpresaParam = $item("CD_EMPRESA", piParams)
	if (vCdEmpresaParam = 0)
		vCdEmpresaParam = $item("CD_EMPRESA", $xlpg$)
	endif
	vInCompleto = $item("IN_COMPLETO", piParams)
	
	if (vCdSeqGrupo = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Código do grupo não infomado!", "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	clear/e "PRD_GRUPOSVC"
	CD_SEQ.PRD_GRUPOSVC = vCdSeqGrupo       
	retrieve/o "PRD_GRUPOSVC"

	$dsLstNivelGrupo$ = ""
	$dsLstNivelDescGrupo$ = ""
	if (vInCompleto = <TRUE>); | (vCdCfgNivel > 0)
	else
		call getParam(vCdEmpresaParam)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Erro ao carregar parâmetros!", "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif

	clear/e "TMP_NR09SVC"
	
	if (vDsLstNivelGrupo != "")
		$dsLstNivelGrupo$ = vDsLstNivelGrupo
	endif
	
	if (vDsLstNivelDescGrupo != "")
		$dsLstNivelDescGrupo$ = vDsLstNivelDescGrupo
	endif

	if ($dsLstNivelGrupo$ != "")
		vDsLista = $dsLstNivelGrupo$
		length vDsLista
		while ($result > 0)
			scan vDsLista, ";"
			if ($result > 0)
				vNrGeral = vDsLista[1 : ($result - 1)]
				vDsLista = vDsLista[($result + 1)]
			else
				vNrGeral = vDsLista
				vDsLista = ""			
			endif
			creocc "TMP_NR09SVC", -1
			NR_GERAL.TMP_NR09SVC/init = vNrGeral
			retrieve/o "TMP_NR09SVC"
			if ($status = -7)
				retrieve/x "TMP_NR09SVC"
			endif
			length vDsLista
		endwhile
	endif

	clear/e "F_TMP_NR09SVC"

	if ($dsLstNivelDescGrupo$ != "")
		vDsLista = $dsLstNivelDescGrupo$
		length vDsLista
		while ($result > 0)
			scan vDsLista, ";"
			if ($result > 0)
				vNrGeral = vDsLista[1 : ($result - 1)]
				vDsLista = vDsLista[($result + 1)]
			else
				vNrGeral = vDsLista
				vDsLista = ""			
			endif
			creocc "F_TMP_NR09SVC", -1
			NR_GERAL.F_TMP_NR09SVC/init = vNrGeral
			retrieve/o "F_TMP_NR09SVC"
			if ($status = -7)
				retrieve/x "F_TMP_NR09SVC"
			endif
			length vDsLista
		endwhile
	endif

	vInFim = <FALSE>
	
	vDsGrupoComp = ""
	vDsGrupoParam = ""

	vCdGrupoComp = "" 
	vCdGrupoParam = ""

	;MTF(25/10/2006) - Projeto 041, tarefa 105.
	vDsTipoClasComp  = ""
	vDsTipoClasParam = ""
	;
	clear/e "PRD_GRUPOSVC"
	vCdSeq = vCdSeqGrupo
	while(vInFim = <FALSE>)
		clear/e "PRD_GRUPOSVC"
		CD_SEQ.PRD_GRUPOSVC = vCdSeq        
;		retrieve/o "PRD_GRUPOSVC"
;		if ($status >= 0)
;			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Erro na estrutura!", "")
;			poCdErro = $xCdErro$
;			poCtxErro = $xCtxErro$
;			return(-1)
		retrieve/o "PRD_GRUPOSVC"
		if ($status >= 0)
			clear/e "PRD_GRUPOSVC"
			CD_SEQ.PRD_GRUPOSVC = vCdSeq 
			retrieve/e "PRD_GRUPOSVC"
			if ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Erro na estrutura!", "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		elseif ($status = -7)
			retrieve/x "PRD_GRUPOSVC"
		endif

		if (vCdGrupoComp = "")
			vCdGrupoComp = CD_GRUPO.PRD_GRUPOSVC
		else
			vCdGrupoComp = "%%CD_GRUPO.PRD_GRUPOSVC·;%%vCdGrupoComp"
		endif
		
		if (vDsGrupoComp = "")
			vDsGrupoComp = DS_GRUPO.PRD_GRUPOSVC
		else
			vDsGrupoComp = "%%DS_GRUPO.PRD_GRUPOSVC %%vDsGrupoComp"
		endif

		;MTF(25/10/2006) - Projeto 041, tarefa 105.
		if (vDsTipoClasComp = "")
			vDsTipoClasComp = ds_tipoclas.prd_tipoclassvc
		else
			vDsTipoClasComp = "%%ds_tipoclas.prd_tipoclassvc·;%%vDsTipoClasComp"
		endif

		vInCodigo = <TRUE>
		vInDescricao = <TRUE>

		if (vCdCfgNivel > 0)
			clear/e "PRD_CFGNIVELISVC"
			CD_CFGNIVEL.PRD_CFGNIVELISVC = vCdCfgNivel
			CD_TIPOCLAS.PRD_CFGNIVELISVC = CD_TIPOCLAS.PRD_GRUPOSVC
			retrieve/e "PRD_CFGNIVELISVC"
			if ($status >= 0)
				if (IN_CODIGO.PRD_CFGNIVELISVC != <TRUE>)
					vInCodigo = <FALSE>		
				endif
				if (IN_DESCRICAO.PRD_CFGNIVELISVC != <TRUE>)
					vInDescricao = <FALSE>
				endif
			else
				vInCodigo = <FALSE>
				vInDescricao = <FALSE>
			endif
		else
			if (!$empty("TMP_NR09SVC"))
				creocc "TMP_NR09SVC", -1 
				NR_GERAL.TMP_NR09SVC/init = CD_TIPOCLAS.PRD_GRUPOSVC
				retrieve/o "TMP_NR09SVC" 
				if ($status != 4)
					vInCodigo = <FALSE>
					discard "TMP_NR09SVC"
				endif
			endif

			if (!$empty("F_TMP_NR09SVC"))
				creocc "F_TMP_NR09SVC", -1 
				NR_GERAL.F_TMP_NR09SVC/init = CD_TIPOCLAS.PRD_GRUPOSVC
				retrieve/o "F_TMP_NR09SVC" 
				if ($status != 4)
					vInDescricao = <FALSE>
					discard "F_TMP_NR09SVC"
				endif
			endif
		endif

		if (vInCodigo = <TRUE>)
			if (vCdGrupoParam = "")
				vCdGrupoParam = CD_GRUPO.PRD_GRUPOSVC
			else
				vCdGrupoParam = "%%CD_GRUPO.PRD_GRUPOSVC·;%%vCdGrupoParam"
			endif
		endif

		if (vInDescricao = <TRUE>)
			if (vDsGrupoParam = "")
				vDsGrupoParam = DS_GRUPO.PRD_GRUPOSVC
			else
				vDsGrupoParam = "%%DS_GRUPO.PRD_GRUPOSVC %%vDsGrupoParam"
			endif
		endif

		if (vInCodigo = <TRUE>) | (vInDescricao = <TRUE>)
			;MTF(25/10/2006) - Projeto 041, tarefa 105.
			if (vDsTipoClasParam = "")
				vDsTipoClasParam = ds_tipoclas.prd_tipoclassvc
			else
				vDsTipoClasParam = "%%ds_tipoclas.prd_tipoclassvc·;%%vDsTipoClasParam"
			endif
			;
		endif
		
		if (CD_SEQ.PRD_GRUPOSVC = CD_SEQPAI.PRD_GRUPOSVC | CD_SEQPAI.PRD_GRUPOSVC = "")
			vInFim = <TRUE>
		else
			vCdSeq = CD_SEQPAI.PRD_GRUPOSVC
		endif
	endwhile 

	;---Elia/Oda logica comentada 30/06/09
	;;Trabalha com cor e tamanho únicos
	;if ($cdCorPadrao$ != "") & ($cdGradePadrao$ > 0)
	;	clear/e "PRD_PRDGRADESVC"
	;	CD_SEQGRUPO.PRD_PRDGRADESVC/init = vCdSeqGrupo
	;	retrieve/e "PRD_PRDGRADESVC"
	;	if ($status >= 0)
	;		setocc "PRD_PRDGRADESVC", -1
	;		setocc "PRD_PRDGRADESVC", 1
	;		if ($totocc("PRD_PRDGRADESVC") = 1)
	;			clear/e "PRD_PRODUTOSVC"
	;			CD_PRODUTO.PRD_PRODUTOSVC/init = CD_PRODUTO.PRD_PRDGRADESVC
	;			retrieve/e "PRD_PRODUTOSVC"
	;			if ($status >= 0)
	;				vDsGrupoComp = DS_PRODUTO.PRD_PRODUTOSVC
	;				vDsGrupoParam = DS_PRODUTO.PRD_PRODUTOSVC
	;			endif
	;		endif
	;	endif
	;endif
	if(vDsGrupoParam = "")
		vDsGrupoParam = vDsGrupoComp
	endif

	if(vCdGrupoParam = "")
		vCdGrupoParam = vCdGrupoComp
	endif

	poParams = ""
	putitem/id poParams, "DS_GRUPOCOMP", vDsGrupoComp
	putitem/id poParams, "CD_GRUPOCOMP", vCdGrupoComp
	putitem/id poParams, "DS_GRUPOPARAM", vDsGrupoParam
	putitem/id poParams, "CD_GRUPOPARAM", vCdGrupoParam
	;MTF(25/10/2006) - Projeto 041, tarefa 105.
	putitem/id poParams, "DS_TIPOCLASCOMP",  vDsTipoClasComp
	putitem/id poParams, "DS_TIPOCLASPARAM", vDsTipoClasParam
	;
	
	return(0)
end

;----------------------------------
public operation formataCodigoGrupo
	;----------------------------------
	params
		string  $xlpg$    :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		string vCdGrupo, vDsLista
		numeric vNrTamanho, vNrNivel, vNrIndice, vNrGeral, vCdGrupoNr, vCdEmpresaParam
	endvariables
	
	poParams = ""
	
	vCdGrupo = $item("CD_GRUPO", piParams)
	if (vCdGrupo = "")
		putitem/id poParams, "CD_GRUPO", vCdGrupo
		return(0)
	endif
	
	vNrNivel = $item("NR_NIVEL", piParams)
	if (vNrNivel = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número do nível não infomado!", "ADICIONAL=Operação->PRDSVCO004.formataCodigoGrupo")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	vCdGrupoNr = vCdGrupo
	if (vCdGrupoNr != vCdGrupo)
		putitem/id poParams, "CD_GRUPO", vCdGrupo
		return(0)
	endif

	vCdEmpresaParam = $item("CD_EMPRESA", piParams)
	if (vCdEmpresaParam = 0)
		vCdEmpresaParam = $item("CD_EMPRESA", $xlpg$)
	endif
	
	call getParam(vCdEmpresaParam)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Erro ao carregar parâmetros!", "ADICIONAL=Operação->PRDSVCO004.formataCodigoGrupo")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif        
	
	if ($dsLstTamGrupo$ = "")
		putitem/id poParams, "CD_GRUPO", vCdGrupo
		return(0)
	endif
	
	vNrTamanho = 0
	vNrIndice = 0
	vDsLista = $dsLstTamGrupo$
	length vDsLista
	while ($result > 0) & (vNrTamanho = 0)        
		scan vDsLista, ";"
		if ($result > 0)
			vNrGeral = vDsLista[1 : ($result - 1)]
			vDsLista = vDsLista[($result + 1)]
		else
			vNrGeral = vDsLista
			vDsLista = ""			
		endif
		vNrIndice = vNrIndice + 1
		if (vNrIndice = vNrNivel)
			vNrTamanho = vNrGeral
		endif
		length vDsLista
	endwhile        
	
	length vCdGrupo
	while ($result < vNrTamanho)
		vCdGrupo = "0%%vCdGrupo"
		length vCdGrupo
	endwhile
	
	putitem/id poParams, "CD_GRUPO", vCdGrupo
	
	return(0)
end

#include <LIB_PADRAO>:DEF_TEMPLATE_SVC

;-----------------------------
public operation achaNovoCdKit
;-----------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		numeric vCdSequencia
		string vCdKit
	endvariables
	
	call getParam($item("CD_EMPRESA", $xlpg$))
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Erro ao carregar parâmetros!", "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	$dsPrefixoKit$ = $dsPrefixoKit$[1:11]
	
	vCdKit = ""
	while (vCdKit = "")        
		newinstance "GERSVCO001", "GERSVCO001", "TRANSACTION=TRUE"
		activate "GERSVCO001".GetNumSeqComm($xlpg$, "PRD_KITC", "CD_KIT", 999999999, vCdSequencia, $xCdErro$,$xCtxErro$)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus("", $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		
		call preencheZero(vCdSequencia, 9, vCdKit)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		
		vCdKit = "%%$dsPrefixoKit$%%vCdKit"
		clear/e "PRD_KITCSVC"
		CD_KIT.PRD_KITCSVC/init = vCdKit
		retrieve/e "PRD_KITCSVC"
		if ($status >= 0)
			vCdKit = ""
		endif
	endwhile
	
	poParams = ""
	putitem/id poParams, "CD_KIT", vCdKit
	
	return (0)
End ; operation achaNovoCdProduto

;-------------------------------
public operation carregaDadosCor
;-------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		string vCdCor
		numeric vCdEmpresa
	endvariables	
	
	vCdEmpresa = $item("CD_EMPRESA", $xlpg$)
	vCdCor = $item("CD_COR", $xlpg$)
	
	poParams = ""
	
	clear/e "PRD_CORINFOSVC"
	CD_EMPRESA.PRD_CORINFOSVC/init = vCdEmpresa
	CD_COR.PRD_CORINFOSVC/init = vCdCor
	retrieve/e "PRD_CORINFOSVC"
	if ($status >= 0)
		putlistitems/occ poParams, "PRD_CORINFOSVC"
	endif
	
	return(0)
end

;---Elia Proj. 102/399 19/09/08
public operation buscaNivelGrupo
;-------------------------------

	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		numeric vNrNivel, vCdProduto, vCdSeq
		boolean vInFim
	endvariables

	vNrNivel    = $item("NR_NIVEL", piParams)
	vCdProduto = $item("CD_PRODUTO", piParams)

	if (vNrNivel = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número do nível não infomado!", "ADICIONAL=Operação->PRDSVCO004.buscaNivelGrupo")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if (vCdProduto = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Produto não infomado!", "ADICIONAL=Operação->PRDSVCO004.buscaNivelGrupo")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	clear/e "SIS_NIVELSVC"        
	vInFim = <FALSE>
	
	clear/e "PRD_PRDGRADESVC"
	CD_PRODUTO.PRD_PRDGRADESVC/init = vCdProduto
	retrieve/e "PRD_PRDGRADESVC"
	if ($status >= 0)
		clear/e "PRD_GRUPOSVC"
		vCdSeq = CD_SEQGRUPO.PRD_PRDGRADESVC
		while(vInFim = <FALSE>)
			clear/e "PRD_GRUPOSVC"
			CD_SEQ.PRD_GRUPOSVC = vCdSeq        
			retrieve/o "PRD_GRUPOSVC"
			if ($status >= 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Erro na estrutura do grupo!", "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status = -7)
				retrieve/x "PRD_GRUPOSVC"
			endif
			creocc "SIS_NIVELSVC", 1
			CD_GRUPO.SIS_NIVELSVC = CD_GRUPO.PRD_GRUPOSVC
			DS_GRUPO.SIS_NIVELSVC = DS_GRUPO.PRD_GRUPOSVC
			if (CD_SEQ.PRD_GRUPOSVC = CD_SEQPAI.PRD_GRUPOSVC | CD_SEQPAI.PRD_GRUPOSVC = "")
				vInFim = <TRUE>
			else
				vCdSeq = CD_SEQPAI.PRD_GRUPOSVC
			endif
		endwhile    

		setocc "SIS_NIVELSVC", vNrNivel
		if ($status >= 0)
			putitem/id poParams, "CD_NIVEL", CD_GRUPO.SIS_NIVELSVC
			putitem/id poParams, "DS_NIVEL", DS_GRUPO.SIS_NIVELSVC
		endif
	endif

	return (0)

End ; operation buscaNivelGrupo

;-------------------------------
public operation buscaDadosProduto
	;-------------------------------
	;<thamati 09/07/2009 [Proj. 0148 - Tar. 0239]
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		numeric vCdProduto
	endvariables

	vCdProduto = $item("CD_PRODUTO", piParams)

	if (vCdProduto = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Produto não infomado!", "ADICIONAL=Operação->PRDSVCO004.buscaDadosProduto")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	clear/e "PRD_PRODUTOSVC"
	CD_PRODUTO.PRD_PRODUTOSVC/init = vCdProduto 
	retrieve/e "PRD_PRODUTOSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Produto não infomado!", "ADICIONAL=Operação->PRDSVCO004.buscaDadosProduto")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)	
	endif

	poParams = ""
	putlistitems/occ poParams, "PRD_PRODUTOSVC"	

	return(0)
End ;operation buscaDadosProduto


;-----------------------------
public operation buscaDiasRessupri
;-----------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	variables
		numeric vCdSeqGrupo, vCdTamanho, vCdEmpresa
	endvariables

	vCdSeqGrupo = $item("CD_SEQGRUPO", piParams)
	vCdTamanho  = $item("CD_TAMANHO", piParams)
	vCdEmpresa  = $item("CD_EMPRESA", piParams)

	if (vCdSeqGrupo = "" | vCdTamanho = "" | vCdEmpresa = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa, Grupo e/ou Tamanho não infomado!", "ADICIONAL=Operação->PRDSVCO004.buscaDiasRessupri")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	clear/e "PRD_PRDGRADESVC"
	CD_SEQGRUPO.PRD_PRDGRADESVC/init = vCdSeqGrupo
	CD_TAMANHO.PRD_PRDGRADESVC/init  = vCdTamanho
	retrieve/e "PRD_PRDGRADESVC"
	while ($status >= 0)
		clear/e "PRD_PRDINFOSVC"
		CD_EMPRESA.PRD_PRDINFOSVC/init = vCdEmpresa
		CD_PRODUTO.PRD_PRDINFOSVC/init = CD_PRODUTO.PRD_PRDGRADESVC
		retrieve/e "PRD_PRDINFOSVC"
		if ($status >= 0)
			if (NR_DIARESSUPRI.PRD_PRDINFOSVC > 0)
				poParams = NR_DIARESSUPRI.PRD_PRDINFOSVC
				clear/e "PRD_PRDINFOSVC"
				clear/e "PRD_PRDGRADESVC"
				return (0)
			endif
		endif
		clear/e "PRD_PRDINFOSVC"
		setocc "PRD_PRDGRADESVC", $curocc (PRD_PRDGRADESVC) + 1
	endwhile
	clear/e "PRD_PRDGRADESVC"

	return (0)
End ; public operation buscaDiasRessupri

;;ICJ [PROJ/TAR 170/378] (21/10/2011)
;-----------------------------
public operation gravaGttProd
;-----------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	variables
		string vCdProduto, vDsLstProduto
	endvariables
	
	vDsLstProduto = $item("DS_LSTPRODUTO",piParams)


	clear/e "GTT_PRODSVC"
	repeat
		getitem vCdProduto, vDsLstProduto, 1
		creocc "GTT_PRODSVC", -1
		CD_PRODUTO.GTT_PRODSVC = vCdProduto
		retrieve/o "GTT_PRODSVC"
		if ($status = -7)
			retrieve/x "GTT_PRODSVC"
		endif
		$collhandle("GTT_PRODSVC")->Salvar()
		if ($procerror)       
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			return(-1)
		endif
		delitem vDsLstProduto, 1
	until (vDsLstProduto = "")

	return (0)
End ; public operation gravaGttProd
;;