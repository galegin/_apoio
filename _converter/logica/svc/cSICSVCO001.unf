;-------------
entry getParam
;-------------
	params
		numeric piCdEmpresa : IN
	endparams

	variables
		string viParams, voParams
	endvariables

	if (piCdEmpresa = 0)
		piCdEmpresa = $item("CD_EMPRESA", $xlpg$)
	endif
	viParams = ""
	putitem viParams, -1, "TP_AGRUPAMENTO_ITEM_VD"
	putitem viParams, -1, "TP_SIMULADOR_FAT"
	putitem viParams, -1, "IN_SIMULADOR_FAT_PRODUTO"
	putitem viParams, -1, "IN_VALOR_PROMOCIONAL"
	putitem viParams, -1, "PR_ENC_FIN_ABAT_IMP_PED"  ;>-- MAC - PRJ 102/919 - 09/08/2010 -
	putitem viParams, -1, "IN_SIMULADOR_COND_PGTO"   ;>-- MAC - PRJ 156/383 - 18/08/2010 -
	activate "ADMSVCO001".GetParamEmpresa(piCdEmpresa, viParams, voParams, $xCdErro$, $xCtxerro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		return(-1)
	elseif ($xCdErro$)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%$item("DESCRICAO", $xCtxErro$)", "")
		return(-1)
	endif
	
	$tpAgrupamento$ = $item("TP_AGRUPAMENTO_ITEM_VD", voParams)
	$tpSimuladorFat$ = $item("TP_SIMULADOR_FAT", voParams)
	$inSimuladorProduto$ = $item("IN_SIMULADOR_FAT_PRODUTO", voParams)
	$inDescontoPromocional$ = $item("IN_VALOR_PROMOCIONAL", voParams)
	;>-- MAC - PRJ 102/919 - 09/08/2010 -
	$prEncFinAbatImpPed$ = $item("PR_ENC_FIN_ABAT_IMP_PED", voParams) 
	$prEncFinAbatImpPed$ = $replace($prEncFinAbatImpPed$, 1, ",", ".", -1)
	;--<
	$inSimuladorCondPgto$ = $item("IN_SIMULADOR_COND_PGTO", voParams) ;>-- MAC - PRJ 156/383 - 18/08/2010 -

	return(0)
end

;------------------------------
public operation validaDesconto
	;------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		numeric vCdEmpresa, vNrTransacao, vNrDias, vVlValor, vQtCalc
		numeric vNrDivisor, vVlRestoEmp, vVlRestoCC, vNrFator, vVlTotalAnt, vCdEmpresaAux
		numeric vVlMaior, vNrItemMaior, vNrItem
		string vDsRegistro, vDsLstTransacao, vDsLstTra, vDsLstVencimento, vDsObservacao
		string viParams, voParams, vDsSalvaRegistro
		date vDtTransacao
		boolean vInFracionado, vInDesconto
		numeric vVlDespAcessor
	endvariables

	vInDesconto = <FALSE>
		
	vCdEmpresa = $item("CD_EMPRESA", piParams)
	vNrTransacao = $item("NR_TRANSACAO", piParams)
	vDtTransacao = $item("DT_TRANSACAO", piParams)
	
	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->SICSVCO001.validaDesconto")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	if (vNrTransacao = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número transação não informado!", "ADICIONAL=Operação->SICSVCO001.validaDesconto")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	if (vDtTransacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data da transação não informado!", "ADICIONAL=Operação->SICSVCO001.validaDesconto")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	clear/e "TRA_TRANSACAOSVC"
	CD_EMPRESA.TRA_TRANSACAOSVC/init = vCdEmpresa
	NR_TRANSACAO.TRA_TRANSACAOSVC/init = vNrTransacao
	DT_TRANSACAO.TRA_TRANSACAOSVC/init = vDtTransacao
	retrieve/e "TRA_TRANSACAOSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->SICSVCO001.validaDesconto")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1) 
	endif

	call getParam(CD_EMPFAT.TRA_TRANSACAOSVC)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if ($status < 0)
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	if ($empty("PED_PEDIDOTRASVC") = 0)
		vCdEmpresaAux = 0
		vDsLstTransacao = ""
		vDsRegistro = ""
		putitem/id vDsRegistro, "CD_EMPRESA", CD_EMPRESA.TRA_TRANSACAOSVC
		putitem/id vDsRegistro, "NR_TRANSACAO", NR_TRANSACAO.TRA_TRANSACAOSVC
		putitem/id vDsRegistro, "DT_TRANSACAO", DT_TRANSACAO.TRA_TRANSACAOSVC
		putitem vDsLstTransacao, -1, vDsRegistro

		clear/e "GER_EMPRESASVC"
		CD_EMPRESA.GER_EMPRESASVC = vCdEmpresa
		retrieve/e "GER_EMPRESASVC"
		if ($status >= 0)
			if (CD_CCUSTO.GER_EMPRESASVC > 0)
				vCdEmpresaAux = CD_CCUSTO.GER_EMPRESASVC
			else
				clear/e "GER_EMPRESASVC"
				CD_CCUSTO.GER_EMPRESASVC = vCdEmpresa
				retrieve/e "GER_EMPRESASVC"
				if ($status >= 0)
					vCdEmpresaAux = CD_EMPRESA.GER_EMPRESASVC
				endif
			endif	
		endif

		if (vCdEmpresaAux > 0)
			clear/e "TRA_S_TRANSACSVC"
			CD_EMPRESA.TRA_S_TRANSACSVC = vCdEmpresaAux
			NR_TRANSACAO.TRA_S_TRANSACSVC = NR_TRANSACAO.TRA_TRANSACAOSVC
			DT_TRANSACAO.TRA_S_TRANSACSVC = DT_TRANSACAO.TRA_TRANSACAOSVC
			retrieve/e "TRA_S_TRANSACSVC"
			if ($status >= 0)
				if ($tpAgrupamento$ = 1)
					viParams = ""
					putitem/id viParams, "CD_EMPRESA", CD_EMPRESA.TRA_S_TRANSACSVC
					putitem/id viParams, "NR_TRANSACAO", NR_TRANSACAO.TRA_S_TRANSACSVC
					putitem/id viParams, "DT_TRANSACAO", DT_TRANSACAO.TRA_S_TRANSACSVC
					putitem/id viParams, "IN_AGRUPA", <FALSE>
					activate "TRASVCO010".agrupaItemTransacao($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
					if ($procerror)       
						$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						exit(-1)    
					elseif ($status < 0)
						$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						exit(-1)
					endif
				endif
				viParams = ""    
				putitem/id viParams, "CD_EMPRESA", CD_EMPRESA.TRA_S_TRANSACSVC
				putitem/id viParams, "NR_TRANSACAO", NR_TRANSACAO.TRA_S_TRANSACSVC
				putitem/id viParams, "DT_TRANSACAO", DT_TRANSACAO.TRA_S_TRANSACSVC
				activate "TRASVCO004".gravaEnderecoTransacao($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
				if ($procerror)       
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)    
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif
				viParams = ""    
				putitem/id viParams, "CD_EMPRESA", CD_EMPRESA.TRA_S_TRANSACSVC
				putitem/id viParams, "NR_TRANSACAO", NR_TRANSACAO.TRA_S_TRANSACSVC
				putitem/id viParams, "DT_TRANSACAO", DT_TRANSACAO.TRA_S_TRANSACSVC
				;    putitem/id viParams, "IN_SOBREPOR", <TRUE>
				activate "TRASVCO004".gravaParcelaTransacao($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
				if ($procerror)       
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)    
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)
				endif

				vDsRegistro = ""
				putitem/id vDsRegistro, "CD_EMPRESA", CD_EMPRESA.TRA_S_TRANSACSVC
				putitem/id vDsRegistro, "NR_TRANSACAO", NR_TRANSACAO.TRA_S_TRANSACSVC
				putitem/id vDsRegistro, "DT_TRANSACAO", DT_TRANSACAO.TRA_S_TRANSACSVC
;				if (CD_EMPRESA.TRA_S_TRANSACSVC > CD_EMPRESA.TRA_TRANSACAOSVC)
					putitem vDsLstTransacao, -1, vDsRegistro
;				else
;					getitem vDsSalvaRegistro, vDsLstTransacao, 1
;					vDsLstTransacao = ""
;					putitem vDsLstTransacao, -1, vDsRegistro
;					putitem vDsLstTransacao, -1, vDsSalvaRegistro
;				endif				
				vInDesconto = <TRUE>
			endif			
		endif
		
		clear/e "PED_PEDIDOCADSVC", 
		CD_EMPRESA.PED_PEDIDOCADSVC/init = CD_EMPPEDIDO.PED_PEDIDOTRASVC
		CD_PEDIDO.PED_PEDIDOCADSVC/init = CD_PEDIDO.PED_PEDIDOTRASVC
		retrieve/e "PED_PEDIDOCADSVC"
		if ($status >= 0)
			if (NR_DIAPREVENTREGA.PED_PEDIDOCADSVC = 0)
				poParams = ""
				putitem/id poParams, "DS_LSTTRANSACAO", vDsLstTransacao
				putitem/id poPArams, "IN_DESCONTO", vInDesconto
				
				exit(0)
			endif 
		endif
	endif

	vVlTotalAnt = VL_TRANSACAO.TRA_TRANSACAOSVC
	
	if (IN_ACEITADEV.TRA_TRANSACAOSVC = <FALSE>)
		$tpDesconto$ = "Q" ;Desconto em quantidade
	else
		$tpDesconto$ = "V" ;Desconto em valor
	endif
	
	poParams = ""
	vDsLstTransacao = ""
	vDsRegistro = ""
	putitem/id vDsRegistro, "CD_EMPRESA", CD_EMPRESA.TRA_TRANSACAOSVC
	putitem/id vDsRegistro, "NR_TRANSACAO", NR_TRANSACAO.TRA_TRANSACAOSVC
	putitem/id vDsRegistro, "DT_TRANSACAO", DT_TRANSACAO.TRA_TRANSACAOSVC
	putitem vDsLstTransacao, -1, vDsRegistro
	putitem/id poParams, "DS_LSTTRANSACAO", vDsLstTransacao
	putitem/id poParams, "IN_DESCONTO", vInDesconto
	
	if (DT_PREVENTREGA.TRA_TRANSACAOSVC = "")
		exit(0)
	endif
	
	vNrDias = DT_PREVENTREGA.TRA_TRANSACAOSVC - DT_TRANSACAO.TRA_TRANSACAOSVC
	if (vNrDias <= 0) | (vNrDias > 100)
		exit(0)
	endif        
	
	if ($empty("FIS_NFSVC") = 0) & (vNrDias != 100)
		exit(0)
	endif
	
	clear/e "GER_EMPRESASVC"
	CD_CCUSTO.GER_EMPRESASVC = vCdEmpresa
	retrieve/e "GER_EMPRESASVC"
	if ($status < 0)
		exit(0)
	endif
	
	clear/e "TRA_S_TRANSACSVC"
	CD_EMPRESAORI.TRA_S_TRANSACSVC = CD_EMPRESA.TRA_TRANSACAOSVC
	NR_TRANSACAOORI.TRA_S_TRANSACSVC = NR_TRANSACAO.TRA_TRANSACAOSVC
	DT_TRANSACAOORI.TRA_S_TRANSACSVC = DT_TRANSACAO.TRA_TRANSACAOSVC
	retrieve/e "TRA_S_TRANSACSVC"
	if ($status >= 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%CD_EMPRESA.TRA_TRANSACAOSVC / %%NR_TRANSACAO.TRA_TRANSACAOSVC / %%DT_TRANSACAO.TRA_TRANSACAOSVC não pode ter valores de encargos financeiros, pois foi duplicado!", "ADICIONAL=Operação->SICSVCO001.validaDesconto")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	clear/e "TRA_S_TRANSACSVC"
	
	;MARTINEZ - PRJ/TAR 156/549 - 28/03/2011
	if (!$empty("TRA_TRANSCONDSVC"))
		if (vNrDias != 100)
		;if (vNrDias != 100) & ($tpSimuladorFat$ > 0 | $inSimuladorProduto$ = <TRUE> | $inSimuladorCondPgto$ = <TRUE>)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Erro na validação de desconto para a simulação!", "ADICIONAL=Operação->SICSVCO001.validaDesconto")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1) 
		endif
	endif
	;
	if (vNrDias = 100)
		if ($empty("TRA_TRANSITEMSVC") = 0)
			setocc "TRA_TRANSITEMSVC", 1
			while ($status >= 0)
				clear/e "PRD_PRODUTOFOSVC"
				CD_PRODUTO.PRD_PRODUTOFOSVC/init = CD_PRODUTO.TRA_TRANSITEMSVC
				retrieve/e "PRD_PRODUTOFOSVC"
				if ($status >= 0)
					setocc "PRD_PRODUTOFOSVC", 1
					setocc "PES_PREFFORNESVC", 1
					if ($dbocc("PES_PREFFORNESVC"))
						if (PR_QTCANCELAMENTO.PES_PREFFORNESVC != "") & (PR_QTCANCELAMENTO.PES_PREFFORNESVC < 100)
							$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Opção de desconto inválida para o produto/fornecedor %%CD_PRODUTO.TRA_TRANSITEMSVC / %%CD_FORNECEDOR.PES_PREFFORNESVC da transação %%vNrTransacao%%%!", "ADICIONAL=Operação->SICSVCO001.validaDesconto")
							poCdErro = $xCdErro$
							poCtxErro = $xCtxErro$
							exit(-1)
						endif
						if (PR_MARKUP.PES_PREFFORNESVC != "") & (PR_MARKUP.PES_PREFFORNESVC < 100)
							$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Opção de desconto inválida para o produto/fornecedor %%CD_PRODUTO.TRA_TRANSITEMSVC / %%CD_FORNECEDOR.PES_PREFFORNESVC da transação %%vNrTransacao%%%!", "ADICIONAL=Operação->SICSVCO001.validaDesconto")
							poCdErro = $xCdErro$
							poCtxErro = $xCtxErro$
							exit(-1)
						endif
					endif        
				endif  
				setocc "TRA_TRANSITEMSVC", $curocc("TRA_TRANSITEMSVC") + 1
			endwhile
		endif

		CD_EMPFAT.TRA_TRANSACAOSVC = CD_EMPRESA.GER_EMPRESASVC
		
		if ($empty("FIS_NFSVC") = 0)
			setocc "FIS_NFSVC", 1
			while ($status >= 0)   
				CD_EMPFAT.FIS_NFSVC = CD_EMPRESA.GER_EMPRESASVC
				
				if ($empty("FIS_NFITEMSVC") = 0)
					setocc "FIS_NFITEMSVC", 1
					while ($status >= 0)   
						CD_EMPFAT.FIS_NFITEMSVC = CD_EMPRESA.GER_EMPRESASVC
						
						if ($empty("FIS_NFITEMIMPSVC") = 0)
							setocc "FIS_NFITEMIMPSVC", 1
							while ($status >= 0)   
								CD_EMPFAT.FIS_NFITEMIMPSVC = CD_EMPRESA.GER_EMPRESASVC
								setocc "FIS_NFITEMIMPSVC", $curocc("FIS_NFITEMIMPSVC") + 1
							endwhile
						endif
						
						if ($empty("FIS_NFITEMPROSVC") = 0)
							setocc "FIS_NFITEMPROSVC", 1
							while ($status >= 0)   
								CD_EMPFAT.FIS_NFITEMPROSVC = CD_EMPRESA.GER_EMPRESASVC
								
								if ($empty("FIS_NFITEMVLSVC") = 0)
									setocc "FIS_NFITEMVLSVC", 1
									while ($status >= 0)
										CD_EMPFAT.FIS_NFITEMVLSVC = CD_EMPRESA.GER_EMPRESASVC
										
										setocc "FIS_NFITEMVLSVC", $curocc("FIS_NFITEMVLSVC") + 1
									endwhile
								endif
								
								setocc "FIS_NFITEMPROSVC", $curocc("FIS_NFITEMPROSVC") + 1
							endwhile
						endif
						
						if ($empty("FIS_NFITEMDEVSVC") = 0)
							setocc "FIS_NFITEMDEVSVC", 1
							while ($status >= 0)   
								CD_EMPFAT.FIS_NFITEMDEVSVC = CD_EMPRESA.GER_EMPRESASVC
								setocc "FIS_NFITEMDEVSVC", $curocc("FIS_NFITEMDEVSVC") + 1
							endwhile
						endif
						
						setocc "FIS_NFITEMSVC", $curocc("FIS_NFITEMSVC") + 1
					endwhile
				endif
				
				if ($empty("FIS_NFECFSVC") = 0)
					setocc "FIS_NFECFSVC", 1
					while ($status >= 0)   
						CD_EMPFAT.FIS_NFECFSVC = CD_EMPRESA.GER_EMPRESASVC
						setocc "FIS_NFECFSVC", $curocc("FIS_NFECFSVC") + 1
					endwhile
				endif
				
				if ($empty("FIS_NFCCORRSVC") = 0)
					setocc "FIS_NFCCORRSVC", 1
					while ($status >= 0)   
						CD_EMPFAT.FIS_NFCCORRSVC = CD_EMPRESA.GER_EMPRESASVC
						setocc "FIS_NFCCORRSVC", $curocc("FIS_NFCCORRSVC") + 1
					endwhile
				endif
				
				if ($empty("FIS_NFIMPOSTOSVC") = 0)
					setocc "FIS_NFIMPOSTOSVC", 1
					while ($status >= 0)   
						CD_EMPFAT.FIS_NFIMPOSTOSVC = CD_EMPRESA.GER_EMPRESASVC
						setocc "FIS_NFIMPOSTOSVC", $curocc("FIS_NFIMPOSTOSVC") + 1
					endwhile
				endif
				
				if ($empty("FIS_NFVENCTOSVC") = 0)
					setocc "FIS_NFVENCTOSVC", 1
					while ($status >= 0)   
						CD_EMPFAT.FIS_NFVENCTOSVC = CD_EMPRESA.GER_EMPRESASVC
						setocc "FIS_NFVENCTOSVC", $curocc("FIS_NFVENCTOSVC") + 1
					endwhile
				endif
				
				if ($empty("FIS_NFTRANSPSVC") = 0)
					setocc "FIS_NFTRANSPSVC", 1
					while ($status >= 0)   
						CD_EMPFAT.FIS_NFTRANSPSVC = CD_EMPRESA.GER_EMPRESASVC
						setocc "FIS_NFTRANSPSVC", $curocc("FIS_NFTRANSPSVC") + 1
					endwhile
				endif
				
				if ($empty("FIS_NFREMDESSVC") = 0)
					setocc "FIS_NFREMDESSVC", 1
					while ($status >= 0)   
						CD_EMPFAT.FIS_NFREMDESSVC = CD_EMPRESA.GER_EMPRESASVC
						setocc "FIS_NFREMDESSVC", $curocc("FIS_NFREMDESSVC") + 1
					endwhile
				endif
				
				setocc "FIS_NFSVC", $curocc("FIS_NFSVC") + 1
			endwhile
		endif
		
		if ($empty("TRA_TRANSAGRUSVC") = 0)
			setocc "TRA_TRANSAGRUSVC", 1
			while ($status >= 0)   
				CD_EMPFAT.TRA_TRANSAGRUSVC = CD_EMPRESA.GER_EMPRESASVC
				setocc "TRA_TRANSAGRUSVC", $curocc("TRA_TRANSAGRUSVC") + 1
			endwhile
		endif
		
		if ($empty("TRA_TRANSACECSVC") = 0)
			setocc "TRA_TRANSACECSVC", 1
			while ($status >= 0)   
				CD_EMPFAT.TRA_TRANSACECSVC = CD_EMPRESA.GER_EMPRESASVC
				setocc "TRA_TRANSACECSVC", $curocc("TRA_TRANSACECSVC") + 1
			endwhile
		endif
		
		if ($empty("TRA_LIBERACAOSVC") = 0)
			setocc "TRA_LIBERACAOSVC", 1
			while ($status >= 0)   
				CD_EMPFAT.TRA_LIBERACAOSVC = CD_EMPRESA.GER_EMPRESASVC
				setocc "TRA_LIBERACAOSVC", $curocc("TRA_LIBERACAOSVC") + 1
			endwhile
		endif
		
		if ($empty("TRA_TRAIMPOSTSVC") = 0)
			setocc "TRA_TRAIMPOSTSVC", 1
			while ($status >= 0)   
				CD_EMPFAT.TRA_TRAIMPOSTSVC = CD_EMPRESA.GER_EMPRESASVC
				setocc "TRA_TRAIMPOSTSVC", $curocc("TRA_TRAIMPOSTSVC") + 1
			endwhile
		endif
		
		if ($empty("TRA_REMDESSVC") = 0)
			setocc "TRA_REMDESSVC", 1
			while ($status >= 0)   
				CD_EMPFAT.TRA_REMDESSVC = CD_EMPRESA.GER_EMPRESASVC
				setocc "TRA_REMDESSVC", $curocc("TRA_REMDESSVC") + 1
			endwhile
		endif
		
		if ($empty("TRA_TRANSPORTSVC") = 0)
			setocc "TRA_TRANSPORTSVC", 1
			while ($status >= 0)   
				CD_EMPFAT.TRA_TRANSPORTSVC = CD_EMPRESA.GER_EMPRESASVC
				setocc "TRA_TRANSPORTSVC", $curocc("TRA_TRANSPORTSVC") + 1
			endwhile
		endif
		
		if ($empty("TRA_VENCIMENTSVC") = 0)
			setocc "TRA_VENCIMENTSVC", 1
			while ($status >= 0)   
				CD_EMPFAT.TRA_VENCIMENTSVC = CD_EMPRESA.GER_EMPRESASVC
				setocc "TRA_VENCIMENTSVC", $curocc("TRA_VENCIMENTSVC") + 1
			endwhile
		endif    
		
		if ($empty("TRA_TRANSITEMSVC") = 0)
			setocc "TRA_TRANSITEMSVC", 1
			while ($status >= 0)   
				CD_EMPFAT.TRA_TRANSITEMSVC = CD_EMPRESA.GER_EMPRESASVC                        
				
				if ($empty("TRA_ITEMCCSVC") = 0)
					setocc "TRA_ITEMCCSVC", 1
					while ($status >= 0)   
						CD_EMPFAT.TRA_ITEMCCSVC = CD_EMPRESA.GER_EMPRESASVC
						setocc "TRA_ITEMCCSVC", $curocc("TRA_ITEMCCSVC") + 1
					endwhile
				endif    
				
				if ($empty("TRA_ITEMIMPOSSVC") = 0)
					setocc "TRA_ITEMIMPOSSVC", 1
					while ($status >= 0)   
						CD_EMPFAT.TRA_ITEMIMPOSSVC = CD_EMPRESA.GER_EMPRESASVC
						setocc "TRA_ITEMIMPOSSVC", $curocc("TRA_ITEMIMPOSSVC") + 1
					endwhile
				endif    
				
				if ($empty("TRA_ITEMVLSVC") = 0)
					setocc "TRA_ITEMVLSVC", 1
					while ($status >= 0)   
						CD_EMPFAT.TRA_ITEMVLSVC = CD_EMPRESA.GER_EMPRESASVC
						setocc "TRA_ITEMVLSVC", $curocc("TRA_ITEMVLSVC") + 1
					endwhile
				endif    
				
				setocc "TRA_TRANSITEMSVC", $curocc("TRA_TRANSITEMSVC") + 1
			endwhile
		endif
	
		$collhandle("TRA_TRANSACAOSVC")->Salvar()
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif

;-------------------------------------
;Por Hugo em 17/11/2010 Tarefa 22-1701
;Não será mais permitido faturar pedido 100% na encargos, para isso o pedido deve ser transferido para a encargos
		if ($empty("PED_PEDIDOTRASVC") = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Para esse tipo de transação não é permitido faturar em outro centro de custo!", "ADICIONAL=Operação->SICSVCO001.validaDesconto")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
			;>-- MAC - PRJ 22/1605 - 18/08/2010 ---
;			clear/e "F_PED_PEDIDOTSVC"
;			creocc "F_PED_PEDIDOTSVC", -1
;			CD_EMPPEDIDO.F_PED_PEDIDOTSVC    = CD_EMPPEDIDO.PED_PEDIDOTRASVC
;			CD_PEDIDO.F_PED_PEDIDOTSVC       = CD_PEDIDO.PED_PEDIDOTRASVC
;			CD_EMPTRANSACAO.F_PED_PEDIDOTSVC = vCdEmpresaAux                           
;			NR_TRANSACAO.F_PED_PEDIDOTSVC    = NR_TRANSACAO.TRA_TRANSACAOSVC
;			DT_TRANSACAO.F_PED_PEDIDOTSVC    = DT_TRANSACAO.TRA_TRANSACAOSVC
;			retrieve/o "F_PED_PEDIDOTSVC"
;			if ($status = -7)
;				retrieve/x "F_PED_PEDIDOTSVC"
;			endif
;
;			CD_OPERADOR.F_PED_PEDIDOTSVC = $item("CD_USUARIO", $xlpg$)
;			DT_CADASTRO.F_PED_PEDIDOTSVC = $datim
;
;			$collhandle("F_PED_PEDIDOTSVC")->Salvar()
;			if ($procerror)
;				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
;				poCdErro = $xCdErro$
;				poCtxErro = $xCtxErro$
;				exit(-1)
;			elseif ($status < 0)
;				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
;				poCdErro = $xCdErro$
;				poCtxErro = $xCtxErro$
;				exit(-1)
;			endif
 			;--<
		endif
;-------------------------------------



;		A devolução já esta associada com sua devida empfat
;		clear/e "TRA_TROCASVC"
;		CD_EMPDEV.TRA_TROCASVC/init = CD_EMPRESA.TRA_TRANSACAOSVC
;		NR_TRADEV.TRA_TROCASVC/init = NR_TRANSACAO.TRA_TRANSACAOSVC
;		DT_TRADEV.TRA_TROCASVC/init = DT_TRANSACAO.TRA_TRANSACAOSVC
;		retrieve/e "TRA_TROCASVC"
;		if ($status >= 0)
;			setocc "TRA_TROCASVC", 1
;			while ($status >= 0)   
;				CD_EMPFATDEV.TRA_TROCASVC = CD_EMPRESA.GER_EMPRESASVC
;				setocc "TRA_TROCASVC", $curocc("TRA_TROCASVC") + 1
;			endwhile
;			$collhandle("TRA_TROCASVC")->Salvar()
;			if ($procerror)
;				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
;				poCdErro = $xCdErro$
;				poCtxErro = $xCtxErro$
;				exit(-1)
;			elseif ($status < 0)
;				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
;				poCdErro = $xCdErro$
;				poCtxErro = $xCtxErro$
;				exit(-1)
;			endif
;		endif

		clear/e "TRA_TROCASVC"
		CD_EMPVEN.TRA_TROCASVC/init = CD_EMPRESA.TRA_TRANSACAOSVC
		NR_TRAVEN.TRA_TROCASVC/init = NR_TRANSACAO.TRA_TRANSACAOSVC
		DT_TRAVEN.TRA_TROCASVC/init = DT_TRANSACAO.TRA_TRANSACAOSVC
		retrieve/e "TRA_TROCASVC"
		if ($status >= 0)
			setocc "TRA_TROCASVC", 1
			while ($status >= 0)
				CD_EMPFATVEN.TRA_TROCASVC = CD_EMPRESA.GER_EMPRESASVC
				setocc "TRA_TROCASVC", $curocc("TRA_TROCASVC") + 1
			endwhile
			$collhandle("TRA_TROCASVC")->Salvar()
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
		endif

		clear/e "TRA_TROCASVC"
	else
		vDsRegistro = ""
		putlistitems/occ vDsRegistro, "TRA_TRANSACAOSVC"
		delitem/id vDsRegistro, "CD_EMPRESA"
		delitem/id vDsRegistro, "NR_TRANSACAO"
		delitem/id vDsRegistro, "DT_TRANSACAO"
		getlistitems/occ vDsRegistro, "TRA_S_TRANSACSVC"
		
		CD_EMPRESA.TRA_S_TRANSACSVC = CD_EMPRESA.GER_EMPRESASVC
		NR_TRANSACAO.TRA_S_TRANSACSVC = NR_TRANSACAO.TRA_TRANSACAOSVC
		DT_TRANSACAO.TRA_S_TRANSACSVC = DT_TRANSACAO.TRA_TRANSACAOSVC
		CD_EMPFAT.TRA_S_TRANSACSVC = CD_EMPRESA.GER_EMPRESASVC
		CD_EMPRESAORI.TRA_S_TRANSACSVC = CD_EMPRESA.TRA_TRANSACAOSVC
		NR_TRANSACAOORI.TRA_S_TRANSACSVC = NR_TRANSACAO.TRA_TRANSACAOSVC
		DT_TRANSACAOORI.TRA_S_TRANSACSVC = DT_TRANSACAO.TRA_TRANSACAOSVC
		VL_TRANSACAO.TRA_S_TRANSACSVC = 0
		VL_DESCONTO.TRA_S_TRANSACSVC = 0
		VL_TOTAL.TRA_S_TRANSACSVC = 0
		VL_FRETE.TRA_S_TRANSACSVC = 0
		VL_DESPACESSOR.TRA_S_TRANSACSVC = 0
		VL_SEGURO.TRA_S_TRANSACSVC = 0
		IN_FRETE.TRA_S_TRANSACSVC = <FALSE>
		VL_IPI.TRA_S_TRANSACSVC = 0
		VL_TOTAL.TRA_S_TRANSACSVC = 0
		QT_SOLICITADA.TRA_S_TRANSACSVC = 0

		;>-- MAC - PRJ 102/919 - 09/08/2010 ---
		if ($prEncFinAbatImpPed$ != "") & (PR_ENCFINANCEIRO.PED_PEDIDOCADSVC > 0)
			if (VL_DESPACESSOR.TRA_TRANSACAOSVC > 0)
				vVlDespAcessor = VL_DESPACESSOR.TRA_TRANSACAOSVC * vNrDias / 100
				VL_DESPACESSOR.TRA_S_TRANSACSVC = vVlDespAcessor
				VL_DESPACESSOR.TRA_TRANSACAOSVC = VL_DESPACESSOR.TRA_TRANSACAOSVC - vVlDespAcessor
				viParams = ""    
				putlistitems/occ viParams, "TRA_TRANSPORTSVC"
				putitem/id viParams, "VL_FRETE", VL_FRETE.TRA_TRANSACAOSVC
				putitem/id viParams, "VL_SEGURO", VL_SEGURO.TRA_TRANSACAOSVC
				putitem/id viParams, "VL_DESPACESSOR", VL_DESPACESSOR.TRA_TRANSACAOSVC
				activate "TRASVCO004".gravaTransportTransacao($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
				if ($procerror)       
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)    
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					exit(-1)    
				endif
			endif
		endif
		;--<

		viParams = ""
		putlistitems/occ viParams, "TRA_S_TRANSACSVC"
		putitem/id viParams, "IN_NAOGRAVAGUIAREPRE", <TRUE>
		activate "TRASVCO004".gravaCapaTransacao($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
		if ($procerror)       
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)    
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif

		if ($empty("PED_PEDIDOTRASVC") = 0)
			;>-- MAC - PRJ 22/1605 - 18/08/2010 ---
			clear/e "F_PED_PEDIDOTSVC"
			creocc "F_PED_PEDIDOTSVC", -1
			CD_EMPPEDIDO.F_PED_PEDIDOTSVC    = CD_EMPPEDIDO.PED_PEDIDOTRASVC
			CD_PEDIDO.F_PED_PEDIDOTSVC       = CD_PEDIDO.PED_PEDIDOTRASVC
			CD_EMPTRANSACAO.F_PED_PEDIDOTSVC = vCdEmpresaAux                           
			NR_TRANSACAO.F_PED_PEDIDOTSVC    = NR_TRANSACAO.TRA_TRANSACAOSVC
			DT_TRANSACAO.F_PED_PEDIDOTSVC    = DT_TRANSACAO.TRA_TRANSACAOSVC
			retrieve/o "F_PED_PEDIDOTSVC"
			if ($status = -7)
				retrieve/x "F_PED_PEDIDOTSVC"
			endif

			CD_OPERADOR.F_PED_PEDIDOTSVC = $item("CD_USUARIO", $xlpg$)
			DT_CADASTRO.F_PED_PEDIDOTSVC = $datim

			$collhandle("F_PED_PEDIDOTSVC")->Salvar()
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
 			;--<
		endif

		vDsRegistro = ""
		putlistitems/occ vDsRegistro, "TRA_REMDESSVC"
		delitem/id vDsRegistro, "CD_EMPRESA"
		delitem/id vDsRegistro, "NR_TRANSACAO"
		delitem/id vDsRegistro, "DT_TRANSACAO"
		getlistitems/occ vDsRegistro, "F_TRA_REMDESSVC"
		viParams = ""
		putlistitems/occ viParams, "F_TRA_REMDESSVC"
		activate "TRASVCO004".gravaEnderecoTransacao($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
		if ($procerror)       
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)    
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif

		vVlMaior = 0
		vNrItemMaior = 0
		
		if ($empty("TRA_TRANSITEMSVC") = 0)
			setocc "TRA_TRANSITEMSVC", 1
			while ($status >= 0)
				creocc "TRA_S_TRANSITSVC", -1
				vDsRegistro = ""
				putlistitems/occ vDsRegistro, "TRA_TRANSITEMSVC"
				delitem/id vDsRegistro, "CD_EMPRESA"
				delitem/id vDsRegistro, "NR_TRANSACAO"
				delitem/id vDsRegistro, "DT_TRANSACAO"
				delitem/id vDsRegistro, "NR_ITEM"
				getlistitems/occ vDsRegistro, "TRA_S_TRANSITSVC"
				
				vNrDivisor = vNrDias
				
				if (vNrDivisor > 0)
					clear/e "PRD_PRODUTOFOSVC"
					CD_PRODUTO.PRD_PRODUTOFOSVC/init = CD_PRODUTO.TRA_TRANSITEMSVC
					retrieve/e "PRD_PRODUTOFOSVC"
					if ($status >= 0)
						setocc "PRD_PRODUTOFOSVC", 1
						setocc "PES_PREFFORNESVC", 1
						if ($dbocc("PES_PREFFORNESVC"))
							if ($tpDesconto$ = "Q") ;Desconto por quantidade
								if (vNrDivisor > PR_QTCANCELAMENTO.PES_PREFFORNESVC) & (PR_QTCANCELAMENTO.PES_PREFFORNESVC != "")
									vNrDivisor = PR_QTCANCELAMENTO.PES_PREFFORNESVC
								endif
							else
								if (vNrDivisor > PR_MARKUP.PES_PREFFORNESVC) & (PR_MARKUP.PES_PREFFORNESVC != "")
									vNrDivisor = PR_MARKUP.PES_PREFFORNESVC
								endif            
							endif
						endif        
					endif
				endif
				
				CD_EMPFAT.TRA_S_TRANSITSVC = CD_EMPRESA.GER_EMPRESASVC

				if ($tpDesconto$ = "Q") ;Desconto por quantidade
					vInFracionado = <FALSE>
					clear/e "PRD_PRDINFOSVC"
					CD_EMPRESA.PRD_PRDINFOSVC/init = CD_EMPRESA.TRA_TRANSACAOSVC
					CD_PRODUTO.PRD_PRDINFOSVC/init = CD_PRODUTO.TRA_TRANSITEMSVC
					retrieve/e "PRD_PRDINFOSVC"
					if ($status >= 0)
						vInFracionado = IN_FRACIONADO.PRD_PRDINFOSVC
					endif
					
					vQtCalc = QT_SOLICITADA.TRA_TRANSITEMSVC * vNrDivisor / 100
					if (vInFracionado = <TRUE>)
						QT_SOLICITADA.TRA_S_TRANSITSVC/init = vQtCalc[round, 3]
					else
						QT_SOLICITADA.TRA_S_TRANSITSVC/init = vQtCalc[round, 0]
					endif                    
					QT_ATENDIDA.TRA_S_TRANSITSVC/init = 0
					QT_SALDO.TRA_S_TRANSITSVC/init = QT_SOLICITADA.TRA_S_TRANSITSVC
					vVlValor = VL_UNITBRUTO.TRA_S_TRANSITSVC * QT_SOLICITADA.TRA_S_TRANSITSVC
					VL_TOTALBRUTO.TRA_S_TRANSITSVC/init = vVlValor[round, 2]
					vVlValor = VL_UNITLIQUIDO.TRA_S_TRANSITSVC * QT_SOLICITADA.TRA_S_TRANSITSVC
					VL_TOTALLIQUIDO.TRA_S_TRANSITSVC/init = vVlValor[round, 2]
					vVlValor = VL_UNITDESC.TRA_S_TRANSITSVC * QT_SOLICITADA.TRA_S_TRANSITSVC
					VL_TOTALDESC.TRA_S_TRANSITSVC/init = vVlValor[round, 2]
					vVlValor = VL_UNITDESCCAB.TRA_S_TRANSITSVC * QT_SOLICITADA.TRA_S_TRANSITSVC
					VL_TOTALDESCCAB.TRA_S_TRANSITSVC/init = vVlValor[round, 2]
				else ;Desconto por valor
					QT_SOLICITADA.TRA_S_TRANSITSVC/init = 0
					QT_ATENDIDA.TRA_S_TRANSITSVC/init = 0
					QT_SALDO.TRA_S_TRANSITSVC/init = 0
					QT_ANTERIOR.TRA_S_TRANSITSVC/init = 0
					vVlValor = VL_TOTALBRUTO.TRA_TRANSITEMSVC * vNrDivisor / 100
					VL_TOTALBRUTO.TRA_S_TRANSITSVC/init = vVlValor[round, 2]
					vVlValor = VL_TOTALLIQUIDO.TRA_TRANSITEMSVC * vNrDivisor / 100
					VL_TOTALLIQUIDO.TRA_S_TRANSITSVC/init = vVlValor[round, 2]
					vVlValor = VL_TOTALDESC.TRA_TRANSITEMSVC * vNrDivisor / 100
					VL_TOTALDESC.TRA_S_TRANSITSVC/init = vVlValor[round, 2]
					vVlValor = VL_TOTALDESCCAB.TRA_TRANSITEMSVC * vNrDivisor / 100
					VL_TOTALDESCCAB.TRA_S_TRANSITSVC/init = vVlValor[round, 2]
					vVlValor = VL_TOTALBRUTO.TRA_S_TRANSITSVC / QT_SOLICITADA.TRA_TRANSITEMSVC
					VL_UNITBRUTO.TRA_S_TRANSITSVC/init = vVlValor[round, 6]
					vVlValor = VL_TOTALLIQUIDO.TRA_S_TRANSITSVC / QT_SOLICITADA.TRA_TRANSITEMSVC
					VL_UNITLIQUIDO.TRA_S_TRANSITSVC/init = vVlValor[round, 6]
					vVlValor = VL_TOTALDESC.TRA_S_TRANSITSVC / QT_SOLICITADA.TRA_TRANSITEMSVC
					VL_UNITDESC.TRA_S_TRANSITSVC/init = vVlValor[round, 6]
					vVlValor = VL_TOTALDESCCAB.TRA_S_TRANSITSVC / QT_SOLICITADA.TRA_TRANSITEMSVC
					VL_UNITDESCCAB.TRA_S_TRANSITSVC/init = vVlValor[round, 6]
				endif
				
				if ($tpDesconto$ = "Q")
					QT_SOLICITADA.TRA_TRANSITEMSVC/init = QT_SOLICITADA.TRA_TRANSITEMSVC - QT_SOLICITADA.TRA_S_TRANSITSVC
					QT_ATENDIDA.TRA_TRANSITEMSVC/init = 0
					QT_SALDO.TRA_TRANSITEMSVC/init = QT_SOLICITADA.TRA_TRANSITEMSVC
					vVlValor = VL_UNITBRUTO.TRA_TRANSITEMSVC * QT_SOLICITADA.TRA_TRANSITEMSVC
					VL_TOTALBRUTO.TRA_TRANSITEMSVC/init = vVlValor[round, 2]
					vVlValor = VL_UNITLIQUIDO.TRA_TRANSITEMSVC * QT_SOLICITADA.TRA_TRANSITEMSVC
					VL_TOTALLIQUIDO.TRA_TRANSITEMSVC/init = vVlValor[round, 2]
					vVlValor = VL_UNITDESC.TRA_TRANSITEMSVC * QT_SOLICITADA.TRA_TRANSITEMSVC
					VL_TOTALDESC.TRA_TRANSITEMSVC/init = vVlValor[round, 2]
					vVlValor = VL_UNITDESCCAB.TRA_TRANSITEMSVC * QT_SOLICITADA.TRA_TRANSITEMSVC
					VL_TOTALDESCCAB.TRA_TRANSITEMSVC/init = vVlValor[round, 2]
				else
					if ($inDescontoPromocional$ = <TRUE>)
						VL_TOTALLIQUIDO.TRA_TRANSITEMSVC/init = VL_TOTALLIQUIDO.TRA_TRANSITEMSVC - VL_TOTALLIQUIDO.TRA_S_TRANSITSVC
						VL_TOTALDESC.TRA_TRANSITEMSVC/init = VL_TOTALDESC.TRA_TRANSITEMSVC - VL_TOTALDESC.TRA_S_TRANSITSVC
						VL_TOTALDESCCAB.TRA_TRANSITEMSVC/init = VL_TOTALDESCCAB.TRA_TRANSITEMSVC - VL_TOTALDESCCAB.TRA_S_TRANSITSVC
						VL_TOTALDESCCAB.TRA_TRANSITEMSVC/init = VL_TOTALDESCCAB.TRA_TRANSITEMSVC + (VL_TOTALBRUTO.TRA_TRANSITEMSVC - VL_TOTALBRUTO.TRA_S_TRANSITSVC)
					else
						VL_TOTALBRUTO.TRA_TRANSITEMSVC/init = VL_TOTALBRUTO.TRA_TRANSITEMSVC - VL_TOTALBRUTO.TRA_S_TRANSITSVC
						VL_TOTALLIQUIDO.TRA_TRANSITEMSVC/init = VL_TOTALLIQUIDO.TRA_TRANSITEMSVC - VL_TOTALLIQUIDO.TRA_S_TRANSITSVC
						VL_TOTALDESC.TRA_TRANSITEMSVC/init = VL_TOTALDESC.TRA_TRANSITEMSVC - VL_TOTALDESC.TRA_S_TRANSITSVC
						VL_TOTALDESCCAB.TRA_TRANSITEMSVC/init = VL_TOTALDESCCAB.TRA_TRANSITEMSVC - VL_TOTALDESCCAB.TRA_S_TRANSITSVC
					endif
					vVlValor = VL_TOTALBRUTO.TRA_TRANSITEMSVC / QT_SOLICITADA.TRA_TRANSITEMSVC
					VL_UNITBRUTO.TRA_TRANSITEMSVC/init = vVlValor[round, 6]
					vVlValor = VL_TOTALLIQUIDO.TRA_TRANSITEMSVC / QT_SOLICITADA.TRA_TRANSITEMSVC
					VL_UNITLIQUIDO.TRA_TRANSITEMSVC/init = vVlValor[round, 6]
					vVlValor = VL_TOTALDESC.TRA_TRANSITEMSVC / QT_SOLICITADA.TRA_TRANSITEMSVC
					VL_UNITDESC.TRA_TRANSITEMSVC/init = vVlValor[round, 6]
					vVlValor = VL_TOTALDESCCAB.TRA_TRANSITEMSVC / QT_SOLICITADA.TRA_TRANSITEMSVC
					VL_UNITDESCCAB.TRA_TRANSITEMSVC/init = vVlValor[round, 6]
					;>-- MAC - PRJ 156/290 - 07/05/2010 ---
					if (VL_TOTALLIQUIDO.TRA_TRANSITEMSVC = 0)
						$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Não foi possível validar desconto para o produto - %%CD_PRODUTO.TRA_TRANSITEMSVC!", "ADICIONAL=Operação->SICSVCO001.validaDesconto")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						exit(-1)
					endif
					;--<
				endif
				
				if (QT_SOLICITADA.TRA_TRANSITEMSVC > 0) & (VL_TOTALLIQUIDO.TRA_S_TRANSITSVC > 0)
					viParams = ""
					putlistitems/occ viParams, "TRA_S_TRANSITSVC"
					putitem/id viParams, "IN_TOTAL", <FALSE>
					activate "TRASVCO004".gravaItemTransacao($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
					if ($procerror)
						$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						exit(-1)
					elseif ($status < 0)
						$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						exit(-1)
					endif

					viParams = ""
					putlistitems/occ viParams, "TRA_TRANSITEMSVC"
					putitem/id viParams, "IN_TOTAL", <FALSE>
					activate "TRASVCO004".gravaItemTransacao($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
					if ($procerror)       
						$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						exit(-1)
					elseif ($status < 0)
						$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						exit(-1)
					endif  

					vNrItem = $item("NR_ITEM", voParams)

					if (VL_TOTALLIQUIDO.TRA_TRANSITEMSVC > vVlMaior)
						vNrItemMaior = vNrItem
						vVlMaior = VL_TOTALLIQUIDO.TRA_TRANSITEMSVC
					endif 
				endif
				
				setocc "TRA_TRANSITEMSVC", $curocc("TRA_TRANSITEMSVC") + 1
			endwhile
		endif

		viParams = ""
		vDsLstTransacao = ""
		vDsRegistro = ""
		putitem/id vDsRegistro, "CD_EMPRESA", CD_EMPRESA.TRA_TRANSACAOSVC
		putitem/id vDsRegistro, "NR_TRANSACAO", NR_TRANSACAO.TRA_TRANSACAOSVC
		putitem/id vDsRegistro, "DT_TRANSACAO", DT_TRANSACAO.TRA_TRANSACAOSVC
		putitem vDsLstTransacao, -1, vDsRegistro    
		putitem/id viParams, "DS_LSTTRANSACAO", vDsLstTransacao
		activate "TRASVCO004".gravaTotalTransacao($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
		if ($procerror)       
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif

		viParams = ""
		vDsLstTransacao = ""
		vDsRegistro = ""
		putitem/id vDsRegistro, "CD_EMPRESA", CD_EMPRESA.TRA_S_TRANSACSVC
		putitem/id vDsRegistro, "NR_TRANSACAO", NR_TRANSACAO.TRA_S_TRANSACSVC
		putitem/id vDsRegistro, "DT_TRANSACAO", DT_TRANSACAO.TRA_S_TRANSACSVC
		putitem vDsLstTransacao, -1, vDsRegistro    
		putitem/id viParams, "DS_LSTTRANSACAO", vDsLstTransacao
		activate "TRASVCO004".gravaTotalTransacao($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
		if ($procerror)       
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		
		vCdEmpresa = CD_EMPRESA.TRA_TRANSACAOSVC
		vNrTransacao = NR_TRANSACAO.TRA_TRANSACAOSVC    
		vDtTransacao = DT_TRANSACAO.TRA_TRANSACAOSVC
		clear/e "TRA_TRANSACAOSVC"
		CD_EMPRESA.TRA_TRANSACAOSVC/init = vCdEmpresa
		NR_TRANSACAO.TRA_TRANSACAOSVC/init = vNrTransacao
		DT_TRANSACAO.TRA_TRANSACAOSVC/init = vDtTransacao
		retrieve/e "TRA_TRANSACAOSVC"
		
		vCdEmpresa = CD_EMPRESA.TRA_S_TRANSACSVC
		vNrTransacao = NR_TRANSACAO.TRA_S_TRANSACSVC
		vDtTransacao = DT_TRANSACAO.TRA_S_TRANSACSVC
		clear/e "TRA_S_TRANSACSVC"
		CD_EMPRESA.TRA_S_TRANSACSVC/init = vCdEmpresa
		NR_TRANSACAO.TRA_S_TRANSACSVC/init = vNrTransacao
		DT_TRANSACAO.TRA_S_TRANSACSVC/init = vDtTransacao
		retrieve/e "TRA_S_TRANSACSVC"	

		$vlDiferenca$ = vVlTotalAnt - (VL_TRANSACAO.TRA_TRANSACAOSVC + VL_TRANSACAO.TRA_S_TRANSACSVC)
		
		if ($vlDiferenca$ != 0)
			clear/e "TRA_TRANSITEMSVC"
			NR_ITEM.TRA_TRANSITEMSVC/init = vNrItemMaior
			retrieve/e "TRA_TRANSITEMSVC"
			if ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Item %%vNrItemMaior para arredondamento não encontrado!", "ADICIONAL=Operação->SICSVCO001.validaDesconto")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
			VL_TOTALBRUTO.TRA_TRANSITEMSVC = VL_TOTALBRUTO.TRA_TRANSITEMSVC + $vlDiferenca$
			VL_TOTALLIQUIDO.TRA_TRANSITEMSVC = VL_TOTALLIQUIDO.TRA_TRANSITEMSVC + $vlDiferenca$
			vVlValor = VL_TOTALBRUTO.TRA_TRANSITEMSVC / QT_SOLICITADA.TRA_TRANSITEMSVC
			VL_UNITBRUTO.TRA_TRANSITEMSVC/init = vVlValor[round, 6]
			vVlValor = VL_TOTALLIQUIDO.TRA_TRANSITEMSVC / QT_SOLICITADA.TRA_TRANSITEMSVC
			VL_UNITLIQUIDO.TRA_TRANSITEMSVC/init = vVlValor[round, 6]
			viParams = ""
			putlistitems/occ viParams, "TRA_TRANSITEMSVC"
			putitem/id viParams, "IN_TOTAL", <FALSE>
			activate "TRASVCO004".gravaItemTransacao($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif

			vDsLstTransacao = ""
			vDsRegistro = ""
			putitem/id vDsRegistro, "CD_EMPRESA", CD_EMPRESA.TRA_TRANSACAOSVC
			putitem/id vDsRegistro, "NR_TRANSACAO", NR_TRANSACAO.TRA_TRANSACAOSVC
			putitem/id vDsRegistro, "DT_TRANSACAO", DT_TRANSACAO.TRA_TRANSACAOSVC
			putitem vDsLstTransacao, -1, vDsRegistro
			viParams = ""
			putitem/id viParams, "DS_LSTTRANSACAO", vDsLstTransacao
			vDsObservacao = "Arredondamento de %%$vlDiferenca$ aplicado sobre o item %%vNrItemMaior"
			putitem/id viParams, "DS_OBSERVACAO", vDsObservacao
			activate "TRASVCO016".gravaObsTransacao($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				return(-1)
			endif	

			viParams = ""
			vDsLstTransacao = ""
			vDsRegistro = ""
			putitem/id vDsRegistro, "CD_EMPRESA", CD_EMPRESA.TRA_TRANSACAOSVC
			putitem/id vDsRegistro, "NR_TRANSACAO", NR_TRANSACAO.TRA_TRANSACAOSVC
			putitem/id vDsRegistro, "DT_TRANSACAO", DT_TRANSACAO.TRA_TRANSACAOSVC
			putitem vDsLstTransacao, -1, vDsRegistro    
			putitem/id viParams, "DS_LSTTRANSACAO", vDsLstTransacao
			activate "TRASVCO004".gravaTotalTransacao($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif

			viParams = ""
			vDsLstTransacao = ""
			vDsRegistro = ""
			putitem/id vDsRegistro, "CD_EMPRESA", CD_EMPRESA.TRA_S_TRANSACSVC
			putitem/id vDsRegistro, "NR_TRANSACAO", NR_TRANSACAO.TRA_S_TRANSACSVC
			putitem/id vDsRegistro, "DT_TRANSACAO", DT_TRANSACAO.TRA_S_TRANSACSVC
			putitem vDsLstTransacao, -1, vDsRegistro    
			putitem/id viParams, "DS_LSTTRANSACAO", vDsLstTransacao
			activate "TRASVCO004".gravaTotalTransacao($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif

			vCdEmpresa = CD_EMPRESA.TRA_TRANSACAOSVC
			vNrTransacao = NR_TRANSACAO.TRA_TRANSACAOSVC    
			vDtTransacao = DT_TRANSACAO.TRA_TRANSACAOSVC
			clear/e "TRA_TRANSACAOSVC"
			CD_EMPRESA.TRA_TRANSACAOSVC/init = vCdEmpresa
			NR_TRANSACAO.TRA_TRANSACAOSVC/init = vNrTransacao
			DT_TRANSACAO.TRA_TRANSACAOSVC/init = vDtTransacao
			retrieve/e "TRA_TRANSACAOSVC"
		endif
		
		if ($empty("TRA_VENCIMENTSVC") = 0)
			vVlRestoEmp = VL_TOTAL.TRA_TRANSACAOSVC 
			vVlRestoCC = VL_TOTAL.TRA_S_TRANSACSVC 

			vNrFator = vVlRestoCC / (vVlRestoEmp + vVlRestoCC)
			
			setocc "TRA_VENCIMENTSVC", 1
			while ($status >= 0)    
				creocc "F_TRA_VENCIMESVC", -1
				vDsRegistro = ""
				putlistitems/occ vDsRegistro, "TRA_VENCIMENTSVC"
				delitem/id vDsRegistro, "CD_EMPRESA"
				delitem/id vDsRegistro, "NR_TRANSACAO"
				delitem/id vDsRegistro, "DT_TRANSACAO"
				getlistitems/occ vDsRegistro, "F_TRA_VENCIMESVC"                
				
				CD_EMPFAT.F_TRA_VENCIMESVC = CD_EMPRESA.GER_EMPRESASVC
				vVlValor = VL_PARCELA.TRA_VENCIMENTSVC * vNrFator
				VL_PARCELA.F_TRA_VENCIMESVC = vVlValor[round, 2]
				vVlRestoCC = vVlRestoCC - VL_PARCELA.F_TRA_VENCIMESVC
				VL_PARCELA.TRA_VENCIMENTSVC = VL_PARCELA.TRA_VENCIMENTSVC - VL_PARCELA.F_TRA_VENCIMESVC
				vVlRestoEmp = vVlRestoEmp - VL_PARCELA.TRA_VENCIMENTSVC
				
				setocc "TRA_VENCIMENTSVC", $curocc("TRA_VENCIMENTSVC") + 1
			endwhile
			
			if (vVlRestoEmp != 0)
				setocc "TRA_VENCIMENTSVC", 1
				VL_PARCELA.TRA_VENCIMENTSVC = VL_PARCELA.TRA_VENCIMENTSVC + vVlRestoEmp
			endif
			if (vVlRestoCC != 0)
				setocc "F_TRA_VENCIMESVC", 1
				VL_PARCELA.F_TRA_VENCIMESVC = VL_PARCELA.F_TRA_VENCIMESVC + vVlRestoCC
			endif
			
			$collhandle("TRA_VENCIMENTSVC")->Salvar()
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
			
			vDsLstVencimento = ""
			setocc "F_TRA_VENCIMESVC", 1
			while ($status >= 0)
				if (VL_PARCELA.F_TRA_VENCIMESVC > 0)
					putlistitems/occ vDsRegistro, "F_TRA_VENCIMESVC"
					putitem vDsLstVencimento, -1, vDsRegistro
				endif
				setocc "F_TRA_VENCIMESVC", $curocc("F_TRA_VENCIMESVC") + 1
			endwhile
			
			viParams = ""
			putitem/id viParams, "CD_EMPRESA", CD_EMPRESA.TRA_S_TRANSACSVC
			putitem/id viParams, "NR_TRANSACAO", NR_TRANSACAO.TRA_S_TRANSACSVC
			putitem/id viParams, "DT_TRANSACAO", DT_TRANSACAO.TRA_S_TRANSACSVC
			putitem/id viParams, "DS_LSTVENCIMENTO", vDsLstVencimento
			activate "TRASVCO004".gravaParcelaTransacao($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif 
		endif
	endif        
	
	poParams = ""
	vDsLstTransacao = ""
	if ($empty("TRA_TRANSACAOSVC") = 0)
		vDsRegistro = ""
		putitem/id vDsRegistro, "CD_EMPRESA", CD_EMPRESA.TRA_TRANSACAOSVC
		putitem/id vDsRegistro, "NR_TRANSACAO", NR_TRANSACAO.TRA_TRANSACAOSVC
		putitem/id vDsRegistro, "DT_TRANSACAO", DT_TRANSACAO.TRA_TRANSACAOSVC
		putitem vDsLstTransacao, -1, vDsRegistro
	endif
	if ($empty("TRA_S_TRANSACSVC") = 0)
		if (VL_TOTAL.TRA_S_TRANSACSVC = 0)
			vDsLstTra = ""
			vDsRegistro = ""
			putitem/id vDsRegistro, "CD_EMPRESA", CD_EMPRESA.TRA_S_TRANSACSVC
			putitem/id vDsRegistro, "NR_TRANSACAO", NR_TRANSACAO.TRA_S_TRANSACSVC
			putitem/id vDsRegistro, "DT_TRANSACAO", DT_TRANSACAO.TRA_S_TRANSACSVC
			putitem vDsLstTra, -1, vDsRegistro
			viParams = ""
			putitem/id viParams, "DS_LSTTRANSACAO", vDsLstTra
			putitem/id viParams, "TP_SITUACAO", 6 ;Cancelada
			activate "TRASVCO004".alteraSituacaoTransacao($xlpg$, viParams, voParams, $xCdErro$, $xCtxErro$)
			if ($procerror)       
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
		else
			vDsRegistro = ""
			putitem/id vDsRegistro, "CD_EMPRESA", CD_EMPRESA.TRA_S_TRANSACSVC
			putitem/id vDsRegistro, "NR_TRANSACAO", NR_TRANSACAO.TRA_S_TRANSACSVC
			putitem/id vDsRegistro, "DT_TRANSACAO", DT_TRANSACAO.TRA_S_TRANSACSVC
;			if (CD_EMPRESA.TRA_S_TRANSACSVC > CD_EMPRESA.TRA_TRANSACAOSVC)
				putitem vDsLstTransacao, -1, vDsRegistro
;			else
;				getitem vDsSalvaRegistro, vDsLstTransacao, 1
;				vDsLstTransacao = ""
;				putitem vDsLstTransacao, -1, vDsRegistro
;				putitem vDsLstTransacao, -1, vDsSalvaRegistro
;			endif
		endif
	endif
	putitem/id poParams, "DS_LSTTRANSACAO", vDsLstTransacao
	putitem/id poParams, "IN_DESCONTO", vInDesconto
	
	exit(0)
end

;-----------------------------------
public operation descontoPromocional
;-----------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		numeric vCdEmpresa, vNrTransacao
		date vDtTransacao
	endvariables

	;Gera uma DT_PREVENTREGA.TRA_TRANSACAOSVC com 100 fixo dias p/ os casos de cupom fiscal

	vCdEmpresa = $item("CD_EMPRESA", piParams)
	vNrTransacao = $item("NR_TRANSACAO", piParams)
	vDtTransacao = $item("DT_TRANSACAO", piParams)
	
	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->SICSVCO001.descontoPromocional")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	if (vNrTransacao = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número transação não informado!", "ADICIONAL=Operação->SICSVCO001.descontoPromocional")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	if (vDtTransacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data da transação não informado!", "ADICIONAL=Operação->SICSVCO001.descontoPromocional")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	clear/e "TRA_TRANSACAOSVC"
	CD_EMPRESA.TRA_TRANSACAOSVC/init = vCdEmpresa
	NR_TRANSACAO.TRA_TRANSACAOSVC/init = vNrTransacao
	DT_TRANSACAO.TRA_TRANSACAOSVC/init = vDtTransacao
	retrieve/e "TRA_TRANSACAOSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->SICSVCO001.descontoPromocional")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1) 
	endif

	DT_PREVENTREGA.TRA_TRANSACAOSVC = DT_TRANSACAO.TRA_TRANSACAOSVC + 100
	IN_ACEITADEV.TRA_TRANSACAOSVC = <TRUE>

	$collhandle("TRA_TRANSACAOSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif

	exit(0)
end

;----------------------------------
public operation validaParcelamento
;----------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		numeric vCdEmpresa, vNrTransacao, vCdEmpresaAux, vPrParcela, vVlParcela, vVlResto
		date vDtTransacao, vDtBase
		boolean vInValidacao
		string viParams, voParams
	endvariables

	;Verifica se a transação possui uma associada, em caso positivo, copia o parcelamento

	vCdEmpresa = $item("CD_EMPRESA", piParams)
	vNrTransacao = $item("NR_TRANSACAO", piParams)
	vDtTransacao = $item("DT_TRANSACAO", piParams)
	;thamati 31/03/2010 [Proj. 0156 - Tar. 0239]
	vInValidacao = $item("IN_VALIDACAO", piParams)
	vDtBase = $item("DT_BASE", piParams)
	;
	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->SICSVCO001.validaParcelamento")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	if (vNrTransacao = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número transação não informado!", "ADICIONAL=Operação->SICSVCO001.validaParcelamento")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	if (vDtTransacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data da transação não informado!", "ADICIONAL=Operação->SICSVCO001.validaParcelamento")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	clear/e "TRA_S_TRANSACSVC"
	CD_EMPRESA.TRA_S_TRANSACSVC/init = vCdEmpresa
	NR_TRANSACAO.TRA_S_TRANSACSVC/init = vNrTransacao
	DT_TRANSACAO.TRA_S_TRANSACSVC/init = vDtTransacao
	retrieve/e "TRA_S_TRANSACSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->SICSVCO001.validaParcelamento")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1) 
	endif

	vCdEmpresaAux = 0

	clear/e "GER_EMPRESASVC"
	CD_EMPRESA.GER_EMPRESASVC = vCdEmpresa
	retrieve/e "GER_EMPRESASVC"
	if ($status >= 0)
		if (CD_CCUSTO.GER_EMPRESASVC > 0)
			vCdEmpresaAux = CD_CCUSTO.GER_EMPRESASVC
		else
			clear/e "GER_EMPRESASVC"
			CD_CCUSTO.GER_EMPRESASVC = vCdEmpresa
			retrieve/e "GER_EMPRESASVC"
			if ($status >= 0)
				vCdEmpresaAux = CD_EMPRESA.GER_EMPRESASVC
			endif
		endif	
	endif

	if (vCdEmpresaAux > 0)
		clear/e "TRA_TRANSACAOSVC"
		CD_EMPRESA.TRA_TRANSACAOSVC/init = vCdEmpresaAux
		NR_TRANSACAO.TRA_TRANSACAOSVC/init = vNrTransacao
		DT_TRANSACAO.TRA_TRANSACAOSVC/init = vDtTransacao
		retrieve/e "TRA_TRANSACAOSVC"
		if ($status >= 0)			
			if (vInValidacao);thamati 31/03/2010 [Proj. 0156 - Tar. 0239]			
				$collhandle("TRA_VENCIMENTSVC")->Excluir()
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
					poCdErro = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
			
				if ($empty("F_TRA_VENCIMESVC") = 0)
					vVlResto = VL_TOTAL.TRA_TRANSACAOSVC
				
					setocc "F_TRA_VENCIMESVC", 1
					while ($status >= 0)
						vPrParcela = VL_PARCELA.F_TRA_VENCIMESVC / VL_TOTAL.TRA_S_TRANSACSVC
						vVlParcela = VL_TOTAL.TRA_TRANSACAOSVC * vPrParcela
						
						creocc "TRA_VENCIMENTSVC", -1
						NR_PARCELA.TRA_VENCIMENTSVC = NR_PARCELA.F_TRA_VENCIMESVC
						DT_VENCIMENTO.TRA_VENCIMENTSVC = DT_VENCIMENTO.F_TRA_VENCIMESVC
						NR_DCTOORIGEM.TRA_VENCIMENTSVC = NR_DCTOORIGEM.F_TRA_VENCIMESVC
						VL_PARCELA.TRA_VENCIMENTSVC = vVlParcela
						TP_FORMAPGTO.TRA_VENCIMENTSVC = TP_FORMAPGTO.F_TRA_VENCIMESVC
						CD_EMPFAT.TRA_VENCIMENTSVC = CD_EMPFAT.TRA_TRANSACAOSVC
						CD_GRUPOEMPRESA.TRA_VENCIMENTSVC = CD_GRUPOEMPRESA.TRA_TRANSACAOSVC
						CD_OPERADOR.TRA_VENCIMENTSVC = $item("CD_USUARIO", $xlpg$)
						DT_CADASTRO.TRA_VENCIMENTSVC = $datim
						vVlResto = vVlResto - vVlParcela
					
						setocc "F_TRA_VENCIMESVC", $curocc("F_TRA_VENCIMESVC") + 1
					endwhile
					
					if (vVlResto != 0)
						if (vVlResto > 0)
							setocc "TRA_VENCIMENTSVC", 1
						else
							setocc "TRA_VENCIMENTSVC", -1
						endif
					
						VL_PARCELA.TRA_VENCIMENTSVC = VL_PARCELA.TRA_VENCIMENTSVC + vVlResto
					endif
				endif
			else
				;thamati 31/03/2010 [Proj. 0156 - Tar. 0239]
				if (vDtBase != "")
					viParams = ""
					putitem/id viParams, "CD_EMPRESA", CD_EMPRESA.TRA_TRANSACAOSVC
					putitem/id viParams, "NR_TRANSACAO", NR_TRANSACAO.TRA_TRANSACAOSVC
					putitem/id viParams, "DT_TRANSACAO", DT_TRANSACAO.TRA_TRANSACAOSVC
					putitem/id  viParams, "DT_BASE", vDtBase 
					putitem/id  viParams, "IN_VALIDAPARCELAMENTO", <FALSE>
					putitem/id  viParams, "IN_SOBREPOR", <TRUE>
					newinstance "TRASVCO024", "TRASVCO024A", "TRANSACTION=FALSE"
					activate "TRASVCO024A".gravaParcelaTransacao($xlpg$, viParams, voParams, $xcdErro$, $xctxErro$)
					if ($procerror)
						$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					elseif ($status < 0)
						$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
						poCdErro = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					endif
					deleteinstance "TRASVCO024A"
				endif
				;
			endif
			
			$collhandle("TRA_VENCIMENTSVC")->Salvar()
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		endif
	endif

	exit(0)
end

;---------------------------------
public operation validaAgrupamento
;---------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		numeric vCdEmpresa, vNrTransacao, vCdEmpresaAux, vCdPessoa, vCdOperacao, vCdCondPgto, vNrTransacaoAgrup
		string vDsRegistro, vDsLstTransacao, vLstTransacao
		string viParams, voParams
		date vDtTransacao
		boolean vInPadrao, vInTraPadrao
	endvariables

	;Verifica se na lista de transação possui associadas. Caso possuia, forma uma lista com as associadas
	;e as agrupa
	
	vDsLstTransacao = $item("DS_LSTTRANSACAO", piParams)
	vNrTransacaoAgrup = $item("NR_TRANSACAO", piParams)
	vInTraPadrao = <FALSE>
	vCdOperacao = $item("CD_OPERACAO",piParams)
	
	repeat
		getitem vDsRegistro, vDsLstTransacao, 1
		vCdEmpresa = $item("CD_EMPRESA", vDsRegistro)
		vNrTransacao = $item("NR_TRANSACAO", vDsRegistro)
		vDtTransacao = $item("DT_TRANSACAO", vDsRegistro)
		vInPadrao = $item("IN_PADRAO", vDsRegistro)
		
		if (vCdEmpresa = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->SICSVCO001.validaAgrupamento")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		
		if (vNrTransacao = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número da transação não informado!", "ADICIONAL=Operação->SICSVCO001.validaAgrupamento")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1) 
		endif
		
		if (vDtTransacao = "")
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data transação não informada!", "ADICIONAL=Operação->SICSVCO001.validaAgrupamento")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		
		vCdEmpresaAux = 0
		
		clear/e "GER_EMPRESASVC"
		CD_EMPRESA.GER_EMPRESASVC = vCdEmpresa
		retrieve/e "GER_EMPRESASVC"
		if ($status >= 0)
			if (CD_CCUSTO.GER_EMPRESASVC > 0)
				vCdEmpresaAux = CD_CCUSTO.GER_EMPRESASVC
			else
				clear/e "GER_EMPRESASVC"
				CD_CCUSTO.GER_EMPRESASVC = vCdEmpresa
				retrieve/e "GER_EMPRESASVC"
				if ($status >= 0)
					vCdEmpresaAux = CD_EMPRESA.GER_EMPRESASVC
				endif
			endif	
		endif
		
		clear/e "TRA_S_TRANSACSVC"
		CD_EMPRESA.TRA_S_TRANSACSVC = vCdEmpresaAux
		NR_TRANSACAO.TRA_S_TRANSACSVC = vNrTransacao
		DT_TRANSACAO.TRA_S_TRANSACSVC = vDtTransacao
		retrieve/e "TRA_S_TRANSACSVC"
		if ($status >= 0) & (vInPadrao = <TRUE>)
			vInTraPadrao = <TRUE>
		endif
		
		delitem vDsLstTransacao, 1
	until (vDsLstTransacao = "")
	
	vDsLstTransacao = $item("DS_LSTTRANSACAO", piParams)
	vLstTransacao = ""
	
	repeat
		getitem vDsRegistro, vDsLstTransacao, 1
		vCdEmpresa = $item("CD_EMPRESA", vDsRegistro)
		vNrTransacao = $item("NR_TRANSACAO", vDsRegistro)
		vDtTransacao = $item("DT_TRANSACAO", vDsRegistro)
		vInPadrao = $item("IN_PADRAO", vDsRegistro)
		
		vCdEmpresaAux = 0
		
		clear/e "GER_EMPRESASVC"
		CD_EMPRESA.GER_EMPRESASVC = vCdEmpresa
		retrieve/e "GER_EMPRESASVC"
		if ($status >= 0)
			if (CD_CCUSTO.GER_EMPRESASVC > 0)
				vCdEmpresaAux = CD_CCUSTO.GER_EMPRESASVC
			else
				clear/e "GER_EMPRESASVC"
				CD_CCUSTO.GER_EMPRESASVC = vCdEmpresa
				retrieve/e "GER_EMPRESASVC"
				if ($status >= 0)
					vCdEmpresaAux = CD_EMPRESA.GER_EMPRESASVC
				endif
			endif	
		endif
		
		clear/e "TRA_S_TRANSACSVC"
		CD_EMPRESA.TRA_S_TRANSACSVC = vCdEmpresaAux
		NR_TRANSACAO.TRA_S_TRANSACSVC = vNrTransacao
		DT_TRANSACAO.TRA_S_TRANSACSVC = vDtTransacao
		retrieve/e "TRA_S_TRANSACSVC"
		if ($status >= 0)
			vDsRegistro = ""
			putitem/id vDsRegistro, "CD_EMPRESA", CD_EMPRESA.TRA_S_TRANSACSVC
			putitem/id vDsRegistro, "NR_TRANSACAO", NR_TRANSACAO.TRA_S_TRANSACSVC
			putitem/id vDsRegistro, "DT_TRANSACAO", DT_TRANSACAO.TRA_S_TRANSACSVC
			if (vInPadrao = <TRUE>) | (vInTraPadrao = <FALSE>)
				putitem/id vDsRegistro, "IN_PADRAO", <TRUE>
				vCdPessoa = CD_PESSOA.TRA_S_TRANSACSVC
				if(vCdOperacao = "")
					vCdOperacao = CD_OPERACAO.TRA_S_TRANSACSVC
				endif
				vCdCondPgto = CD_CONDPGTO.TRA_S_TRANSACSVC
				vInTraPadrao = <TRUE>
			endif
			putitem vLstTransacao, -1, vDsRegistro
		endif
		
		delitem vDsLstTransacao, 1
	until (vDsLstTransacao = "")
	
	if (vLstTransacao != "")
		viParams = ""
		putitem/id viParams, "CD_EMPTRANSACAO", vCdEmpresaAux
		putitem/id viParams, "NR_TRANSACAO", vNrTransacaoAgrup
		putitem/id viParams, "CD_PESSOA", vCdPessoa
		putitem/id viParams, "CD_OPERACAO", vCdOperacao
 		putitem/id viParams, "CD_CONDPGTO", vCdCondPgto
		putitem/id viParams, "IN_PEDIDO", <TRUE>
		putitem/id viParams, "IN_AGRUPA", <FALSE>
		putitem/id viParams, "CD_OPERACAO", vCdOperacao
		putitem/id viParams, "TP_SITUACAO", $item("TP_SITUACAO", piParams)
		newinstance "TRASVCO010", "TRASVCO010A", "TRANSACTION=FALSE"
		activate "TRASVCO010A".agrupaTransacao($xlpg$, viParams, vLstTransacao, voParams, $xcdErro$, $xctxErro$)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
	endif
	
	exit(0)
end

;-------------------------------------
public operation validaItemAgrupamento
;-------------------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams

	variables
		string viParams, voParams
		numeric vCdEmpresa, vNrTransacao, vCdEmpresaAux
		date vDtTransacao
	endvariables

	vCdEmpresa = $item("CD_EMPRESA", piParams)
	vNrTransacao = $item("NR_TRANSACAO", piParams)
	vDtTransacao = $item("DT_TRANSACAO", piParams)
	
	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->SICSVCO001.validaItemAgrupamento")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	if (vNrTransacao = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número transação não informado!", "ADICIONAL=Operação->SICSVCO001.validaItemAgrupamento")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	if (vDtTransacao = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data da transação não informado!", "ADICIONAL=Operação->SICSVCO001.validaItemAgrupamento")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	
	clear/e "TRA_S_TRANSACSVC"
	CD_EMPRESA.TRA_S_TRANSACSVC/init = vCdEmpresa
	NR_TRANSACAO.TRA_S_TRANSACSVC/init = vNrTransacao
	DT_TRANSACAO.TRA_S_TRANSACSVC/init = vDtTransacao
	retrieve/e "TRA_S_TRANSACSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Transação %%vNrTransacao não cadastrada!", "ADICIONAL=Operação->SICSVCO001.validaItemAgrupamento")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1) 
	endif

	vCdEmpresaAux = 0

	clear/e "GER_EMPRESASVC"
	CD_EMPRESA.GER_EMPRESASVC = vCdEmpresa
	retrieve/e "GER_EMPRESASVC"
	if ($status >= 0)
		if (CD_CCUSTO.GER_EMPRESASVC > 0)
			vCdEmpresaAux = CD_CCUSTO.GER_EMPRESASVC
		else
			clear/e "GER_EMPRESASVC"
			CD_CCUSTO.GER_EMPRESASVC = vCdEmpresa
			retrieve/e "GER_EMPRESASVC"
			if ($status >= 0)
				vCdEmpresaAux = CD_EMPRESA.GER_EMPRESASVC
			endif
		endif	
	endif

	if (vCdEmpresaAux > 0)
		clear/e "TRA_TRANSACAOSVC"
		CD_EMPRESA.TRA_TRANSACAOSVC/init = vCdEmpresaAux
		NR_TRANSACAO.TRA_TRANSACAOSVC/init = vNrTransacao
		DT_TRANSACAO.TRA_TRANSACAOSVC/init = vDtTransacao
		retrieve/e "TRA_TRANSACAOSVC"
		if ($status >= 0)
			viParams = ""
			putitem/id viParams, "CD_EMPRESA", vCdEmpresaAux
			putitem/id viParams, "NR_TRANSACAO", vNrTransacao
			putitem/id viParams, "DT_TRANSACAO", vDtTransacao
			putitem/id viParams, "IN_AGRUPA", <FALSE>
			newinstance "TRASVCO010", "TRASVCO010A", "TRANSACTION=FALSE"
			activate "TRASVCO010A".agrupaItemTransacao($xlpg$, viParams, voParams, $xcdErro$, $xctxErro$)
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				exit(-1)
			endif
		endif
	endif

	exit(0)
end

