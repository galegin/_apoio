entry getParam
	params
		string piDsOperacao : IN
	endparams
	
	variables
		string viParams, voParams
	endvariables
	
	viParams = ""
	putitem viParams, -1, "IN_USA_LOG_NAVEGACAO"
	activate "ADMSVCO001".GetLstParametro(viParams, voParams, $xcderro$, $xctxerro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		return(-1)
	elseif ($xCdErro$)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=%%$item("DESCRICAO", $xCtxErro$)", "ADICIONAL=Operação->ADMSVCO022.%%piDsOperacao")
		return(-1)
	endif
	$tpLog$ = $item("IN_USA_LOG_NAVEGACAO", voParams)
	
	return(0)
end

;------------------------
public operation gravaLog
;------------------------
	params
		string  $xlpg$      :IN    
		string  piParams    :IN
		string  poParams    :OUT
		string  poCdErro    :OUT
		string  poCtxErro   :OUT
	endparams
	
	variables
		string vCdComponente, viParams, voParams
		numeric vCdUsuario, vNrSequencia, vCdNivel, vTpLog, vNrSessao
		boolean vInGravar
	endvariables
	
	vCdUsuario = $item("CD_USUARIO", piParams)
	vCdComponente = $item("CD_COMPONENTE", piParams)
	vCdNivel = $item("CD_NIVEL", piParams)
	vTpLog = $item("TP_LOG", piParams)
	vNrSessao = $item("NR_SESSAO", $$gParamUsr)
	
	call getParam("gravaLog")
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if ($status < 0)
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	vInGravar = <TRUE>
	
	if (vTpLog = 5) & ($tpLog$ = 1)
		vInGravar = <FALSE>
	elseif (vTpLog = 5) & ($tpLog$ = 2)
		clear/e "ADM_LNUSUSVC"
		CD_USUARIO.ADM_LNUSUSVC = vCdUsuario
		retrieve/e "ADM_LNUSUSVC"
		if ($status >= 0)
			if (IN_TODOS.ADM_LNUSUSVC != <TRUE>)
				clear/e "ADM_LNCMPSVC"
				CD_COMPONENTE.ADM_LNCMPSVC = vCdComponente
				retrieve/e "ADM_LNCMPSVC"
				if ($status < 0)
					vInGravar = <FALSE>
				endif
			endif
		else
			vInGravar = <FALSE>
		endif
	elseif (vTpLog = 5) & ($tpLog$ = 3)
		clear/e "ADM_LNUSUSVC"
		CD_USUARIO.ADM_LNUSUSVC = vCdUsuario
		retrieve/e "ADM_LNUSUSVC"
		if ($status < 0)
			clear/e "ADM_LNCMPSVC"
			CD_COMPONENTE.ADM_LNCMPSVC = vCdComponente
			retrieve/e "ADM_LNCMPSVC"
			if ($status >= 0)
				if (IN_TODOS.ADM_LNCMPSVC != <TRUE>)
					vInGravar = <FALSE>
				endif
			else
				vInGravar = <FALSE>
			endif
		endif
	elseif (vTpLog = 5) & ($tpLog$ = 4)
		clear/e "ADM_LNCMPSVC"
		CD_COMPONENTE.ADM_LNCMPSVC = vCdComponente
		retrieve/e "ADM_LNCMPSVC"
		if ($status < 0)
			vInGravar = <FALSE>
		endif
	endif
	
	if (vInGravar = <TRUE>)
		vNrSequencia = 1
		
;		clear/e "ADM_LNLOGSVC"
;		DT_EVENTO.ADM_LNLOGSVC = $datim
;		retrieve/e "ADM_LNLOGSVC"
;		if ($status >= 0)
			
			; --- DIONE |094/1571| 13/10/10
			viParams = ""
			voParams = ""
			putitem/id viParams, "NM_ENTIDADE", "ADM_LNLOG"
			putitem/id viParams, "NM_ATRIBUTO", "NR_SEQUENCIA"
			activate "GERSVCO031".getNumSeq($xlpg$, viParams, voParams, $xCdErro$, $xCtxerro$)
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
				poCdErro = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif  
 
			vNrSequencia = $item("NR_SEQUENCIA", voParams)
			; ---

;			sort/e "ADM_LNLOGSVC", "NR_SEQUENCIA"
;			setocc "ADM_LNLOGSVC", -1
;			vNrSequencia = NR_SEQUENCIA.ADM_LNLOGSVC + 1
;		endif
		
		clear/e "ADM_LNLOGSVC"
		creocc "ADM_LNLOGSVC", -1
		DT_EVENTO.ADM_LNLOGSVC = $datim
		NR_SEQUENCIA.ADM_LNLOGSVC = vNrSequencia
		CD_OPERADOR.ADM_LNLOGSVC = $item("CD_USUARIO", $xlpg$)
		DT_CADASTRO.ADM_LNLOGSVC = $datim
		CD_USUARIO.ADM_LNLOGSVC = vCdUsuario
		CD_COMPONENTE.ADM_LNLOGSVC = vCdComponente
		CD_NIVEL.ADM_LNLOGSVC = vCdNivel
		TP_LOG.ADM_LNLOGSVC = vTpLog
		VL_PARAMETRO.ADM_LNLOGSVC = $tpLog$
		NR_SESSAO.ADM_LNLOGSVC = vNrSessao
		
		$collhandle("ADM_LNLOGSVC")->Salvar()
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
			poCdErro = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif 
	
	return(0)
end