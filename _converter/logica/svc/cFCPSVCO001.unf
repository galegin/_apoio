;------------------------------------
entry ConverterString
;------------------------------------
	params
		string piString :In
		string poString :Out
	endparams

	variables
		string viParams, voParams
	endvariables
	
	putitem/id viParams, "DS_STRING",      piString
	putitem/id viParams, "IN_MAIUSCULA",   <True>
	putitem/id viParams, "IN_NUMERO",      <True>
	putitem/id viParams, "IN_ESPACO",      <True>
	putitem/id viParams, "IN_ESPECIAL",    <False>
	putitem/id viParams, "IN_MANTERPONTO", <True>
	activate "EDISVCO020".limparCampo($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
	poString = $item("DS_STRING", voParams)

	return (0)
end ;local proc ConverterString

;------------------------------------
entry GravaLogGravacao
;------------------------------------
	params
		 string pDsAux : IN
	endparams

	variables
		string   viParams, voParams, vDsAux
		datetime vData
	endvariables

	if ($$gCdUsuario != 999998) & ($$gCdUsuario != 999999)
		return(0)
	endif

	vDsAux = pDsAux

	if (pDsAux = "INICIO")
		clrmess
		$DtData$   = $datim
		putmess "Inicio as %%$DtData$"
		$NrSeqLog$ = 0
	endif

	if (pDsAux != "")
		vData  = $datim - $DtData$
		vDsAux = "%%vDsAux%%%... %%$DtData$ / Tempo %%vData"
	endif

	if (pDsAux = "FIM")
		putmess "Termino as %%$DtData$ / Tempo %%vData"
	endif

	if (pDsAux = "RETRIEVE FCP_DUPLICATAC") | (pDsAux = "FIM")
		vDsAux = "%%vDsAux%%%... EMP.%%$CdEmpresa$%%%/ FOR.%%$CdFornecedor$%%%/ DUP.%%$NrDuplicata$%%%/ PAR.%%$NrParcela$"
	endif

	$NrSeqLog$ = $NrSeqLog$ + 1
	viParams = ""
	putitem/id viParams, "CD_COMPONENTE", $componentname
	putitem/id viParams, "DS_CAMPO"     , "LOG_GRAVACAO%%$NrSeqLog$"
	putitem/id viParams, "CD_EMPRESA"   , $$gCdEmpresa
	putitem/id viParams, "CD_USUARIO"   , $$gCdUsuario
	putitem/id viParams, "DS_AUX"       , vDsAux
	newinstance "ADMSVCO010", "ADMSVCO010X", "TRANSACTION=TRUE"
	activate "ADMSVCO010X".gravaLogRestricaoCommit(viParams, voParams, $xCdErro$, $xCtxErro$)
	deleteinstance "ADMSVCO010X"

	if (pDsAux = "FIM") ; Linha em branco para diferenciar no select no SQLPLUS
		$NrSeqLog$ = $NrSeqLog$ + 1
		viParams   = ""
		putitem/id viParams, "CD_COMPONENTE", $componentname
		putitem/id viParams, "DS_CAMPO"     , "LOG_GRAVACAO%%$NrSeqLog$"
		putitem/id viParams, "CD_EMPRESA"   , $$gCdEmpresa
		putitem/id viParams, "CD_USUARIO"   , $$gCdUsuario
		putitem/id viParams, "DS_AUX"       , ""
		newinstance "ADMSVCO010", "ADMSVCO010X", "TRANSACTION=TRUE"
		activate "ADMSVCO010X".gravaLogRestricaoCommit(viParams, voParams, $xCdErro$, $xCtxErro$)
		deleteinstance "ADMSVCO010X"
	endif

	return (0)
end ;local proc GravaLogGravacao

;------------------------------------
entry MsgRegBloq
;------------------------------------

;	putmess "Registro bloqueado por outro processo! Entidade: %%piNmEntidade / Componente: %%$componentname"
	clear/e "FCP_DUPLICATCSVC"
	rollback

	exit(-11)
end ;local proc MsgRegBloq

;------------------------------------
entry LimpaRegBloq
;------------------------------------

;	putmess "Registro bloqueado por outro processo! Entidade: %%piNmEntidade / Componente: %%$componentname"
	clear/e "FCP_DUPLICATCSVC"
	rollback

	return(0)
end ;local proc LimpaRegBloq

;------------------------------------
entry validaCentroCusto
; MFGALEGO - 02/03/2009
;------------------------------------
	params
		numeric vCdCCusto : IN
		 string poCdErro  : OUT
		 string poCtxErro : OUT
	endparams

	variables
		string vDsComando, vDsAux
	endvariables

	if (vCdCCusto = 0) | (vCdCCusto = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Código do centro de custo da despesa não informado!", "ADICIONAL=Local proc validaCentroCusto() / Chamado por Operação->FCPSVCO001.geraDuplicata")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	vDsComando = "SELECT DS_CCUSTO FROM GEC_CCUSTO WHERE CD_CCUSTO=%%vCdCCusto"
	sql vDsComando, "DEF"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Erro ao busca centro de custo!", "ADICIONAL=Local proc validaCentroCusto() / Chamado por Operação->FCPSVCO001.geraDuplicata")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	vDsAux = $result
	if (vDsAux = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Centro de custo %%vCdCCusto não cadastrado!", "ADICIONAL=Local proc validaCentroCusto() / Chamado por Operação->FCPSVCO001.geraDuplicata")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	vDsComando = "SELECT IN_INATIVO FROM GEC_CCUSTO WHERE CD_CCUSTO=%%vCdCCusto"
	sql vDsComando, "DEF"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Erro ao busca centro de custo!", "ADICIONAL=Local proc validaCentroCusto() / Chamado por Operação->FCPSVCO001.geraDuplicata")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	vDsAux = $result
	if (vDsAux = "T")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Centro de custo %%vCdCCusto está INATIVO!", "ADICIONAL=Local proc validaCentroCusto() / Chamado por Operação->FCPSVCO001.geraDuplicata")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	return(0)
end ;local proc validaCentroCusto

;------------------------------------
entry validaDespesa
; MFGALEGO - 04/03/2009
;------------------------------------
	params
		numeric vCdDespesa : IN
		 string poCdErro   : OUT
		 string poCtxErro  : OUT
	endparams

	variables
		string vDsComando, vDsAux
	endvariables

	if (vCdDespesa = 0) | (vCdDespesa = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Código do item da despesa não informado!", "ADICIONAL=Local proc validaDespesa() / Chamado por Operação->FCPSVCO001.geraDuplicata")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	vDsComando = "SELECT DS_DESPESAITEM FROM FCP_DESPESAITEM WHERE CD_DESPESAITEM=%%vCdDespesa"
	sql vDsComando, "DEF"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Erro ao busca centro de item de despesa!", "ADICIONAL=Local proc validaDespesa() / Chamado por Operação->FCPSVCO001.geraDuplicata")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	vDsAux = $result
	if (vDsAux = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Item de despesa %%vCdDespesa não cadastrado!", "ADICIONAL=Local proc validaDespesa() / Chamado por Operação->FCPSVCO001.geraDuplicata")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	return(0)
end ;local proc validaDespesa

;------------------------------------
entry validaDespCcusto
;------------------------------------
	params
		numeric vCdEmpresa : IN
		numeric vCdDespesa : IN
		numeric vCdCusto   : IN
		string  poCdErro   : IN
		string  poCtxErro  : IN
	endparams

	clear/e "FCP_DESPCCUSTEMPSVC"
	CD_EMPRESA.FCP_DESPCCUSTEMPSVC/init = vCdEmpresa
	CD_DESPESA.FCP_DESPCCUSTEMPSVC/init = vCdDespesa
	CD_CCUSTO.FCP_DESPCCUSTEMPSVC/init  = vCdCusto
	retrieve/e "FCP_DESPCCUSTEMPSVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Item de despesa %%vCdDespesa não possui vínculo com o centro de custo %%vCdcusto!", "ADICIONAL=Chamado por Operação->FCPSVCO001.geraDuplicata")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	return(0)
end ;local proc validaDespCcusto

;----------------------
operation geraDuplicata
;----------------------
	params
		string  piGlobal  :IN
		string  piParams  :IN
		string  poParams  :OUT
		numeric poCdErro  :OUT
		string  poCtxErro :OUT
	endparams
	variables
		date    vVenctoAnt, vDtEmissao, vDtLiq
		numeric vVlrTotalRateio, vPortadorAnt, vNrParcela, vValorAnt, vVlDiferenca, vVlSaldo, vVlTotal, vVlImpostoRetido
		string  vDsRegDesp, vDsRegImp, vDsRegDespApr, vDsRegisttro
		string  vDsDespesa, vDsImposto, vDsDuplicataI, vDsDespesaApr
		string  viParams, voParams, vDsComponente, vDsRegistro
		numeric vVlTotalPerc, vVlTotalDesc, vVlTotalDuplicata, vVlImposto, vTpPrevisaoAnt, vCdFornecedor
		numeric vCdEmpDup, vCdFornecDup, vNrDup, vNrParcelaDup, vPercentualDespesa
		numeric vVlTotalImposto, vPrTotalImposto, vPrImposto, vVlValor, vVlBaseCalcImp, vVlImpRetencao, vTpEstagio
		numeric vInValidaDespesaCcusto
		boolean vInConferida, vInPermLancDtSup, vInDtEntradaEmissao
	endvariables

	;------------------------------------------------------
	call GravaLogGravacao("INICIO")
	;------------------------------------------------------

	;Projeto 078 - Tarefa 653 - Aloisio Gargantini - 13/07/2007	
	viParams = ""
	putitem viParams, -1, "CD_TIPOCLAS_FOR_DUP"
	putitem viParams, -1, "CD_CCUSTOPADRAO_FCP"
	;MTF(02/03/2009) - Projeto 147, tarefa 0002.
	putitem viParams, -1, "CD_TIPOCLAS_CMP_DUP"
	putitem viParams, -1, "CD_TIPOCLAS_PRD_DUP"
	;
	putitem viParams, -1, "DT_FECHA_CONTABILIDADE_CP" ;Projeto 180 - Tarefa 0084 - Aloisio Gargantini - 09/02/2011

	;Rinaldo - PRJ/TAR 180/309 - 13/12/2011
	putitem viParams, -1, "IN_VALIDA_DESPESA_CCUSTO" 
	;
	activate "ADMSVCO001".GetParamEmpresa($item("CD_EMPRESA", $$gParamGlb), viParams, voParams, $xCdErro$, $xCtxerro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif	
	$cdTipoClasForDup$     = $item("CD_TIPOCLAS_FOR_DUP",       voParams)
	$cdCCustoPadraoFcp$    = $item("CD_CCUSTOPADRAO_FCP",       voParams)
	;MTF(02/03/2009) - Projeto 147, tarefa 0002.
	$cdTipoClasCmpDup$     = $item("CD_TIPOCLAS_CMP_DUP",       voParams)
	$cdTipoClasPrdDup$     = $item("CD_TIPOCLAS_PRD_DUP",       voParams)
	;Rinaldo - PRJ/TAR 180/309 - 13/12/2011
	vInValidaDespesaCcusto = $item("IN_VALIDA_DESPESA_CCUSTO", voParams)	
	;	
	$dtFechaContabCP$      = $item("DT_FECHA_CONTABILIDADE_CP", voParams) ;Projeto 180 - Tarefa 0084 - Aloisio Gargantini - 09/02/2011
	;


	vDsDuplicataI          = $item("DS_DUPLICATAI",       piParams)
	vDsComponente          = $item("DS_COMPONENTE",       piParams)
	vInConferida           = $item("IN_CONFERIDAMANUAL",  piParams) ;Projeto 078 - Tarefa 159 - Aloisio Gargantini - 16/01/2007
	vInPermLancDtSup       = $item("IN_PERM_LANC_DT_SUP", piParams) ;RAH - 09/07/2007 (Prj078/Trf671)
	vInDtEntradaEmissao    = $item("IN_DTENTRADAEMISSAO", piParams) ;MTF(13/02/2008) - Projeto 078, tarefa 1198.
	vVlImpostoRetido       = $item("VL_IMPRETENCAO",      piParams)
	
	if (vDsComponente = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Não existe nome do componente chamador da rotina de gravação da duplicata!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	;Projeto 180 - Tarefa 0075 - Aloisio Gargantini - 01/02/2011
	vDtEmissao = $item("DT_EMISSAO", vDsDuplicataI)
	vDtLiq     = $item("DT_LIQ",     vDsDuplicataI)
	;
	;Projeto 180 - Tarefa 0084 - Aloisio Gargantini - 09/02/2011	
	if ($dtFechaContabCP$ > 0) 
		if ($dtFechaContabCP$ >= vDtEmissao);valida a data de fechamento do CP na contabilidade pela data de emissao
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Data emissão dentro do fechamento contábil do contas a pagar! Parâmetro DT_FECHA_CONTABILIDADE_CP", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)	
		endif
	endif
	;
	
	$CdEmpresa$    = $item("CD_EMPRESA"   , vDsDuplicataI)
	$CdFornecedor$ = $item("CD_FORNECEDOR", vDsDuplicataI)
	$NrDuplicata$  = $item("NR_DUPLICATA" , vDsDuplicataI)
	$NrParcela$    = $item("NR_PARCELA"   , vDsDuplicataI)	
	vTpEstagio     = $item("TP_ESTAGIO"   , vDsDuplicataI) ;* Claudemir - Prj/Tarefa: 180/167 - 19/04/2011

	;* Claudemir - Prj/Tarefa: 180/167 - 19/04/2011
	;  só vai fazer o testes abaixo "FGRSVCO022".validaFechamentoFinanceiro" caso o estagio seja diferente de 1 (Titulo nao conferido) e 5 (Titulo aceito)
	if (vTpEstagio != 1) & (vTpEstagio != 5) ;* 

		;Projeto 180 - Tarefa 0075 - Aloisio Gargantini - 01/02/2011 - testa a data de emissao anterior
		if ($CdEmpresa$ > 0) & ($CdFornecedor$ > 0) & ($NrDuplicata$ > 0) & ($NrParcela$ > 0) & (vDtEmissao != "") & (vDtLiq = "")
			clear/e "F_FCP_DUPLISVC"
			CD_EMPRESA.F_FCP_DUPLISVC/init    = $CdEmpresa$
			CD_FORNECEDOR.F_FCP_DUPLISVC/init = $CdFornecedor$
			NR_DUPLICATA.F_FCP_DUPLISVC/init  = $NrDuplicata$
			NR_PARCELA.F_FCP_DUPLISVC/init    = $NrParcela$
			retrieve/e "F_FCP_DUPLISVC"
			if ($status < 0)
				viParams = ""
				putitem/id viParams, "TP_MODELO",      2 ;FCP-Contas a pagar.
				putitem/id viParams, "DT_PROCESSO",    vDtEmissao
				putitem/id viParams, "CD_COMPONENTE",  $componentname
				putitem/id viParams, "DS_COMPLEMENTO", "Inclusao de Duplicata."
				activate "FGRSVCO022".validaFechamentoFinanceiro($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
				if ($procerror)
					$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				elseif ($status < 0)
					$instancehandle->setStatus(<STS_AVISO>, $xCdErro$, $xCtxErro$, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif

				;--Douglas Ferreira - [Prj/Tarefa 186/0212] - 05/09/2011
				viParams = ""
				putitem/id viParams, "CD_EMPRESA",  $cdEmpresa$
				putitem/id viParams, "DT_CHEGADA",  $item("DT_CHEGADA",  vDsDuplicataI)
				putitem/id viParams, "TP_INCLUSAO", $item("TP_INCLUSAO", vDsDuplicataI)
				activate "FCPSVCO001".validaLanctoContabilPeriodo(piGlobal, viParams, voParams, $xCdErro$, $xCtxErro$)
				if ($procerror)
					$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=FCPSVCO001.geraDuplicata() chamando validaLanctoContabilPeriodo()")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				elseif ($status < 0)
					$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL=FCPSVCO001.geraDuplicata() chamando validaLanctoContabilPeriodo()")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
				;
			else
				;Projeto 180 - Tarefa 0084 - Aloisio Gargantini - 08/02/2011
				if (DT_LIQ.F_FCP_DUPLISVC = "")
					putitem/id viParams, "TP_MODELO",      2 ;FCP-Contas a pagar.
					putitem/id viParams, "DT_PROCESSO",    DT_EMISSAO.F_FCP_DUPLISVC
					putitem/id viParams, "CD_COMPONENTE",  $componentname
					putitem/id viParams, "DS_COMPLEMENTO", "Alteracao de Duplicata."
					activate "FGRSVCO022".validaFechamentoFinanceiro($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
					if ($procerror)
						$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						poCdErro  = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					elseif ($status < 0)
						$instancehandle->setStatus(<STS_AVISO>, $xCdErro$, $xCtxErro$, "")
						poCdErro  = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					endif	
				else
					putitem/id viParams, "TP_MODELO",      2 ;FCP-Contas a pagar.
					putitem/id viParams, "DT_PROCESSO",    DT_LIQ.F_FCP_DUPLISVC
					putitem/id viParams, "CD_COMPONENTE",  $componentname
					putitem/id viParams, "DS_COMPLEMENTO", "Alteracao de Duplicata."
					activate "FGRSVCO022".validaFechamentoFinanceiro($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
					if ($procerror)
						$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						poCdErro  = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					elseif ($status < 0)
						$instancehandle->setStatus(<STS_AVISO>, $xCdErro$, $xCtxErro$, "")
						poCdErro  = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					endif	
				endif
				;
			endif
		endif

		;Projeto 180 - Tarefa 0075 - Aloisio Gargantini - 01/02/2011 - testa a nova data de emissao
		if ($CdEmpresa$ > 0) & ($CdFornecedor$ > 0) & ($NrDuplicata$ > 0) & ($NrParcela$ > 0) & (vDtEmissao != "") & (vDtLiq = "")
			clear/e "F_FCP_DUPLISVC"
			CD_EMPRESA.F_FCP_DUPLISVC/init    = $CdEmpresa$
			CD_FORNECEDOR.F_FCP_DUPLISVC/init = $CdFornecedor$
			NR_DUPLICATA.F_FCP_DUPLISVC/init  = $NrDuplicata$
			NR_PARCELA.F_FCP_DUPLISVC/init    = $NrParcela$
			retrieve/e "F_FCP_DUPLISVC"
			if ($status >=0) & (DT_LIQ.F_FCP_DUPLISVC = "")
				putitem/id viParams, "TP_MODELO",      2 ;FCP-Contas a pagar.
				putitem/id viParams, "DT_PROCESSO",    vDtEmissao
				putitem/id viParams, "CD_COMPONENTE",  $componentname
				putitem/id viParams, "DS_COMPLEMENTO", "Alteracao de Duplicata."
				activate "FGRSVCO022".validaFechamentoFinanceiro($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
				if ($procerror)
					$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				elseif ($status < 0)
					$instancehandle->setStatus(<STS_AVISO>, $xCdErro$, $xCtxErro$, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif	
			endif
		endif
		;
		if (vDtLiq != "")
			;Projeto 180 - Tarefa 0084 - Aloisio Gargantini - 09/02/2011 - testar nova data
			if ($dtFechaContabCP$ > 0) 
				if ($dtFechaContabCP$ >= vDtLiq)
					$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Data liquidação dentro fechamento contábil do contas a pagar! Parâmetro DT_FECHA_CONTABILIDADE_CP", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)	
				endif
			endif
			;
			;Projeto 180 - Tarefa 0084 - Aloisio Gargantini - 09/02/2011 - testar data anterior
			if ($dtFechaContabCP$ > 0) & (DT_LIQ.F_FCP_DUPLISVC != "")
				if ($dtFechaContabCP$ >= DT_LIQ.F_FCP_DUPLISVC)
					$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fechamento contábil do contas a pagar já realizado! Parâmetro DT_FECHA_CONTABILIDADE_CP", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)	
				endif
			endif
			;
			if (vDtLiq != "")
				viParams = ""
				putitem/id viParams, "TP_MODELO",      2 ;FCP-Contas a pagar.
				putitem/id viParams, "DT_PROCESSO",    vDtLiq
				putitem/id viParams, "CD_COMPONENTE",  $componentname
				putitem/id viParams, "DS_COMPLEMENTO", "Baixa de Duplicata."
				activate "FGRSVCO022".validaFechamentoFinanceiro($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
				if ($procerror)
					$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				elseif ($status < 0)
					$instancehandle->setStatus(<STS_AVISO>, $xCdErro$, $xCtxErro$, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif	
			endif
			if (DT_LIQ.F_FCP_DUPLISVC != "")
				viParams = ""
				putitem/id viParams, "TP_MODELO",      2 ;FCP-Contas a pagar.
				putitem/id viParams, "DT_PROCESSO",    DT_LIQ.F_FCP_DUPLISVC
				putitem/id viParams, "CD_COMPONENTE",  $componentname
				putitem/id viParams, "DS_COMPLEMENTO", "Baixa de Duplicata."
				activate "FGRSVCO022".validaFechamentoFinanceiro($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
				if ($procerror)
					$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				elseif ($status < 0)
					$instancehandle->setStatus(<STS_AVISO>, $xCdErro$, $xCtxErro$, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif	
			endif
		endif
	endif ;* Claudemir - Prj/Tarefa: 180/167 - 19/04/2011

	;
	if ($nrDuplicata$ > 0)
	else
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número da duplicata não informado!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%$CdEmpresa$ Fornec.:%%$CdFornecedor$ Nr.:%%$NrDuplicata$ %%^ Número da duplicata não informado!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	;------------------------------------------------------
	call GravaLogGravacao("RETRIEVE FCP_DUPLICATAC")
	;------------------------------------------------------

	clear/e "FCP_DUPLICATCSVC"
	if (vDsDuplicataI != "")
		creocc "FCP_DUPLICATCSVC", -1
		CD_EMPRESA.FCP_DUPLICATCSVC    = $item("CD_EMPRESA",    vDsDuplicataI)
		CD_FORNECEDOR.FCP_DUPLICATCSVC = $item("CD_FORNECEDOR", vDsDuplicataI)
		NR_DUPLICATA.FCP_DUPLICATCSVC  = $item("NR_DUPLICATA",  vDsDuplicataI)

		;Projeto 078 - Tarefa 2057 - Aloisio Gargantini - 28/11/2008
		vCdFornecedor = $item("CD_FORNECEDOR", vDsDuplicataI)
		if (vCdFornecedor > 0)
			clear/e "F_PES_FORNECESVC"
			CD_FORNECEDOR.F_PES_FORNECESVC/init = vCdFornecedor
			retrieve/e "F_PES_FORNECESVC" 
			if ($status < 0)
				;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
				;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Código não está cadastrado como fornecedor: %%vCdFornecedor!", "")
				$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATCSVC Fornec.:%%vCdFornecedor Nr.:%%NR_DUPLICATA.FCP_DUPLICATCSVC %%^ Código não está cadastrado como fornecedor: %%vCdFornecedor!", "")
				;
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		endif
		;

		;VALIDA NUMERO DA EMPRESA
		if (CD_EMPRESA.FCP_DUPLICATCSVC = 0)
			;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
			;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATCSVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATCSVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATCSVC %%^ Empresa não informada!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
			;
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif    

		;VALIDA FORNECEDOR DA DUPLICATA
		if (CD_FORNECEDOR.FCP_DUPLICATCSVC = 0)
			;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
			;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Fornecedor da duplicata não informado!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATCSVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATCSVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATCSVC %%^ Fornecedor da duplicata não informado!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
			;
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif    

		;VALIDA NUMERO DA DUPLICATA
		if (NR_DUPLICATA.FCP_DUPLICATCSVC = 0)
			;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
			;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Número da duplicata não informado!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATCSVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATCSVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATCSVC %%^ Número da duplicata não informado!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
			;
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif

		retrieve/o "FCP_DUPLICATCSVC"
		if ($status = -7)
			retrieve/x "FCP_DUPLICATCSVC"
		endif		

		CD_CONDPAGTO.FCP_DUPLICATCSVC = $item("CD_CONDPAGTO", piParams)

		; MFGALEGO / 07/10/2008
		if ($status = -10) | ($status = -11)
			;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
			;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Registro da duplicata bloqueado por outro usuário!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata / FCP_DUPLICATAC")
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATCSVC Fornec.:%%vCdFornecedor Nr.:%%NR_DUPLICATA.FCP_DUPLICATCSVC %%^ Registro da duplicata bloqueado por outro usuário!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata / FCP_DUPLICATAC")
			;
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			call LimpaRegBloq()
			return(-1)
		endif
		;
		
		vNrParcela = $item("NR_PARCELA", vDsDuplicataI)
		if (vNrParcela > 0)
			clear/e "FCP_DUPLICATISVC"
			NR_PARCELA.FCP_DUPLICATISVC = vNrParcela
			retrieve/e "FCP_DUPLICATISVC"

			; MFGALEGO / 07/10/2008
			if ($status = -10) | ($status = -11)
				;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
				;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Registro de item da duplicata bloqueado por outro usuário!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata / FCP_DUPLICATAI")
				$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Registro de item da duplicata bloqueado por outro usuário!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata / FCP_DUPLICATAI")
				;
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				call LimpaRegBloq()
				return(-1)
			endif
			;

			if ($status >= 0)

				vPortadorAnt   = NR_PORTADOR.FCP_DUPLICATISVC
				vVenctoAnt     = DT_VENCIMENTO.FCP_DUPLICATISVC
				vTpPrevisaoAnt = TP_PREVISAOREAL.FCP_DUPLICATISVC ;Projeto 078 - Tarefa 1119 - Aloisio Gargantini - 23/01/2008	
				vValorAnt      = VL_DUPLICATA.FCP_DUPLICATISVC

				;------------------------------------------------------
				; MFGALEGO - 23/04/2008 - 78/1449
				vDsRegDespApr = $item("DS_DUPDESPAPR", vDsDuplicataI)
				if (vDsRegDespApr = "") & ($empty("FCP_DUPDESPAPSVC")=0)
					;------------------------------------------------------
					call GravaLogGravacao("LEITURA FCP_DUPDESPAPR")
					;------------------------------------------------------

					setocc "FCP_DUPDESPAPSVC", 1
					while ($status >= 0)
						vDsRegistro = ""
						putlistitems/occ vDsRegistro, "FCP_DUPDESPAPSVC"
						putitem vDsRegDespApr, -1, vDsRegistro
						setocc "FCP_DUPDESPAPSVC", $curocc("FCP_DUPDESPAPSVC") + 1
					endwhile
					putitem/id vDsDuplicataI, "DS_DUPDESPAPR", vDsRegDespApr
				endif
				;------------------------------------------------------

				;------------------------------------------------------
				; MFGALEGO / 07/10/2008
				if ($empty("FCP_DUPDESPAPSVC")=0)
					;------------------------------------------------------
					call GravaLogGravacao("EXCLUSAO FCP_DUPDESPAPR")
					;------------------------------------------------------

					; MFGALEGO - 23/04/2008 - 78/1449
					$collhandle("FCP_DUPDESPAPSVC")->Excluir()
					if ($procerror)
						$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						poCdErro  = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					endif
					if ($status < 0)
						$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
						poCdErro  = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					endif
					;
				endif
				;------------------------------------------------------

				;------------------------------------------------------
				call GravaLogGravacao("EXCLUSAO FCP_DUPDESPESA")
				;------------------------------------------------------
				
				;------------------------------------------------------
				$collhandle("FCP_DUPDESPESSVC")->Excluir()
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
				if ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
				;------------------------------------------------------
				
				;------------------------------------------------------
				call GravaLogGravacao("EXCLUSAO FCP_DUPIMPOSTO")
				;------------------------------------------------------
				
				;------------------------------------------------------
				if ($empty("FCP_DUPIMPOSTSVC")=0) ; Tentativa eliminar o travamento
					$collhandle("FCP_DUPIMPOSTSVC")->Excluir()
					if ($procerror)
						$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
						poCdErro  = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					endif
					if ($status < 0)
						$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
						poCdErro  = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)
					endif
				endif
				;------------------------------------------------------

				;Marcos Rogerio - 07/06/2006 - Projeto 70/07
				;------------------------------------------------------
				delitem/id vDsDuplicataI, "CD_EMPRESA"  
				delitem/id vDsDuplicataI, "CD_FORNECEDOR"
				delitem/id vDsDuplicataI, "NR_DUPLICATA"
				delitem/id vDsDuplicataI, "NR_PARCELA"
				getlistitems/occ vDsDuplicataI, "FCP_DUPLICATISVC"
				;------------------------------------------------------
				;Projeto 078 - Tarefa 3983 - Aloisio Gargantini - 01/12/2010
				if ($item("DT_CHEGADA", vDsDuplicatai) = "")
					DT_CHEGADA.FCP_DUPLICATISVC = ""
				endif
				;
			else
				if ($status = -2)
					;------------------------------------------------------
					;Marcos Rogerio - Projeto 07 / Tarefa 07
					clear/e "FCP_DUPLICATISVC"
					creocc  "FCP_DUPLICATISVC", -1
					getlistitems/occ vDsDuplicataI, "FCP_DUPLICATISVC"
					;------------------------------------------------------
					;Projeto 078 - Tarefa 3983 - Aloisio Gargantini - 01/12/2010
					if ($item("DT_CHEGADA", vDsDuplicatai) = "")
						DT_CHEGADA.FCP_DUPLICATISVC = ""
					endif
					;
				else
					;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
					;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Erro ao recuperar a parcela.", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
					$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Erro ao recuperar a parcela.", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
					;
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return (-1)
				endif
			endif
		else
			;------------------------------------------------------
			;Marcos Rogerio - Projeto 07 / Tarefa 07
			clear/e "FCP_DUPLICATISVC"
			creocc  "FCP_DUPLICATISVC", -1
			getlistitems/occ vDsDuplicataI, "FCP_DUPLICATISVC"
			;------------------------------------------------------
			;Projeto 078 - Tarefa 3983 - Aloisio Gargantini - 01/12/2010
			if ($item("DT_CHEGADA", vDsDuplicataI) = "")
				DT_CHEGADA.FCP_DUPLICATISVC = ""
			endif
			;
		endif

		;------------------------------------------------------
		;clear/e "FCP_DUPIMPOSTSVC"
		vDsRegImp = $item("DS_DUPIMPOSTO", vDsDuplicataI)
		if (vDsRegImp != "")
			;------------------------------------------------------
			call GravaLogGravacao("GRAVACAO FCP_DUPIMPOSTO")
			;------------------------------------------------------

			repeat
				getitem vDsImposto, vDsRegImp, 1
				creocc "FCP_DUPIMPOSTSVC", -1
			;MARTINEZ - PRJ/TAR - 186/319 - 10/11/2011
			;	;MARTINEZ - PRJ/TAR 186/220 - 07/10/2011
			;	if ($item("CD_EMPRESA", vDsImposto) != "" )  | ($item("CD_FORNECEDOR", vDsImposto) != "") | %\
			;	   ($item("NR_DUPLICATA", vDsImposto) != "") | ($item("NR_PARCELA", vDsImposto) != "")
			;
			;		CD_EMPRESA.FCP_DUPIMPOSTSVC    = $item("CD_EMPRESA",    vDsImposto)
			;		CD_FORNECEDOR.FCP_DUPIMPOSTSVC = $item("CD_FORNECEDOR", vDsImposto)
			;		NR_DUPLICATA.FCP_DUPIMPOSTSVC  = $item("NR_DUPLICATA",  vDsImposto)
			;		NR_PARCELA.FCP_DUPIMPOSTSVC    = $item("NR_PARCELA",    vDsImposto)
			;		CD_IMPOSTO.FCP_DUPIMPOSTSVC    = $item("CD_IMPOSTO",    vDsImposto)
			;		retrieve/o "FCP_DUPIMPOSTSVC"
			;		if ($status = -7) | ($status = 4)
			;			retrieve/x "FCP_DUPIMPOSTSVC"
			;		endif
			;
			;		delitem/id vDsImposto, "CD_EMPRESA"
			;		delitem/id vDsImposto, "CD_FORNECEDOR"
			;		delitem/id vDsImposto, "NR_DUPLICATA"
			;		delitem/id vDsImposto, "NR_PARCELA"
			;		delitem/id vDsImposto, "CD_IMPOSTO"
			;	endif
			;	;
				getlistitems/occ vDsImposto, "FCP_DUPIMPOSTSVC"
				delitem vDsRegImp, 1
			until (vDsRegImp = "")    
			$status = 0
		endif
		;------------------------------------------------------
		;Projeto 078 - Tarefa 3225 - Aloisio Gargantini - 27/03/2010 - validação percentual/valor de imposto.
		if (!$empty(FCP_DUPIMPOSTSVC))

			;MARTINEZ - PRJ/TAR 186/220 - 07/10/2011
			;vVlBaseCalcImp = ((VL_DUPLICATA.FCP_DUPLICATISVC - VL_ABATIMENTO.FCP_DUPLICATISVC) * PR_BASECALCIMP.FCP_DUPLICATISVC) / 100
			;vVlBaseCalcImp = vVlBaseCalcImp[round, 2]

			if (VL_ABATIMENTO.FCP_DUPLICATISVC > 0)
				clear/e "FCP_DUPABATCSVC"
				CD_EMPRESA.FCP_DUPABATCSVC/init    = CD_EMPRESA.FCP_DUPLICATISVC
				CD_FORNECEDOR.FCP_DUPABATCSVC/init = CD_FORNECEDOR.FCP_DUPLICATISVC
				NR_DUPLICATA.FCP_DUPABATCSVC/init  = NR_DUPLICATA.FCP_DUPLICATISVC
				NR_PARCELA.FCP_DUPABATCSVC/init    = NR_PARCELA.FCP_DUPLICATISVC
				retrieve/e "FCP_DUPABATCSVC"
				if ($status >= 0)
					vVlBaseCalcImp = ((VL_DUPLICATA.FCP_DUPLICATISVC - VL_INCIDEIMPOSTO.FCP_DUPABATCSVC) * PR_BASECALCIMP.FCP_DUPLICATISVC) / 100
				else
					vVlBaseCalcImp = ((VL_DUPLICATA.FCP_DUPLICATISVC - VL_ABATIMENTO.FCP_DUPLICATISVC) * PR_BASECALCIMP.FCP_DUPLICATISVC) / 100
				endif
			else
				vVlBaseCalcImp = (VL_DUPLICATA.FCP_DUPLICATISVC * PR_BASECALCIMP.FCP_DUPLICATISVC) / 100
			endif
			vVlBaseCalcImp = vVlBaseCalcImp[round, 2]
			;

			setocc "FCP_DUPIMPOSTSVC", 1
			while ($status >= 0)
				;== BY BIANCHINI [PRJ/TAREFA 78/3784] 04/10/2010 ==
				if(PR_ALIQUOTA.FCP_DUPIMPOSTSVC < 0)
					;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
					;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Imposto %%CD_IMPOSTO.FCP_DUPIMPOSTSVC com percentual de aliquota inválido.", "")
					$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Imposto %%CD_IMPOSTO.FCP_DUPIMPOSTSVC com percentual de aliquota inválido.", "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					;
					return(-1)
				endif
				if(VL_IMPOSTO.FCP_DUPIMPOSTSVC < 0)
					;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
					;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Imposto %%CD_IMPOSTO.FCP_DUPIMPOSTSVC com percentual de aliquota inválido.", "")
					$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Imposto %%CD_IMPOSTO.FCP_DUPIMPOSTSVC com percentual de aliquota inválido.", "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					;
					return(-1)
				endif
				;==

				;MARTINEZ - PRJ/TAR 186/220 - 07/10/2011
				;if (NR_DUPLICATAIMP.FCP_DUPIMPOSTSVC = "") & (NR_PARCELAIMP.FCP_DUPIMPOSTSVC = "")
				if (TP_SITUACAO.FCP_DUPIMPOSTSVC = 0) ;Não retido
				;
					vl_imposto.fcp_dupimpostsvc = (vVlBaseCalcImp * pr_aliquota.fcp_dupimpostsvc[round, 6]) / 100
					vl_imposto.fcp_dupimpostsvc = vl_imposto.fcp_dupimpostsvc[round,2]
				endif

				vVlTotalImposto = vVlTotalImposto + vl_imposto.fcp_dupimpostsvc[round, 2]
				vPrTotalImposto = vPrTotalImposto + pr_aliquota.fcp_dupimpostsvc[round, 6]

				setocc "FCP_DUPIMPOSTSVC", $curocc(FCP_DUPIMPOSTSVC) + 1
			endwhile

			if (vPrTotalImposto[round, 2] > 100)
				;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
				;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Percentual de imposto superior a 100 % ( Informado: %%vPrTotalImposto )!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
				$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Percentual de imposto superior a 100 % ( Informado: %%vPrTotalImposto )!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
				;
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		endif
		;
		;------------------------------------------------------
		vDsRegDesp = $item("DS_DUPDESPESA", vDsDuplicataI)
		if (vDsRegDesp != "")
			;------------------------------------------------------
			call GravaLogGravacao("GRAVACAO FCP_DUPDESPESA")
			;------------------------------------------------------

			repeat
				getitem vDsDespesa, vDsRegDesp, 1
				creocc "FCP_DUPDESPESSVC", -1
			;MARTINEZ - PRJ/TAR - 186/319 - 10/11/2011
			;	;MARTINEZ - PRJ/TAR 186/220 - 07/10/2011
			;	if ($item("CD_EMPRESA", vDsDespesa) != "" )  | ($item("CD_FORNECEDOR", vDsDespesa) != "") | %\
			;	   ($item("NR_DUPLICATA", vDsDespesa) != "") | ($item("NR_PARCELA", vDsDespesa) != "")
			;
			;		CD_EMPRESA.FCP_DUPDESPESSVC     = $item("CD_EMPRESA",     vDsDespesa)
			;		CD_FORNECEDOR.FCP_DUPDESPESSVC  = $item("CD_FORNECEDOR",  vDsDespesa)
			;		NR_DUPLICATA.FCP_DUPDESPESSVC   = $item("NR_DUPLICATA",   vDsDespesa)
			;		NR_PARCELA.FCP_DUPDESPESSVC     = $item("NR_PARCELA",     vDsDespesa)
			;		CD_DESPESAITEM.FCP_DUPDESPESSVC = $item("CD_DESPESAITEM", vDsDespesa)
			;		CD_CCUSTO.FCP_DUPDESPESSVC      = $item("CD_CCUSTO",      vDsDespesa) ;--Ferreira - [Prj/Tar 186/0317] - 10/11/2011
			;		retrieve/o "FCP_DUPDESPESSVC"
			;		if ($status = -7) | ($status = 4)
			;			retrieve/x "FCP_DUPDESPESSVC"
			;		endif
			;
			;		delitem/id vDsDespesa, "CD_EMPRESA"
			;		delitem/id vDsDespesa, "CD_FORNECEDOR"
			;		delitem/id vDsDespesa, "NR_DUPLICATA"
			;		delitem/id vDsDespesa, "NR_PARCELA"
			;		delitem/id vDsDespesa, "CD_DESPESAITEM"
			;		delitem/id vDsDespesa, "CD_CCUSTO" ;--Ferreira - [Prj/Tar 180/0299] - 14/11/2011
			;	endif
			;	;
				getlistitems/occ vDsDespesa, "FCP_DUPDESPESSVC"
				; MFGALEGO - 05/12/2008 / DUDALINA - TRF 118/125
				if (CD_CCUSTO.FCP_DUPDESPESSVC = "") & ($cdCCustoPadraoFcp$ > 0)
					CD_CCUSTO.FCP_DUPDESPESSVC = $cdCCustoPadraoFcp$
				endif
				;
				delitem vDsRegDesp, 1
			until (vDsRegDesp = "")    
			$status = 0
		endif
		;------------------------------------------------------
		;Projeto 078 - Tarefa 2572 - Aloisio Gargantini - 14/08/2009
		vPercentualDespesa = 0
		if ($status >=0)
			setocc "FCP_DUPDESPESSVC", 1
			while ($status >= 0)
				;== BY BIANCHINI [PRJ/TAREFA 78/3784] 04/10/2010 ================================================================================================
				if(PR_RATEIO.FCP_DUPDESPESSVC < 0)
					;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
					;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Imposto %%CD_CCUSTO.FCP_DUPDESPESSVC com percentual de aliquota inválido.", "")
					$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Imposto %%CD_CCUSTO.FCP_DUPDESPESSVC com percentual de aliquota inválido.", "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					;
					return(-1)
				endif
				if(VL_RATEIO.FCP_DUPDESPESSVC < 0)
					;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
					;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Imposto %%CD_CCUSTO.FCP_DUPDESPESSVC com percentual de aliquota inválido.", "")
					$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Imposto %%CD_CCUSTO.FCP_DUPDESPESSVC com percentual de aliquota inválido.", "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					;
					return(-1)
				endif
				;================================================================================================================================================
				vPercentualDespesa = vPercentualDespesa + PR_RATEIO.FCP_DUPDESPESSVC[round, 6]
				setocc "FCP_DUPDESPESSVC", $curocc("FCP_DUPDESPESSVC") + 1
			endwhile
			
			;MTF(26/08/2009) - Projeto 078, tarefa 2685.
			vPercentualDespesa = vPercentualDespesa[round,2]
			;
			if (vPercentualDespesa < 100)
				;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
				;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Percentual de despesa informado deve ser 100 % ( Informado: %%vPercentualDespesa )!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
				$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Percentual de despesa informado deve ser 100 % ( Informado: %%vPercentualDespesa )!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
				;
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		endif
		;
		;------------------------------------------------------
		; MFGALEGO - 23/04/2008 - 78/1449
		clear/e "FCP_DUPDESPAPSVC"
		vDsRegDespApr = $item("DS_DUPDESPAPR", vDsDuplicataI)
		if (vDsRegDespApr != "")
			;------------------------------------------------------
			call GravaLogGravacao("GRAVACAO FCP_DUPDESPAPR")
			;------------------------------------------------------

			repeat
				getitem vDsDespesaApr, vDsRegDespApr, 1	
				;== BY BIANCHINI [PRJ/TAREFA 78/3784] 04/10/2010 ================================================================================================				
				if ($item("PR_RATEIO",vDsDespesaApr)<0)
					;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
					;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Apropriacao de despesa %%$item("CD_DESPESAITEM",vDsDespesaApr )!", "")
					$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Apropriação de despesa %%$item("CD_DESPESAITEM",vDsDespesaApr )!", "")
					;
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
				if ($item("VL_RATEIO",vDsDespesaApr)<0)
					;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
					;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Apropriacao de despesa %%$item("CD_DESPESAITEM",vDsDespesaApr )!", "")
					$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Apropriação de despesa %%$item("CD_DESPESAITEM",vDsDespesaApr )!", "")
					;
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return(-1)
				endif
				;================================================================================================================================================
				if ($item("VL_RATEIO", vDsDespesaApr)<0)
				endif
				creocc "FCP_DUPDESPAPSVC", -1
				getlistitems/occ vDsDespesaApr, "FCP_DUPDESPAPSVC"
				delitem vDsRegDespApr, 1
			until (vDsRegDespApr = "")    
			$status = 0
		endif
		;------------------------------------------------------

	endif

	setocc "FCP_DUPLICATISVC", 1
	setocc "FCP_DUPDESPESSVC", 1
	setocc "FCP_DUPIMPOSTSVC", 1

	poParams = ""
	;VALIDA A EXISTENCIA DE PARCELA
	if ($empty("FCP_DUPLICATISVC"))
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Não existe parcela da duplicata para ser salva!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Não existe parcela da duplicata para ser salva!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif    

	;VALIDA NUMERO DA PARCELA
	if (NR_PARCELA.FCP_DUPLICATISVC = 0)
		vNrParcela = ""
		selectdb max(NR_PARCELA) %\
		from "FCP_DUPLICATISVC" %\
		u_where (CD_EMPRESA.FCP_DUPLICATISVC    = CD_EMPRESA.FCP_DUPLICATCSVC    & %\
 		         CD_FORNECEDOR.FCP_DUPLICATISVC = CD_FORNECEDOR.FCP_DUPLICATCSVC & %\
		         NR_DUPLICATA.FCP_DUPLICATISVC  = NR_DUPLICATA.FCP_DUPLICATCSVC  ) %\
		to vNrParcela
		if ($status < 0)
			$instancehandle->SetErroOpr($procerrorcontext, $xCdErro$, $xCtxErro$)
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		else
			if (vNrParcela > 0)
				vNrParcela = vNrParcela + 1
			else
				vNrParcela = 1
			endif
		endif
		NR_PARCELA.FCP_DUPLICATISVC = vNrParcela
	endif

	;Projeto 078 - Tarefa 1171 - Aloisio Gargantini - 31/01/2008
	if (DT_CHEGADA.FCP_DUPLICATISVC = "")
		;------------------------------------------------------
		call GravaLogGravacao("ALTERACAO DATA CHEGADA")
		;------------------------------------------------------
		DT_CHEGADA.FCP_DUPLICATISVC = DT_EMISSAO.FCP_DUPLICATISVC
	endif
	;

	;VALIDA DATA DE EMISSAO
	if (DT_EMISSAO.FCP_DUPLICATISVC = 0)
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data emissão não encontrada!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Data emissão não encontrada!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif    

	;VALIDA DATA DE VENCIMENTO
	if (DT_VENCIMENTO.FCP_DUPLICATISVC = 0)
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Data vencimento não encontrada!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Data vencimento não encontrada!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	else
		if (DT_VENCIMENTO.FCP_DUPLICATISVC != vVenctoAnt) & (vVenctoAnt != "")
			;------------------------------------------------------
			call GravaLogGravacao("GRAVACAO LOG ALTERACAO VENCTO")
			;------------------------------------------------------
			viParams = ""
			putitem/id viParams, "CD_EMPRESA",    CD_EMPRESA.FCP_DUPLICATISVC
			putitem/id viParams, "CD_FORNECEDOR", CD_FORNECEDOR.FCP_DUPLICATISVC
			putitem/id viParams, "NR_DUPLICATA",  NR_DUPLICATA.FCP_DUPLICATISVC
			putitem/id viParams, "NR_PARCELA",    NR_PARCELA.FCP_DUPLICATISVC
			putitem/id viParams, "TP_LOGDUP",     3
			putitem/id viParams, "DT_ORIGEM",     vVenctoAnt
			putitem/id viParams, "DT_DESTINO",    DT_VENCIMENTO.FCP_DUPLICATISVC
			putitem/id viParams, "DS_COMPONENTE", vDsComponente
			$instancehandle->gravaLogDuplicata(piGlobal,viParams,voParams,$xCdErro$,$xCtxerro$)
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return (-1)
			endif
			if ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return (-1)
			endif
		endif
	endif    

	;Projeto 078 - Tarefa 1119 - Aloisio Gargantini - 23/01/2008
	;VALIDA TP_PREVISAOREAL
	if (TP_PREVISAOREAL.FCP_DUPLICATISVC = "")
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Tipo de previsão/real/consignação com problema!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Tipo de previsão/real/consignação com problema!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	else
		if (TP_PREVISAOREAL.FCP_DUPLICATISVC != vTpPrevisaoAnt) & (vTpPrevisaoAnt != "")
			;------------------------------------------------------
			call GravaLogGravacao("GRAVACAO LOG ALTERACAO PREVISAO")
			;------------------------------------------------------
			viParams = ""
			putitem/id viParams, "CD_EMPRESA",    CD_EMPRESA.FCP_DUPLICATISVC
			putitem/id viParams, "CD_FORNECEDOR", CD_FORNECEDOR.FCP_DUPLICATISVC
			putitem/id viParams, "NR_DUPLICATA",  NR_DUPLICATA.FCP_DUPLICATISVC
			putitem/id viParams, "NR_PARCELA",    NR_PARCELA.FCP_DUPLICATISVC
			putitem/id viParams, "TP_LOGDUP",     15 ;(alteração tipo previsão)
			putitem/id viParams, "DS_ORIGEM",     vTpPrevisaoAnt
			putitem/id viParams, "DS_DESTINO",    TP_PREVISAOREAL.FCP_DUPLICATISVC
			putitem/id viParams, "DS_OBS",        "ALTERACAO DO CAMPO TP. PREVISAO"
			putitem/id viParams, "DS_COMPONENTE", vDsComponente
			$instancehandle->gravaLogDuplicata(piGlobal,viParams,voParams,$xCdErro$,$xCtxerro$)
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return (-1)
			endif
			if ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return (-1)
			endif
		endif
	endif    
	;
	;VALIDA A DATA DE EMISSAO COM A DATA DE VENCIMENTO DE CADA PARCELA
	if (DT_EMISSAO.FCP_DUPLICATISVC > DT_VENCIMENTO.FCP_DUPLICATISVC)
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Parcela com data emissão maior que data vencimento!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Parcela com data emissão maior que data vencimento!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	;VALIDA O VALOR DA PARCELA DE CADA PARCELA
	if (VL_DUPLICATA.FCP_DUPLICATISVC <= 0)
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Parcela com valor incorreto!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Parcela com valor incorreto!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	else
		if (VL_DUPLICATA.FCP_DUPLICATISVC != vValorAnt) & (vValorAnt != "")
			;------------------------------------------------------
			call GravaLogGravacao("GRAVACAO LOG ALTERACAO VALOR")
			;------------------------------------------------------
			viParams = ""
			putitem/id viParams, "CD_EMPRESA",    CD_EMPRESA.FCP_DUPLICATISVC
			putitem/id viParams, "CD_FORNECEDOR", CD_FORNECEDOR.FCP_DUPLICATISVC
			putitem/id viParams, "NR_DUPLICATA",  NR_DUPLICATA.FCP_DUPLICATISVC
			putitem/id viParams, "NR_PARCELA",    NR_PARCELA.FCP_DUPLICATISVC
			putitem/id viParams, "TP_LOGDUP",     2
			putitem/id viParams, "VL_ORIGEM",     vValorAnt
			putitem/id viParams, "VL_DESTINO",    VL_DUPLICATA.FCP_DUPLICATISVC
			putitem/id viParams, "DS_COMPONENTE", vDsComponente
			$instancehandle->gravaLogDuplicata(piGlobal,viParams,voParams,$xCdErro$,$xCtxerro$)
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return (-1)
			endif
			if ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return (-1)
			endif
		endif
	endif    

	;VALIDA O PORTADOR DE CADA PARCELA
	if (NR_PORTADOR.FCP_DUPLICATISVC = 0)
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Parcela sem portador!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Parcela sem portador!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	else
		if (NR_PORTADOR.FCP_DUPLICATISVC != vPortadorAnt) & (vPortadorAnt != 0)
			;------------------------------------------------------
			call GravaLogGravacao("GRAVACAO LOG ALTERACAO PORTADOR")
			;------------------------------------------------------
			viParams = ""
			putitem/id viParams, "CD_EMPRESA",    CD_EMPRESA.FCP_DUPLICATISVC
			putitem/id viParams, "CD_FORNECEDOR", CD_FORNECEDOR.FCP_DUPLICATISVC
			putitem/id viParams, "NR_DUPLICATA",  NR_DUPLICATA.FCP_DUPLICATISVC
			putitem/id viParams, "NR_PARCELA",    NR_PARCELA.FCP_DUPLICATISVC
			putitem/id viParams, "TP_LOGDUP",     1
			putitem/id viParams, "NR_ORIGEM",     vPortadorAnt
			putitem/id viParams, "NR_DESTINO",    NR_PORTADOR.FCP_DUPLICATISVC
			putitem/id viParams, "DS_COMPONENTE", vDsComponente
			$instancehandle->gravaLogDuplicata(piGlobal,viParams,voParams,$xCdErro$,$xCtxerro$)
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return (-1)
			endif
			if ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return (-1)
			endif
		endif
	endif    

	;VALIDA O TIPO DE PREVISAO DE CADA PARCELA
	if (TP_PREVISAOREAL.FCP_DUPLICATISVC = 0)
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Parcela sem tipo previsão!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Parcela sem tipo previsão!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif    

	;VALIDA O TIPO DE SITUACAO DE CADA PARCELA
	if (TP_SITUACAO.FCP_DUPLICATISVC = "")
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Parcela sem tipo de situação!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Parcela sem tipo de situação!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif    

	;VALIDA O TIPO DE DOCUMENTO DE CADA PARCELA
	if (TP_DOCUMENTO.FCP_DUPLICATISVC = 0)
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Parcela sem tipo documento!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Parcela sem tipo documento!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif    

	;VALIDA A DATA DE CHEGADA (QUE NA VERDADE FICOU DEFINIDA COMO DATA DE ENTRADA)
	if (DT_EMISSAO.FCP_DUPLICATISVC > DT_CHEGADA.FCP_DUPLICATISVC) & (DT_CHEGADA.FCP_DUPLICATISVC != "")
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Parcela com data emissão maior que data de entrada!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;== BY BIANCHINI [PRJ/TAREFA 180/53] 13/01/2011 ==;
		;$instancehandle->setStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Parcela com data emissão maior que data de entrada!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Parcela com data emissão maior que data de chegada!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;==
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif    

	;RAH - 09/07/2007 (Prj078/Trf671)
	;Testar se usuário tem permissão em restrição IN_PERM_LANC_DT_SUP
	;MTF(13/02/2008) - Projeto 078, tarefa 1198.
	if (vInPermLancDtSup != <TRUE>) & (vInDtEntradaEmissao = <TRUE>)
	;if (vInPermLancDtSup != <TRUE>);;
	;
		;VALIDA A DATA DE ENTRADA (QUE NA VERDADE FICOU DEFINIDA COMO DATA DE LANÇAMENTO)
		if (DT_EMISSAO.FCP_DUPLICATISVC > DT_ENTRADA.FCP_DUPLICATISVC) & (DT_ENTRADA.FCP_DUPLICATISVC != "")
			;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
			;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Parcela com data emissão maior que data de lançamento!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Parcela com data emissão maior que data de lançamento!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
			;
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif    
	endif    

	;VALIDA A DATA DE SAIDA DO FORNECEDOR
	if (DT_SAIDAFORN.FCP_DUPLICATISVC > DT_CHEGADA.FCP_DUPLICATISVC)
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Parcela com data saida do fornecedor maior que data de chegada!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Parcela com data saida do fornecedor maior que data de chegada!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif    

	;VALIDA OS PERCENTUAIS
	if (PR_MORADIA.FCP_DUPLICATISVC >= 100)
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Percentual moradia maior que 100%!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Percentual mora dia maior que 100%!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif    

	if (PR_MULTA.FCP_DUPLICATISVC >= 100)
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Percentual multa maior que 100%!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Percentual multa maior que 100%!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif    

	if (PR_DESCPONTUAL.FCP_DUPLICATISVC >= 100)
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Percentual desc. pontualidade maior que 100%!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Percentual desc. pontualidade maior que 100%!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif    

	if (PR_DESCANTECIP1.FCP_DUPLICATISVC >= 100)
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Percentual desc. adiantamento 1 maior que 100%!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Percentual desc. adiantamento 1 maior que 100%!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif    

	if (PR_DESCANTECIP2.FCP_DUPLICATISVC >= 100)
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Percentual desc. adiantamento 2 maior que 100%!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Percentual desc. adiantamento 2 maior que 100%!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif    

	vVlTotalPerc = PR_MORADIA.FCP_DUPLICATISVC + PR_MULTA.FCP_DUPLICATISVC + PR_DESCPONTUAL.FCP_DUPLICATISVC
	vVlTotalPerc = vVlTotalPerc + PR_DESCANTECIP1.FCP_DUPLICATISVC + PR_DESCANTECIP2.FCP_DUPLICATISVC

	;VALIDA VALOR DE ABATIMENTO
	;--Douglas Ferreira - [Prj/Tarefa 78/4149] - 11/04/2011 ;permitir baixa por abatimento total
	;if (VL_ABATIMENTO.FCP_DUPLICATISVC >= VL_DUPLICATA.FCP_DUPLICATISVC)
	if (VL_ABATIMENTO.FCP_DUPLICATISVC > VL_DUPLICATA.FCP_DUPLICATISVC)
	;
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Valor de abatimento maior que o valor da duplicata!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Valor de abatimento maior que o valor da duplicata!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif    
	;MTF(26/08/2008) - Projeto 118, tarefa 0102.
	;Validar valor de indenizacao.
	if (vl_indenizacao.fcp_duplicatisvc >= vl_duplicata.fcp_duplicatisvc)
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Valor de indenização maior que o valor da duplicata.", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Valor de indenização maior que o valor da duplicata.", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif    
	;
	
	;VALIDA VALOR OUTROS DESCONTOS
	if (VL_OUTROSDESC.FCP_DUPLICATISVC >= VL_DUPLICATA.FCP_DUPLICATISVC)
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Valor de outros descontos maior que o valor da duplicata!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Valor de outros descontos maior que o valor da duplicata!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif    

	;VALIDA VALOR DE DESCONTO PONTUAL
	if (VL_DESCPONTUAL.FCP_DUPLICATISVC >= VL_DUPLICATA.FCP_DUPLICATISVC)
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Valor de desconto pontual maior que o valor da duplicata!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Valor de desconto pontual maior que o valor da duplicata!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif    

	;VALIDA VALOR DE DESCONTO DE ADIANTAMENTO 1
	if (VL_DESCANTECIP1.FCP_DUPLICATISVC >= VL_DUPLICATA.FCP_DUPLICATISVC)
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Valor de desconto adiantamento 1 maior que o valor da duplicata!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Valor de desconto adiantamento 1 maior que o valor da duplicata!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif    

	;VALIDA VALOR DE DESCONTO DE ADIANTAMENTO 2
	if (VL_DESCANTECIP2.FCP_DUPLICATISVC >= VL_DUPLICATA.FCP_DUPLICATISVC)
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Valor de desconto adiantamento 2 maior que o valor da duplicata!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Valor de desconto adiantamento 2 maior que o valor da duplicata!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif    

	;VALIDA VALOR DE DESCONTO TOTAL
	vVlTotalDesc = (VL_DUPLICATA.FCP_DUPLICATISVC * vVlTotalPerc) / 100
	;MTF(26/08/2008) - Projeto 118, tarefa 0102.
	;vVlTotalDesc = vVlTotalDesc + VL_ABATIMENTO.FCP_DUPLICATISVC + VL_OUTROSDESC.FCP_DUPLICATISVC + VL_DESCPONTUAL.FCP_DUPLICATISVC
	vVlTotalDesc = vVlTotalDesc + vl_abatimento.fcp_duplicatisvc   + vl_indenizacao.fcp_duplicatisvc + vl_outrosdesc.fcp_duplicatisvc + vl_descpontual.fcp_duplicatisvc
	;
	vVlTotalDesc = vVlTotalDesc + VL_DESCANTECIP1.FCP_DUPLICATISVC + VL_DESCANTECIP2.FCP_DUPLICATISVC
	;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
	;if (vVlTotalDesc >= VL_DUPLICATA.FCP_DUPLICATISVC)
	if (vVlTotalDesc > VL_DUPLICATA.FCP_DUPLICATISVC)
	;
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Valor de descontos maior que o valor da duplicata!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Valor de descontos maior que o valor da duplicata!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif    

	;VALIDA O TIPO DE INCLUSAO DE CADA PARCELA
	if (TP_INCLUSAO.FCP_DUPLICATISVC = 0)
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Parcela sem tipo de inclusão!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Parcela sem tipo de inclusão!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (PR_BASECALCIMP.FCP_DUPLICATISVC > 100)
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Percentual de base de cálculo de retenção de imposto superior a 100 %", "ADICIONAL=  /  Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Percentual de base de cálculo de retenção de imposto superior a 100 %", "ADICIONAL=  /  Operação->FCPSVCO001.geraDuplicata")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif    
	
	;VALIDA VALOR MORA DIÁRIA
	;Projeto 078 - Tarefa 3134 - Aloisio Gargantini - 04/02/2010
	if (VL_MORADIA.FCP_DUPLICATISVC != 0) & (PR_MORADIA.FCP_DUPLICATISVC != 0) & (TP_INCLUSAO.FCP_DUPLICATISVC != 9) ;Conversao.
	;if (VL_MORADIA.FCP_DUPLICATISVC != 0) & (PR_MORADIA.FCP_DUPLICATISVC != 0)
	;
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Informe somente valor ou percentual para mora dia!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Informe somente valor ou percentual para mora dia!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif    

	;VALIDA VALOR DESCONTO PONTUALIDADE
	if (VL_DESCPONTUAL.FCP_DUPLICATISVC != 0) & (PR_DESCPONTUAL.FCP_DUPLICATISVC != 0)
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Informe somente valor ou percentual para desconto pontualidade!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Informe somente valor ou percentual para desconto pontualidade!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	;VALIDA VALOR DESCONTO ADIANTAMENTO 1
	if (VL_DESCANTECIP1.FCP_DUPLICATISVC != 0) & (PR_DESCANTECIP1.FCP_DUPLICATISVC != 0)
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Informe somente valor ou percentual para desconto adiantamento 1!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	else
		if (VL_DESCANTECIP1.FCP_DUPLICATISVC != 0) | (PR_DESCANTECIP1.FCP_DUPLICATISVC != 0)
			if (DT_DESCANTECIP1.FCP_DUPLICATISVC = 0)
				;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
				;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Informe a data para desconto adiantamento 1!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
				$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Informe a data para desconto adiantamento 1!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
				;
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		endif
	endif

	;VALIDA VALOR DESCONTO ADIANTAMENTO 2
	if (VL_DESCANTECIP2.FCP_DUPLICATISVC != 0) & (PR_DESCANTECIP2.FCP_DUPLICATISVC != 0)
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Informe somente valor ou percentual para desconto adiantamento 2!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Informe somente valor ou percentual para desconto adiantamento 2!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	else
		if (VL_DESCANTECIP2.FCP_DUPLICATISVC != 0) | (PR_DESCANTECIP2.FCP_DUPLICATISVC != 0)
			if (DT_DESCANTECIP2.FCP_DUPLICATISVC = 0)
				;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
				;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Informe a data para desconto adiantamento 2!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
				$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Informe a data para desconto adiantamento 2!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
				;
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		endif
	endif

	;VALIDA TIPO DE DESCONTO PONTUALIDADE
	if (VL_DESCPONTUAL.FCP_DUPLICATISVC != 0)
		if (TP_DESCANTECIPP.FCP_DUPLICATISVC = 2) | (TP_DESCANTECIPP.FCP_DUPLICATISVC = 5) | (TP_DESCANTECIPP.FCP_DUPLICATISVC = 6)
			;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
			;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Foi selecionado um desconto de pontualidade do tipo percentual. Selecione outro tipo!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Foi selecionado um desconto de pontualidade do tipo percentual. Selecione outro tipo!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
			;
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif
	if (PR_DESCPONTUAL.FCP_DUPLICATISVC != 0)
		if (TP_DESCANTECIPP.FCP_DUPLICATISVC = 1) | (TP_DESCANTECIPP.FCP_DUPLICATISVC = 3) | (TP_DESCANTECIPP.FCP_DUPLICATISVC = 4)
			;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
			;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Foi selecionado um desconto de pontualidade do tipo valor. Selecione outro tipo!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Foi selecionado um desconto de pontualidade do tipo valor. Selecione outro tipo!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
			;
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif

	;VALIDA TIPO DE DESCONTO ANTECIPAÇÃO 1
	if (VL_DESCANTECIP1.FCP_DUPLICATISVC != 0)
		if (TP_DESCANTECIP1.FCP_DUPLICATISVC = 2) | (TP_DESCANTECIP1.FCP_DUPLICATISVC = 5) | (TP_DESCANTECIP1.FCP_DUPLICATISVC = 6)
			;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
			;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Foi selecionado um desconto de antecipação(1) do tipo percentual. Selecione outro tipo!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Foi selecionado um desconto de antecipação(1) do tipo percentual. Selecione outro tipo!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
			;
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif
	if (PR_DESCANTECIP1.FCP_DUPLICATISVC != 0)
		if (TP_DESCANTECIP1.FCP_DUPLICATISVC = 1) | (TP_DESCANTECIP1.FCP_DUPLICATISVC = 3) | (TP_DESCANTECIP1.FCP_DUPLICATISVC = 4)
			;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
			;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Foi selecionado um desconto de antecipação(1) do tipo valor. Selecione outro tipo!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Foi selecionado um desconto de antecipação(1) do tipo valor. Selecione outro tipo!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
			;
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif

	;VALIDA TIPO DE DESCONTO ANTECIPAÇÃO 2
	if (VL_DESCANTECIP2.FCP_DUPLICATISVC != 0)
		if (TP_DESCANTECIP2.FCP_DUPLICATISVC = 2) | (TP_DESCANTECIP2.FCP_DUPLICATISVC = 5) | (TP_DESCANTECIP2.FCP_DUPLICATISVC = 6)
			;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
			;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Foi selecionado um desconto de antecipação(2) do tipo percentual. Selecione outro tipo!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Foi selecionado um desconto de antecipação(2) do tipo percentual. Selecione outro tipo!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
			;
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif
	if (PR_DESCANTECIP2.FCP_DUPLICATISVC != 0)
		if (TP_DESCANTECIP2.FCP_DUPLICATISVC = 1) | (TP_DESCANTECIP2.FCP_DUPLICATISVC = 3) | (TP_DESCANTECIP2.FCP_DUPLICATISVC = 4)
			;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
			;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Foi selecionado um desconto de antecipação(1) do tipo valor. Selecione outro tipo!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Foi selecionado um desconto de antecipação(2) do tipo valor. Selecione outro tipo!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
			;
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif

	;VALIDA DATA DE ANTECIPACAO1
	if (DT_DESCANTECIP1.FCP_DUPLICATISVC > DT_VENCIMENTO.FCP_DUPLICATISVC) & (DT_DESCANTECIP1.FCP_DUPLICATISVC != "")
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Parcela com data adiantamento 1 maior que a data de vencimento!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Parcela com data adiantamento 1 maior que a data de vencimento!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif    

	;VALIDA DATA DE ANTECIPACAO2
	if (DT_DESCANTECIP2.FCP_DUPLICATISVC > DT_VENCIMENTO.FCP_DUPLICATISVC) & (DT_DESCANTECIP2.FCP_DUPLICATISVC != "")
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Parcela com data adiantamento 2 maior que a data de vencimento!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Parcela com data adiantamento 2 maior que a data de vencimento!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif    

	;VALIDA MULTA
	if (DT_VENCIMENTO.FCP_DUPLICATISVC > DT_MULTA.FCP_DUPLICATISVC) & (DT_MULTA.FCP_DUPLICATISVC != "")
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Parcela com data de multa inferior a data de vencimento!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Parcela com data de multa inferior a data de vencimento!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif    

	if (VL_MULTA.FCP_DUPLICATISVC != 0) & (PR_MULTA.FCP_DUPLICATISVC != 0)
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Informe somente valor ou percentual para multa!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Informe somente valor ou percentual para multa!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	else
		if (VL_MULTA.FCP_DUPLICATISVC != 0) | (PR_MULTA.FCP_DUPLICATISVC != 0)
			if (DT_MULTA.FCP_DUPLICATISVC = 0)
				;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
				;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Informe a data para multa!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
				$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Informe a data para multa!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
				;
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
		endif
	endif

	;VALIDA A EXISTENCIA DE RATEIO DE CADA PARCELA
	if ($empty("FCP_DUPDESPESSVC"))
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Não existe rateio para a parcela!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Não existe rateio para a parcela!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	;------------------------------------------------------
	call GravaLogGravacao("VALIDACAO TOTAL RATEIO DESPESA")
	;------------------------------------------------------

	setocc "FCP_DUPDESPESSVC", 1
	vVlrTotalRateio = 0
	while ($status >= 0)
		;vVlrTotalRateio = vVlrTotalRateio + VL_RATEIO.FCP_DUPDESPESSVC
		vVlrTotalRateio = vVlrTotalRateio + VL_RATEIO.FCP_DUPDESPESSVC[round, 2]
		
		if (NR_PARCELA.FCP_DUPDESPESSVC = 0)
			NR_PARCELA.FCP_DUPDESPESSVC = NR_PARCELA.FCP_DUPLICATISVC
		endif

		CD_OPERADOR.FCP_DUPDESPESSVC = $item("CD_USUARIO", piGlobal)
		DT_CADASTRO.FCP_DUPDESPESSVC = $datim

		; MFGALEGO / 07/10/2008
		if ($status = -10) | ($status = -11)
			;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
			;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Registro da duplicata bloqueado por outro usuário!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata / FCP_DUPDESPESA")
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Registro da duplicata bloqueado por outro usuário!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata / FCP_DUPDESPESA")
			;
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			call LimpaRegBloq()
			return(-1)
		endif
		;

		;VALIDA O CODIGO DE ITEM DE DESPESA (RATEIO)
		if (CD_DESPESAITEM.FCP_DUPDESPESSVC = 0)
			;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
			;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Código do item da despesa não informado!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Código do item da despesa não informado!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
			;
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif

		;VALIDA O CODIGO DE DESPESA (RATEIO)
		call validaDespesa(CD_DESPESAITEM.FCP_DUPDESPESSVC,$xCdErro$,$xCtxErro$)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		endif    

		;VALIDA O CODIGO DE CENTRO DE CUSTO (RATEIO)
		call validaCentroCusto(CD_CCUSTO.FCP_DUPDESPESSVC,$xCdErro$,$xCtxErro$)
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		endif    

		;Rinaldo - PRJ/TAR 180/309 - 13/12/2011
	 	if (vInValidaDespesaCcusto = 1)
			call validaDespCcusto(CD_EMPRESA.FCP_DUPDESPESSVC,CD_DESPESAITEM.FCP_DUPDESPESSVC,CD_CCUSTO.FCP_DUPDESPESSVC,$xCdErro$,$xCtxErro$)
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return (-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return (-1)
			endif
		endif

		setocc "FCP_DUPDESPESSVC", $curocc("FCP_DUPDESPESSVC") + 1
	endwhile
	$status = 0

	;VALIDA O RATEIO DA PARCELA
	vVlTotalDuplicata = ""
	if (vl_pago.fcp_duplicatisvc > 0)
		vVlTotalDuplicata = vl_pago.fcp_duplicatisvc
	else
		;MTF(26/08/2008) - Projeto 118, tarefa 0102.
		;vVlTotalDuplicata = vl_duplicata.fcp_duplicatisvc - vl_abatimento.fcp_duplicatisvc
		vVlTotalDuplicata = vl_duplicata.fcp_duplicatisvc - vl_abatimento.fcp_duplicatisvc - vl_indenizacao.fcp_duplicatisvc
		;
	endif
	if (vVlrTotalRateio[round, 2] != vVlTotalDuplicata[round, 2])
		vVlDiferenca = ""
		vVlDiferenca = vVlrTotalRateio[round, 2] - vVlTotalDuplicata[round, 2]
		if (vVlDiferenca > -0.005) & (vVlDiferenca < 0.005)
			;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
			;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=O total rateio R$ %%vVlrTotalRateio  não confere com o valor da parcela R$ %%vVlTotalDuplicata", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ O total rateio R$ %%vVlrTotalRateio  não confere com o valor da parcela R$ %%vVlTotalDuplicata", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
			;
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
	endif
	
	;VERIFICA A EXISTENCIA DE IMPOSTO
	vVlImposto = 0
	
	if ($empty("FCP_DUPIMPOSTSVC") = 0)
		;------------------------------------------------------
		call GravaLogGravacao("TOTALIZA IMPOSTO")
		;------------------------------------------------------

		setocc "FCP_DUPIMPOSTSVC", 1
		while ($status >= 0)
			CD_OPERADOR.FCP_DUPIMPOSTSVC = $item("CD_USUARIO", piGlobal)
			DT_CADASTRO.FCP_DUPIMPOSTSVC = $datim

			; MFGALEGO / 07/10/2008
			if ($status = -10) | ($status = -11)
				;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
				;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Registro da duplicata bloqueado por outro usuário!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata / FCP_DUPIMPOSTO")
				$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Registro da duplicata bloqueado por outro usuário!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata / FCP_DUPIMPOSTO")
				;
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				call LimpaRegBloq()
				return(-1)
			endif
			;

			;VALIDA O CODIGO DE ITEM DE IMPOSTO
			if (CD_IMPOSTO.FCP_DUPIMPOSTSVC = 0)
				;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
				;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Código do item do imposto não informado!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
				$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Código do item do imposto não informado!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata")
				;
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
			;Projeto 078 - Tarefa 2933 - Aloisio Gargantini - 09/11/2009
			if (tp_situacao.fcp_dupimpostsvc = "")
				tp_situacao.fcp_dupimpostsvc = 0 ;Não retido.
			endif
			;
			;Projeto 078 - Tarefa 3225 - Aloisio Gargantini - 31/03/2010
			;vVlImposto = vVlImposto + VL_IMPOSTO.FCP_DUPIMPOSTSVC
			if(TP_SITUACAO.fcp_dupimpostsvc = 1 | TP_SITUACAO.fcp_dupimpostsvc = 2);oda somar somente imposto retido
				vVlImposto = vVlImposto + VL_IMPOSTO.FCP_DUPIMPOSTSVC[round, 2]
			endif
			;
			
			setocc "FCP_DUPIMPOSTSVC", $curocc("FCP_DUPIMPOSTSVC") + 1
		endwhile
		$status = 0
	endif

	;------------------------------------------------------
	call GravaLogGravacao("GRAVACAO PARCELA")
	;------------------------------------------------------

	;Projeto 078 - Tarefa 3455 - Aloisio Gargantini - 30/06/2010
	if (vDsComponente != "FCPFP016") | (IN_PGTOFORNEC.FCP_DUPLICATISVC != <TRUE>) | (DT_MESANORET.FCP_DUPLICATISVC = "");retorno de pagamento de fornecedor
	;
		if (vVlImpostoRetido > 0)			
			VL_IMPOSTO.FCP_DUPLICATISVC = vVlImpostoRetido
		else
			VL_IMPOSTO.FCP_DUPLICATISVC = vVlImposto
		endif
	ENDIF

	
	; MFGALEGO / 07/10/2008
	if ($status = -10) | ($status = -11)
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Registro da duplicata bloqueado por outro usuário!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata / FCP_DUPLICATAI")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Registro da duplicata bloqueado por outro usuário!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata / FCP_DUPLICATAI")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		call LimpaRegBloq()
		return(-1)
	endif
	;

	if (VL_ORIGINAL.FCP_DUPLICATISVC = 0)
		VL_ORIGINAL.FCP_DUPLICATISVC = VL_DUPLICATA.FCP_DUPLICATISVC
	endif

	if (DT_ENTRADA.FCP_DUPLICATISVC = "")
		DT_ENTRADA.FCP_DUPLICATISVC = $item("DT_SISTEMA", piGlobal)
	else
		CD_OPERALTERACAO.FCP_DUPLICATISVC = $item("CD_USUARIO", piGlobal)
		DT_ALTERACAO.FCP_DUPLICATISVC     = $datim
	endif

	CD_OPERADOR.FCP_DUPLICATISVC = $item("CD_USUARIO", piGlobal)
	DT_CADASTRO.FCP_DUPLICATISVC = $datim

	if (TP_ESTAGIO.FCP_DUPLICATISVC = 0)
		TP_ESTAGIO.FCP_DUPLICATISVC = 1
	endif

	if (IN_AUTORIZADO.FCP_DUPLICATISVC != <TRUE>)
		IN_AUTORIZADO.FCP_DUPLICATISVC = <FALSE>
	endif

	if (VL_PAGO.FCP_DUPLICATISVC = "")
		VL_PAGO.FCP_DUPLICATISVC = 0
	endif

	if (TP_BAIXA.FCP_DUPLICATISVC = "")
		TP_BAIXA.FCP_DUPLICATISVC = 0
	endif

	if (DT_VENCTOORIGEM.FCP_DUPLICATISVC = 0)
		DT_VENCTOORIGEM.FCP_DUPLICATISVC = DT_VENCIMENTO.FCP_DUPLICATISVC
	endif

	if (CD_MOEDA.FCP_DUPLICATISVC = "") | %\
	   (CD_MOEDA.FCP_DUPLICATISVC = 0) 
		CD_MOEDA.FCP_DUPLICATISVC = $item("CD_MOEDA", piGlobal)
	endif
	CD_COMPONENTE.FCP_DUPLICATISVC = vDsComponente
	
	;MTF(05/04/2006) - Projeto 064, tarefa 003.
	if ($item("IN_NEGOCIACAO_DESC", piParams) = <TRUE>)
		cd_empliq.fcp_duplicatisvc = $item("CD_EMPLIQ", piParams)
		dt_liq.fcp_duplicatisvc    = $item("DT_LIQ",    piParams)
		nr_seqliq.fcp_duplicatisvc = $item("NR_SEQLIQ", piParams)
	endif
	;
	; Projeto 078 - Tarefa 444 - Aloisio Gargantini - 08/05/2007
	if (CD_OPERINCLUSAO.FCP_DUPLICATISVC = "")
		CD_OPERINCLUSAO.FCP_DUPLICATISVC = $item("CD_USUARIO", piGlobal)
		DT_INCLUSAO.FCP_DUPLICATISVC     = $datim
	endif
	;
	
	CD_OPERADOR.FCP_DUPLICATCSVC = $item("CD_USUARIO", piGlobal)
	DT_CADASTRO.FCP_DUPLICATCSVC = $datim

	; MFGALEGO / 07/10/2008
	if ($status = -10) | ($status = -11)
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Registro da duplicata bloqueado por outro usuário!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata / FCP_DUPLICATAC")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Registro da duplicata bloqueado por outro usuário!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata / FCP_DUPLICATAC")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		call LimpaRegBloq()
		return(-1)
	endif
	;

	;------------------------------------------------------
	call GravaLogGravacao("SALVAR FCP_DUPLICATAC")
	;------------------------------------------------------

	$collhandle("FCP_DUPLICATCSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		clear/e "FCP_DUPLICATCSVC"
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		clear/e "FCP_DUPLICATCSVC"
		return(-1)
	endif

	; Projeto 078 - Tarefa 159 - Aloisio Gargantini - 16/01/2007
	if (vInConferida)
		;------------------------------------------------------
		call GravaLogGravacao("ALTERA ESTAGIO CONFERIDA")
		;------------------------------------------------------

		putitem/id viParams, "CD_EMPRESA",    CD_EMPRESA.FCP_DUPLICATISVC
		putitem/id viParams, "CD_FORNECEDOR", CD_FORNECEDOR.FCP_DUPLICATISVC
		putitem/id viParams, "NR_DUPLICATA",  NR_DUPLICATA.FCP_DUPLICATISVC
		putitem/id viParams, "NR_PARCELA",    NR_PARCELA.FCP_DUPLICATISVC
		putitem/id viParams, "TP_ESTAGIO",    2
		activate "FCPSVCO005".alteraEstagioDuplicata($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
		if ($procerror)       
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			rollback
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			rollback
			return(-1)
		endif

		viParams = ""
		putitem/id viParams, "CD_EMPRESA",    CD_EMPRESA.FCP_DUPLICATISVC
		putitem/id viParams, "CD_FORNECEDOR", CD_FORNECEDOR.FCP_DUPLICATISVC
		putitem/id viParams, "NR_DUPLICATA",  NR_DUPLICATA.FCP_DUPLICATISVC
		putitem/id viParams, "NR_PARCELA",    NR_PARCELA.FCP_DUPLICATISVC
		putitem/id viParams, "TP_LOGDUP",     7
		putitem/id viParams, "DS_OBS",        "EFETUADO CONFERENCIA - LIBERADO"
		putitem/id viParams, "DS_COMPONENTE", "FCPFM004"
		activate "FCPSVCO001".gravaLogDuplicata($$gParamGlb,viParams,voParams,$xCdErro$,$xCtxerro$)
		if ($procerror)       
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			rollback
			return(-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
			rollback
			return(-1)
		endif
	endif

	;------------------------------------------------------
	call GravaLogGravacao("GRAVACAO SALDO DUPLICATA")
	;------------------------------------------------------

	; MFGALEGO / 04/12/2008
	selectdb sum(VL_DUPLICATA) %\
	from "FCP_DUPLICATISVC" %\
	u_where (CD_EMPRESA.FCP_DUPLICATISVC    = CD_EMPRESA.FCP_DUPLICATCSVC    & %\
 	         CD_FORNECEDOR.FCP_DUPLICATISVC = CD_FORNECEDOR.FCP_DUPLICATCSVC & %\
 	         NR_DUPLICATA.FCP_DUPLICATISVC  = NR_DUPLICATA.FCP_DUPLICATCSVC  ) %\
	to vVlTotal
	if ($status < 0)
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Erro ao buscar último número da O.P.", "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Erro ao buscar último número da O.P.", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		;
		return (-1)
	endif
	VL_TOTAL.FCP_DUPLICATCSVC = vVlTotal
	;

	; MFGALEGO / 04/12/2008
	selectdb sum(VL_DUPLICATA) %\
	from "FCP_DUPLICATISVC" %\
	u_where (CD_EMPRESA.FCP_DUPLICATISVC    = CD_EMPRESA.FCP_DUPLICATCSVC    & %\
 	         CD_FORNECEDOR.FCP_DUPLICATISVC = CD_FORNECEDOR.FCP_DUPLICATCSVC & %\
 	         NR_DUPLICATA.FCP_DUPLICATISVC  = NR_DUPLICATA.FCP_DUPLICATCSVC  & %\
 	         DT_LIQ.FCP_DUPLICATISVC        = "·!·="                         ) %\
	to vVlSaldo
	if ($status < 0)
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Erro ao buscar último número da O.P.", "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Erro ao buscar último número da O.P.", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		;
		return (-1)
	endif
	VL_SALDO.FCP_DUPLICATCSVC = vVlSaldo
	;

	; MFGALEGO / 04/12/2008
	CD_OPERADOR.FCP_DUPLICATCSVC = $item("CD_USUARIO", piGlobal)
	DT_CADASTRO.FCP_DUPLICATCSVC = $datim
	;

	; MFGALEGO / 07/10/2008
	if ($status = -10) | ($status = -11)
		;--Douglas Ferreira - [Prj/Tarefa 180/5] - 25/11/2010
		;$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Registro da duplicata bloqueado por outro usuário!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata / FCP_DUPLICATAC")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata: Emp.:%%CD_EMPRESA.FCP_DUPLICATISVC Fornec.:%%CD_FORNECEDOR.FCP_DUPLICATISVC Nr.:%%NR_DUPLICATA.FCP_DUPLICATISVC Parc.:%%NR_PARCELA.FCP_DUPLICATISVC %%^ Registro da duplicata bloqueado por outro usuário!", "ADICIONAL=Operação->FCPSVCO001.geraDuplicata / FCP_DUPLICATAC")
		;
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		call LimpaRegBloq()
		return(-1)
	endif
	;

	; MFGALEGO / 04/12/2008
	$collhandle("FCP_DUPLICATCSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		clear/e "FCP_DUPLICATCSVC"
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		clear/e "FCP_DUPLICATCSVC"
		return(-1)
	endif
	;

	poParams = ""
	putitem/id poParams, "CD_EMPRESA",    CD_EMPRESA.FCP_DUPLICATISVC
	putitem/id poParams, "CD_FORNECEDOR", CD_FORNECEDOR.FCP_DUPLICATISVC
	putitem/id poParams, "NR_DUPLICATA",  NR_DUPLICATA.FCP_DUPLICATISVC
	putitem/id poParams, "NR_PARCELA",    NR_PARCELA.FCP_DUPLICATISVC
	
	vCdEmpDup     = CD_EMPRESA.FCP_DUPLICATISVC
	vCdFornecDup  = CD_FORNECEDOR.FCP_DUPLICATISVC
	vNrDup        = NR_DUPLICATA.FCP_DUPLICATISVC
	vNrParcelaDup = NR_PARCELA.FCP_DUPLICATISVC
	
	if ($cdTipoClasForDup$ != "")
		;------------------------------------------------------
		call GravaLogGravacao("GRAVACAO TIPO DE CLAS FORNECEDOR")
		;------------------------------------------------------

		viParams = ""
		putitem/id viParams, "CD_EMPRESA",    CD_EMPRESA.FCP_DUPLICATISVC
		putitem/id viParams, "CD_FORNECEDOR", CD_FORNECEDOR.FCP_DUPLICATISVC
		putitem/id viParams, "NR_DUPLICATA",  NR_DUPLICATA.FCP_DUPLICATISVC
		putitem/id viParams, "NR_PARCELA",    NR_PARCELA.FCP_DUPLICATISVC
		;MTF(02/03/2009) - Projeto 147, tarefa 0002.
		putitem/id viParams, "LST_TPCLAS",    $cdTipoClasForDup$
		;$instancehandle->gravaClassificacaoForDup(piGlobal,viParams,voParams,$xCdErro$,$xCtxerro$)
		putitem/id viParams, "IN_NOVADUP",    <TRUE>
		activate "FCPSVCO047".gravarClassificacaoForDup(piGlobal, viParams, voParams, $xCdErro$, $xCtxErro$)
		;
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=  FCPSVCO001.geraDuplicata() chamando FCPSVCO047.gravarClassificacaoForDup()")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		elseif ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=  FCPSVCO001.geraDuplicata() chamando FCPSVCO047.gravarClassificacaoForDup()")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		endif
	endif
	
	;MTF(02/03/2009) - Projeto 147, tarefa 0002.
	if ($cdTipoClasCmpDup$ != "")
		viParams = ""
		putitem/id viParams, "CD_EMPRESA",    vCdEmpDup
		putitem/id viParams, "CD_FORNECEDOR", vCdFornecDup
		putitem/id viParams, "NR_DUPLICATA",  vNrDup
		putitem/id viParams, "NR_PARCELA",    vNrParcelaDup
		putitem/id viParams, "LST_TPCLAS",    $cdTipoClasCmpDup$
		putitem/id viParams, "LST_TRANSACAO", $item("LST_TRANSACAO", piParams)
		putitem/id viParams, "IN_NOVADUP",    <TRUE>
		activate "FCPSVCO047".gravarClassificacaoCmpDup(piGlobal, viParams, voParams, $xCdErro$, $xCtxErro$)
		if ($procerror)
			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=  FCPSVCO001.geraDuplicata() chamando FCPSVCO047.gravarClassificacaoCmpDup()")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		elseif ($status < 0)
			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=  FCPSVCO001.geraDuplicata() chamando FCPSVCO047.gravarClassificacaoCmpDup()")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		endif
	endif
	if ($cdTipoClasPrdDup$ != "")
		viParams = ""
		putitem/id viParams, "CD_EMPRESA",    vCdEmpDup
		putitem/id viParams, "CD_FORNECEDOR", vCdFornecDup
		putitem/id viParams, "NR_DUPLICATA",  vNrDup
		putitem/id viParams, "NR_PARCELA",    vNrParcelaDup
		putitem/id viParams, "LST_TPCLAS",    $cdTipoClasPrdDup$
		putitem/id viParams, "LST_TRANSACAO", $item("LST_TRANSACAO", piParams)
		putitem/id viParams, "IN_NOVADUP",    <TRUE>
		activate "FCPSVCO047".gravarClassificacaoPrdDup(piGlobal, viParams, voParams, $xCdErro$, $xCtxErro$)
		if ($procerror)
			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=  FCPSVCO001.geraDuplicata() chamando FCPSVCO047.gravarClassificacaoPrdDup()")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		elseif ($status < 0)
			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL=  FCPSVCO001.geraDuplicata() chamando FCPSVCO047.gravarClassificacaoPrdDup()")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return (-1)
		endif
	endif
	;
	
	;------------------------------------------------------
	call GravaLogGravacao("FIM")
	;------------------------------------------------------

	;------------------------------------------------------
	call GravaLogGravacao("")
	;------------------------------------------------------

	; MFGALEGO / 07/10/2008
	clear/e "FCP_DUPLICATCSVC"
	;

	return (0)
end ;geraDuplicata

;--------------------------
operation gravaLogDuplicata
;--------------------------
	params
		string  piGlobal  :IN
		string  piParams  :IN
		string  poParams  :OUT
		numeric poCdErro  :OUT
		string  poCtxErro :OUT
	endparams

	variables
		numeric vCdEmpresa, vCdFornecedor, vNrDuplicata, vNrParcela, vTpLogDup
		numeric vNrOrigem, vNrDestino, vSeqLogDup, vVlOrigem, vVlDestino
		string  vDsOrigem, vDsDestino
		date    vDtOrigem, vDtDestino
		string  viParams, voParams
		string  vDsComponente, vDsObs, vDsComando
	endvariables

	vCdEmpresa    = $item("CD_EMPRESA",    piParams)
	vCdFornecedor = $item("CD_FORNECEDOR", piParams)
	vNrDuplicata  = $item("NR_DUPLICATA",  piParams)
	vNrParcela    = $item("NR_PARCELA",    piParams)
	vTpLogDup     = $item("TP_LOGDUP",     piParams)
	vDtOrigem     = $item("DT_ORIGEM",     piParams)
	vDtDestino    = $item("DT_DESTINO",    piParams)
	vNrOrigem     = $item("NR_ORIGEM",     piParams)
	vNrDestino    = $item("NR_DESTINO",    piParams)
	vVlOrigem     = $item("VL_ORIGEM",     piParams)
	vVlDestino    = $item("VL_DESTINO",    piParams)
	vDsOrigem     = $item("DS_ORIGEM",     piParams)
	vDsDestino    = $item("DS_DESTINO",    piParams)
	vDsComponente = $item("DS_COMPONENTE", piParams)
	vDsObs        = $item("DS_OBS",        piParams)
	
	viParams = ""
	putitem/id viParams, "CD_EMPRESA",    vCdEmpresa
	putitem/id viParams, "CD_FORNECEDOR", vCdFornecedor
	putitem/id viParams, "NR_DUPLICATA",  vNrDuplicata
	putitem/id viParams, "NR_PARCELA",    vNrParcela
	$instancehandle->seqLogDup(viParams,voParams)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif
	vSeqLogDup = $item("NR_LOGDUP", voParams)
	if (vSeqLogDup = 0)
		vSeqLogDup = 1
	endif

	if (vTpLogDup = 1)
		if (vNrOrigem = 0) | (vNrDestino = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Portador informado incorreto!", "ADICIONAL=Operação->FCPSVCO001.gravaLogDuplicata")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif

		if (vNrOrigem = vNrDestino)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Não foi trocado o portador!", "ADICIONAL=Operação->FCPSVCO001.gravaLogDuplicata")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		if (vDsObs != "")
			vDsObs = "TROCA DE PORTADOR - %%vDsObs"
		else
			vDsObs = "TROCA DE PORTADOR"
		endif
	endif

	if (vTpLogDup = 2)
		if (vVlOrigem = "") | (vVlDestino = "")
			$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Valor informado incorreto!", "ADICIONAL=Operação->FCPSVCO001.gravaLogDuplicata")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif

		if (vVlOrigem = vVlDestino)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Não foi trocado o valor!", "ADICIONAL=Operação->FCPSVCO001.gravaLogDuplicata")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		;Projeto 078 - Tarefa 2463 - Aloisio Gargantini - 22/07/2009
		if (vDsObs != "")
		     vDsObs = "TROCA DE VALOR - %%vDsObs"
		else
		     vDsObs = "TROCA DE VALOR"
		endif
		;vDsObs = "TROCA DE VALOR"
		;
	endif

	if (vTpLogDup = 3)
		;HANDREO
		;Antes de fazer qualquer comentario, por favor, verifiquem a rotina chamadora,
		;pq esta rotina não está com problemas...
		;Valor do vTpLogDup
		; 1 - Troca de portador
		; 2 - Troca de valor
		; 3 - Troca de vencimento
		; 4 - Aceite
		; 5 - Liquidacao
		; 6 - Cancelamento
		; 7 - Conferencia
		; 8 - Pagamento Automatico
		; 9 - Quebra de Duplicata
		; Verifique se quem está fazendo a chamada esta passando o valor correto
		; pq o trecho abaixo estava comentando e o erro era da rotina chamadora
		$venctoOri$ = vDtOrigem
		$venctoDest$ = vDtDestino

		if (vDtOrigem = "") | (vDtDestino = "")
			$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Data de vencimento infomardo incorreto!", "ADICIONAL=Operação->FCPSVCO001.gravaLogDuplicata")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif

		if (vDtOrigem = vDtDestino)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Não foi trocada a data de vencimento!", "ADICIONAL=Operação->FCPSVCO001.gravaLogDuplicata")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		if (vDsObs != "")
			vDsObs = "TROCA DA DATA DE VENCIMENTO - %%vDsObs"
		else
			vDsObs = "TROCA DA DATA DE VENCIMENTO"
		endif
	endif

	vDsComando = "SELECT TP_LOGDUP FROM FCP_LOGTIPO WHERE TP_LOGDUP = %%vTpLogDup"
	sql vDsComando, "DEF"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Não foi buscar tipo de log de duplicata!", "ADICIONAL=Operação->FCPSVCO001.gravaLogDuplicata")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	if ($result = "")	
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Tipo de log de duplicata não cadastrado (Código tipo: %%vTpLogDup)! Verificar componente FCPFL006!", "ADICIONAL=Operação->FCPSVCO001.gravaLogDuplicata")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	clear/e "FCP_LOGDUPSVC"
	CD_EMPRESA.FCP_LOGDUPSVC    = vCdEmpresa
	CD_FORNECEDOR.FCP_LOGDUPSVC = vCdFornecedor
	NR_DUPLICATA.FCP_LOGDUPSVC  = vNrDuplicata
	NR_PARCELA.FCP_LOGDUPSVC    = vNrParcela
	NR_LOGDUP.FCP_LOGDUPSVC     = vSeqLogDup
	CD_OPERADOR.FCP_LOGDUPSVC   = $item("CD_USUARIO", piGlobal)
	DT_CADASTRO.FCP_LOGDUPSVC   = $datim
	TP_LOGDUP.FCP_LOGDUPSVC     = vTpLogDup
	DT_OPERACAO.FCP_LOGDUPSVC   = $item("DT_SISTEMA", piGlobal)
	DT_ORIGEM.FCP_LOGDUPSVC     = vDtOrigem
	DT_DESTINO.FCP_LOGDUPSVC    = vDtDestino
	NR_ORIGEM.FCP_LOGDUPSVC     = vNrOrigem
	NR_DESTINO.FCP_LOGDUPSVC    = vNrDestino
	VL_ORIGEM.FCP_LOGDUPSVC     = vVlOrigem
	VL_DESTINO.FCP_LOGDUPSVC    = vVlDestino
	DS_ORIGEM.FCP_LOGDUPSVC     = vDsOrigem
	DS_DESTINO.FCP_LOGDUPSVC    = vDsDestino
	DS_COMPONENTE.FCP_LOGDUPSVC = vDsComponente
	
	;MTF(04/08/2008) - Projeto 078, tarefa 1729.
	;DS_OBS.FCP_LOGDUPSVC = vDsObs
	call converterString(vDsObs, vDsObs)
	if ($procerror)
		$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	elseif ($status < 0)
		$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif
	ds_obs.fcp_logdupsvc = vDsObs[1:100]
	;
	$collhandle("FCP_LOGDUPSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	; MFGALEGO / 07/10/2008
	clear/e "FCP_LOGDUPSVC"
	;

	return(0)
end ;gravaLogDuplicata

;--------------------------
partner operation seqLogDup
;--------------------------
	params
		string piParams : IN
		string poParams : OUT
	endparams
	
	variables
		numeric vCdEmpresa, vCdFornecedor, vNrDuplicata, vNrParcela, vSeqLogDup
	endvariables

	vSeqLogDup    = 0
	vCdEmpresa    = $item("CD_EMPRESA",    piParams)
	vCdFornecedor = $item("CD_FORNECEDOR", piParams)
	vNrDuplicata  = $item("NR_DUPLICATA",  piParams)
	vNrParcela    = $item("NR_PARCELA",    piParams)
	selectdb max(NR_LOGDUP) %\
		from "FCP_LOGDUPSVC" %\
		u_where (CD_EMPRESA.FCP_LOGDUPSVC = vCdEmpresa & %\
		CD_FORNECEDOR.FCP_LOGDUPSVC = vCdFornecedor & %\
		NR_DUPLICATA.FCP_LOGDUPSVC  = vNrDuplicata  & %\
		NR_PARCELA.FCP_LOGDUPSVC    = vNrParcela)     %\
		to vSeqLogDup
	
	vSeqLogDup = vSeqLogDup + 1
	poParams   = ""
	putitem/id poParams, "NR_LOGDUP", vSeqLogDup

	return (0)
end ;seqLogDup

;--------------------
operation gravaAceite
;--------------------
	params
		string  piGlobal  :IN
		string  piParams  :IN
		string  poParams  :OUT
		numeric poCdErro  :OUT
		string  poCtxErro :OUT
	endparams

	variables
		numeric vCdEmpresa, vCdFornecedor, vNrDuplicata, vNrParcela
		numeric vNrCedente, vNrCedenteAg, VNrCedenteCt, vCdOperAceite, vNrNossoNumero
		date    vDtAceite
		string  viParams, voParams, vDsBarra
	endvariables


	vCdEmpresa     = $item("CD_EMPRESA",     piParams)
	vCdFornecedor  = $item("CD_FORNECEDOR",  piParams)
	vNrDuplicata   = $item("NR_DUPLICATA",   piParams)
	vNrParcela     = $item("NR_PARCELA",     piParams)
	vDsBarra       = $item("DS_BARRA",       piParams)
	vDtAceite      = $item("DT_ACEITE",      piParams)
	vNrCedente     = $item("NR_CEDENTE",     piParams)
	vNrCedenteAg   = $item("NR_CEDENTEAG",   piParams)
	vNrCedenteCt   = $item("NR_CEDENTECT",   piParams)
	vCdOperAceite  = $item("CD_OPERACEITE",  piParams)
	vNrNossoNumero = $item("NR_NOSSONUMERO", piParams)

	clear/e "FCP_ACEITESVC"

	creocc "FCP_ACEITESVC", -1
	CD_EMPRESA.FCP_ACEITESVC    = vCdEmpresa
	CD_FORNECEDOR.FCP_ACEITESVC = vCdFornecedor
	NR_DUPLICATA.FCP_ACEITESVC  = vNrDuplicata
	NR_PARCELA.FCP_ACEITESVC    = vNrParcela
	retrieve/o "FCP_ACEITESVC"
	if ($status = -7)
		retrieve/x "FCP_ACEITESVC"
	endif		

	CD_OPERADOR.FCP_ACEITESVC    = $item("CD_USUARIO", piGlobal)
	DT_CADASTRO.FCP_ACEITESVC    = $datim
	DS_BARRA.FCP_ACEITESVC       = vDsBarra            
	DT_ACEITE.FCP_ACEITESVC      = vDtAceite           
	NR_CEDENTE.FCP_ACEITESVC     = vNrCedente          
	NR_CEDENTEAG.FCP_ACEITESVC   = vNrCedenteAg        
	NR_CEDENTECT.FCP_ACEITESVC   = VNrCedenteCt        
	NR_NOSSONUMERO.FCP_ACEITESVC = vNrNossoNumero      

	if (vCdOperAceite = "")
		CD_OPERACEITE.FCP_ACEITESVC = $item("CD_USUARIO", piGlobal)
	else
		CD_OPERACEITE.FCP_ACEITESVC = vCdOperAceite
	endif

	$collhandle("FCP_ACEITESVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	viParams = ""
	putitem/id viParams, "CD_EMPRESA",    vCdEmpresa
	putitem/id viParams, "CD_FORNECEDOR", vCdFornecedor
	putitem/id viParams, "NR_DUPLICATA",  vNrDuplicata
	putitem/id viParams, "NR_PARCELA",    vNrParcela
	putitem/id viParams, "TP_LOGDUP",     4
	putitem/id viParams, "DS_COMPONENTE", "FCPFM007"
	putitem/id viParams, "DS_OBS",        "ACEITE DA DUPLICATA"
	$instancehandle->gravaLogDuplicata(piGlobal, viParams, voParams, $xCdErro$, $xCtxErro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	; MFGALEGO / 07/10/2008
	clear/e "FCP_ACEITESVC"
	;

	return(0)
end ;gravaAceite

;--------------------------
operation ExcluirParcelaDup
;--------------------------
	params
		string  piGlobal  :IN
		string  piParams  :IN
		string  poParams  :OUT
		numeric poCdErro  :OUT
		string  poCtxErro :OUT
	endparams

	variables
		numeric vNrParcela
		string  vDsDuplicataI
	endvariables

	vDsDuplicataI = $item("DS_DUPLICATAI", piParams)

	clear/e "FCP_DUPLICATCSVC"

	if (vDsDuplicataI != "")
		creocc "FCP_DUPLICATCSVC", -1
		CD_EMPRESA.FCP_DUPLICATCSVC    = $item("CD_EMPRESA",    vDsDuplicataI)
		CD_FORNECEDOR.FCP_DUPLICATCSVC = $item("CD_FORNECEDOR", vDsDuplicataI)
		NR_DUPLICATA.FCP_DUPLICATCSVC  = $item("NR_DUPLICATA",  vDsDuplicataI)

		;VALIDA NUMERO DA EMPRESA
		if (CD_EMPRESA.FCP_DUPLICATCSVC = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->FCPSVCO001.ExcluirParcelaDup")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif    

		;VALIDA FORNECEDOR DA DUPLICATA
		if (CD_FORNECEDOR.FCP_DUPLICATCSVC = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fornecedor da duplicata não informado!", "ADICIONAL=Operação->FCPSVCO001.ExcluirParcelaDup")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif    

		;VALIDA NUMERO DA DUPLICATA
		if (NR_DUPLICATA.FCP_DUPLICATCSVC = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Número da duplicata não informado!", "ADICIONAL=Operação->FCPSVCO001.ExcluirParcelaDup")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif

		retrieve/o "FCP_DUPLICATCSVC"
		if ($status = -7)
			retrieve/x "FCP_DUPLICATCSVC"
		endif		

		vNrParcela = $item("NR_PARCELA", vDsDuplicataI)
		if (vNrParcela > 0)
			clear/e "FCP_DUPLICATISVC"
			NR_PARCELA.FCP_DUPLICATISVC = vNrParcela
			retrieve/e "FCP_DUPLICATISVC"
			if ($status >= 0)
				$collhandle("FCP_DUPLICATISVC")->Excluir()
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					return(-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
					return(-1)
				endif
			endif
		endif
	else
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata/parcela não informada!", "ADICIONAL=Operação->FCPSVCO001.ExcluirParcelaDup")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	clear/e "FCP_DUPLICATCSVC" ; MFGALEGO / 07/10/2008
	
	return (0)
End; operation ExcluirParcelaDup

;--------------------------
public operation gravaObsDuplicata
;--------------------------
	params
		string  piGlobal  :IN
		string  piParams  :IN
		string  poParams  :OUT
		numeric poCdErro  :OUT
		string  poCtxErro :OUT
	endparams

	variables
		numeric vCdEmpresa, vCdFornecedor, vNrDuplicata, vNrParcela, vSeqObsDup
		string  viParams, voParams
		string  vDsComponente, vDsObs
		boolean vInManutencao
	endvariables

	vCdEmpresa    = $item("CD_EMPRESA",    piParams)
	vCdFornecedor = $item("CD_FORNECEDOR", piParams)
	vNrDuplicata  = $item("NR_DUPLICATA",  piParams)
	vNrParcela    = $item("NR_PARCELA",    piParams)
	vInManutencao = $item("IN_MANUTENCAO", piParams)
	vDsComponente = $item("DS_COMPONENTE", piParams)
	vDsObs        = $item("DS_OBS",        piParams)

	if (vInManutencao != <TRUE>)
		vInManutencao = <FALSE>
	endif

	if (vDsComponente = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Componente não informado!", "ADICIONAL=Operação->FCPSVCO001.gravaObsDuplicata")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

;Ranghetti - 186/131 - 15/07/2011 ->
;	if (vDsObs = "")
;		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Observação não informada!", "ADICIONAL=Operação->FCPSVCO001.gravaObsDuplicata")
;		poCdErro = $xCdErro$
;		poCtxErro = $xCtxErro$
;		return(-1)
;	endif
;
	viParams = ""
	putitem/id viParams, "CD_EMPRESA",    vCdEmpresa
	putitem/id viParams, "CD_FORNECEDOR", vCdFornecedor
	putitem/id viParams, "NR_DUPLICATA",  vNrDuplicata
	putitem/id viParams, "NR_PARCELA",    vNrParcela
	$instancehandle->seqObsDup(viParams,voParams)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	vSeqObsDup = $item("NR_OBSDUP", voParams)
	if (vSeqObsDup = 0)
		vSeqObsDup = 1
	endif

	clear/e "OBS_DUPISVC"
	CD_EMPRESA.OBS_DUPISVC    = vCdEmpresa
	CD_FORNECEDOR.OBS_DUPISVC = vCdFornecedor
	NR_DUPLICATA.OBS_DUPISVC  = vNrDuplicata
	NR_PARCELA.OBS_DUPISVC    = vNrParcela
	NR_LINHA.OBS_DUPISVC      = vSeqObsDup
	CD_OPERADOR.OBS_DUPISVC   = $item("CD_USUARIO", piGlobal)
	DT_CADASTRO.OBS_DUPISVC   = $datim
	IN_MANUTENCAO.OBS_DUPISVC = vInManutencao
	CD_COMPONENTE.OBS_DUPISVC = vDsComponente
	
	;MTF(04/08/2008) - Projeto 078, tarefa 1729.
	;DS_OBSERVACAO.OBS_DUPISVC = vDsObs
	call converterString(vDsObs, vDsObs)
	if ($procerror)
		$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	elseif ($status < 0)
		$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif
	ds_observacao.obs_dupisvc = vDsObs[1:80]
	;
	$collhandle("OBS_DUPISVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif
	
	clear/e "OBS_DUPISVC"; MFGALEGO / 07/10/2008
	
	return(0)
end ;gravaLogDuplicata

;--------------------------
partner operation seqObsDup
;--------------------------
	params
		string piParams : IN
		string poParams : OUT
	endparams
	
	variables
		numeric vCdEmpresa, vCdFornecedor, vNrDuplicata, vNrParcela, vSeqObsDup
	endvariables

	vSeqObsDup    = 0
	vCdEmpresa    = $item("CD_EMPRESA",    piParams)
	vCdFornecedor = $item("CD_FORNECEDOR", piParams)
	vNrDuplicata  = $item("NR_DUPLICATA",  piParams)
	vNrParcela    = $item("NR_PARCELA",    piParams)
	selectdb max(NR_LINHA) %\
		from "OBS_DUPISVC" %\
		u_where (CD_EMPRESA.OBS_DUPISVC = vCdEmpresa & %\
		CD_FORNECEDOR.OBS_DUPISVC = vCdFornecedor & %\
		NR_DUPLICATA.OBS_DUPISVC  = vNrDuplicata  & %\
		NR_PARCELA.OBS_DUPISVC    = vNrParcela)   %\
		to vSeqObsDup
	
	vSeqObsDup = vSeqObsDup + 1
	poParams   = ""
	putitem/id poParams, "NR_OBSDUP", vSeqObsDup

	return (0)
end ;seqLogDup

;----------------------------
public operation calcVencBase
;----------------------------
	params
		string  piGlobal  :IN
		string  piParams  :IN
		string  poParams  :OUT
		numeric poCdErro  :OUT
		string  poCtxErro :OUT
	endparams

	variables
		string  vioParams, vDsLista
		numeric vDiaBase, vDiaSemana, vNrDia, vTpCalculo
		boolean vInPrimeiro
		date    vDtCalculo
	endvariables

	vDtCalculo = $item("DT_CALCULO", piParams)
	vTpCalculo = $item("TP_CALCULO", piParams) ;1 - Calculo dia Base, 2 - Calculo Vencimento
	
	;;Parametros por empresa
	$xlplemp$ = ""
	if (vTpCalculo = 1)
		putitem $xlplemp$, -1, "DS_CALCBASEDUP"
	else
		putitem $xlplemp$, -1, "DS_CALCVENCDUP"
	endif
	activate "ADMSVCO001".GetParamEmpresa($item("CD_EMPRESA", $$gParamGlb), vioParams, vioParams, $xcderro$, $xctxerro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (vTpCalculo = 1)
		vDsLista = $item("DS_CALCBASEDUP", vioParams)
	else
		vDsLista = $item("DS_CALCVENCDUP", vioParams)
	endif

	vInPrimeiro = <TRUE>

	if (vDsLista != "")
		length vDsLista
		while ($result > 0)
			scan vDsLista, ";"
			if ($result > 0)
				vNrDia   = vDsLista[1 : ($result - 1)]
				vDsLista = vDsLista[($result + 1)]
			else
				vNrDia   = vDsLista
				vDsLista = ""
			endif

			if (vInPrimeiro = <TRUE>)
				vDiaBase    = vNrDia
				vInPrimeiro = <FALSE>
			else
				creocc "TMP_NR09SVC", -1
				NR_GERAL.TMP_NR09SVC = vNrDia
				retrieve/o "TMP_NR09SVC"
				if ($status = -7)
					retrieve/x "TMP_NR09SVC"
				endif
			endif

			length vDsLista
		endwhile

		vDiaSemana = vDtCalculo[A]
		creocc "TMP_NR09SVC", -1
		NR_GERAL.TMP_NR09SVC = vDiaSemana
		retrieve/o "TMP_NR09SVC"
		if ($status = 4)
			vNrDia = vDiaBase - vDiaSemana
		else
			vNrDia = vDiaBase - vDiaSemana + 7 ;1 semana a mais
			discard "TMP_NR09SVC"
		endif

		vDtCalculo = vDtCalculo + vNrDia
	endif

	poParams = ""
	putitem/id poParams, "DT_CALCULO", vDtCalculo

	return(0)
end ;calcVencBase


;--------------------------------------------------------------;
public operation duplicarObservacaoDup                         ;
;--------------------------------------------------------------;
; MTF    : 11/07/2006                 Projeto 074, tarerfa 007 ;
; Funcao : Duplicar observacao p/ novas duplicatas duplicadas. ;
; Chamada: FCPFP002 - bt_ok()                                  ;
;--------------------------------------------------------------;
;
	params
		string  piGlobal  :IN
		string  piParams  :IN
		string  poParams  :OUT
		numeric poCdErro  :OUT
		string  poCtxErro :OUT
	endparams
	variables
		numeric vCdEmpresa, vCdFornecedor, vNrDuplicata, vNrParcelaOrigem, vNrParcelaDuplicar, vNrLinha
	endvariables
	
	vCdEmpresa = $item("CD_EMPRESA", piParams)
	if (vCdEmpresa = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Favor informar a empresa da duplicata para efetuar duplicação de observação.", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	vCdFornecedor = $item("CD_FORNECEDOR", piParams)
	if (vCdFornecedor = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Favor informar o fornecedor da duplicata para efetuar duplicação de observação.", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	vNrDuplicata = $item("NR_DUPLICATA", piParams)
	if (vNrDuplicata = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Favor informar o número da duplicata para efetuar duplicação de observação.", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	vNrParcelaOrigem = $item("NR_PARCELAORIGEM", piParams)
	if (vNrParcelaOrigem = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Favor informar o número da parcela origem da duplicata para efetuar duplicação de observação.", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	vNrParcelaDuplicar = $item("NR_PARCELADUPLICAR", piParams)
	if (vNrParcelaDuplicar = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Favor informar o número da parcela da duplicata a ser duplicada as observações.", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	clear/e "F_OBS_DUPISVC"
	cd_empresa.f_obs_dupisvc/init    = vCdEmpresa
	cd_fornecedor.f_obs_dupisvc/init = vCdFornecedor
	nr_duplicata.f_obs_dupisvc/init  = vNrDuplicata
	nr_parcela.f_obs_dupisvc/init    = vNrParcelaOrigem
	retrieve/e "F_OBS_DUPISVC"
	if ($status >= 0)
		vNrLinha = 0
		setocc "F_OBS_DUPISVC", 1
		repeat
			
			vNrLinha = vNrLinha + 1
			creocc "OBS_DUPISVC", -1
			cd_empresa.obs_dupisvc    = vCdEmpresa
			cd_fornecedor.obs_dupisvc = vCdFornecedor
			nr_duplicata.obs_dupisvc  = vNrDuplicata
			nr_parcela.obs_dupisvc    = vNrParcelaDuplicar
			nr_linha.obs_dupisvc      = vNrLinha
			in_manutencao.obs_dupisvc = in_manutencao.f_obs_dupisvc
			cd_componente.obs_dupisvc = "FCPFP002"
			
			;MTF(04/08/2008) - Projeto 078, tarefa 1729.
			;ds_observacao.obs_dupisvc = ds_observacao.f_obs_dupisvc
			call converterString(ds_observacao.f_obs_dupisvc, ds_observacao.f_obs_dupisvc)
			if ($procerror)
				$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return (-1)
			elseif ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return (-1)
			endif
			ds_observacao.obs_dupisvc = ds_observacao.f_obs_dupisvc[1:80]
			;
			cd_operador.obs_dupisvc   = cd_operador.f_obs_dupisvc
			dt_cadastro.obs_dupisvc   = dt_cadastro.f_obs_dupisvc
			
			$collhandle("OBS_DUPISVC")->Salvar()
			if ($procerror)
				$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
			
			setocc "F_OBS_DUPISVC", $curocc(F_OBS_DUPISVC) + 1
		until($status < 0)
		$status = 0
	endif
	
	return(0)
End ;operation duplicarObservacaoDup.


Public Operation BaixaDuplicata
;Marcos R. Kuzminski
;Data.....: 05/09/2006
;Descrição: grava campos da baixa da duplicata
;Chamada..: 
;----------------------------

	params
		string  piGlobal  :IN
		string  piParams  :IN
		string  poParams  :OUT
		numeric poCdErro  :OUT
		string  poCtxErro :OUT
	endparams
	Variables
		string  vDsListaDuplicata
		string  vDsLinhaDuplicata
		string  viParams, voParams
		numeric vCdEmpLiq
		numeric vNrSeqLiq
		date    vDtLiq
	EndVariables
	;---------------------------------------------------------------------
	vDsListaDuplicata = piParams
	;---------------------------------------------------------------------
	if (vDsListaDuplicata = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Lista de duplicata não informada!", "ADICIONAL=Operação->FGRSVCO001.BaxiaDuplicata")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	;---------------------------------------------------------------------
	repeat
		;---------------------------------------------------------------------
		getitem vDsLinhaDuplicata, vDsListaDuplicata, 1
		;getlistitems/occ vDsLinhaDuplicata, "FCP_DUPLICATISVC"
		;---------------------------------------------------------------------
		if ($item("TP_BAIXA",vDsLinhaDuplicata) = "")
			$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Tipo de baixa não informado !", "ADICIONAL=Operação->FGRSVCO001.BaxiaDuplicata")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		;---------------------------------------------------------------------
		if ($item("VL_PAGO",vDsLinhaDuplicata)  = "" | $item("VL_PAGO",vDsLinhaDuplicata) = 0)
			$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Valor pago não informado  !", "ADICIONAL=Operação->FGRSVCO001.BaxiaDuplicata")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		;---------------------------------------------------------------------
		if ($item("CD_EMPRESA", vDsLinhaDuplicata)     = "" | %\
            $item("CD_FORNECEDOR", vDsLinhaDuplicata) = "" | %\
            $item("NR_DUPLICATA" , vDsLinhaDuplicata) = "" | %\
            $item("NR_PARCELA"   , vDsLinhaDuplicata) = "")
			$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Chave da duplicata não informada!", "ADICIONAL=Operação->FGRSVCO001.BaxiaDuplicata")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		;---------------------------------------------------------------------
		if ($item("CD_EMPLIQ", vDsLinhaDuplicata)  = "" | %\
            $item("NR_SEQLIQ", vDsLinhaDuplicata) = "" | %\
            $item("DT_LIQ"   , vDsLinhaDuplicata) = "")
			$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Chave da liquidação não informada!", "ADICIONAL=Operação->FGRSVCO001.BaxiaDuplicata")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		;---------------------------------------------------------------------
		;Projeto 180 - Tarefa 0075 - Aloisio Gargantini - 01/02/2011
		vDtLiq         = $item("DT_LIQ", vDsLinhaDuplicata)
		if (vDtLiq != "")
			viParams = ""
			putitem/id viParams, "TP_MODELO",      2 ;FCP-Contas a pagar.
			putitem/id viParams, "DT_PROCESSO",    vDtLiq
			putitem/id viParams, "CD_COMPONENTE",  $componentname
			putitem/id viParams, "DS_COMPLEMENTO", "Baixa de Duplicata."
			activate "FGRSVCO022".validaFechamentoFinanceiro($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
			if ($procerror)
				$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				return(-1)
			elseif ($status < 0)
				$instancehandle->setStatus(<STS_AVISO>, $xCdErro$, $xCtxErro$, "")
				return(-1)
			endif	
		endif
		;
		clear/e "FCP_DUPLICATCSVC"
		creocc "FCP_DUPLICATCSVC", -1
		CD_EMPRESA.FCP_DUPLICATCSVC    = $item("CD_EMPRESA",    vDsLinhaDuplicata)
		CD_FORNECEDOR.FCP_DUPLICATCSVC = $item("CD_FORNECEDOR", vDsLinhaDuplicata)
		NR_DUPLICATA.FCP_DUPLICATCSVC  = $item("NR_DUPLICATA",  vDsLinhaDuplicata)
		retrieve/o "FCP_DUPLICATCSVC"
		if ($status = -7)
			retrieve/x "FCP_DUPLICATCSVC"
		endif		
		;---------------------------------------------------------------------
		clear/e "FCP_DUPLICATISVC"
		NR_PARCELA.FCP_DUPLICATISVC/init     = $item("NR_PARCELA"    ,vDsLinhaDuplicata)
		;---------------------------------------------------------------------
		retrieve/e "FCP_DUPLICATISVC"
		if ($status >= 0)
			TP_SITUACAO.FCP_DUPLICATISVC      = $item("TP_SITUACAO"   ,vDsLinhaDuplicata)
			TP_BAIXA.FCP_DUPLICATISVC         = $item("TP_BAIXA"      ,vDsLinhaDuplicata) 
			CD_OPERBAIXA.FCP_DUPLICATISVC     = $item("CD_USUARIO"    ,$$GParamGlb)
			VL_PAGO.FCP_DUPLICATISVC          = $item("VL_PAGO"       ,vDsLinhaDuplicata)
			DT_BAIXA.FCP_DUPLICATISVC         = $item("DT_SISTEMA"    ,$$GParamGlb)
			CD_COMPONENTE.FCP_DUPLICATISVC    = $item("CD_COMPONENTE" ,vDsLinhaDuplicata)
			CD_EMPLIQ.FCP_DUPLICATISVC        = $item("CD_EMPLIQ"     ,vDsLinhaDuplicata)
			DT_LIQ.FCP_DUPLICATISVC           = $item("DT_LIQ"        ,vDsLinhaDuplicata)
			NR_SEQLIQ.FCP_DUPLICATISVC        = $item("NR_SEQLIQ"     ,vDsLinhaDuplicata)
			CD_OPERALTERACAO.FCP_DUPLICATISVC = $item("CD_USUARIO"    , $$gParamGlb)
			DT_ALTERACAO.FCP_DUPLICATISVC     = $datim
		else
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Duplicata não encontrada !", "ADICIONAL=Operação->FGRSVCO001.BaxiaDuplicata")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		;---------------------------------------------------------------------
		;gravando a duplicata
		$collhandle("FCP_DUPLICATISVC")->Salvar()
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		if ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		;---------------------------------------------------------------------
		delitem vDsListaDuplicata, 1 
		;---------------------------------------------------------------------
	until(vDsListaDuplicata = "")
	;---------------------------------------------------------------------
	
	clear/e "FCP_DUPLICATCSVC" ; MFGALEGO / 07/10/2008
	
	return(0)

end   ;BaixaDuplicata

Public Operation ReabreDuplicata
;Marcos R. Kuzminski
;Data.....: 05/09/2006
;Descrição: grava campos de reabertura de duplicata
;Chamada..: 
;----------------------------
	params
		string  piGlobal  :IN
		string  piParams  :IN
		string  poParams  :OUT
		numeric poCdErro  :OUT
		string  poCtxErro :OUT
	endparams
	Variables
		string vDsListaDuplicata
		string vDsLinhaDuplicata
		string viParams, voParams
		date   vDtLiq, vDtEmissao
	EndVariables

	;Projeto 180 - Tarefa 0084 - Aloisio Gargantini - 09/02/2011	
	putitem viParams, -1, "DT_FECHA_CONTABILIDADE_CP"
	activate "ADMSVCO001".GetParamEmpresa($item("CD_EMPRESA", $$gParamGlb), viParams, voParams, $xCdErro$, $xCtxerro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif	
	$dtFechaContabCP$ = $item("DT_FECHA_CONTABILIDADE_CP", voParams)
	;	
	;---------------------------------------------------------------------
	vDsListaDuplicata = piParams
	;---------------------------------------------------------------------
	if (vDsListaDuplicata = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Lista de duplicata não informada!", "ADICIONAL=Operação->FGRSVCO001.ReabreDuplicata")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	;---------------------------------------------------------------------
	repeat
		;---------------------------------------------------------------------
		getitem vDsLinhaDuplicata, vDsListaDuplicata, 1
		;getlistitems/occ vDsLinhaDuplicata, "FCP_DUPLICATISVC"
		;---------------------------------------------------------------------
		if ($item("CD_EMPRESA", vDsLinhaDuplicata)     = "" | %\
            $item("CD_FORNECEDOR", vDsLinhaDuplicata) = "" | %\
            $item("NR_DUPLICATA" , vDsLinhaDuplicata) = "" | %\
            $item("NR_PARCELA"   , vDsLinhaDuplicata) = "")
			$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Chave da duplicata não informada  !", "ADICIONAL=Operação->FGRSVCO001.ReabreDuplicata")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		;---------------------------------------------------------------------
		;
		clear/e "FCP_DUPLICATCSVC"
		creocc  "FCP_DUPLICATCSVC", -1
		CD_EMPRESA.FCP_DUPLICATCSVC    = $item("CD_EMPRESA"   , vDsLinhaDuplicata)
		CD_FORNECEDOR.FCP_DUPLICATCSVC = $item("CD_FORNECEDOR", vDsLinhaDuplicata)
		NR_DUPLICATA.FCP_DUPLICATCSVC  = $item("NR_DUPLICATA" , vDsLinhaDuplicata)
		retrieve/o "FCP_DUPLICATCSVC"
		if ($status = -7)
			retrieve/x "FCP_DUPLICATCSVC"
		endif		
		;---------------------------------------------------------------------
		clear/e "FCP_DUPLICATISVC"
		NR_PARCELA.FCP_DUPLICATISVC/init = $item("NR_PARCELA", vDsLinhaDuplicata)
		;---------------------------------------------------------------------
		retrieve/e "FCP_DUPLICATISVC"
		if ($status >= 0)
			;Projeto 180 - Tarefa 0075 - Aloisio Gargantini - 01/02/2011
			if (DT_LIQ.FCP_DUPLICATISVC != "")
				viParams = ""
				putitem/id viParams, "TP_MODELO",      2 ;FCP-Contas a pagar.
				putitem/id viParams, "DT_PROCESSO",    DT_LIQ.FCP_DUPLICATISVC
				putitem/id viParams, "CD_COMPONENTE",  $componentname
				putitem/id viParams, "DS_COMPLEMENTO", "Reabertura de Duplicata."
				activate "FGRSVCO022".validaFechamentoFinanceiro($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
				if ($procerror)
					$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					return(-1)
				elseif ($status < 0)
					$instancehandle->setStatus(<STS_AVISO>, $xCdErro$, $xCtxErro$, "")
					return(-1)
				endif	

				;Projeto 180 - Tarefa 0084 - Aloisio Gargantini - 09/02/2011	
				if ($dtFechaContabCP$ > 0) 
					if ($dtFechaContabCP$ >= DT_LIQ.FCP_DUPLICATISVC)
						$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fechamento contábil do contas a pagar já realizado! Parâmetro DT_FECHA_CONTABILIDADE_CP", "ADICIONAL=Operação->FCPSVCO001.reabreDuplicata")
						poCdErro  = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)	
					endif
				endif
			else
				;Projeto 180 - Tarefa 0075 - Aloisio Gargantini - 01/02/2011
				viParams = ""
				putitem/id viParams, "TP_MODELO",      2 ;FCP-Contas a pagar.
				putitem/id viParams, "DT_PROCESSO",    DT_EMISSAO.FCP_DUPLICATISVC
				putitem/id viParams, "CD_COMPONENTE",  $componentname
				putitem/id viParams, "DS_COMPLEMENTO", "Reabertura de Duplicata."
				activate "FGRSVCO022".validaFechamentoFinanceiro($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
				if ($procerror)
					$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					return(-1)
				elseif ($status < 0)
					$instancehandle->setStatus(<STS_AVISO>, $xCdErro$, $xCtxErro$, "")
					return(-1)
				endif	
				;Projeto 180 - Tarefa 0084 - Aloisio Gargantini - 09/02/2011	
				if ($dtFechaContabCP$ > 0) 
					if ($dtFechaContabCP$ >= DT_EMISSAO.FCP_DUPLICATISVC)
						$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fechamento contábil do contas a pagar já realizado! Parâmetro DT_FECHA_CONTABILIDADE_CP", "ADICIONAL=Operação->FCPSVCO001.reabreDuplicata")
						poCdErro  = $xCdErro$
						poCtxErro = $xCtxErro$
						return(-1)	
					endif
				endif
			endif
			;
			TP_SITUACAO.FCP_DUPLICATISVC      = $item("TP_SITUACAO"  , vDsLinhaDuplicata)
			TP_BAIXA.FCP_DUPLICATISVC         = $item("TP_BAIXA"     , vDsLinhaDuplicata) 
			CD_OPERBAIXA.FCP_DUPLICATISVC     = ""
			VL_PAGO.FCP_DUPLICATISVC          = 0
			DT_BAIXA.FCP_DUPLICATISVC         = ""
			CD_COMPONENTE.FCP_DUPLICATISVC    = $item("CD_COMPONENTE", vDsLinhaDuplicata)
			CD_EMPLIQ.FCP_DUPLICATISVC        = ""
			DT_LIQ.FCP_DUPLICATISVC           = ""
			NR_SEQLIQ.FCP_DUPLICATISVC        = ""
			CD_OPERALTERACAO.FCP_DUPLICATISVC = $item("CD_USUARIO"   , $$gParamGlb)
			DT_ALTERACAO.FCP_DUPLICATISVC     = $item("DT_SISTEMA"   , $$gParamGlb)
		else
			$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata não encontrada !", "ADICIONAL=Operação->FGRSVCO001.ReabreDuplicata")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		;---------------------------------------------------------------------
		;gravando a duplicata
		$collhandle("FCP_DUPLICATISVC")->Salvar()
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		if ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		;---------------------------------------------------------------------
		delitem vDsListaDuplicata, 1 
		;---------------------------------------------------------------------
	until(vDsListaDuplicata = "")
	;---------------------------------------------------------------------
	
	clear/e "FCP_DUPLICATCSVC" ; MFGALEGO / 07/10/2008
	
	return(0)

end   ;ReabreDuplicata


Public Operation CancelaDuplicata
;Marcos R. Kuzminski
;Data.....: 05/09/2006
;Descrição: grava campos de cancelamento da duplicata
;Chamada..: 
;----------------------------
	params
		string  piGlobal  :IN
		string  piParams  :IN
		string  poParams  :OUT
		numeric poCdErro  :OUT
		string  poCtxErro :OUT
	endparams
	Variables
		string vDsListaDuplicata
		string vDsLinhaDuplicata
		string viParams, voParams
	EndVariables
	;Projeto 180 - Tarefa 0084 - Aloisio Gargantini - 09/02/2011	
	putitem viParams, -1, "DT_FECHA_CONTABILIDADE_CP"
	activate "ADMSVCO001".GetParamEmpresa($item("CD_EMPRESA", $$gParamGlb), viParams, voParams, $xCdErro$, $xCtxerro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	$dtFechaContabCP$ = $item("DT_FECHA_CONTABILIDADE_CP", voParams)
	;	
	;---------------------------------------------------------------------
	vDsListaDuplicata = piParams
	;---------------------------------------------------------------------
	if (vDsListaDuplicata = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Lista de duplicata não informada!", "ADICIONAL=Operação->FGRSVCO001.CancelaDuplicata")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		exit(-1)
	endif
	;---------------------------------------------------------------------
	repeat
		;---------------------------------------------------------------------
		getitem vDsLinhaDuplicata, vDsListaDuplicata, 1
		;getlistitems/occ vDsLinhaDuplicata, "FCP_DUPLICATISVC"
		;---------------------------------------------------------------------
		if ($item("CD_EMPRESA", vDsLinhaDuplicata)     = "" | %\
            $item("CD_FORNECEDOR", vDsLinhaDuplicata) = "" | %\
            $item("NR_DUPLICATA" , vDsLinhaDuplicata) = "" | %\
            $item("NR_PARCELA"   , vDsLinhaDuplicata) = "")
			$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Chave da duplicata não informada  !", "ADICIONAL=Operação->FGRSVCO001.CancelaDuplicata")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		;---------------------------------------------------------------------
		clear/e "FCP_DUPLICATCSVC"
		creocc  "FCP_DUPLICATCSVC", -1
		CD_EMPRESA.FCP_DUPLICATCSVC    = $item("CD_EMPRESA"   , vDsLinhaDuplicata)
		CD_FORNECEDOR.FCP_DUPLICATCSVC = $item("CD_FORNECEDOR", vDsLinhaDuplicata)
		NR_DUPLICATA.FCP_DUPLICATCSVC  = $item("NR_DUPLICATA" , vDsLinhaDuplicata)
		retrieve/o "FCP_DUPLICATCSVC"
		if ($status = -7)
			retrieve/x "FCP_DUPLICATCSVC"
		endif		
		;---------------------------------------------------------------------
		clear/e "FCP_DUPLICATISVC"
		NR_PARCELA.FCP_DUPLICATISVC/init = $item("NR_PARCELA", vDsLinhaDuplicata)
		;---------------------------------------------------------------------
		retrieve/e "FCP_DUPLICATISVC"
		if ($status >= 0)
			TP_SITUACAO.FCP_DUPLICATISVC      = "C"   ;cancelada
			CD_OPERALTERACAO.FCP_DUPLICATISVC = $item("CD_USUARIO"   , $$gParamGlb)
			DT_ALTERACAO.FCP_DUPLICATISVC     = $item("DT_SISTEMA"   , $$gParamGlb)
			CD_COMPONENTE.FCP_DUPLICATISVC    = $item("CD_COMPONENTE", vDsLinhaDuplicata)
		else
			$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Duplicata não encontrada !", "ADICIONAL=Operação->FGRSVCO001.CancelaDuplicata")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		;Projeto 180 - Tarefa 0075 - Aloisio Gargantini - 01/02/2011
		viParams = ""
		putitem/id viParams, "TP_MODELO",      2 ;FCP-Contas a pagar.
		putitem/id viParams, "DT_PROCESSO",    $item("DT_SISTEMA", $$gParamGlb)
		putitem/id viParams, "CD_COMPONENTE",  $componentname
		putitem/id viParams, "DS_COMPLEMENTO", "Cancelamento de Duplicata."
		activate "FGRSVCO022".validaFechamentoFinanceiro($$gParamGlb, viParams, voParams, $xCdErro$, $xCtxErro$)
		if ($procerror)
			$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			return(-1)
		elseif ($status < 0)
			$instancehandle->setStatus(<STS_AVISO>, $xCdErro$, $xCtxErro$, "")
			return(-1)
		endif	
		;Projeto 180 - Tarefa 0084 - Aloisio Gargantini - 09/02/2011	
		if ($dtFechaContabCP$ > 0) 
			if ($dtFechaContabCP$ >= $item("DT_SISTEMA", $$gParamGlb))
				$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fechamento contábil do contas a pagar já realizado! Parâmetro DT_FECHA_CONTABILIDADE_CP", "ADICIONAL=Operação->FCPSVCO001.cancelaDuplicata")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)	
			endif
		endif
		;
		;---------------------------------------------------------------------
		;gravando a duplicata
		$collhandle("FCP_DUPLICATISVC")->Salvar()
		if ($procerror)
			$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		if ($status < 0)
			$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			exit(-1)
		endif
		;---------------------------------------------------------------------
		delitem vDsListaDuplicata, 1 
		;---------------------------------------------------------------------
	until(vDsListaDuplicata = "")
	;---------------------------------------------------------------------

	; MFGALEGO / 07/10/2008
	clear/e "FCP_DUPLICATCSVC"
	;

	return(0)

end   ;CancelaDuplicata


;---------------------
operation gravaImposto
;---------------------
	params
		string  piGlobal  :IN
		string  piParams  :IN
		string  poParams  :OUT
		numeric poCdErro  :OUT
		string  poCtxErro :OUT
	endparams

	variables
		numeric vCdEmpresa, vCdFornecedor, vNrDuplicata, vNrParcela, vCdImposto
		string  vDsImposto
	endvariables

	vDsImposto    = piParams
	vCdEmpresa    = $item("CD_EMPRESA",    piParams)
	vCdFornecedor = $item("CD_FORNECEDOR", piParams)
	vNrDuplicata  = $item("NR_DUPLICATA",  piParams)
	vNrParcela    = $item("NR_PARCELA",    piParams)
	vCdImposto    = $item("CD_IMPOSTO",    piParams)

	if (vCdEmpresa = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->FCPSVCO001.gravaImposto")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (vCdFornecedor = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fornecedor não informado!", "ADICIONAL=Operação->FCPSVCO001.gravaImposto")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (vNrDuplicata = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata não informada!", "ADICIONAL=Operação->FCPSVCO001.gravaImposto")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (vNrParcela = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Parcela não informada!", "ADICIONAL=Operação->FCPSVCO001.gravaImposto")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (vCdImposto = "")
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Imposto não informado!", "ADICIONAL=Operação->FCPSVCO001.gravaImposto")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	clear/e "FCP_DUPLICATISVC"
	CD_EMPRESA.FCP_DUPLICATISVC    = vCdEmpresa
	CD_FORNECEDOR.FCP_DUPLICATISVC = vCdFornecedor
	NR_DUPLICATA.FCP_DUPLICATISVC  = vNrDuplicata
	NR_PARCELA.FCP_DUPLICATISVC    = vNrParcela
	retrieve/e "FCP_DUPLICATISVC"
	if ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata %%vCdEmpresa/%%vCdFornecedor/%%vNrDuplicata/%%vNrParcela!", "ADICIONAL=Operação->FCPSVCO001.gravaImposto")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	clear/e "F_FCP_DUPIMPOSVC"
	creocc "F_FCP_DUPIMPOSVC", -1
	CD_EMPRESA.F_FCP_DUPIMPOSVC    = vCdEmpresa
	CD_FORNECEDOR.F_FCP_DUPIMPOSVC = vCdFornecedor
	NR_DUPLICATA.F_FCP_DUPIMPOSVC  = vNrDuplicata
	NR_PARCELA.F_FCP_DUPIMPOSVC    = vNrParcela
	CD_IMPOSTO.F_FCP_DUPIMPOSVC    = vCdImposto
	retrieve/o "F_FCP_DUPIMPOSVC"
	if ($status = -7)
		retrieve/x "F_FCP_DUPIMPOSVC"
	endif
	
	delitem/id vDsImposto, "CD_EMPRESA"
	delitem/id vDsImposto, "CD_FORNECEDOR"
	delitem/id vDsImposto, "NR_DUPLICATA"
	delitem/id vDsImposto, "NR_PARCELA"
	delitem/id vDsImposto, "CD_IMPOSTO"
	getlistitems/occ vDsImposto, "F_FCP_DUPIMPOSVC"
	CD_OPERADOR.F_FCP_DUPIMPOSVC = $item("CD_USUARIO", piGlobal)
	DT_CADASTRO.F_FCP_DUPIMPOSVC = $datim
	$collhandle("F_FCP_DUPIMPOSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif

	; MFGALEGO / 07/10/2008
	clear/e "FCP_DUPLICATCSVC"
	clear/e "F_FCP_DUPIMPOSTOSVC"
	;

	return(0)
end ;gravaLogDuplicata

;----------------------------------
operation gravaDespesaAproDuplicata
;----------------------------------
;
;Projeto 078 - Tarefa 653 - Aloisio Gargantini - 11/07/2007
	params
		string  piGlobal  :IN
		string  piParams  :IN
		string  poParams  :OUT
		numeric poCdErro  :OUT
		string  poCtxErro :OUT
	endparams

	variables
		numeric vCdEmpresa, vCdFornecedor, vNrDuplicata, vNrParcela, vCdDespesaItem, vNrSeqApro
		numeric vPrRateio, vVlRateio, vTpCustoDespesa
		date    vDtApropriacao
	endvariables

	vCdEmpresa     = $item("CD_EMPRESA",     piParams)
	vCdFornecedor  = $item("CD_FORNECEDOR",  piParams)
	vNrDuplicata   = $item("NR_DUPLICATA",   piParams)
	vNrParcela     = $item("NR_PARCELA",     piParams)
	vCdDespesaItem = $item("CD_DESPESAITEM", piParams)
	vNrSeqApro     = $item("NR_SEQAPRO",     piParams)
	if (vNrSeqApro = "" | vNrSeqApro = 0)
		selectdb max(NR_SEQAPRO) %\
			from "FCP_DUPDESPAPSVC"    %\
			u_where (CD_EMPRESA.FCP_DUPDESPAPSVC    = vCdEmpresa      & %\
			         CD_FORNECEDOR.FCP_DUPDESPAPSVC = vCdFornecedor   & %\
			         NR_DUPLICATA.FCP_DUPDESPAPSVC  = vNrDuplicata    & %\
		    	     NR_PARCELA.FCP_DUPDESPAPSVC     = vNrParcela      & %\
	    	    	 CD_DESPESAITEM.FCP_DUPDESPAPSVC  = vCdDespesaItem)   %\
				     to vNrSeqApro
	endif
	if (vNrSeqApro = "" | vNrSeqApro = 0)
		vNrSeqApro = 1
	else
		vNrSeqApro = vNrSeqApro + 1
	endif
	vTpCustoDespesa = $item("TP_CUSTODESPESA", piParams)
	vDtApropriacao  = $item("DT_APROPRIACAO",  piParams)
	vPrRateio       = $item("PR_RATEIO",       piParams)
	vVlRateio       = $item("VL_RATEIO",       piParams)

	clear/e "FCP_DUPDESPAPSVC"

	creocc "FCP_DUPDESPAPSVC", -1
	CD_EMPRESA.FCP_DUPDESPAPSVC     = vCdEmpresa
	CD_FORNECEDOR.FCP_DUPDESPAPSVC  = vCdFornecedor
	NR_DUPLICATA.FCP_DUPDESPAPSVC   = vNrDuplicata
	NR_PARCELA.FCP_DUPDESPAPSVC     = vNrParcela
	CD_DESPESAITEM.FCP_DUPDESPAPSVC = vCdDespesaItem
	NR_SEQAPRO.FCP_DUPDESPAPSVC     = vNrSeqApro
	retrieve/o "FCP_DUPDESPAPSVC"
	if ($status = -7)
		retrieve/x "FCP_DUPDESPAPSVC"
	endif		

	CD_OPERADOR.FCP_DUPDESPAPSVC     = $item("CD_USUARIO", piGlobal)
	DT_CADASTRO.FCP_DUPDESPAPSVC     = $datim
	TP_CUSTODESPESA.FCP_DUPDESPAPSVC = vTpCustoDespesa            
	DT_APROPRIACAO.FCP_DUPDESPAPSVC  = vDtApropriacao
	PR_RATEIO.FCP_DUPDESPAPSVC       = vPrRateio
	VL_RATEIO.FCP_DUPDESPAPSVC       = vVlRateio

	$collhandle("FCP_DUPDESPAPSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return (-1)
	endif
	
	clear/e "FCP_DUPDESPAPSVC" ; MFGALEGO / 07/10/2008
	
	return(0)
end ;gravaDespesaAproDuplicata

;-------------------------------------
operation exclusaoDespesaAproDuplicata
;-------------------------------------
;
;Projeto 078 - Tarefa 653 - Aloisio Gargantini - 13/07/2007
	params
		string  piGlobal  :IN
		string  piParams  :IN
		string  poParams  :OUT
		numeric poCdErro  :OUT
		string  poCtxErro :OUT
	endparams

	variables
		numeric vCdEmpresa, vCdFornecedor, vNrDuplicata, vNrParcela, vCdDespesaItem, vNrSeqApro
		numeric vPrRateio, vVlRateio, vTpCustoDespesa
		date    vDtApropriacao
	endvariables

	vCdEmpresa     = $item("CD_EMPRESA",     piParams)
	vCdFornecedor  = $item("CD_FORNECEDOR",  piParams)
	vNrDuplicata   = $item("NR_DUPLICATA",   piParams)
	vNrParcela     = $item("NR_PARCELA",     piParams)
	vCdDespesaItem = $item("CD_DESPESAITEM", piParams)

	clear/e "FCP_DUPDESPAPSVC"

	CD_EMPRESA.FCP_DUPDESPAPSVC/init     = vCdEmpresa
	CD_FORNECEDOR.FCP_DUPDESPAPSVC/init  = vCdFornecedor
	NR_DUPLICATA.FCP_DUPDESPAPSVC/init   = vNrDuplicata
	NR_PARCELA.FCP_DUPDESPAPSVC/init     = vNrParcela
	CD_DESPESAITEM.FCP_DUPDESPAPSVC/init = vCdDespesaItem
	retrieve/e "FCP_DUPDESPAPSVC"
	if ($status >= 0)
		setocc "FCP_DUPDESPAPSVC", 1	
		while ($status >= 0)
			$collhandle("FCP_DUPDESPAPSVC")->Excluir()
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return (-1)
			elseif ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return (-1)
			endif
			if ($empty("FCP_DUPDESPAPSVC"))
				$status = -1
			else
				setocc "FCP_DUPDESPAPSVC", $curocc("FCP_DUPDESPAPSVC") + 1
			endif
		endwhile
	
	endif
	
	clear/e "FCP_DUPDESPAPSVC" ; MFGALEGO / 07/10/2008
	
	return(0)
end ;exclusaoDespesaAproDuplicata


;-------------------------------------------------------;
public operation gravarClassificacaoDuplicata           ;
;-------------------------------------------------------;
; MTF    : 13/09/2007           Projeto 078, tarefa 759 ;
; Funcao : Gravar classificacao de duplicata.           ;
; Chamada: FCPFM023 - atualizarClassificacaoDuplicata() ;
;-------------------------------------------------------;
;
	params
		string  piGlobal  :IN
		string  piParams  :IN
		string  poParams  :OUT
		numeric poCdErro  :OUT
		string  poCtxErro :OUT
	endparams
	variables
		string  vLstDuplicata, vLstClas, vLstClasAux, vCdClas, vDsRegistro
		numeric vCdEmpDup, vCdFornecDup, vNrDuplicata, vNrParcelaDup, vCdTipoClas
	endvariables
	
	vLstDuplicata = $item("LST_DUPLICATA", piParams)
	if (vLstDuplicata = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Lista de duplicata não informada para atualizar classificação.", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	if ($item("LST_CLAS", piParams) = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Lista de classificação não informada para atualização.", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	repeat
		getitem vDsRegistro, vLstDuplicata, 1
		
		vCdEmpDup     = $item("CD_EMPRESA",    vDsRegistro)
		vCdFornecDup  = $item("CD_FORNECEDOR", vDsRegistro)
		vNrDuplicata  = $item("NR_DUPLICATA",  vDsRegistro)
		vNrParcelaDup = $item("NR_PARCELA",    vDsRegistro)
		
		if (vCdEmpDup = "") | (vCdEmpDup = 0)
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Empresa da duplicata não informada para atualização de classificação.", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		if (vCdFornecDup = "") | (vCdFornecDup = 0)
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fornecedor da duplicata não informado para atualização de classificação.", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		if (vNrDuplicata = "") | (vNrDuplicata = 0)
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Número da duplicata não informado para atualização de classificação.", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		if (vNrParcelaDup = "") | (vNrParcelaDup = 0)
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Parcela da duplicata não informada para atualização de classificação.", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		
		clear/e "FCP_DUPLICATISVC"
		cd_empresa.fcp_duplicatisvc/init    = vCdEmpDup
		cd_fornecedor.fcp_duplicatisvc/init = vCdFornecDup
		nr_duplicata.fcp_duplicatisvc/init  = vNrDuplicata
		nr_parcela.fcp_duplicatisvc/init    = vNrParcelaDup
		retrieve/e "FCP_DUPLICATISVC"
		if ($status < 0)
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Duplicata inválida.%%^Empresa: %%vCdEmpDup  Fornecedor: %%vCdFornecDup  Duplicata: %%vNrDuplicata  Parcela: %%vNrParcelaDup", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		
		message/hint "Atualizando classificação da duplicata: %%vNrDuplicata / %%vNrParcelaDup"
		vLstClas = $item("LST_CLAS", piParams)
		repeat
			vDsRegistro = ""
			getitem vDsRegistro, vLstClas, 1
			
			vCdTipoClas = $item("CD_TIPOCLAS", vDsRegistro)
			vCdClas     = $item("CD_CLAS",     vDsRegistro)
			if (vCdTipoClas = "")
				$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Tipo de classificação não informado para atualização.", "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
			if (vCdClas = "")
				$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Classificação não informada para atualização.", "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
			
			clear/e "FCP_TIPOCLASSVC"
			cd_tipoclas.fcp_tipoclassvc/init = vCdTipoClas
			retrieve/e "FCP_TIPOCLASSVC"
			if ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Tipo de classificação inválido para atualização.%%^Tipo classificação: %%vCdTipoClas", "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
			
			clear/e "FCP_CLASSVC"
			cd_tipoclas.fcp_classvc/init      = vCdTipoClas
			cd_classificacao.fcp_classvc/init = vCdClas
			retrieve/e "FCP_CLASSVC"
			if ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Tipo e classificação inválidos para atualização.%%^Tipo classificação: %%vCdTipoClas   Classificação: %%vCdClas", "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
			
			creocc "FCP_DUPCLASSVC", -1
			cd_empresa.fcp_dupclassvc       = vCdEmpDup
			cd_fornecedor.fcp_dupclassvc    = vCdFornecDup
			nr_duplicata.fcp_dupclassvc     = vNrDuplicata
			nr_parcela.fcp_dupclassvc       = vNrParcelaDup
			cd_tipoclas.fcp_dupclassvc      = vCdTipoClas
			cd_classificacao.fcp_dupclassvc = vCdClas
			retrieve/o "FCP_DUPCLASSVC"
			if ($status = -7)
				retrieve/x "FCP_DUPCLASSVC"
			endif
			cd_operador.fcp_dupclassvc = $item("CD_USUARIO", piGlobal)
			dt_cadastro.fcp_dupclassvc = $datim
			
			$collhandle("FCP_DUPCLASSVC")->Salvar()
			if ($procerror)
				$instancehandle->setStatus(<STS_ERRO>, $procerror, $procerrorcontext, "ADICIONAL= / FCPSVCO001.atualizarClassificacaoDuplicata()")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			elseif ($status < 0)
				$instancehandle->setStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "ADICIONAL= / FCPSVCO001.atualizarClassificacaoDuplicata()")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
			
			delitem vLstClas, 1
		until(vLstClas = "")
		
		delitem vLstDuplicata, 1
	until(vLstDuplicata = "")
	message/hint ""
	
	clear/e "FCP_DUPLICATISVC" ; MFGALEGO / 07/10/2008
	
	return(0)
End ;operation gravarClassificacaoDuplicata.


;----------------------------------------------------;
public operation validarClassificacaoDuplicata       ;
;----------------------------------------------------;
; MTF    : 13/09/2007        Projeto 078, tarefa 759 ;
; Funcao : Validar se duplicata possui classificacao ;
;          informada no filtro.                      ;
; Chamada: FCCFM010 - consulta()                     ;
;          FCPFL009 - consulta()                     ;
;          FCPFL013 - montaTempDesp()                ;
;          FCPFL028 - consulta()                     ;
;          FCPFL037 - consulta()                     ;
;          FCPFP004 - consulta()                     ;
;          FCPFP005 - consulta()                     ;
;          FCPFL028 - consulta()                     ;
;          FCPFP043 - consultaDuplicata()            ;
;----------------------------------------------------;

	params
		string  piGlobal  :IN
		string  piParams  :IN
		string  poParams  :OUT
		numeric poCdErro  :OUT
		string  poCtxErro :OUT
	endparams
	variables
		string  vLstClas, vCdClas, vDsRegistro
		numeric vCdEmpDup, vCdFornecDup, vNrDuplicata, vNrParcelaDup, vCdTipoClas
		boolean vInClassificacao
	endvariables
	
	vCdEmpDup     = $item("CD_EMPRESA",    piParams)
	vCdFornecDup  = $item("CD_FORNECEDOR", piParams)
	vNrDuplicata  = $item("NR_DUPLICATA",  piParams)
	vNrParcelaDup = $item("NR_PARCELA",    piParams)
	
	if (vCdEmpDup = "") | (vCdEmpDup = 0)
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Empresa da duplicata não informada para validar classificação.", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if (vCdFornecDup = "") | (vCdFornecDup = 0)
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Fornecedor da duplicata não informado para validar classificação.", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if (vNrDuplicata = "") | (vNrDuplicata = 0)
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Número da duplicata não informado para validar classificação.", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	if (vNrParcelaDup = "") | (vNrParcelaDup = 0)
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Parcela da duplicata não informada para validar classificação.", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	vLstClas = $item("LST_CLAS", piParams)
	if (vLstClas = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Lista de classificação não informada para validação.", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	;MTF(30/10/2007) - Projeto 078, tarefa 895.
	;vInClassificacao = <FALSE>
	vInClassificacao = <TRUE>
	;
	repeat
		getitem vDsRegistro, vLstClas, 1
		vCdTipoClas = $item("CD_TIPOCLAS", vDsRegistro)
		vCdClas     = $item("CD_CLAS",     vDsRegistro)
		if (vCdTipoClas = "")
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Tipo de classificação não informado para atualização.", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		if (vCdClas = "")
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Classificação não informada para atualização.", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		
		clear/e "FCP_TIPOCLASSVC"
		cd_tipoclas.fcp_tipoclassvc/init = vCdTipoClas
		retrieve/e "FCP_TIPOCLASSVC"
		if ($status < 0)
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Tipo de classificação inválido para validação.%%^Tipo classificação: %%vCdTipoClas", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		
		clear/e "FCP_CLASSVC"
		cd_tipoclas.fcp_classvc/init      = vCdTipoClas
		cd_classificacao.fcp_classvc/init = vCdClas
		retrieve/e "FCP_CLASSVC"
		if ($status < 0)
			$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Tipo e classificação inválidos para validação.%%^Tipo classificação: %%vCdTipoClas   Classificação: %%vCdClas", "")
			poCdErro  = $xCdErro$
			poCtxErro = $xCtxErro$
			return(-1)
		endif
		
		clear/e "FCP_DUPCLASSVC"
		cd_empresa.fcp_dupclassvc/init       = vCdEmpDup
		cd_fornecedor.fcp_dupclassvc/init    = vCdFornecDup
		nr_duplicata.fcp_dupclassvc/init     = vNrDuplicata
		nr_parcela.fcp_dupclassvc/init       = vNrParcelaDup
		cd_tipoclas.fcp_dupclassvc/init      = vCdTipoClas
		cd_classificacao.fcp_dupclassvc/init = vCdClas
		retrieve/e "FCP_DUPCLASSVC"
		;MTF(30/10/2007) - Projeto 078, tarefa 895.
		;if ($status >= 0)
		;	vInClassificacao = <TRUE>
		;endif
		if ($status < 0)
			vInClassificacao = <FALSE>
		endif
		;
		
		delitem vLstClas, 1
	until(vLstClas = "")
	poParams = ""
	putitem/id poParams, "IN_CLASSIFICACAO", vInClassificacao
	
	return(0)
End ;operation validarClassificacaoDuplicata.


;----------------------------------------
public operation gravaClassificacaoForDup
;----------------------------------------
	params
		string piGlobal  :IN
		string piParams  :IN
		string poParams  :OUT
		string poCdErro  :OUT
		string poCtxErro :OUT
	endparams
	
	variables
		string  viParams, voParams, vDsLstClas, vDsLstDuplicata, vDsRegistro
		numeric vCdEmpresa, vCdFornecedor, vNrDuplicata, vNrParcela
	endvariables
	
	vCdEmpresa    = $item("CD_EMPRESA",    piParams)
	vCdFornecedor = $item("CD_FORNECEDOR", piParams)
	vNrDuplicata  = $item("NR_DUPLICATA",  piParams)
	vNrParcela    = $item("NR_PARCELA",    piParams)
	
	clear/e "PES_PESSOACLASVC"
	CD_PESSOA.PES_PESSOACLASVC/init   = vCdFornecedor
	CD_TIPOCLAS.PES_PESSOACLASVC/init = $cdTipoClasForDup$
	retrieve/e "PES_PESSOACLASVC"
	if ($status >= 0)
		
		;MTF(31/07/2008) - Projeto 118, tarefa 0094.
		setocc "PES_PESSOACLASVC", 1
		while ($status >= 0)
		;
			clear/e "FCP_TIPOCLASSVC"
			creocc  "FCP_TIPOCLASSVC", -1
			CD_TIPOCLAS.FCP_TIPOCLASSVC/init = CD_TIPOCLAS.PES_PESSOACLASVC
			retrieve/o "FCP_TIPOCLASSVC"
			if ($status = -7)
				retrieve/x "FCP_TIPOCLASSVC"
			else
				clear/e "PES_TIPOCLASSVC"
				CD_TIPOCLAS.PES_TIPOCLASSVC = CD_TIPOCLAS.PES_PESSOACLASVC
				retrieve/e "PES_TIPOCLASSVC"
				if ($status >= 0)
					DS_TIPOCLAS.FCP_TIPOCLASSVC = DS_TIPOCLAS.PES_TIPOCLASSVC
				endif
				
				CD_OPERADOR.FCP_TIPOCLASSVC = $item("CD_USUARIO", piGlobal)
				DT_CADASTRO.FCP_TIPOCLASSVC = $datim
				
				$collhandle("FCP_TIPOCLASSVC")->Salvar()
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return (-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return (-1)
				endif
			endif
			
			clear/e "FCP_CLASSVC"
			creocc  "FCP_CLASSVC", -1
			CD_TIPOCLAS.FCP_CLASSVC/init      = CD_TIPOCLAS.PES_PESSOACLASVC
			CD_CLASSIFICACAO.FCP_CLASSVC/init = CD_CLASSIFICACAO.PES_PESSOACLASVC
			retrieve/o "FCP_CLASSVC"
			if ($status = -7)
				retrieve/x "FCP_CLASSVC"
			else
				clear/e "PES_CLASSIFICSVC"
				CD_TIPOCLAS.PES_CLASSIFICSVC      = CD_TIPOCLAS.PES_PESSOACLASVC
				CD_CLASSIFICACAO.PES_CLASSIFICSVC = CD_CLASSIFICACAO.PES_PESSOACLASVC
				retrieve/e "PES_CLASSIFICSVC"
				if ($status >= 0)
					DS_CLASSIFICACAO.FCP_CLASSVC = DS_CLASSIFICACAO.PES_CLASSIFICSVC
				endif
				
				CD_OPERADOR.FCP_CLASSVC = $item("CD_USUARIO", piGlobal)
				DT_CADASTRO.FCP_CLASSVC = $datim
				
				$collhandle("FCP_CLASSVC")->Salvar()
				if ($procerror)
					$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return (-1)
				elseif ($status < 0)
					$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
					poCdErro  = $xCdErro$
					poCtxErro = $xCtxErro$
					return (-1)
				endif
			endif
			
			vDsLstDuplicata = ""
			vDsRegistro     = ""
			putitem/id vDsRegistro, "CD_EMPRESA",    vCdEmpresa
			putitem/id vDsRegistro, "CD_FORNECEDOR", vCdFornecedor
			putitem/id vDsRegistro, "NR_DUPLICATA",  vNrDuplicata
			putitem/id vDsRegistro, "NR_PARCELA",    vNrParcela
			putitem vDsLstDuplicata, -1, vDsRegistro
			
			vDsRegistro = ""
			putitem/id vDsRegistro, "CD_TIPOCLAS", CD_TIPOCLAS.PES_PESSOACLASVC
			putitem/id vDsRegistro, "CD_CLAS",     CD_CLASSIFICACAO.PES_PESSOACLASVC
			putitem vDsLstClas, -1, vDsRegistro
			
			clear/e "FCP_DUPCLASSVC"
			CD_EMPRESA.FCP_DUPCLASSVC/init    = vCdEmpresa
			CD_FORNECEDOR.FCP_DUPCLASSVC/init = vCdFornecedor
			NR_DUPLICATA.FCP_DUPCLASSVC/init  = vNrDuplicata
			NR_PARCELA.FCP_DUPCLASSVC/init    = vNrParcela
			retrieve/e "FCP_DUPCLASSVC"
			if ($status >= 0)
				setocc "FCP_DUPCLASSVC", 1
				while ($status >= 0)
					vDsRegistro = ""
					putitem/id vDsRegistro, "CD_TIPOCLAS", CD_TIPOCLAS.FCP_DUPCLASSVC
					putitem/id vDsRegistro, "CD_CLAS",     CD_CLASSIFICACAO.FCP_DUPCLASSVC
					putitem vDsLstClas, -1, vDsRegistro
					
					setocc "FCP_DUPCLASSVC", $curocc("FCP_DUPCLASSVC") + 1
				endwhile
			endif
			
			viParams = ""
			putitem/id viParams, "LST_DUPLICATA", vDsLstDuplicata
			putitem/id viParams, "LST_CLAS",      vDsLstClas
			$instancehandle->gravarClassificacaoDuplicata(piGlobal, viParams, voParams, $xCdErro$, $xCtxerro$)
			if ($procerror)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return (-1)
			endif
			if ($status < 0)
				$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return (-1)
			endif
			
		;MTF(31/07/2008) - Projeto 118, tarefa 0094.
			setocc "PES_PESSOACLASVC", $curocc(PES_PESSOACLASVC) + 1
		endwhile
		;
	endif
	
	return(0)
end ;

;--------------------------------------------------------------;
public operation verLanctoCtbDuplicata                         ;
;--------------------------------------------------------------;
; Aloisio: 22/07/2008                 Projeto 074, tarefa 1642 ;
; Funcao : verificar se duplicata está lançada na Contabilidade;
; Chamada: FCPFM004 - campo VL_DUPLICATA (valueChange)         ;
;--------------------------------------------------------------;
;
	params
		string  piGlobal  :IN
		string  piParams  :IN
		string  poParams  :OUT
		numeric poCdErro  :OUT
		string  poCtxErro :OUT
	endparams
	variables
		numeric vCdEmpresa, vCdFornecedor, vNrDuplicata, vNrParcela
	endvariables
	
	vCdEmpresa = $item("CD_EMPRESA", piParams)
	if (vCdEmpresa = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Favor informar a empresa da duplicata para efetuar a consulta de contabilização.", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	vCdFornecedor = $item("CD_FORNECEDOR", piParams)
	if (vCdFornecedor = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Favor informar o fornecedor da duplicata para efetuar a consulta de contabilização.", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	vNrDuplicata = $item("NR_DUPLICATA", piParams)
	if (vNrDuplicata = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Favor informar o número da duplicata para efetuar a consulta de contabilização.", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	vNrParcela = $item("NR_PARCELA", piParams)
	if (vNrParcela = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Favor informar o número da parcela da duplicata para efetuar a consulta de contabilização.", "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	clear/e "CTB_MOVTODSVC"
	cd_empresa.ctb_movtodsvc/init   = vCdEmpresa
	cd_pessoa.ctb_movtodsvc/init    = vCdFornecedor
	nr_duplicata.ctb_movtodsvc/init = vNrDuplicata
	nr_parcela.ctb_movtodsvc/init   = vNrParcela
	retrieve/e "CTB_MOVTODSVC"
	if ($status < 0)
		putitem/id poParams, "IN_CONTABILIZADO", <FALSE>
		return(0)
	endif
	
	putitem/id poParams, "IN_CONTABILIZADO", <TRUE>
	putitem/id poParams, "CD_POOLEMPRESA"  , cd_poolempresa.ctb_movtodsvc
	putitem/id poParams, "DT_EXERCONTABIL" , dt_exercontabil.ctb_movtodsvc
	putitem/id poParams, "NR_LOTE"         , nr_lote.ctb_movtodsvc
	putitem/id poParams, "NR_ORDEM"        , nr_ordem.ctb_movtodsvc

	return(0)

end ;operation verLanctoCtbDuplicata.


;--------------------------------------------;
public operation validaLanctoContabilPeriodo ;
;--------------------------------------------;
; Desenvolvido por: Douglas Ferreira         ;
; Prj/Tarefa: 186/0212  -  Data: 05/09/2011  ;
;--------------------------------------------;
	params
		string  piGlobal  :IN
		string  piParams  :IN
		string  poParams  :OUT
		numeric poCdErro  :OUT
		string  poCtxErro :OUT
	endparams

	variables
		date    vDtChegada
		string  viParams, voParams, vTpInclusao
		numeric vCdEmpresa, vCdGrupoEmissaoCP
	endvariables
	
	;validar parâmetros de entrada
	vTpInclusao = $item("TP_INCLUSAO", piParams)
	if (vTpInclusao != 1) ;1-Manual
		return(0)
	endif
	vCdEmpresa = $item("CD_EMPRESA", piParams)
	if (vCdEmpresa = "") | (vCdEmpresa <= 0)
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Empresa da duplicata não informada!", "ADICIONAL=FCPSVCO001.validaLanctoContabilPeriodo")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	vDtChegada = $item("DT_CHEGADA", piParams)
	if (vDtChegada = "")
		$instancehandle->setStatus(<STS_ERRO>, "GEN001", "DESCRICAO=Data de chegada da duplicata não informada!", "ADICIONAL=FCPSVCO001.validaLanctoContabilPeriodo")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	
	;buscar parâmetros corporativos
	putitem viParams, -1, "CD_GRUPO_EMISSAO_CP"
	activate "ADMSVCO001".GetLstParametro(viParams, voParams, $xCdErro$, $xCtxErro$)
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")
		poCdErro  = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif
	vCdGrupoEmissaoCP = $item("CD_GRUPO_EMISSAO_CP", voParams)
	
	;verificar se já existe lote contábil no período de chegada da duplicata
	clear/e "CTB_LOTESVC"
	CD_POOLEMPRESA.CTB_LOTESVC/init = $item("CD_POOLEMPRESA", piGlobal)
	DT_FINAL.CTB_LOTESVC/init       = "·>·=%%vDtChegada"
	CD_GRUPO.CTB_LOTESVC/init       = vCdGrupoEmissaoCP
	CD_MODULO.CTB_LOTESVC/init      = "FCP"
	retrieve/e "CTB_LOTESVC"
	if ($status >= 0)
		setocc "CTB_LOTESVC", 1
		while ($status >= 0)
			
			;verificar se algum registro do lote pertence à empresa da duplicata
			clear/e "CTB_MOVTODSVC"
			CD_POOLEMPRESA.CTB_MOVTODSVC/init  = CD_POOLEMPRESA.CTB_LOTESVC
			DT_EXERCONTABIL.CTB_MOVTODSVC/init = DT_EXERCONTABIL.CTB_LOTESVC
			NR_LOTE.CTB_MOVTODSVC/init         = NR_LOTE.CTB_LOTESVC
			CD_EMPRESA.CTB_MOVTODSVC/init      = vCdEmpresa
			retrieve/e "CTB_MOVTODSVC"
			if ($status >= 0)
				$instancehandle->setStatus(<STS_AVISO>, "GEN001", "DESCRICAO=Não é possível cadastrar duplicata, pois existe lote já contabilizado no período. %%^Data: %%DT_EXERCONTABIL.CTB_LOTESVC  Lote: %%NR_LOTE.CTB_LOTESVC", "ADICIONAL=FCPSVCO001.validaLanctoContabilPeriodo()")
				poCdErro  = $xCdErro$
				poCtxErro = $xCtxErro$
				return(-1)
			endif
			
			setocc "CTB_LOTESVC", $curocc(CTB_LOTESVC) + 1
		endwhile
	endif
	
	return(0)
End ;operation validaLanctoContabilPeriodo

;* Claudemir - Prj/Tarefa: 180/271 - 17/10/2011
;---------------------------------;
public operation gravaFcpDupAdic  ;
;---------------------------------;

	params
		string  piGlobal  :IN
		string  piParams  :IN
		string  poParams  :OUT
		numeric poCdErro  :OUT
		string  poCtxErro :OUT
	endparams

	variables
		numeric vCdEmpresa, vCdFornecedor, vNrDuplicata, vNrParcela, vNrParcelamento, vPrJurosBNDES, vVlFinanBNDES
		date    vDtBasePagamento
	endvariables

	vCdEmpresa			= $item("CD_EMPRESA", piParams)
	vCdFornecedor		= $item("CD_FORNECEDOR", piParams)
	vNrDuplicata		= $item("NR_DUPLICATA", piParams)
	vNrParcela			= $item("NR_PARCELA", piParams)
	vDtBasePagamento	= $item("DT_BASEPGTO", piParams)
	vNrParcelamento	= $item("NR_PARCELAMENTO", piParams)
	vPrJurosBNDES		= $item("PR_JUROSBNDES", piParams)
	vVlFinanBNDES		= $item("VL_FINANBNDES", piParams)

	if (vCdEmpresa = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Empresa não informada!", "ADICIONAL=Operação->FCPSVCO001.gravaFcpDupAdic")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (vCdFornecedor = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Fornecedor não informada!", "ADICIONAL=Operação->FCPSVCO001.gravaFcpDupAdic")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (vNrDuplicata = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Duplicata não informada!", "ADICIONAL=Operação->FCPSVCO001.gravaFcpDupAdic")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	if (vNrParcela = 0)
		$instancehandle->SetStatus(<STS_ERRO>, "GEN0001", "DESCRICAO=Parcela não informada!", "ADICIONAL=Operação->FCPSVCO001.gravaFcpDupAdic")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		return(-1)
	endif

	creocc "FCP_DUPIADICSVC", -1
	CD_EMPRESA.FCP_DUPIADICSVC		= vCdEmpresa
	CD_FORNECEDOR.FCP_DUPIADICSVC	= vCdFornecedor
	NR_DUPLICATA.FCP_DUPIADICSVC		= vNrDuplicata
	NR_PARCELA.FCP_DUPIADICSVC		= vNrParcela
	retrieve/o "FCP_DUPIADICSVC"
	if ($status = -7)
		retrieve/x "FCP_DUPIADICSVC"
	endif
	DT_CADASTRO.FCP_DUPIADICSVC		= $item("DT_SISTEMA", piGlobal)
	CD_OPERADOR.FCP_DUPIADICSVC		= $item("CD_USUARIO", piGlobal)
	DT_BASEPAGTO.FCP_DUPIADICSVC		= vDtBasePagamento
	NR_PARCELABNDES.FCP_DUPIADICSVC	= vNrParcelamento
	PR_JUROSBNDES.FCP_DUPIADICSVC	= vPrJurosBNDES
	VL_FINANBNDES.FCP_DUPIADICSVC	= vVlFinanBNDES

	$collhandle("FCP_DUPIADICSVC")->Salvar()
	if ($procerror)
		$instancehandle->SetStatus(<STS_ERRO>, $procerror, $procerrorcontext, "")
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit (-1)
	elseif ($status < 0)
		$instancehandle->SetStatus(<STS_ERRO>, $xCdErro$, $xCtxErro$, "")    
		poCdErro = $xCdErro$
		poCtxErro = $xCtxErro$
		exit (-1)
	endif

end ; gravaFcpDupAdic  ;*
